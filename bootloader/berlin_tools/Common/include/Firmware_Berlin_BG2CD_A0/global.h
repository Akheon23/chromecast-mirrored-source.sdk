//////
/// don't edit! auto-generated by docc: global.h
////////////////////////////////////////////////////////////
#ifndef global_h
#define global_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE clkD1                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 * 0: Disable
///                                                 * 1: Enable   (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPLL                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL   (default)
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL (default)
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0:   No divider (default) for Divide by 1
///                                                 * 1:   Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3 (default)
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2 ( default)
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 * Note: Not used for Divide by 1
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD1
#define h_clkD1 (){}

    #define     RA_clkD1_ctrl                                  0x0000

    #define     BA_clkD1_ctrl_ClkEn                            0x0000
    #define     B16clkD1_ctrl_ClkEn                            0x0000
    #define   LSb32clkD1_ctrl_ClkEn                               0
    #define   LSb16clkD1_ctrl_ClkEn                               0
    #define       bclkD1_ctrl_ClkEn                            1
    #define   MSK32clkD1_ctrl_ClkEn                               0x00000001
    #define        clkD1_ctrl_ClkEn_enable                                  0x1
    #define        clkD1_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD1_ctrl_ClkPllSel                        0x0000
    #define     B16clkD1_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD1_ctrl_ClkPllSel                           1
    #define   LSb16clkD1_ctrl_ClkPllSel                           1
    #define       bclkD1_ctrl_ClkPllSel                        3
    #define   MSK32clkD1_ctrl_ClkPllSel                           0x0000000E
    #define        clkD1_ctrl_ClkPllSel_AVPllB4                             0x0
    #define        clkD1_ctrl_ClkPllSel_AVPllB5                             0x1
    #define        clkD1_ctrl_ClkPllSel_AVPllB6                             0x2
    #define        clkD1_ctrl_ClkPllSel_AVPllB7                             0x3
    #define        clkD1_ctrl_ClkPllSel_SYSPLL                              0x4

    #define     BA_clkD1_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD1_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD1_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD1_ctrl_ClkPllSwitch                        4
    #define       bclkD1_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD1_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD1_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD1_ctrl_ClkPllSwitch_AVPLL                            0x1

    #define     BA_clkD1_ctrl_ClkSwitch                        0x0000
    #define     B16clkD1_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD1_ctrl_ClkSwitch                           5
    #define   LSb16clkD1_ctrl_ClkSwitch                           5
    #define       bclkD1_ctrl_ClkSwitch                        1
    #define   MSK32clkD1_ctrl_ClkSwitch                           0x00000020
    #define        clkD1_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD1_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD1_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD1_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD1_ctrl_ClkD3Switch                         6
    #define   LSb16clkD1_ctrl_ClkD3Switch                         6
    #define       bclkD1_ctrl_ClkD3Switch                      1
    #define   MSK32clkD1_ctrl_ClkD3Switch                         0x00000040
    #define        clkD1_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD1_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD1_ctrl_ClkSel                           0x0000
    #define     B16clkD1_ctrl_ClkSel                           0x0000
    #define   LSb32clkD1_ctrl_ClkSel                              7
    #define   LSb16clkD1_ctrl_ClkSel                              7
    #define       bclkD1_ctrl_ClkSel                           3
    #define   MSK32clkD1_ctrl_ClkSel                              0x00000380
    #define        clkD1_ctrl_ClkSel_d2                                     0x1
    #define        clkD1_ctrl_ClkSel_d4                                     0x2
    #define        clkD1_ctrl_ClkSel_d6                                     0x3
    #define        clkD1_ctrl_ClkSel_d8                                     0x4
    #define        clkD1_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD1 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD1_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD1_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD1_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD1_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD1_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD1_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD1_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD1_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD1_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD1_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD1_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD1_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD1_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD1_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD1_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD1_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD1_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD1_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD1_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD1_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD1_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD1_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD1_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD1_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD1_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD1_ctrl;
            struct w32clkD1_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD1;

    typedef union  T32clkD1_ctrl
          { UNSG32 u32;
            struct w32clkD1_ctrl;
                 } T32clkD1_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD1_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD1_ctrl;
                   };
                 } TclkD1_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD1_drvrd(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD1_drvwr(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD1_reset(SIE_clkD1 *p);
     SIGN32 clkD1_cmp  (SIE_clkD1 *p, SIE_clkD1 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD1_check(p,pie,pfx,hLOG) clkD1_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD1_print(p,    pfx,hLOG) clkD1_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD1
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE clkD2                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 * 0: Disable
///                                                 * 1: Enable   (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPLL                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL   (default)
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL (default)
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0:   No divider
///                                                 * 1:   Use Divider (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3 (default)
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2 ( default)
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD2
#define h_clkD2 (){}

    #define     RA_clkD2_ctrl                                  0x0000

    #define     BA_clkD2_ctrl_ClkEn                            0x0000
    #define     B16clkD2_ctrl_ClkEn                            0x0000
    #define   LSb32clkD2_ctrl_ClkEn                               0
    #define   LSb16clkD2_ctrl_ClkEn                               0
    #define       bclkD2_ctrl_ClkEn                            1
    #define   MSK32clkD2_ctrl_ClkEn                               0x00000001
    #define        clkD2_ctrl_ClkEn_enable                                  0x1
    #define        clkD2_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD2_ctrl_ClkPllSel                        0x0000
    #define     B16clkD2_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD2_ctrl_ClkPllSel                           1
    #define   LSb16clkD2_ctrl_ClkPllSel                           1
    #define       bclkD2_ctrl_ClkPllSel                        3
    #define   MSK32clkD2_ctrl_ClkPllSel                           0x0000000E
    #define        clkD2_ctrl_ClkPllSel_AVPllB4                             0x0
    #define        clkD2_ctrl_ClkPllSel_AVPllB5                             0x1
    #define        clkD2_ctrl_ClkPllSel_AVPllB6                             0x2
    #define        clkD2_ctrl_ClkPllSel_AVPllB7                             0x3
    #define        clkD2_ctrl_ClkPllSel_SYSPLL                              0x4

    #define     BA_clkD2_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD2_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD2_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD2_ctrl_ClkPllSwitch                        4
    #define       bclkD2_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD2_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD2_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD2_ctrl_ClkPllSwitch_AVPLL                            0x1

    #define     BA_clkD2_ctrl_ClkSwitch                        0x0000
    #define     B16clkD2_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD2_ctrl_ClkSwitch                           5
    #define   LSb16clkD2_ctrl_ClkSwitch                           5
    #define       bclkD2_ctrl_ClkSwitch                        1
    #define   MSK32clkD2_ctrl_ClkSwitch                           0x00000020
    #define        clkD2_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD2_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD2_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD2_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD2_ctrl_ClkD3Switch                         6
    #define   LSb16clkD2_ctrl_ClkD3Switch                         6
    #define       bclkD2_ctrl_ClkD3Switch                      1
    #define   MSK32clkD2_ctrl_ClkD3Switch                         0x00000040
    #define        clkD2_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD2_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD2_ctrl_ClkSel                           0x0000
    #define     B16clkD2_ctrl_ClkSel                           0x0000
    #define   LSb32clkD2_ctrl_ClkSel                              7
    #define   LSb16clkD2_ctrl_ClkSel                              7
    #define       bclkD2_ctrl_ClkSel                           3
    #define   MSK32clkD2_ctrl_ClkSel                              0x00000380
    #define        clkD2_ctrl_ClkSel_d2                                     0x1
    #define        clkD2_ctrl_ClkSel_d4                                     0x2
    #define        clkD2_ctrl_ClkSel_d6                                     0x3
    #define        clkD2_ctrl_ClkSel_d8                                     0x4
    #define        clkD2_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD2 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD2_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD2_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD2_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD2_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD2_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD2_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD2_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD2_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD2_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD2_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD2_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD2_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD2_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD2_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD2_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD2_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD2_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD2_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD2_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD2_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD2_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD2_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD2_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD2_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD2_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD2_ctrl;
            struct w32clkD2_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD2;

    typedef union  T32clkD2_ctrl
          { UNSG32 u32;
            struct w32clkD2_ctrl;
                 } T32clkD2_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD2_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD2_ctrl;
                   };
                 } TclkD2_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD2_drvrd(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD2_drvwr(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD2_reset(SIE_clkD2 *p);
     SIGN32 clkD2_cmp  (SIE_clkD2 *p, SIE_clkD2 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD2_check(p,pie,pfx,hLOG) clkD2_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD2_print(p,    pfx,hLOG) clkD2_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD2
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE clkD4                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 * 0: Disable
///                                                 * 1: Enable   (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPLL                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL   (default)
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL (default)
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0:   No divider
///                                                 * 1:   Use Divider (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3 (default)
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2 ( default)
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD4
#define h_clkD4 (){}

    #define     RA_clkD4_ctrl                                  0x0000

    #define     BA_clkD4_ctrl_ClkEn                            0x0000
    #define     B16clkD4_ctrl_ClkEn                            0x0000
    #define   LSb32clkD4_ctrl_ClkEn                               0
    #define   LSb16clkD4_ctrl_ClkEn                               0
    #define       bclkD4_ctrl_ClkEn                            1
    #define   MSK32clkD4_ctrl_ClkEn                               0x00000001
    #define        clkD4_ctrl_ClkEn_enable                                  0x1
    #define        clkD4_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD4_ctrl_ClkPllSel                        0x0000
    #define     B16clkD4_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD4_ctrl_ClkPllSel                           1
    #define   LSb16clkD4_ctrl_ClkPllSel                           1
    #define       bclkD4_ctrl_ClkPllSel                        3
    #define   MSK32clkD4_ctrl_ClkPllSel                           0x0000000E
    #define        clkD4_ctrl_ClkPllSel_AVPllB4                             0x0
    #define        clkD4_ctrl_ClkPllSel_AVPllB5                             0x1
    #define        clkD4_ctrl_ClkPllSel_AVPllB6                             0x2
    #define        clkD4_ctrl_ClkPllSel_AVPllB7                             0x3
    #define        clkD4_ctrl_ClkPllSel_SYSPLL                              0x4

    #define     BA_clkD4_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD4_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD4_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD4_ctrl_ClkPllSwitch                        4
    #define       bclkD4_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD4_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD4_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD4_ctrl_ClkPllSwitch_AVPLL                            0x1

    #define     BA_clkD4_ctrl_ClkSwitch                        0x0000
    #define     B16clkD4_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD4_ctrl_ClkSwitch                           5
    #define   LSb16clkD4_ctrl_ClkSwitch                           5
    #define       bclkD4_ctrl_ClkSwitch                        1
    #define   MSK32clkD4_ctrl_ClkSwitch                           0x00000020
    #define        clkD4_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD4_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD4_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD4_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD4_ctrl_ClkD3Switch                         6
    #define   LSb16clkD4_ctrl_ClkD3Switch                         6
    #define       bclkD4_ctrl_ClkD3Switch                      1
    #define   MSK32clkD4_ctrl_ClkD3Switch                         0x00000040
    #define        clkD4_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD4_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD4_ctrl_ClkSel                           0x0000
    #define     B16clkD4_ctrl_ClkSel                           0x0000
    #define   LSb32clkD4_ctrl_ClkSel                              7
    #define   LSb16clkD4_ctrl_ClkSel                              7
    #define       bclkD4_ctrl_ClkSel                           3
    #define   MSK32clkD4_ctrl_ClkSel                              0x00000380
    #define        clkD4_ctrl_ClkSel_d2                                     0x1
    #define        clkD4_ctrl_ClkSel_d4                                     0x2
    #define        clkD4_ctrl_ClkSel_d6                                     0x3
    #define        clkD4_ctrl_ClkSel_d8                                     0x4
    #define        clkD4_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD4 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD4_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD4_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD4_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD4_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD4_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD4_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD4_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD4_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD4_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD4_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD4_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD4_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD4_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD4_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD4_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD4_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD4_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD4_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD4_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD4_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD4_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD4_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD4_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD4_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD4_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD4_ctrl;
            struct w32clkD4_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD4;

    typedef union  T32clkD4_ctrl
          { UNSG32 u32;
            struct w32clkD4_ctrl;
                 } T32clkD4_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD4_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD4_ctrl;
                   };
                 } TclkD4_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD4_drvrd(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD4_drvwr(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD4_reset(SIE_clkD4 *p);
     SIGN32 clkD4_cmp  (SIE_clkD4 *p, SIE_clkD4 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD4_check(p,pie,pfx,hLOG) clkD4_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD4_print(p,    pfx,hLOG) clkD4_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD4
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE clkD6                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 * 0: Disable
///                                                 * 1: Enable   (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPLL                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL   (default)
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL (default)
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0:   No divider
///                                                 * 1:   Use Divider (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3 (default)
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x3
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2 ( default)
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD6
#define h_clkD6 (){}

    #define     RA_clkD6_ctrl                                  0x0000

    #define     BA_clkD6_ctrl_ClkEn                            0x0000
    #define     B16clkD6_ctrl_ClkEn                            0x0000
    #define   LSb32clkD6_ctrl_ClkEn                               0
    #define   LSb16clkD6_ctrl_ClkEn                               0
    #define       bclkD6_ctrl_ClkEn                            1
    #define   MSK32clkD6_ctrl_ClkEn                               0x00000001
    #define        clkD6_ctrl_ClkEn_enable                                  0x1
    #define        clkD6_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD6_ctrl_ClkPllSel                        0x0000
    #define     B16clkD6_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD6_ctrl_ClkPllSel                           1
    #define   LSb16clkD6_ctrl_ClkPllSel                           1
    #define       bclkD6_ctrl_ClkPllSel                        3
    #define   MSK32clkD6_ctrl_ClkPllSel                           0x0000000E
    #define        clkD6_ctrl_ClkPllSel_AVPllB4                             0x0
    #define        clkD6_ctrl_ClkPllSel_AVPllB5                             0x1
    #define        clkD6_ctrl_ClkPllSel_AVPllB6                             0x2
    #define        clkD6_ctrl_ClkPllSel_AVPllB7                             0x3
    #define        clkD6_ctrl_ClkPllSel_SYSPLL                              0x4

    #define     BA_clkD6_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD6_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD6_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD6_ctrl_ClkPllSwitch                        4
    #define       bclkD6_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD6_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD6_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD6_ctrl_ClkPllSwitch_AVPLL                            0x1

    #define     BA_clkD6_ctrl_ClkSwitch                        0x0000
    #define     B16clkD6_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD6_ctrl_ClkSwitch                           5
    #define   LSb16clkD6_ctrl_ClkSwitch                           5
    #define       bclkD6_ctrl_ClkSwitch                        1
    #define   MSK32clkD6_ctrl_ClkSwitch                           0x00000020
    #define        clkD6_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD6_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD6_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD6_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD6_ctrl_ClkD3Switch                         6
    #define   LSb16clkD6_ctrl_ClkD3Switch                         6
    #define       bclkD6_ctrl_ClkD3Switch                      1
    #define   MSK32clkD6_ctrl_ClkD3Switch                         0x00000040
    #define        clkD6_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD6_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD6_ctrl_ClkSel                           0x0000
    #define     B16clkD6_ctrl_ClkSel                           0x0000
    #define   LSb32clkD6_ctrl_ClkSel                              7
    #define   LSb16clkD6_ctrl_ClkSel                              7
    #define       bclkD6_ctrl_ClkSel                           3
    #define   MSK32clkD6_ctrl_ClkSel                              0x00000380
    #define        clkD6_ctrl_ClkSel_d2                                     0x1
    #define        clkD6_ctrl_ClkSel_d4                                     0x2
    #define        clkD6_ctrl_ClkSel_d6                                     0x3
    #define        clkD6_ctrl_ClkSel_d8                                     0x4
    #define        clkD6_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD6 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD6_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD6_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD6_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD6_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD6_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD6_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD6_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD6_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD6_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD6_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD6_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD6_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD6_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD6_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD6_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD6_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD6_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD6_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD6_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD6_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD6_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD6_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD6_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD6_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD6_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD6_ctrl;
            struct w32clkD6_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD6;

    typedef union  T32clkD6_ctrl
          { UNSG32 u32;
            struct w32clkD6_ctrl;
                 } T32clkD6_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD6_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD6_ctrl;
                   };
                 } TclkD6_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD6_drvrd(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD6_drvwr(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD6_reset(SIE_clkD6 *p);
     SIGN32 clkD6_cmp  (SIE_clkD6 *p, SIE_clkD6 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD6_check(p,pie,pfx,hLOG) clkD6_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD6_print(p,    pfx,hLOG) clkD6_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD6
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE clkD8                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 * 0: Disable
///                                                 * 1: Enable   (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPLL                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL   (default)
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL (default)
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0:   No divider
///                                                 * 1:   Use Divider (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3 (default)
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2 ( default)
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD8
#define h_clkD8 (){}

    #define     RA_clkD8_ctrl                                  0x0000

    #define     BA_clkD8_ctrl_ClkEn                            0x0000
    #define     B16clkD8_ctrl_ClkEn                            0x0000
    #define   LSb32clkD8_ctrl_ClkEn                               0
    #define   LSb16clkD8_ctrl_ClkEn                               0
    #define       bclkD8_ctrl_ClkEn                            1
    #define   MSK32clkD8_ctrl_ClkEn                               0x00000001
    #define        clkD8_ctrl_ClkEn_enable                                  0x1
    #define        clkD8_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD8_ctrl_ClkPllSel                        0x0000
    #define     B16clkD8_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD8_ctrl_ClkPllSel                           1
    #define   LSb16clkD8_ctrl_ClkPllSel                           1
    #define       bclkD8_ctrl_ClkPllSel                        3
    #define   MSK32clkD8_ctrl_ClkPllSel                           0x0000000E
    #define        clkD8_ctrl_ClkPllSel_AVPllB4                             0x0
    #define        clkD8_ctrl_ClkPllSel_AVPllB5                             0x1
    #define        clkD8_ctrl_ClkPllSel_AVPllB6                             0x2
    #define        clkD8_ctrl_ClkPllSel_AVPllB7                             0x3
    #define        clkD8_ctrl_ClkPllSel_SYSPLL                              0x4

    #define     BA_clkD8_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD8_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD8_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD8_ctrl_ClkPllSwitch                        4
    #define       bclkD8_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD8_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD8_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD8_ctrl_ClkPllSwitch_AVPLL                            0x1

    #define     BA_clkD8_ctrl_ClkSwitch                        0x0000
    #define     B16clkD8_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD8_ctrl_ClkSwitch                           5
    #define   LSb16clkD8_ctrl_ClkSwitch                           5
    #define       bclkD8_ctrl_ClkSwitch                        1
    #define   MSK32clkD8_ctrl_ClkSwitch                           0x00000020
    #define        clkD8_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD8_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD8_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD8_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD8_ctrl_ClkD3Switch                         6
    #define   LSb16clkD8_ctrl_ClkD3Switch                         6
    #define       bclkD8_ctrl_ClkD3Switch                      1
    #define   MSK32clkD8_ctrl_ClkD3Switch                         0x00000040
    #define        clkD8_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD8_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD8_ctrl_ClkSel                           0x0000
    #define     B16clkD8_ctrl_ClkSel                           0x0000
    #define   LSb32clkD8_ctrl_ClkSel                              7
    #define   LSb16clkD8_ctrl_ClkSel                              7
    #define       bclkD8_ctrl_ClkSel                           3
    #define   MSK32clkD8_ctrl_ClkSel                              0x00000380
    #define        clkD8_ctrl_ClkSel_d2                                     0x1
    #define        clkD8_ctrl_ClkSel_d4                                     0x2
    #define        clkD8_ctrl_ClkSel_d6                                     0x3
    #define        clkD8_ctrl_ClkSel_d8                                     0x4
    #define        clkD8_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD8 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD8_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD8_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD8_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD8_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD8_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD8_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD8_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD8_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD8_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD8_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD8_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD8_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD8_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD8_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD8_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD8_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD8_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD8_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD8_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD8_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD8_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD8_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD8_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD8_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD8_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD8_ctrl;
            struct w32clkD8_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD8;

    typedef union  T32clkD8_ctrl
          { UNSG32 u32;
            struct w32clkD8_ctrl;
                 } T32clkD8_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD8_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD8_ctrl;
                   };
                 } TclkD8_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD8_drvrd(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD8_drvwr(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD8_reset(SIE_clkD8 *p);
     SIGN32 clkD8_cmp  (SIE_clkD8 *p, SIE_clkD8 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD8_check(p,pie,pfx,hLOG) clkD8_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD8_print(p,    pfx,hLOG) clkD8_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD8
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE droCount                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 result               (R-)
///               ###
///               * DRO Counter value register
///               ###
///               %unsigned 16 value                     
///                                    ###
///                                    * DRO counter value
///                                    * Counter Max value is 32768 (2^15).
///                                    * Note: Overflow value is 65536 (2^16) – if the counter reaches this value it remains “stuck” with this value until a new DRO enable register write is performed to start new DRO calculation.
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      16b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_droCount
#define h_droCount (){}

    #define     RA_droCount_result                             0x0000

    #define     BA_droCount_result_value                       0x0000
    #define     B16droCount_result_value                       0x0000
    #define   LSb32droCount_result_value                          0
    #define   LSb16droCount_result_value                          0
    #define       bdroCount_result_value                       16
    #define   MSK32droCount_result_value                          0x0000FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_droCount {
    ///////////////////////////////////////////////////////////
    #define   GET32droCount_result_value(r32)                  _BFGET_(r32,15, 0)
    #define   SET32droCount_result_value(r32,v)                _BFSET_(r32,15, 0,v)
    #define   GET16droCount_result_value(r16)                  _BFGET_(r16,15, 0)
    #define   SET16droCount_result_value(r16,v)                _BFSET_(r16,15, 0,v)

    #define     w32droCount_result                             {\
            UNSG32 uresult_value                               : 16;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32droCount_result;
            struct w32droCount_result;
          };
    ///////////////////////////////////////////////////////////
    } SIE_droCount;

    typedef union  T32droCount_result
          { UNSG32 u32;
            struct w32droCount_result;
                 } T32droCount_result;
    ///////////////////////////////////////////////////////////

    typedef union  TdroCount_result
          { UNSG32 u32[1];
            struct {
            struct w32droCount_result;
                   };
                 } TdroCount_result;

    ///////////////////////////////////////////////////////////
     SIGN32 droCount_drvrd(SIE_droCount *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 droCount_drvwr(SIE_droCount *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void droCount_reset(SIE_droCount *p);
     SIGN32 droCount_cmp  (SIE_droCount *p, SIE_droCount *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define droCount_check(p,pie,pfx,hLOG) droCount_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define droCount_print(p,    pfx,hLOG) droCount_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: droCount
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE efuse                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (RW)
///               ###
///               * EFUSE Control register
///               ###
///               %unsigned 1  PROG_SEQ_CODE             0x0
///                                    ###
///                                    * Program code
///                                    ###
///               %unsigned 1  PROG_SEQ_CODE_CLK         0x0
///                                    ###
///                                    * Clock needed to latch in the 10/60bit serial code on the rising edge prior to programming.
///                                    ###
///               %unsigned 1  SCLK                      0x0
///                                    ###
///                                    * Serial Clock. High period for program. Falling edge clocks out data to Dout
///                                    ###
///               %unsigned 1  PRDT                      0x1
///                                    ###
///                                    * Parallel read trigger. For alternative read protocol. Performs parallel read at rising edge. This parallel read operation is required prior to programming .
///                                    ###
///               %unsigned 1  POR_B                     0x1
///                                    ###
///                                    * Power-On-Reset. Active LOW.
///                                    ###
///               %unsigned 1  CSB                       0x1
///                                    ###
///                                    * Macro select
///                                    ###
///               %unsigned 1  PGM                       0x0
///                                    ###
///                                    * Programming mode control and selective bit program control.
///                                    ###
///               %unsigned 1  WPROT                     0x1
///                                    ###
///                                    * Programming protection signal.
///                                    * Must remain level in program/read state. For id_efuse_msb_sfb, if the number of match code bits is 60 bits, WPROT LOW enables the loading of PROG_SEQ_CODE into the match code register, WPROT HIGH resets the match code register. For id_efuse_lsb, if the number of match code bits is 60 bits, WPROT LOW enables the loading of PROG_SEQ_CODE into the match code register, WPROT HIGH keeps the old value of the match code register.
///                                    ###
///               %unsigned 4  TEST                      0xA
///                                    ###
///                                    * These control internal circuit settings for optimum VDD min/ VHV min performance. They are similar to RTC settings in SRAM. TEST[3:0] should be registered and modifiable by firmware or software.
///                                    * Default settings: GSVT 0101, GHVT 1101, LPSVT1010, LPHVT 1010, LPMSVT 1010, LPMHVT 1010.
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00004 status_match         (R-)
///               ###
///               * EFUSE status0 register
///               ###
///               %unsigned 1  MATCH_VALUE               
///                                    ###
///                                    * MATCH signal is available when the number of match code bits is 60 bits. MATCH=HIGH indicates that the input code is matched. MATCH=LOW indicates that the input code is not matched.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 status_qout          (R-)
///               ###
///               * EFUSE status1 register: 257-bits Parallel Data out register
///               ###
///               %unsigned 32 QOUT_31_0                 
///     # 0x0000C status_qout1         
///               %unsigned 32 QOUT_63_32                
///     # 0x00010 status_qout2         
///               %unsigned 32 QOUT_95_64                
///     # 0x00014 status_qout3         
///               %unsigned 32 QOUT_127_96               
///     # 0x00018 status_qout4         
///               %unsigned 32 QOUT_159_128              
///     # 0x0001C status_qout5         
///               %unsigned 32 QOUT_191_160              
///     # 0x00020 status_qout6         
///               %unsigned 32 QOUT_223_192              
///     # 0x00024 status_qout7         
///               %unsigned 32 QOUT_255_224              
///     # 0x00028 status_qout8         
///               %unsigned 1  QOUT_256                  
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      44B, bits:     270b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_efuse
#define h_efuse (){}

    #define     RA_efuse_ctrl                                  0x0000

    #define     BA_efuse_ctrl_PROG_SEQ_CODE                    0x0000
    #define     B16efuse_ctrl_PROG_SEQ_CODE                    0x0000
    #define   LSb32efuse_ctrl_PROG_SEQ_CODE                       0
    #define   LSb16efuse_ctrl_PROG_SEQ_CODE                       0
    #define       befuse_ctrl_PROG_SEQ_CODE                    1
    #define   MSK32efuse_ctrl_PROG_SEQ_CODE                       0x00000001

    #define     BA_efuse_ctrl_PROG_SEQ_CODE_CLK                0x0000
    #define     B16efuse_ctrl_PROG_SEQ_CODE_CLK                0x0000
    #define   LSb32efuse_ctrl_PROG_SEQ_CODE_CLK                   1
    #define   LSb16efuse_ctrl_PROG_SEQ_CODE_CLK                   1
    #define       befuse_ctrl_PROG_SEQ_CODE_CLK                1
    #define   MSK32efuse_ctrl_PROG_SEQ_CODE_CLK                   0x00000002

    #define     BA_efuse_ctrl_SCLK                             0x0000
    #define     B16efuse_ctrl_SCLK                             0x0000
    #define   LSb32efuse_ctrl_SCLK                                2
    #define   LSb16efuse_ctrl_SCLK                                2
    #define       befuse_ctrl_SCLK                             1
    #define   MSK32efuse_ctrl_SCLK                                0x00000004

    #define     BA_efuse_ctrl_PRDT                             0x0000
    #define     B16efuse_ctrl_PRDT                             0x0000
    #define   LSb32efuse_ctrl_PRDT                                3
    #define   LSb16efuse_ctrl_PRDT                                3
    #define       befuse_ctrl_PRDT                             1
    #define   MSK32efuse_ctrl_PRDT                                0x00000008

    #define     BA_efuse_ctrl_POR_B                            0x0000
    #define     B16efuse_ctrl_POR_B                            0x0000
    #define   LSb32efuse_ctrl_POR_B                               4
    #define   LSb16efuse_ctrl_POR_B                               4
    #define       befuse_ctrl_POR_B                            1
    #define   MSK32efuse_ctrl_POR_B                               0x00000010

    #define     BA_efuse_ctrl_CSB                              0x0000
    #define     B16efuse_ctrl_CSB                              0x0000
    #define   LSb32efuse_ctrl_CSB                                 5
    #define   LSb16efuse_ctrl_CSB                                 5
    #define       befuse_ctrl_CSB                              1
    #define   MSK32efuse_ctrl_CSB                                 0x00000020

    #define     BA_efuse_ctrl_PGM                              0x0000
    #define     B16efuse_ctrl_PGM                              0x0000
    #define   LSb32efuse_ctrl_PGM                                 6
    #define   LSb16efuse_ctrl_PGM                                 6
    #define       befuse_ctrl_PGM                              1
    #define   MSK32efuse_ctrl_PGM                                 0x00000040

    #define     BA_efuse_ctrl_WPROT                            0x0000
    #define     B16efuse_ctrl_WPROT                            0x0000
    #define   LSb32efuse_ctrl_WPROT                               7
    #define   LSb16efuse_ctrl_WPROT                               7
    #define       befuse_ctrl_WPROT                            1
    #define   MSK32efuse_ctrl_WPROT                               0x00000080

    #define     BA_efuse_ctrl_TEST                             0x0001
    #define     B16efuse_ctrl_TEST                             0x0000
    #define   LSb32efuse_ctrl_TEST                                8
    #define   LSb16efuse_ctrl_TEST                                8
    #define       befuse_ctrl_TEST                             4
    #define   MSK32efuse_ctrl_TEST                                0x00000F00
    ///////////////////////////////////////////////////////////
    #define     RA_efuse_status_match                          0x0004

    #define     BA_efuse_status_match_MATCH_VALUE              0x0004
    #define     B16efuse_status_match_MATCH_VALUE              0x0004
    #define   LSb32efuse_status_match_MATCH_VALUE                 0
    #define   LSb16efuse_status_match_MATCH_VALUE                 0
    #define       befuse_status_match_MATCH_VALUE              1
    #define   MSK32efuse_status_match_MATCH_VALUE                 0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_efuse_status_qout                           0x0008

    #define     BA_efuse_status_qout_QOUT_31_0                 0x0008
    #define     B16efuse_status_qout_QOUT_31_0                 0x0008
    #define   LSb32efuse_status_qout_QOUT_31_0                    0
    #define   LSb16efuse_status_qout_QOUT_31_0                    0
    #define       befuse_status_qout_QOUT_31_0                 32
    #define   MSK32efuse_status_qout_QOUT_31_0                    0xFFFFFFFF

    #define     RA_efuse_status_qout1                          0x000C

    #define     BA_efuse_status_qout_QOUT_63_32                0x000C
    #define     B16efuse_status_qout_QOUT_63_32                0x000C
    #define   LSb32efuse_status_qout_QOUT_63_32                   0
    #define   LSb16efuse_status_qout_QOUT_63_32                   0
    #define       befuse_status_qout_QOUT_63_32                32
    #define   MSK32efuse_status_qout_QOUT_63_32                   0xFFFFFFFF

    #define     RA_efuse_status_qout2                          0x0010

    #define     BA_efuse_status_qout_QOUT_95_64                0x0010
    #define     B16efuse_status_qout_QOUT_95_64                0x0010
    #define   LSb32efuse_status_qout_QOUT_95_64                   0
    #define   LSb16efuse_status_qout_QOUT_95_64                   0
    #define       befuse_status_qout_QOUT_95_64                32
    #define   MSK32efuse_status_qout_QOUT_95_64                   0xFFFFFFFF

    #define     RA_efuse_status_qout3                          0x0014

    #define     BA_efuse_status_qout_QOUT_127_96               0x0014
    #define     B16efuse_status_qout_QOUT_127_96               0x0014
    #define   LSb32efuse_status_qout_QOUT_127_96                  0
    #define   LSb16efuse_status_qout_QOUT_127_96                  0
    #define       befuse_status_qout_QOUT_127_96               32
    #define   MSK32efuse_status_qout_QOUT_127_96                  0xFFFFFFFF

    #define     RA_efuse_status_qout4                          0x0018

    #define     BA_efuse_status_qout_QOUT_159_128              0x0018
    #define     B16efuse_status_qout_QOUT_159_128              0x0018
    #define   LSb32efuse_status_qout_QOUT_159_128                 0
    #define   LSb16efuse_status_qout_QOUT_159_128                 0
    #define       befuse_status_qout_QOUT_159_128              32
    #define   MSK32efuse_status_qout_QOUT_159_128                 0xFFFFFFFF

    #define     RA_efuse_status_qout5                          0x001C

    #define     BA_efuse_status_qout_QOUT_191_160              0x001C
    #define     B16efuse_status_qout_QOUT_191_160              0x001C
    #define   LSb32efuse_status_qout_QOUT_191_160                 0
    #define   LSb16efuse_status_qout_QOUT_191_160                 0
    #define       befuse_status_qout_QOUT_191_160              32
    #define   MSK32efuse_status_qout_QOUT_191_160                 0xFFFFFFFF

    #define     RA_efuse_status_qout6                          0x0020

    #define     BA_efuse_status_qout_QOUT_223_192              0x0020
    #define     B16efuse_status_qout_QOUT_223_192              0x0020
    #define   LSb32efuse_status_qout_QOUT_223_192                 0
    #define   LSb16efuse_status_qout_QOUT_223_192                 0
    #define       befuse_status_qout_QOUT_223_192              32
    #define   MSK32efuse_status_qout_QOUT_223_192                 0xFFFFFFFF

    #define     RA_efuse_status_qout7                          0x0024

    #define     BA_efuse_status_qout_QOUT_255_224              0x0024
    #define     B16efuse_status_qout_QOUT_255_224              0x0024
    #define   LSb32efuse_status_qout_QOUT_255_224                 0
    #define   LSb16efuse_status_qout_QOUT_255_224                 0
    #define       befuse_status_qout_QOUT_255_224              32
    #define   MSK32efuse_status_qout_QOUT_255_224                 0xFFFFFFFF

    #define     RA_efuse_status_qout8                          0x0028

    #define     BA_efuse_status_qout_QOUT_256                  0x0028
    #define     B16efuse_status_qout_QOUT_256                  0x0028
    #define   LSb32efuse_status_qout_QOUT_256                     0
    #define   LSb16efuse_status_qout_QOUT_256                     0
    #define       befuse_status_qout_QOUT_256                  1
    #define   MSK32efuse_status_qout_QOUT_256                     0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_efuse {
    ///////////////////////////////////////////////////////////
    #define   GET32efuse_ctrl_PROG_SEQ_CODE(r32)               _BFGET_(r32, 0, 0)
    #define   SET32efuse_ctrl_PROG_SEQ_CODE(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16efuse_ctrl_PROG_SEQ_CODE(r16)               _BFGET_(r16, 0, 0)
    #define   SET16efuse_ctrl_PROG_SEQ_CODE(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32efuse_ctrl_PROG_SEQ_CODE_CLK(r32)           _BFGET_(r32, 1, 1)
    #define   SET32efuse_ctrl_PROG_SEQ_CODE_CLK(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16efuse_ctrl_PROG_SEQ_CODE_CLK(r16)           _BFGET_(r16, 1, 1)
    #define   SET16efuse_ctrl_PROG_SEQ_CODE_CLK(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32efuse_ctrl_SCLK(r32)                        _BFGET_(r32, 2, 2)
    #define   SET32efuse_ctrl_SCLK(r32,v)                      _BFSET_(r32, 2, 2,v)
    #define   GET16efuse_ctrl_SCLK(r16)                        _BFGET_(r16, 2, 2)
    #define   SET16efuse_ctrl_SCLK(r16,v)                      _BFSET_(r16, 2, 2,v)

    #define   GET32efuse_ctrl_PRDT(r32)                        _BFGET_(r32, 3, 3)
    #define   SET32efuse_ctrl_PRDT(r32,v)                      _BFSET_(r32, 3, 3,v)
    #define   GET16efuse_ctrl_PRDT(r16)                        _BFGET_(r16, 3, 3)
    #define   SET16efuse_ctrl_PRDT(r16,v)                      _BFSET_(r16, 3, 3,v)

    #define   GET32efuse_ctrl_POR_B(r32)                       _BFGET_(r32, 4, 4)
    #define   SET32efuse_ctrl_POR_B(r32,v)                     _BFSET_(r32, 4, 4,v)
    #define   GET16efuse_ctrl_POR_B(r16)                       _BFGET_(r16, 4, 4)
    #define   SET16efuse_ctrl_POR_B(r16,v)                     _BFSET_(r16, 4, 4,v)

    #define   GET32efuse_ctrl_CSB(r32)                         _BFGET_(r32, 5, 5)
    #define   SET32efuse_ctrl_CSB(r32,v)                       _BFSET_(r32, 5, 5,v)
    #define   GET16efuse_ctrl_CSB(r16)                         _BFGET_(r16, 5, 5)
    #define   SET16efuse_ctrl_CSB(r16,v)                       _BFSET_(r16, 5, 5,v)

    #define   GET32efuse_ctrl_PGM(r32)                         _BFGET_(r32, 6, 6)
    #define   SET32efuse_ctrl_PGM(r32,v)                       _BFSET_(r32, 6, 6,v)
    #define   GET16efuse_ctrl_PGM(r16)                         _BFGET_(r16, 6, 6)
    #define   SET16efuse_ctrl_PGM(r16,v)                       _BFSET_(r16, 6, 6,v)

    #define   GET32efuse_ctrl_WPROT(r32)                       _BFGET_(r32, 7, 7)
    #define   SET32efuse_ctrl_WPROT(r32,v)                     _BFSET_(r32, 7, 7,v)
    #define   GET16efuse_ctrl_WPROT(r16)                       _BFGET_(r16, 7, 7)
    #define   SET16efuse_ctrl_WPROT(r16,v)                     _BFSET_(r16, 7, 7,v)

    #define   GET32efuse_ctrl_TEST(r32)                        _BFGET_(r32,11, 8)
    #define   SET32efuse_ctrl_TEST(r32,v)                      _BFSET_(r32,11, 8,v)
    #define   GET16efuse_ctrl_TEST(r16)                        _BFGET_(r16,11, 8)
    #define   SET16efuse_ctrl_TEST(r16,v)                      _BFSET_(r16,11, 8,v)

    #define     w32efuse_ctrl                                  {\
            UNSG32 uctrl_PROG_SEQ_CODE                         :  1;\
            UNSG32 uctrl_PROG_SEQ_CODE_CLK                     :  1;\
            UNSG32 uctrl_SCLK                                  :  1;\
            UNSG32 uctrl_PRDT                                  :  1;\
            UNSG32 uctrl_POR_B                                 :  1;\
            UNSG32 uctrl_CSB                                   :  1;\
            UNSG32 uctrl_PGM                                   :  1;\
            UNSG32 uctrl_WPROT                                 :  1;\
            UNSG32 uctrl_TEST                                  :  4;\
            UNSG32 RSVDx0_b12                                  : 20;\
          }
    union { UNSG32 u32efuse_ctrl;
            struct w32efuse_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32efuse_status_match_MATCH_VALUE(r32)         _BFGET_(r32, 0, 0)
    #define   SET32efuse_status_match_MATCH_VALUE(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16efuse_status_match_MATCH_VALUE(r16)         _BFGET_(r16, 0, 0)
    #define   SET16efuse_status_match_MATCH_VALUE(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32efuse_status_match                          {\
            UNSG32 ustatus_match_MATCH_VALUE                   :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32efuse_status_match;
            struct w32efuse_status_match;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32efuse_status_qout_QOUT_31_0(r32)            _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_31_0(r32,v)          _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout                           {\
            UNSG32 ustatus_qout_QOUT_31_0                      : 32;\
          }
    union { UNSG32 u32efuse_status_qout;
            struct w32efuse_status_qout;
          };
    #define   GET32efuse_status_qout_QOUT_63_32(r32)           _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_63_32(r32,v)         _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout1                          {\
            UNSG32 ustatus_qout_QOUT_63_32                     : 32;\
          }
    union { UNSG32 u32efuse_status_qout1;
            struct w32efuse_status_qout1;
          };
    #define   GET32efuse_status_qout_QOUT_95_64(r32)           _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_95_64(r32,v)         _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout2                          {\
            UNSG32 ustatus_qout_QOUT_95_64                     : 32;\
          }
    union { UNSG32 u32efuse_status_qout2;
            struct w32efuse_status_qout2;
          };
    #define   GET32efuse_status_qout_QOUT_127_96(r32)          _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_127_96(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout3                          {\
            UNSG32 ustatus_qout_QOUT_127_96                    : 32;\
          }
    union { UNSG32 u32efuse_status_qout3;
            struct w32efuse_status_qout3;
          };
    #define   GET32efuse_status_qout_QOUT_159_128(r32)         _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_159_128(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout4                          {\
            UNSG32 ustatus_qout_QOUT_159_128                   : 32;\
          }
    union { UNSG32 u32efuse_status_qout4;
            struct w32efuse_status_qout4;
          };
    #define   GET32efuse_status_qout_QOUT_191_160(r32)         _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_191_160(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout5                          {\
            UNSG32 ustatus_qout_QOUT_191_160                   : 32;\
          }
    union { UNSG32 u32efuse_status_qout5;
            struct w32efuse_status_qout5;
          };
    #define   GET32efuse_status_qout_QOUT_223_192(r32)         _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_223_192(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout6                          {\
            UNSG32 ustatus_qout_QOUT_223_192                   : 32;\
          }
    union { UNSG32 u32efuse_status_qout6;
            struct w32efuse_status_qout6;
          };
    #define   GET32efuse_status_qout_QOUT_255_224(r32)         _BFGET_(r32,31, 0)
    #define   SET32efuse_status_qout_QOUT_255_224(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32efuse_status_qout7                          {\
            UNSG32 ustatus_qout_QOUT_255_224                   : 32;\
          }
    union { UNSG32 u32efuse_status_qout7;
            struct w32efuse_status_qout7;
          };
    #define   GET32efuse_status_qout_QOUT_256(r32)             _BFGET_(r32, 0, 0)
    #define   SET32efuse_status_qout_QOUT_256(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16efuse_status_qout_QOUT_256(r16)             _BFGET_(r16, 0, 0)
    #define   SET16efuse_status_qout_QOUT_256(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32efuse_status_qout8                          {\
            UNSG32 ustatus_qout_QOUT_256                       :  1;\
            UNSG32 RSVDx28_b1                                  : 31;\
          }
    union { UNSG32 u32efuse_status_qout8;
            struct w32efuse_status_qout8;
          };
    ///////////////////////////////////////////////////////////
    } SIE_efuse;

    typedef union  T32efuse_ctrl
          { UNSG32 u32;
            struct w32efuse_ctrl;
                 } T32efuse_ctrl;
    typedef union  T32efuse_status_match
          { UNSG32 u32;
            struct w32efuse_status_match;
                 } T32efuse_status_match;
    typedef union  T32efuse_status_qout
          { UNSG32 u32;
            struct w32efuse_status_qout;
                 } T32efuse_status_qout;
    typedef union  T32efuse_status_qout1
          { UNSG32 u32;
            struct w32efuse_status_qout1;
                 } T32efuse_status_qout1;
    typedef union  T32efuse_status_qout2
          { UNSG32 u32;
            struct w32efuse_status_qout2;
                 } T32efuse_status_qout2;
    typedef union  T32efuse_status_qout3
          { UNSG32 u32;
            struct w32efuse_status_qout3;
                 } T32efuse_status_qout3;
    typedef union  T32efuse_status_qout4
          { UNSG32 u32;
            struct w32efuse_status_qout4;
                 } T32efuse_status_qout4;
    typedef union  T32efuse_status_qout5
          { UNSG32 u32;
            struct w32efuse_status_qout5;
                 } T32efuse_status_qout5;
    typedef union  T32efuse_status_qout6
          { UNSG32 u32;
            struct w32efuse_status_qout6;
                 } T32efuse_status_qout6;
    typedef union  T32efuse_status_qout7
          { UNSG32 u32;
            struct w32efuse_status_qout7;
                 } T32efuse_status_qout7;
    typedef union  T32efuse_status_qout8
          { UNSG32 u32;
            struct w32efuse_status_qout8;
                 } T32efuse_status_qout8;
    ///////////////////////////////////////////////////////////

    typedef union  Tefuse_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32efuse_ctrl;
                   };
                 } Tefuse_ctrl;
    typedef union  Tefuse_status_match
          { UNSG32 u32[1];
            struct {
            struct w32efuse_status_match;
                   };
                 } Tefuse_status_match;
    typedef union  Tefuse_status_qout
          { UNSG32 u32[9];
            struct {
            struct w32efuse_status_qout;
            struct w32efuse_status_qout1;
            struct w32efuse_status_qout2;
            struct w32efuse_status_qout3;
            struct w32efuse_status_qout4;
            struct w32efuse_status_qout5;
            struct w32efuse_status_qout6;
            struct w32efuse_status_qout7;
            struct w32efuse_status_qout8;
                   };
                 } Tefuse_status_qout;

    ///////////////////////////////////////////////////////////
     SIGN32 efuse_drvrd(SIE_efuse *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 efuse_drvwr(SIE_efuse *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void efuse_reset(SIE_efuse *p);
     SIGN32 efuse_cmp  (SIE_efuse *p, SIE_efuse *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define efuse_check(p,pie,pfx,hLOG) efuse_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define efuse_print(p,    pfx,hLOG) efuse_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: efuse
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE Gbl                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 pinMux               (P-)
///               ###
///               * Pin Mux selection for Berlin. This register can be reset only by PAD reset.
///               ###
///               %unsigned 3  gp0                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 0
///                                                 ###
///               %unsigned 3  gp1                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 1
///                                                 ###
///               %unsigned 3  gp2                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 2
///                                                 ###
///               %unsigned 3  gp3                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 3
///                                                 ###
///               %unsigned 3  gp4                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 4
///                                                 ###
///               %unsigned 3  gp5                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 5
///                                                 ###
///               %unsigned 3  gp6                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 6
///                                                 ###
///               %unsigned 3  gp7                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                                 ###
///                                                 * Group 7
///                                                 ###
///               %unsigned 3  gp8                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 8
///                                                 ###
///               %unsigned 3  gp9                       0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 9
///                                                 ###
///               %unsigned 2  gp10                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 10
///                                                 ###
///     # 0x00004 pinMux1              
///               %unsigned 2  gp11                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 11
///                                                 ###
///               %unsigned 3  gp12                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 12
///                                                 ###
///               %unsigned 3  gp13                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                                 ###
///                                                 * Group 13
///                                                 ###
///               %unsigned 1  gp14                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 14
///                                                 ###
///               %unsigned 3  gp15                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 15
///                                                 ###
///               %unsigned 3  gp16                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///                                                 ###
///                                                 * Group 16 (not used in bg2cd)
///                                                 ###
///               %unsigned 3  gp17                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///                                                 ###
///                                                 * Group 17 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp18                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 18 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp19                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 19 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp20                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                                 ###
///                                                 * Group 20 (not used in bg2cd)
///                                                 ###
///               %unsigned 3  gp21                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 21 (not used in bg2cd)
///                                                 ###
///               %unsigned 3  gp22                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                                 ###
///                                                 * Group 22 (not used in bg2cd)
///                                                 ###
///               %%        2          # Stuffing bits...
///     # 0x00008 pinMux2              
///               %unsigned 3  gp23                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///                                                 ###
///                                                 * Group 23 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp24                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                                 ###
///                                                 * Group 24 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp25                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 25 (not used in bg2cd)
///                                                 ###
///               %unsigned 1  gp26                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                                 ###
///                                                 * Group 26 (not used in bg2cd)
///                                                 ###
///               %unsigned 2  gp27                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                                 ###
///                                                 * Group 27 (not used in bg2cd)
///                                                 ###
///               %unsigned 3  gp28                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_5                    0x5
///                                                 ###
///                                                 * Group 28 (not used in bg2cd)
///                                                 ###
///               %unsigned 3  gp29                      0x0
///                                    : MODE_0                    0x0
///                                    : MODE_2                    0x2
///                                    : MODE_5                    0x5
///                                    : MODE_6                    0x6
///                                                 ###
///                                                 * Group 29 (not used in bg2cd)
///                                                 ###
///               %%        16         # Stuffing bits...
///     @ 0x0000C bootStrap            (R-)
///               ###
///               * Boot Strap Read Back. This register can be reset only by PAD reset.
///               ###
///               %unsigned 7  softwareStrap             0x0
///                                    ###
///                                    * Straps for software usage
///                                    * Note: In BG2CD, we only provide 1 bit for softwareStrap i.e SoftwareStrap[0]
///                                    * Other bits [6:1] are not used
///                                    ###
///               %unsigned 2  bootSrc                   0x0
///                                    ###
///                                    * CPU boot source
///                                    * 00: ROM boot from SPI
///                                    * 01: ROM boot from NAND
///                                    * 10: ROM boot Reserved (no eMMC in BG2CD)
///                                    * 11: Direct boot from SPI
///                                    ###
///               %unsigned 1  sysPllByps                0x0
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SYSPLL Bypass indicator
///                                                 * 0: No Bypass
///                                                 * 1: System PLL Bypassed
///                                                 ###
///               %unsigned 1  memPllByps                0x0
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * MEMPLL Bypass indicator
///                                                 * 0: No Bypass
///                                                 * 1: Memory PLL Bypassed
///                                                 ###
///               %unsigned 1  cpuPllByps                0x0
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * CPUPLL Bypass indicator
///                                                 * 0: No Bypass
///                                                 * 1: CPUPLL Bypassed
///                                                 ###
///               %unsigned 1  pllPwrDown                0x0
///                                    : POWER_UP                  0x0
///                                    : POWER_DOWN                0x1
///                                                 ###
///                                                 * SYS/MEM/CPU PLL Power Down
///                                                 * 1: Power Down
///                                                 * 0: Power UP
///                                                 ###
///               %unsigned 1  refClk12P5M               0x0
///                                    : REFCLK25M                 0x0
///                                    : REFCLK12P5M               0x1
///                                                 ###
///                                                 * Reference clock is 12.5Mhz or 25Mhz
///                                                 * 0: 25Mhz
///                                                 * 1: 12.5 Mhz
///                                                 ###
///               %unsigned 1  socJtagFromSM             0x0
///                                    : fromPinMux                0x0
///                                    : fromSM                    0x1
///                                                 ###
///                                                 * Select the SOC JTAG chain is from either system manager or from dedicated pin mux.
///                                                 * 0: From pin MUX
///                                                 * 1: From System Manager (SM)
///                                                 * Note: Fixed to 0 in BG2CD
///                                                 ###
///               %unsigned 1  nandV18Enable             0x0
///                                    : V1R8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * NAND pads power selection
///                                                 * 0: Pad ring is 3.3V
///                                                 * 1: Pad ring is 1.8V
///                                                 ###
///               %unsigned 1  spi1V18Enable             0x0
///                                    : V1R8                      0x0
///                                    : V3R3                      0x1
///                                                 ###
///                                                 * SPI1 pads power selection
///                                                 * 0: Pad ring is 3.3V
///                                                 * 1: Pad ring is 1.8V
///                                                 * Fixed to 0 in BG2CD
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  nandV25Enable             0x0
///                                    ###
///                                    * NAND 2.5v pads power selection. Fixed to 0 in BG2CD
///                                    * Note: In BG2CD, nandV25Enable is fixed to 0. Only 3.3V and 1.8V is allowed for NAND pads.
///                                    ###
///               %unsigned 1  spi1V25Enable             0x0
///                                    ###
///                                    * SPI1 2.5v pads power selection. Fixed to 0 in BG2CD
///                                    * Note: In BG2CD, spiV25Enable is fixed to 0. Only 3.3V and 1.8V is allowed for SPI pads.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  ENG_EN                    0x0
///                                    : PRODUCTION_MODE           0x0
///                                    : DEVELOPE_MODE             0x1
///                                                 ###
///                                                 * Production or development mode. This is not a boot strap bit. It's a bonding option and only read by AHB.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %%        12         # Stuffing bits...
///     @ 0x00010 anaGrpCtl            (P-)
///               ###
///               * analog Group Control
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  anaGrpPu                  0x1
///                                    ###
///                                    * Power-up signal for the whole block
///                                    ###
///               %unsigned 2  anaGrpBgSel               0x1
///                                    ###
///                                    * Selects the reference Voltage
///                                    * 00:0.575V
///                                    * 01:0.6V
///                                    * 10:0.625V
///                                    * 11:0.65V
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  anaGrpPuXtl               0x1
///                                    ###
///                                    * Power-up signal for the XTL OSC circuit.
///                                    * 1: Power-up XTAL
///                                    * 0: power-down XTAL
///                                    ###
///               %unsigned 1  anaGrpGainX2              0x0
///                                    ###
///                                    * OSC gain control.
///                                    * 1: 2x buffer size.
///                                    * 0: 1x buffer size.
///                                    ###
///               %unsigned 2  anaGrpSelClkDigDiv1       0x0
///                                    ###
///                                    * Selection of clock division ratio for CLKOUT_DIG[0]
///                                    * 00: divided by 1
///                                    * 01: divided by 2
///                                    * 10: divided by 4
///                                    * 11: divided by 8
///                                    ###
///               %unsigned 2  anaGrpSelClkDigDiv2       0x0
///                                    ###
///                                    * Selection of clock division ratio for CLKOUT_DIG[1]
///                                    * 00: divided by 1
///                                    * 01: divided by 2
///                                    * 10: divided by 4
///                                    * 11: divided by 8
///                                    ###
///               %unsigned 2  anaGrpSelClkDigDiv3       0x0
///                                    ###
///                                    * Selection of clock division ratio for CLKOUT_DIG[2]
///                                    * 00: divided by 1
///                                    * 01: divided by 2
///                                    * 10: divided by 4
///                                    * 11: divided by 8
///                                    ###
///               %unsigned 2  anaGrpSelClkDigDiv4       0x0
///                                    ###
///                                    * Selection of clock division ratio for CLKOUT_DIG[3]
///                                    * 00: divided by 1
///                                    * 01: divided by 2
///                                    * 10: divided by 4
///                                    * 11: divided by 8
///                                    ###
///               %unsigned 1  anaGrpPuOsc               0x1
///                                    ###
///                                    * Power-up control for the free-running ring oscillator
///                                    ###
///               %unsigned 2  anaGrpSpeedOsc            0x2
///                                    ###
///                                    * Speed selection for the frequency of CLKOUT_OSC
///                                    * 00: 9 MHz +/-20%
///                                    * 01: 12MHz +/-20%
///                                    * 10: 16 MHz +/-20%
///                                    * 11: 20 MHz +/-20%
///                                    ###
///               %unsigned 4  anaGrpTestAna             0x0
///                                    ###
///                                    * Analog test control bits.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00014 sysPllCtl            (P-)
///               ###
///               * sysPll Control: Fout = Default sysPll frequency: 400 MHz;
///               * Input Frequency:      	Fref : 8MHZ ~ 250MHZ.
///               * Output Frequency:      	Fout : 156.25MHZ ~2.5GHZ.
///               * Fout(PLL_CLK) = (N/M * Fref) / VCODIV
///               * M: Reference Divider(M=1 with REFDIV[4:0]=00000. REFDIV[4:0]=00001 is not used.) (M=REFDIV[4:0] for other cases.)
///               * N: Feedback Divider (N=FBDIV[8:0]).
///               * VCODIV: VCO post divider controlled by VCODIV_SEL[3:0]. Divider value=1; 2; 3; 4;6; 8.
///               * Resolution: Fref / M # 10±20% Mhz (to Maintain the PLL stability)
///               ###
///               %unsigned 1  sysPllPu                  0x1
///                                    ###
///                                    * Power-up signal for PLL
///                                    * 0: Power down
///                                    * 1: Power up
///                                    ###
///               %unsigned 5  sysPllRfDiv               0x2
///                                    ###
///                                    * Reference clock divider select
///                                    * [4:0]
///                                    * 00000: div1.
///                                    * 00001: not used.
///                                    * 00010: div2
///                                    * 00011: div3
///                                    * 00100: div4
///                                    * 00101: div5
///                                    * 00110: div6
///                                    * 00111: div7
///                                    * 01000: div8
///                                    * 01001: div9
///                                    * .
///                                    * .
///                                    * .
///                                    ###
///               %unsigned 9  sysPllFbDiv               0x80
///                                    ###
///                                    * Feedback clock divider select
///                                    * Divider= FBDIV [8:0], start from 16.
///                                    ###
///               %unsigned 2  sysPllVddm                0x1
///                                    : 1R40v                     0x0
///                                    : 1R45v                     0x1
///                                    : 1R50v                     0x2
///                                    : 1R55v                     0x3
///                                                 ###
///                                                 * VCO supply control
///                                                 * 00: 1.40v
///                                                 * 01: 1.45v
///                                                 * 10: 1.50v
///                                                 * 11: 1.55v
///                                                 ###
///               %unsigned 4  sysPllVddl                0x9
///                                    : 0R78v                     0x1
///                                    : 0R82v                     0x2
///                                    : 0R86v                     0x3
///                                    : 0R90v                     0x4
///                                    : 0R94v                     0x5
///                                    : 0R98v                     0x6
///                                    : 1R02v                     0x7
///                                    : 1R06v                     0x8
///                                    : 1R10v                     0x9
///                                    : 1R14v                     0xA
///                                    : 1R16v                     0xB
///                                                 ###
///                                                 * Internal VDD supply control.
///                                                 * 0001: 0.78v
///                                                 * 0010: 0.82v
///                                                 * 0011: 0.86v
///                                                 * 0100: 0.90 v
///                                                 * 0101: 0.94 v
///                                                 * 0110: 0.98 v
///                                                 * 0111: 1.02 v
///                                                 * 1000: 1.06 v
///                                                 * 1001: 1.10 v
///                                                 * 1010: 1.14 v
///                                                 * 1011: 1.16 v
///                                                 ###
///               %unsigned 2  sysPllVregIVRef           0x2
///                                    ###
///                                    * Regulator Charge Pump Bias Control
///                                    * 00: 1.45 v
///                                    * 01: 1.50 v
///                                    * 10: 1.55 v
///                                    * 11: 1.60 v
///                                    ###
///               %unsigned 3  sysPllIcp                 0x4
///                                    : 2uA                       0x0
///                                    : 3uA                       0x1
///                                    : 4uA                       0x2
///                                    : 5uA                       0x3
///                                    : 6uA                       0x4
///                                    : 7uA                       0x5
///                                    : 8uA                       0x6
///                                    : 9uA                       0x7
///                                                 ###
///                                                 * Charge-pump current control bits.
///                                                 * 000: 2uA
///                                                 * 001: 3uA
///                                                 * 010: 4uA
///                                                 * 011: 5uA
///                                                 * 100: 6uA
///                                                 * 101: 7uA
///                                                 * 110: 8uA
///                                                 * 111: 9uA
///                                                 ###
///               %unsigned 4  sysPllKvco                0x3
///                                    : 1R25Gto1R35G              0x1
///                                    : 1R35Gto1R55G              0x2
///                                    : 1R55Gto1R75G              0x3
///                                    : 1R75Gto1R95G              0x4
///                                    : 1R95Gto2R15G              0x5
///                                    : 2R15Gto2R4G               0x6
///                                    : 2R4Gto2R5G                0x7
///                                                 ###
///                                                 * KVCO selection for different frequency
///                                                 * range
///                                                 * 0000: reserved
///                                                 * 0001: 1.2G ~ 1.35G
///                                                 * 0010: 1.35G~1.55G
///                                                 * 0011: 1.55G~1.75G
///                                                 * 0100: 1.75G~1.95G
///                                                 * 0101: 1.95G~2.15G
///                                                 * 0110: 2.15G~2.4G
///                                                 * 0111: 2.4G~2.5G
///                                                 * VCO Clock ranges outside of those specified in the
///                                                 * KVCO are not allowed.
///                                                 ###
///               %unsigned 2  sysPllCtune               0x1
///                                    ###
///                                    * VCO Capacitor Select
///                                    * 00:    No Cap Loading
///                                    * 01:    One Unit Cap Loading
///                                    * 10:    Two Unit Cap Loading
///                                    * 11:    Three Unit Cap Loading
///                                    ###
///     # 0x00018 sysPllCtl1           
///               %unsigned 3  sysPllVcoRng              0x3
///                                    ###
///                                    * PLL V to I gain control
///                                    * 000: For KVCO[3:0]=0000
///                                    * 001: For KVCO[3:0]=0001
///                                    * 010: For KVCO[3:0]=0010
///                                    * 011: For KVCO[3:0]=0011
///                                    * 100: For KVCO[3:0]=0100
///                                    * 101: For KVCO[3:0]=0101
///                                    * 110: For KVCO[3:0]=0110
///                                    * 111: For KVCO[3:0]=0111
///                                    ###
///               %unsigned 4  sysPllVcoDivSelDiff       0x5
///                                    ###
///                                    * Post divider for differential output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 4  sysPllVcoDivSelSe         0x5
///                                    ###
///                                    * Post divider for single-ended output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 1  sysPllDiffClkEn           0x0
///                                    ###
///                                    * 0: Disable differential clock.
///                                    * 1: Enable differential clock.
///                                    ###
///               %unsigned 1  sysPllSelVcoDiff          0x1
///                                    ###
///                                    * Differential clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  sysPllSelVcoClkSe         0x1
///                                    ###
///                                    * Single-ended clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  sysPllBypassFbDiv         0x0
///                                    ###
///                                    * Feedback divider selection.
///                                    * 0: Use the built-in FBDIV
///                                    * 1: Use the customer's FBDIV
///                                    ###
///               %unsigned 1  sysPllBypassEn            0x0
///                                    ###
///                                    * PLL clock bypass control signal.
///                                    * 1: The PLL is bypassed. The reference clock will be sent out directly.
///                                    * 0: CLKOUT is the PLL clock.
///                                    ###
///               %unsigned 1  sysPllGateClkCtrl         0x0
///                                    ###
///                                    * To select whether to use the PLL lock signal to gate the output clock or not.
///                                    * 0: The PLL_LOCK signal won't affect the output clock, CLKOUT
///                                    * 1: No clock output until the PLL_LOCK signal goes high.
///                                    ###
///               %unsigned 1  sysPllLineUpEn            0x0
///                                    ###
///                                    * To align single-ended and differential
///                                    * clock
///                                    * 0: no alignment
///                                    * 1: align
///                                    * This bit also select LP mode for SSC logic:
///                                    * 0: normal mode
///                                    * 1: LP mode
///                                    * Note: 1: LINEUP_EN will overrides BYPASS_EN, no BYPASS mode at CLKOUT
///                                    * 0: CLKOUT has BYPASS mode
///                                    ###
///               %unsigned 4  sysPllIntpi               0x2
///                                    ###
///                                    * Selects Interpolator bias current base on VCO running frequency
///                                    * 1.2~1.5GHz 0010
///                                    * 1.5~1.8GHz 0011
///                                    * 1.8~2.1GHz 0100
///                                    * 2.1~2.4GHz 0101
///                                    * 2.4~2.5GHz 0110
///                                    ###
///               %unsigned 1  sysPllPiEn                0x0
///                                    ###
///                                    * 1: Enable phase interpolator,
///                                    * 0: Disable phase interpolator.
///                                    ###
///               %unsigned 1  sysPllSscClkEn            0x0
///                                    ###
///                                    * Enables PI output clock for SSC digital logic.
///                                    ###
///               %unsigned 1  sysPllClkDetEn            0x1
///                                    ###
///                                    * Enables PI output clock for internal reset circuit.
///                                    ###
///               %unsigned 1  sysPllFreqOffsetEn        0x0
///                                    ###
///                                    * Frequency offset control
///                                    * 0: Disable
///                                    * 1: Enable
///                                    ###
///               %%        6          # Stuffing bits...
///     # 0x0001C sysPllCtl2           
///               %unsigned 17 sysPllFreqOffset          0x0
///                                    ###
///                                    * Frequency offset value.
///                                    * [16]: Sign-Bit.
///                                    * 0: Frequency down
///                                    * 1: Frequency up
///                                    * [15:0]: 1 LSB ' 1ppm, up to 5%
///                                    ###
///               %unsigned 1  sysPllFreqOffsetModeSel   0x0
///                                    ###
///                                    * 0: FREQ_OFFSET[16:0] is updated by FREQ_OFFSET_VALID
///                                    * 1: FREQ_OFFSET[16:0] is sampled by CK_DIV4_OUT
///                                    * (It has to be valid at the rising edge of CK_DIV4_OUT)
///                                    ###
///               %unsigned 1  sysPllFreqOffsetValid     0x0
///                                    ###
///                                    * Frequency offset value readiness indicator.
///                                    ###
///               %unsigned 1  sysPllSscEn               0x0
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * Spread Spectrum control (SSC)
///                                                 * 0: Disable
///                                                 * 1: Enable
///                                                 ###
///               %unsigned 1  sysPllSscmode             0x1
///                                    : Centre                    0x0
///                                    : Down                      0x1
///                                                 ###
///                                                 * SSC mode selection
///                                                 * 0: center spread
///                                                 * 1: down spread
///                                                 ###
///               %%        11         # Stuffing bits...
///     # 0x00020 sysPllCtl3           
///               %unsigned 16 sysPllSscFdiv             0x0
///                                    ###
///                                    * SSC frequency selection
///                                    ###
///               %unsigned 11 sysPllSscRnge             0x0
///                                    ###
///                                    * SSC range selection.
///                                    * SSC_RNGE[10:0] = Desired SSC
///                                    * amplitude / (SSC_FREQ_DIV[14:0]*2^(-
///                                    * 27))
///                                    * Need to round to integer.
///                                    ###
///               %unsigned 1  sysPllSscResetExt         0x1
///                                    : Int                       0x0
///                                    : Ext                       0x1
///                                                 ###
///                                                 * SSC internal reset enable
///                                                 ###
///               %unsigned 4  sysPllTestMon             0x0
///                                    ###
///                                    * DC points Testing control register
///                                    * 0000: Tri-state the TESTPIN.
///                                    * *INTERNAL_ONLY**
///                                    ###
///     # 0x00024 sysPllCtl4           
///               %unsigned 4  sysPllRsvdIn              0x4
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Reserve register pin
///                                    * bit[3] : Reserve register pin, used as vddvco_det_disable:
///                                    * 0: vddvco detect enabled
///                                    * 1: vddvco detect disabled
///                                    * bits[2:0] : Used for PI Rload resistor (INTPR[2:0])selecting, based on following frequency
///                                    * range
///                                    * 000: 650
///                                    * 001: 750
///                                    * 010: 900
///                                    * 011: 1.15K
///                                    * 100: 1.5K 2.0GHz~2.5GHz
///                                    * 101: 2.3K 1.4GHz~2.0GHz
///                                    * 110: 4.6K 0.95GHz ~1.4GHz
///                                    * 111: off
///                                    ###
///               %unsigned 1  sysPllExtRst              0x1
///                                    ###
///                                    * External interpolator reset siganl
///                                    * 1:reset
///                                    * 0:no reset
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00028 memPllCtl            (P-)
///               ###
///               * memPll Control: Fout = Default memPll frequency: 400 MHz;
///               * Input Frequency:      	Fref : 8MHZ ~ 250MHZ.
///               * Output Frequency:      	Fout : 156.25MHZ ~2.5GHZ.
///               * Fout(PLL_CLK) = (N/M * Fref) / VCODIV
///               * M: Reference Divider(M=1 with REFDIV[4:0]=00000. REFDIV[4:0]=00001 is not used.) (M=REFDIV[4:0] for other cases.)
///               * N: Feedback Divider (N=FBDIV[8:0]).
///               * VCODIV: VCO post divider controlled by VCODIV_SEL[3:0]. Divider value=1; 2; 3; 4;6; 8.
///               * Resolution: Fref / M # 10±20% Mhz (to Maintain the PLL stability)
///               ###
///               %unsigned 1  memPllPu                  0x1
///                                    ###
///                                    * Power-up signal for PLL
///                                    ###
///               %unsigned 5  memPllRfDiv               0x2
///                                    ###
///                                    * Reference clock divider select
///                                    * [4:0]
///                                    * 00000: div1.
///                                    * 00001: not used.
///                                    * 00010: div2
///                                    * 00011: div3
///                                    * 00100: div4
///                                    * 00101: div5
///                                    * 00110: div6
///                                    * 00111: div7
///                                    * 01000: div8
///                                    * 01001: div9
///                                    * .
///                                    * .
///                                    * .
///                                    ###
///               %unsigned 9  memPllFbDiv               0x80
///                                    ###
///                                    * Feedback clock divider select
///                                    * Divider= FBDIV [8:0], start from 16.
///                                    ###
///               %unsigned 2  memPllVddm                0x1
///                                    : 1R40v                     0x0
///                                    : 1R45v                     0x1
///                                    : 1R50v                     0x2
///                                    : 1R55v                     0x3
///                                                 ###
///                                                 * VCO supply control
///                                                 * 00: 1.40v
///                                                 * 01: 1.45v
///                                                 * 10: 1.50v
///                                                 * 11: 1.55v
///                                                 ###
///               %unsigned 4  memPllVddl                0x9
///                                    : 0R78v                     0x1
///                                    : 0R82v                     0x2
///                                    : 0R86v                     0x3
///                                    : 0R90v                     0x4
///                                                 ###
///                                                 * Internal VDD supply control.
///                                                 * 0001: 0.78v
///                                                 * 0010: 0.82v
///                                                 * 0011: 0.86v
///                                                 * 0100: 0.90 v
///                                                 * 0101: 0.94 v
///                                                 * 0110: 0.98 v
///                                                 * 0111: 1.02 v
///                                                 * 1000: 1.06 v
///                                                 * 1001: 1.10 v
///                                                 * 1010: 1.14 v
///                                                 * 1011: 1.16 v
///                                                 ###
///               %unsigned 2  memPllVregIVRef           0x2
///                                    ###
///                                    * Regulator Charge Pump Bias Control
///                                    * 00: 1.45 v
///                                    * 01: 1.50 v
///                                    * 10: 1.55 v
///                                    * 11: 1.60 v
///                                    ###
///               %unsigned 3  memPllIcp                 0x4
///                                    : 2uA                       0x0
///                                    : 3uA                       0x1
///                                    : 4uA                       0x2
///                                    : 5uA                       0x3
///                                    : 6uA                       0x4
///                                    : 7uA                       0x5
///                                    : 8uA                       0x6
///                                    : 9uA                       0x7
///                                                 ###
///                                                 * Charge-pump current control bits.
///                                                 * 000: 2uA
///                                                 * 001: 3uA
///                                                 * 010: 4uA
///                                                 * 011: 5uA
///                                                 * 100: 6uA
///                                                 * 101: 7uA
///                                                 * 110: 8uA
///                                                 * 111: 9uA
///                                                 ###
///               %unsigned 4  memPllKvco                0x3
///                                    : 1R25Gto1R35G              0x1
///                                    : 1R35Gto1R55G              0x2
///                                    : 1R55Gto1R75G              0x3
///                                    : 1R75Gto1R95G              0x4
///                                    : 1R95Gto2R15G              0x5
///                                    : 2R15Gto2R4G               0x6
///                                    : 2R4Gto2R5G                0x7
///                                                 ###
///                                                 * KVCO selection for different frequency
///                                                 * range
///                                                 * 0000: reserved
///                                                 * 0001: 1.2G ~ 1.35G
///                                                 * 0010: 1.35G~1.55G
///                                                 * 0011: 1.55G~1.75G
///                                                 * 0100: 1.75G~1.95G
///                                                 * 0101: 1.95G~2.15G
///                                                 * 0110: 2.15G~2.4G
///                                                 * 0111: 2.4G~2.5G
///                                                 * VCO Clock ranges outside of those specified in the
///                                                 * KVCO are not allowed.
///                                                 ###
///               %unsigned 2  memPllCtune               0x1
///                                    ###
///                                    * VCO Capacitor Select
///                                    * 00:    No Cap Loading
///                                    * 01:    One Unit Cap Loading
///                                    * 10:    Two Unit Cap Loading
///                                    * 11:    Three Unit Cap Loading
///                                    ###
///     # 0x0002C memPllCtl1           
///               %unsigned 3  memPllVcoRng              0x3
///                                    ###
///                                    * PLL V to I gain control
///                                    * 000: For KVCO[3:0]=0000
///                                    * 001: For KVCO[3:0]=0001
///                                    * 010: For KVCO[3:0]=0010
///                                    * 011: For KVCO[3:0]=0011
///                                    * 100: For KVCO[3:0]=0100
///                                    * 101: For KVCO[3:0]=0101
///                                    * 110: For KVCO[3:0]=0110
///                                    * 111: For KVCO[3:0]=0111
///                                    ###
///               %unsigned 4  memPllVcoDivSelDiff       0x5
///                                    ###
///                                    * Post divider for differential output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 4  memPllVcoDivSelSe         0x8
///                                    ###
///                                    * Post divider for single-ended output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 1  memPllDiffClkEn           0x1
///                                    ###
///                                    * 0: Disable differential clock.
///                                    * 1: Enable differential clock.
///                                    ###
///               %unsigned 1  memPllSelVcoDiff          0x1
///                                    ###
///                                    * Differential clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  memPllSelVcoClkSe         0x1
///                                    ###
///                                    * Single-ended clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  memPllBypassFbDiv         0x0
///                                    ###
///                                    * Feedback divider selection.
///                                    * 0: Use the built-in FBDIV
///                                    * 1: Use the customer's FBDIV
///                                    ###
///               %unsigned 1  memPllBypassEn            0x0
///                                    ###
///                                    * PLL clock bypass control signal.
///                                    * 1: The PLL is bypassed. The reference clock will be sent out directly.
///                                    * 0: CLKOUT is the PLL clock.
///                                    ###
///               %unsigned 1  memPllGateClkCtrl         0x0
///                                    ###
///                                    * To select whether to use the PLL lock signal to gate the output clock or not.
///                                    * 0: The PLL_LOCK signal won't affect the output clock, CLKOUT
///                                    * 1: No clock output until the PLL_LOCK signal goes high.
///                                    ###
///               %unsigned 1  memPllLineUpEn            0x0
///                                    ###
///                                    * To align single-ended and differential
///                                    * clock
///                                    * 0: no alignment
///                                    * 1: align
///                                    * This bit also select LP mode for SSC logic:
///                                    * 0: normal mode
///                                    * 1: LP mode
///                                    * Note: 1: LINEUP_EN will overrides BYPASS_EN, no BYPASS mode at CLKOUT
///                                    * 0: CLKOUT has BYPASS mode
///                                    ###
///               %unsigned 4  memPllIntpi               0x2
///                                    ###
///                                    * Selects Interpolator bias current base on VCO running frequency
///                                    * 1.2~1.5GHz 0010
///                                    * 1.5~1.8GHz 0011
///                                    * 1.8~2.1GHz 0100
///                                    * 2.1~2.4GHz 0101
///                                    * 2.4~2.5GHz 0110
///                                    ###
///               %unsigned 1  memPllPiEn                0x0
///                                    ###
///                                    * 1: Enable phase interpolator,
///                                    * 0: Disable phase interpolator.
///                                    ###
///               %unsigned 1  memPllSscClkEn            0x0
///                                    ###
///                                    * Enables PI output clock for SSC digital logic.
///                                    ###
///               %unsigned 1  memPllClkDetEn            0x1
///                                    ###
///                                    * Enables PI output clock for internal reset circuit.
///                                    ###
///               %unsigned 1  memPllFreqOffsetEn        0x0
///                                    ###
///                                    * Frequency offset control
///                                    * 0: Disable
///                                    * 1: Enable
///                                    ###
///               %%        6          # Stuffing bits...
///     # 0x00030 memPllCtl2           
///               %unsigned 17 memPllFreqOffset          0x0
///                                    ###
///                                    * Frequency offset value.
///                                    * [16]: Sign-Bit.
///                                    * 0: Frequency down
///                                    * 1: Frequency up
///                                    * [15:0]: 1 LSB ' 1ppm, up to 5%
///                                    ###
///               %unsigned 1  memPllFreqOffsetModeSel   0x0
///                                    ###
///                                    * 0: FREQ_OFFSET[16:0] is updated by FREQ_OFFSET_VALID
///                                    * 1: FREQ_OFFSET[16:0] is sampled by CK_DIV4_OUT
///                                    * (It has to be valid at the rising edge of CK_DIV4_OUT)
///                                    ###
///               %unsigned 1  memPllFreqOffsetValid     0x0
///                                    ###
///                                    * Frequency offset value readiness indicator.
///                                    ###
///               %unsigned 1  memPllSscEn               0x0
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * Spread Spectrum control (SSC)
///                                                 * 0: Disable
///                                                 * 1: Enable
///                                                 ###
///               %unsigned 1  memPllSscmode             0x1
///                                    : Centre                    0x0
///                                    : Down                      0x1
///                                                 ###
///                                                 * SSC mode selection
///                                                 * 0: center spread
///                                                 * 1: down spread
///                                                 ###
///               %%        11         # Stuffing bits...
///     # 0x00034 memPllCtl3           
///               %unsigned 16 memPllSscFdiv             0x0
///                                    ###
///                                    * SSC frequency selection
///                                    ###
///               %unsigned 11 memPllSscRnge             0x0
///                                    ###
///                                    * SSC range selection
///                                    * SSC_RNGE[10:0] = Desired SSC
///                                    * amplitude / (SSC_FREQ_DIV[14:0]*2^(-
///                                    * 27))
///                                    * Need to round to integer.
///                                    ###
///               %unsigned 1  memPllSscResetExt         0x0
///                                    : Int                       0x0
///                                    : Ext                       0x1
///                                                 ###
///                                                 * SSC internal reset enable
///                                                 ###
///               %unsigned 4  memPllTestMon             0x0
///                                    ###
///                                    * DC points Testing control register
///                                    * 0000: Tri-state the TESTPIN.
///                                    * *INTERNAL_ONLY**
///                                    ###
///     # 0x00038 memPllCtl4           
///               %unsigned 4  memPllRsvdIn              0x4
///                                    ###
///                                    * Reserve register pin
///                                    * *INTERNAL_ONLY**
///                                    * Reserve register pin
///                                    * bit[3] : Reserve register pin, used as vddvco_det_disable:
///                                    * 0: vddvco detect enabled
///                                    * 1: vddvco detect disabled
///                                    * bits[2:0] : Used for PI Rload resistor (INTPR[2:0])selecting, based on following frequency
///                                    * range
///                                    * 000: 650
///                                    * 001: 750
///                                    * 010: 900
///                                    * 011: 1.15K
///                                    * 100: 1.5K 2.0GHz~2.5GHz
///                                    * 101: 2.3K 1.4GHz~2.0GHz
///                                    * 110: 4.6K 0.95GHz ~1.4GHz
///                                    * 111: off
///                                    ###
///               %unsigned 1  memPllExtRst              0x0
///                                    ###
///                                    * External interpolator reset siganl
///                                    * 1:reset
///                                    * 0:no reset
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x0003C cpuPllCtl            (P-)
///               ###
///               * cpuPll Control: Fout = Default cpuPll frequency: 400 MHz;
///               * Input Frequency:      	Fref : 8MHZ ~ 250MHZ.
///               * Output Frequency:      	Fout : 156.25MHZ ~2.5GHZ.
///               * Fout(PLL_CLK) = (N/M * Fref) / VCODIV
///               * M: Reference Divider(M=1 with REFDIV[4:0]=00000. REFDIV[4:0]=00001 is not used.) (M=REFDIV[4:0] for other cases.)
///               * N: Feedback Divider (N=FBDIV[8:0]).
///               * VCODIV: VCO post divider controlled by VCODIV_SEL[3:0]. Divider value=1; 2; 3; 4;6; 8.
///               * Resolution: Fref / M # 10±20% Mhz (to Maintain the PLL stability)
///               ###
///               %unsigned 1  cpuPllPu                  0x1
///                                    ###
///                                    * Power-up signal for PLL
///                                    * 0: Power down
///                                    * 1: Power up
///                                    ###
///               %unsigned 5  cpuPllRfDiv               0x2
///                                    ###
///                                    * Reference clock divider select
///                                    * [4:0]
///                                    * 00000: div1.
///                                    * 00001: not used.
///                                    * 00010: div2
///                                    * 00011: div3
///                                    * 00100: div4
///                                    * 00101: div5
///                                    * 00110: div6
///                                    * 00111: div7
///                                    * 01000: div8
///                                    * 01001: div9
///                                    * .
///                                    * .
///                                    * .
///                                    ###
///               %unsigned 9  cpuPllFbDiv               0x80
///                                    ###
///                                    * Feedback clock divider select
///                                    * Divider= FBDIV [8:0], start from 16.
///                                    ###
///               %unsigned 2  cpuPllVddm                0x1
///                                    : 1R40v                     0x0
///                                    : 1R45v                     0x1
///                                    : 1R50v                     0x2
///                                    : 1R55v                     0x3
///                                                 ###
///                                                 * VCO supply control
///                                                 * 00: 1.40v
///                                                 * 01: 1.45v
///                                                 * 10: 1.50v
///                                                 * 11: 1.55v
///                                                 ###
///               %unsigned 4  cpuPllVddl                0x9
///                                    : 0R78v                     0x1
///                                    : 0R82v                     0x2
///                                    : 0R86v                     0x3
///                                    : 0R90v                     0x4
///                                    : 0R94v                     0x5
///                                    : 0R98v                     0x6
///                                    : 1R02v                     0x7
///                                    : 1R06v                     0x8
///                                    : 1R10v                     0x9
///                                    : 1R14v                     0xA
///                                    : 1R16v                     0xB
///                                                 ###
///                                                 * Internal VDD supply control.
///                                                 * 0001: 0.78v
///                                                 * 0010: 0.82v
///                                                 * 0011: 0.86v
///                                                 * 0100: 0.90 v
///                                                 * 0101: 0.94 v
///                                                 * 0110: 0.98 v
///                                                 * 0111: 1.02 v
///                                                 * 1000: 1.06 v
///                                                 * 1001: 1.10 v
///                                                 * 1010: 1.14 v
///                                                 * 1011: 1.16 v
///                                                 ###
///               %unsigned 2  cpuPllVregIVRef           0x2
///                                    ###
///                                    * Regulator Charge Pump Bias Control
///                                    * 00: 1.45 v
///                                    * 01: 1.50 v
///                                    * 10: 1.55 v
///                                    * 11: 1.60 v
///                                    ###
///               %unsigned 3  cpuPllIcp                 0x4
///                                    : 2uA                       0x0
///                                    : 3uA                       0x1
///                                    : 4uA                       0x2
///                                    : 5uA                       0x3
///                                    : 6uA                       0x4
///                                    : 7uA                       0x5
///                                    : 8uA                       0x6
///                                    : 9uA                       0x7
///                                                 ###
///                                                 * Charge-pump current control bits.
///                                                 * 000: 2uA
///                                                 * 001: 3uA
///                                                 * 010: 4uA
///                                                 * 011: 5uA
///                                                 * 100: 6uA
///                                                 * 101: 7uA
///                                                 * 110: 8uA
///                                                 * 111: 9uA
///                                                 ###
///               %unsigned 4  cpuPllKvco                0x3
///                                    : 1R25Gto1R35G              0x1
///                                    : 1R35Gto1R55G              0x2
///                                    : 1R55Gto1R75G              0x3
///                                    : 1R75Gto1R95G              0x4
///                                    : 1R95Gto2R15G              0x5
///                                    : 2R15Gto2R4G               0x6
///                                    : 2R4Gto2R5G                0x7
///                                                 ###
///                                                 * KVCO selection for different frequency
///                                                 * range
///                                                 * 0000: reserved
///                                                 * 0001: 1.2G ~ 1.35G
///                                                 * 0010: 1.35G~1.55G
///                                                 * 0011: 1.55G~1.75G
///                                                 * 0100: 1.75G~1.95G
///                                                 * 0101: 1.95G~2.15G
///                                                 * 0110: 2.15G~2.4G
///                                                 * 0111: 2.4G~2.5G
///                                                 * VCO Clock ranges outside of those specified in the
///                                                 * KVCO are not allowed.
///                                                 ###
///               %unsigned 2  cpuPllCtune               0x1
///                                    ###
///                                    * VCO Capacitor Select
///                                    * 00:    No Cap Loading
///                                    * 01:    One Unit Cap Loading
///                                    * 10:    Two Unit Cap Loading
///                                    * 11:    Three Unit Cap Loading
///                                    ###
///     # 0x00040 cpuPllCtl1           
///               %unsigned 3  cpuPllVcoRng              0x3
///                                    ###
///                                    * PLL V to I gain control
///                                    * 000: For KVCO[3:0]=0000
///                                    * 001: For KVCO[3:0]=0001
///                                    * 010: For KVCO[3:0]=0010
///                                    * 011: For KVCO[3:0]=0011
///                                    * 100: For KVCO[3:0]=0100
///                                    * 101: For KVCO[3:0]=0101
///                                    * 110: For KVCO[3:0]=0110
///                                    * 111: For KVCO[3:0]=0111
///                                    ###
///               %unsigned 4  cpuPllVcoDivSelDiff       0x5
///                                    ###
///                                    * Post divider for differential output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 4  cpuPllVcoDivSelSe         0x5
///                                    ###
///                                    * ost divider for differential output clock.
///                                    * 0000: 1
///                                    * 0010: 2
///                                    * 0100: 3
///                                    * 0101: 4
///                                    * 0111: 6
///                                    * 1000: 8
///                                    * Setting not shown is invalid.
///                                    ###
///               %unsigned 1  cpuPllDiffClkEn           0x0
///                                    ###
///                                    * 0: Disable differential clock.
///                                    * 1: Enable differential clock.
///                                    ###
///               %unsigned 1  cpuPllSelVcoDiff          0x1
///                                    ###
///                                    * Differential clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  cpuPllSelVcoClkSe         0x1
///                                    ###
///                                    * Single-ended clock source control
///                                    * 0: from PI.
///                                    * 1: from VCO directly.
///                                    ###
///               %unsigned 1  cpuPllBypassFbDiv         0x0
///                                    ###
///                                    * Feedback divider selection.
///                                    * 0: Use the built-in FBDIV
///                                    * 1: Use the customer's FBDIV
///                                    ###
///               %unsigned 1  cpuPllBypassEn            0x0
///                                    ###
///                                    * PLL clock bypass control signal.
///                                    * 1: The PLL is bypassed. The reference clock will be sent out directly.
///                                    * 0: CLKOUT is the PLL clock.
///                                    ###
///               %unsigned 1  cpuPllGateClkCtrl         0x0
///                                    ###
///                                    * To select whether to use the PLL lock signal to gate the output clock or not.
///                                    * 0: The PLL_LOCK signal won't affect the output clock, CLKOUT
///                                    * 1: No clock output until the PLL_LOCK signal goes high.
///                                    ###
///               %unsigned 1  cpuPllLineUpEn            0x0
///                                    ###
///                                    * To align single-ended and differential
///                                    * clock
///                                    * 0: no alignment
///                                    * 1: align
///                                    * This bit also select LP mode for SSC logic:
///                                    * 0: normal mode
///                                    * 1: LP mode
///                                    * Note: 1: LINEUP_EN will overrides BYPASS_EN, no BYPASS mode at CLKOUT
///                                    * 0: CLKOUT has BYPASS mode
///                                    ###
///               %unsigned 4  cpuPllIntpi               0x2
///                                    ###
///                                    * Selects Interpolator bias current base on VCO running frequency
///                                    * 1.2~1.5GHz 0010
///                                    * 1.5~1.8GHz 0011
///                                    * 1.8~2.1GHz 0100
///                                    * 2.1~2.4GHz 0101
///                                    * 2.4~2.5GHz 0110
///                                    ###
///               %unsigned 1  cpuPllPiEn                0x0
///                                    ###
///                                    * 1: Enable phase interpolator,
///                                    * 0: Disable phase interpolator.
///                                    ###
///               %unsigned 1  cpuPllSscClkEn            0x0
///                                    ###
///                                    * Enables PI output clock for SSC digital logic.
///                                    ###
///               %unsigned 1  cpuPllClkDetEn            0x1
///                                    ###
///                                    * Enables PI output clock for internal reset circuit.
///                                    ###
///               %unsigned 1  cpuPllFreqOffsetEn        0x0
///                                    ###
///                                    * Frequency offset control
///                                    * 0: Disable
///                                    * 1: Enable
///                                    ###
///               %%        6          # Stuffing bits...
///     # 0x00044 cpuPllCtl2           
///               %unsigned 17 cpuPllFreqOffset          0x0
///                                    ###
///                                    * Frequency offset value.
///                                    * [16]: Sign-Bit.
///                                    * 0: Frequency down
///                                    * 1: Frequency up
///                                    * [15:0]: 1 LSB ' 1ppm, up to 5%
///                                    ###
///               %unsigned 1  cpuPllFreqOffsetModeSel   0x0
///                                    ###
///                                    * 0: FREQ_OFFSET[16:0] is updated by FREQ_OFFSET_VALID
///                                    * 1: FREQ_OFFSET[16:0] is sampled by CK_DIV4_OUT
///                                    * (It has to be valid at the rising edge of CK_DIV4_OUT)
///                                    ###
///               %unsigned 1  cpuPllFreqOffsetValid     0x0
///                                    ###
///                                    * Frequency offset value readiness indicator.
///                                    ###
///               %unsigned 1  cpuPllSscEn               0x0
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * Spread Spectrum control (SSC)
///                                                 * 0: Disable
///                                                 * 1: Enable
///                                                 ###
///               %unsigned 1  cpuPllSscmode             0x1
///                                    : Centre                    0x0
///                                    : Down                      0x1
///                                                 ###
///                                                 * SSC mode selection
///                                                 * 0: center spread
///                                                 * 1: down spread
///                                                 ###
///               %%        11         # Stuffing bits...
///     # 0x00048 cpuPllCtl3           
///               %unsigned 16 cpuPllSscFdiv             0x0
///                                    ###
///                                    * SSC frequency selection
///                                    ###
///               %unsigned 11 cpuPllSscRnge             0x0
///                                    ###
///                                    * SSC range selection
///                                    * SSC_RNGE[10:0] = Desired SSC
///                                    * amplitude / (SSC_FREQ_DIV[14:0]*2^(-
///                                    * 27))
///                                    * Need to round to integer.
///                                    ###
///               %unsigned 1  cpuPllSscResetExt         0x0
///                                    : Int                       0x0
///                                    : Ext                       0x1
///                                                 ###
///                                                 * SSC internal reset enable
///                                                 ###
///               %unsigned 4  cpuPllTestMon             0x0
///                                    ###
///                                    * DC points Testing control register
///                                    * 0000: Tri-state the TESTPIN.
///                                    * *INTERNAL_ONLY**
///                                    ###
///     # 0x0004C cpuPllCtl4           
///               %unsigned 4  cpuPllRsvdIn              0x4
///                                    ###
///                                    * Reserve register pin
///                                    * *INTERNAL_ONLY**
///                                    * Reserve register pin
///                                    * bit[3] : Reserve register pin, used as vddvco_det_disable:
///                                    * 0: vddvco detect enabled
///                                    * 1: vddvco detect disabled
///                                    * bits[2:0] : Used for PI Rload resistor (INTPR[2:0])selecting, based on following frequency
///                                    * range
///                                    * 000: 650
///                                    * 001: 750
///                                    * 010: 900
///                                    * 011: 1.15K
///                                    * 100: 1.5K 2.0GHz~2.5GHz
///                                    * 101: 2.3K 1.4GHz~2.0GHz
///                                    * 110: 4.6K 0.95GHz ~1.4GHz
///                                    * 111: off
///                                    ###
///               %unsigned 1  cpuPllExtRst              0x0
///                                    ###
///                                    * External interpolator reset siganl
///                                    * 1:reset
///                                    * 0:no reset
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00050 avPllCtl             (P-)
///               ###
///               * AVPLL Control
///               * AVPLL is designed to generate clocks for digital Audio and Video applications. It consists of two core PLLs which generates 1.5105GHz, 1.62GHz and 2.2275GHz clock outputs. It provides 14 channels. Each channel can be programmed as an audio, video or DAC clock.
///               ###
///               %unsigned 1  avPllResetPll_A           0x1
///                                    ###
///                                    * 0
///                                    * De-asserted
///                                    * 1
///                                    * Asserted
///                                    * Reset PLL A
///                                    * Must be de-asserted after 10us from the time when PU is set to 1.
///                                    * Note: Firmware should first set PU/PU_PLLB
///                                    * then de-assert PLLA/B reset after 10us and then enable the video and audio clocks using the clk enable register.
///                                    ###
///               %unsigned 1  avPllPu_A                 0x0
///                                    ###
///                                    * Power up signal for AVPLL
///                                    * 0=power down
///                                    * 1=active
///                                    * When PU=0, all circuits including IVREF, INTP, REGULATOR and PLL are POWERED OFF
///                                    ###
///               %unsigned 4  avPllIntpi_A              0x0
///                                    ###
///                                    * Interpolator current setting for different frequency
///                                    ###
///               %unsigned 2  avPllVddr1p45V_A          0x1
///                                    ###
///                                    * 1.45V regulator power supply selection
///                                    * 00:1.40V
///                                    * 01:1.45V
///                                    * 10:1.50V
///                                    * 11:1.55V
///                                    ###
///               %unsigned 4  avPllVddr0p9V_A           0x1
///                                    ###
///                                    * 0.9V Regulator Power Supply Setting.
///                                    ###
///               %unsigned 2  avPllVthVcoCal_A          0x1
///                                    ###
///                                    * VCO calibration threshold Voltage
///                                    * 00:0.9V
///                                    * 01:0.95V
///                                    * 10:1.0V
///                                    * 11:1.05V
///                                    ###
///               %unsigned 3  avPllKvcoExt_A            0x0
///                                    ###
///                                    * External KVCO setting.
///                                    * Use this only when not using calibration or during test mode
///                                    ###
///               %unsigned 1  avPllKvcoExtEn_A          0x0
///                                    ###
///                                    * External KVCO enable signal
///                                    * Enable KVCO_EXT[2:0] instead of calibrated KVCO
///                                    ###
///               %unsigned 4  avPllV2iExt_A             0xF
///                                    ###
///                                    * External V2I setting.
///                                    ###
///               %unsigned 1  avPllV2iExtEn_A           0x0
///                                    ###
///                                    * Enable external V2I setting
///                                    ###
///               %unsigned 3  avPllSpeed_A              0x0
///                                    ###
///                                    * Frequency	Speed[2:0]
///                                    * 1.08G<F<= 1.21G	[000]
///                                    * 1.21G<F<=1.4G	[001]
///                                    * 1.4G<F<=1.61G	[010]
///                                    * 1.61G<F<= 1.86G	[011]
///                                    * 1.86G<F<= 2G	[100]
///                                    * 2G<F<=2.22G	[101]
///                                    * F> 2.22G	[110]
///                                    ###
///               %unsigned 1  avPllClkDetEn_A           0x1
///                                    ###
///                                    * Enable internal clock detector.
///                                    * 0=disable
///                                    * 1=enable
///                                    ###
///               %%        5          # Stuffing bits...
///     # 0x00054 avPllCtl1            
///               %unsigned 6  avPllRefDiv_A             0x0
///                                    ###
///                                    * Reference frequency divider
///                                    * 00000 = divide by 1
///                                    * 00001 = divide by 2
///                                    * 00010 = divide by 4
///                                    * 00011 = divide by 3
///                                    ###
///               %unsigned 8  avPllFbDiv_A              0x59
///                                    ###
///                                    * PLL feedback divider.
///                                    * VCO frequency:
///                                    * FVCO=(FREF/REFDIV)*FBDIV
///                                    * FBDIV=(FBDIV [7:0])
///                                    ###
///               %unsigned 4  avPllIcp_A                0x2
///                                    ###
///                                    * PLL Charge Pump Current Selection
///                                    * 0000:10uA
///                                    * 0001:20uA
///                                    * 0010:30uA
///                                    * 0011:40uA
///                                    * 0100:50uA
///                                    * 0101:60uA
///                                    * 0110:70uA
///                                    * 0111:80uA
///                                    * 1000:90uA
///                                    * 1001:100uA
///                                    * 1010:110uA
///                                    * 1011:120uA
///                                    * 1100:130uA
///                                    * 1101:140uA
///                                    * 1110:150uA
///                                    * 1111:160uA
///                                    ###
///               %unsigned 1  avPllLoadCap_A            0x0
///                                    ###
///                                    * Load VCO cap
///                                    ###
///               %unsigned 1  avPllPllCaliStart_A       0x0
///                                    ###
///                                    * PLL calibration
///                                    * 1: start calibration
///                                    * 0:waiting
///                                    ###
///               %%        12         # Stuffing bits...
///     # 0x00058 avPllCtl2            
///               %unsigned 19 avPllFreqOffsetC1_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x0005C avPllCtl3            
///               %unsigned 19 avPllFreqOffsetC2_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x00060 avPllCtl4            
///               %unsigned 19 avPllFreqOffsetC3_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x00064 avPllCtl5            
///               %unsigned 19 avPllFreqOffsetC4_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x00068 avPllCtl6            
///               %unsigned 19 avPllFreqOffsetC5_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x0006C avPllCtl7            
///               %unsigned 19 avPllFreqOffsetC6_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x00070 avPllCtl8            
///               %unsigned 19 avPllFreqOffsetC7_A       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x00074 avPllCtl9            
///               %unsigned 19 avPllFreqOffsetC8_A       0x24D
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %unsigned 8  avPllFreqOffsetReadyC_A   0x0
///                                    ###
///                                    * Indicate FREQ_OFFSET_XX [18:0] at the input of INTP is ready
///                                    ###
///               %unsigned 2  avPllReserveC1_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC2_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x00078 avPllCtl10           
///               %unsigned 2  avPllReserveC3_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC4_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC5_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC6_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC7_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC8_A          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 8  avPllEnLpC_A              0x0
///                                    ###
///                                    * Enable low power mode
///                                    ###
///               %unsigned 7  avPllPuC_A                0x0
///                                    ###
///                                    * Power up control signal for the channels connected to PLL
///                                    * 0=power down
///                                    * 1=power on
///                                    ###
///               %%        5          # Stuffing bits...
///     # 0x0007C avPllCtl11           
///               %unsigned 7  avPllResetC_A             0x7F
///                                    ###
///                                    * External Interpolator reset signal.
///                                    * 0=normal work
///                                    * 1=reset
///                                    ###
///               %unsigned 3  avPllDivHdmiC1_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC2_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC3_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC4_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC5_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC6_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC7_A          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivAv1C1_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x00080 avPllCtl12           
///               %unsigned 3  avPllDivAv1C2_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C3_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C4_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C5_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C6_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C7_A           0x0
///                                    ###
///                                    * DIV_AV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_AV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 7  avPllDivAv2C1_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C2_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///     # 0x00084 avPllCtl13           
///               %unsigned 7  avPllDivAv2C3_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C4_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C5_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C6_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %%        4          # Stuffing bits...
///     # 0x00088 avPllCtl14           
///               %unsigned 7  avPllDivAv2C7_A           0x5
///                                    ###
///                                    * N=DIV_AV2[6:0]
///                                    ###
///               %unsigned 4  avPllDivAv3C1_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C2_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C3_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C4_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C5_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C6_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x0008C avPllCtl15           
///               %unsigned 4  avPllDivAv3C7_A           0x1
///                                    ###
///                                    * DIV_AV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_AV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 17 avPllPSync1C1_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        11         # Stuffing bits...
///     # 0x00090 avPllCtl16           
///               %unsigned 17 avPllPSync1C2_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00094 avPllCtl17           
///               %unsigned 17 avPllPSync1C3_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00098 avPllCtl18           
///               %unsigned 17 avPllPSync1C4_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x0009C avPllCtl19           
///               %unsigned 17 avPllPSync1C5_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000A0 avPllCtl20           
///               %unsigned 17 avPllPSync1C6_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000A4 avPllCtl21           
///               %unsigned 17 avPllPSync1C7_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000A8 avPllCtl22           
///               %unsigned 17 avPllPSync1C8_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000AC avPllCtl23           
///               %unsigned 17 avPllPSync2C1_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000B0 avPllCtl24           
///               %unsigned 17 avPllPSync2C2_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000B4 avPllCtl25           
///               %unsigned 17 avPllPSync2C3_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000B8 avPllCtl26           
///               %unsigned 17 avPllPSync2C4_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000BC avPllCtl27           
///               %unsigned 17 avPllPSync2C5_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000C0 avPllCtl28           
///               %unsigned 17 avPllPSync2C6_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000C4 avPllCtl29           
///               %unsigned 17 avPllPSync2C7_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x000C8 avPllCtl30           
///               %unsigned 17 avPllPSync2C8_A           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %unsigned 8  avPllEnDpllC_A            0x0
///                                    ###
///                                    * Enable/Disable DPLL
///                                    ###
///               %unsigned 1  avPllMasterSlaveB_A       0x1
///                                    ###
///                                    * Used to sync frequencies if using 2 PLLs.
///                                    * 1 ' higher frequency PLL
///                                    * 0 ' lower frequency PLL
///                                    ###
///               %unsigned 6  avPllTestAna_A            0x0
///                                    ###
///                                    * Analog test points selection.
///                                    * TEST_ANA [5] is the enable bit.
///                                    * TEST_ANA [4:0]
///                                    * 00000
///                                    * 00001 vddr20_a         2.0V
///                                    * 00010 vddra_a          1.7V
///                                    * 00011 vddr17_pfd_a    1.7V
///                                    * 00100 pll_lock_a     1.7V
///                                    * 00101 vddr17_intp_a   1.7V
///                                    * 00110 vddr10_a        1.0V
///                                    * 00111 vddr_fbdiv_a    1.0V
///                                    * 01000 vddr_refdiv_a   1.0V
///                                    * 01001 vddr_intp_a     1.0V
///                                    * 01010 vddr_lat_a       1.0V
///                                    * 01011 vddbuf_a        1.0V
///                                    * 01100 vddr20_b         2.0V
///                                    * 01101 vddra_b          1.7V
///                                    * 01110 avss              1.7V
///                                    * 01111 pll_lock_b       1.7V
///                                    * 10000 vddr17_intp_b   1.7V
///                                    * 10001 vddr10_b        1.0V
///                                    * 10010 vddr_fbdiv_b    1.0V
///                                    * 10011 vddr_refdiv_b   1.0V
///                                    * 10100 vddr_intp_b     1.0V
///                                    * 10101 vddr_lat_b       1.0V
///                                    * 10110 vddbuf_b        1.0V
///                                    * 10111 v1p0_vth         1.0V
///                                    * 11000 vddvcof2_a      1.0V
///                                    * 11001 vddvcof2_b      1.0V
///                                    * 11010 vcopfa
///                                    * 11011 vcopfb
///                                    * 11100 pbias_intpa
///                                    * 11101 nbias_intpa
///                                    * 11110 vddm      1.4-1.9V
///                                    * 11111 vddl       0.85 – 1.1V
///                                    * *INTERNAL_ONLY**
///                                    ###
///     # 0x000CC avPllCtl31           
///               %unsigned 4  avPllReservePll_A         0x0
///                                    ###
///                                    * PLL reserve registers
///                                    ###
///               %unsigned 1  avPllResetPll_B           0x1
///                                    ###
///                                    * 0
///                                    * De-asserted
///                                    * 1
///                                    * Asserted
///                                    * Reset PLL A
///                                    * Must be de-asserted after 10us from the time when PU is set to 1.
///                                    * Note: Firmware should first set PU/PU_PLLB
///                                    * then de-assert PLLA/B reset after 10us and then enable the video and audio clocks using the clk enable register.
///                                    ###
///               %unsigned 1  avPllPu_B                 0x0
///                                    ###
///                                    * Power up signal for AVPLL
///                                    * 0=power down
///                                    * 1=active
///                                    * When PU=0, all circuits including IVREF, INTP, REGULATOR and PLL are POWERED OFF
///                                    ###
///               %unsigned 4  avPllIntpi_B              0x0
///                                    ###
///                                    * Interpolator current setting for different frequency
///                                    ###
///               %unsigned 2  avPllVddr1p45V_B          0x1
///                                    ###
///                                    * 1.45V regulator power supply selection
///                                    * 00:1.40V
///                                    * 01:1.45V
///                                    * 10:1.50V
///                                    * 11:1.55V
///                                    ###
///               %unsigned 4  avPllVddr0p9V_B           0x1
///                                    ###
///                                    * 0.85V Regulator Power Supply Setting.
///                                    ###
///               %unsigned 2  avPllVthVcoCal_B          0x1
///                                    ###
///                                    * VCO calibration threshold Voltage
///                                    * 00:0.9V
///                                    * 01:0.95V
///                                    * 10:1.0V
///                                    * 11:1.05V
///                                    ###
///               %unsigned 3  avPllKvcoExt_B            0x0
///                                    ###
///                                    * External KVCO setting.
///                                    * Use this only when not using calibration or during test mode
///                                    ###
///               %unsigned 1  avPllKvcoExtEn_B          0x0
///                                    ###
///                                    * External KVCO enable signal
///                                    * Enable KVCO_EXT[2:0] instead of calibrated KVCO
///                                    ###
///               %unsigned 4  avPllV2iExt_B             0xF
///                                    ###
///                                    * External V2I setting.
///                                    ###
///               %unsigned 1  avPllV2iExtEn_B           0x0
///                                    ###
///                                    * Enable external V2I setting
///                                    ###
///               %unsigned 3  avPllSpeed_B              0x0
///                                    ###
///                                    * Frequency	Speed[2:0]
///                                    * 1.08G<F<= 1.21G	[000]
///                                    * 1.21G<F<=1.4G	[001]
///                                    * 1.4G<F<=1.61G	[010]
///                                    * 1.61G<F<= 1.86G	[011]
///                                    * 1.86G<F<= 2G	[100]
///                                    * 2G<F<=2.22G	[101]
///                                    * F> 2.22G	[110]
///                                    ###
///               %unsigned 1  avPllClkDetEn_B           0x1
///                                    ###
///                                    * Enable internal clock detector.
///                                    * 0=disable
///                                    * 1=enable
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x000D0 avPllCtl32           
///               %unsigned 6  avPllRefDiv_B             0x0
///                                    ###
///                                    * Reference frequency divider
///                                    * 00000 = divide by 1
///                                    * 00001 = divide by 2
///                                    * 00010 = divide by 4
///                                    * 00011 = divide by 3
///                                    ###
///               %unsigned 8  avPllFbDiv_B              0x41
///                                    ###
///                                    * PLL feedback divider.
///                                    * VCO frequency:
///                                    * FVCO=(FREF/REFDIV)*FBDIV
///                                    * FBDIV=(FBDIV [7:0])
///                                    ###
///               %unsigned 4  avPllIcp_B                0x2
///                                    ###
///                                    * PLL Charge Pump Current Selection
///                                    * 0000:10uA
///                                    * 0001:20uA
///                                    * 0010:30uA
///                                    * 0011:40uA
///                                    * 0100:50uA
///                                    * 0101:60uA
///                                    * 0110:70uA
///                                    * 0111:80uA
///                                    * 1000:90uA
///                                    * 1001:100uA
///                                    * 1010:110uA
///                                    * 1011:120uA
///                                    * 1100:130uA
///                                    * 1101:140uA
///                                    * 1110:150uA
///                                    * 1111:160uA
///                                    ###
///               %unsigned 1  avPllLoadCap_B            0x0
///                                    ###
///                                    * Load VCO cap
///                                    ###
///               %unsigned 1  avPllPllCaliStart_B       0x0
///                                    ###
///                                    * PLL calibration
///                                    * 1: start calibration
///                                    * 0:waiting
///                                    ###
///               %%        12         # Stuffing bits...
///     # 0x000D4 avPllCtl33           
///               %unsigned 19 avPllFreqOffsetC1_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000D8 avPllCtl34           
///               %unsigned 19 avPllFreqOffsetC2_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000DC avPllCtl35           
///               %unsigned 19 avPllFreqOffsetC3_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000E0 avPllCtl36           
///               %unsigned 19 avPllFreqOffsetC4_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000E4 avPllCtl37           
///               %unsigned 19 avPllFreqOffsetC5_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000E8 avPllCtl38           
///               %unsigned 19 avPllFreqOffsetC6_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000EC avPllCtl39           
///               %unsigned 19 avPllFreqOffsetC7_B       0x0
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %%        13         # Stuffing bits...
///     # 0x000F0 avPllCtl40           
///               %unsigned 19 avPllFreqOffsetC8_B       0x864D
///                                    ###
///                                    * Frequency offset to the output clock
///                                    ###
///               %unsigned 8  avPllFreqOffsetReadyC_B   0x0
///                                    ###
///                                    * Indicate FREQ_OFFSET_XX [18:0] at the input of INTP is ready
///                                    ###
///               %unsigned 2  avPllReserveC1_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC2_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x000F4 avPllCtl41           
///               %unsigned 2  avPllReserveC3_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC4_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC5_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC6_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC7_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 2  avPllReserveC8_B          0x0
///                                    ###
///                                    * Reserve registers for each channel
///                                    ###
///               %unsigned 8  avPllEnLpC_B              0x0
///                                    ###
///                                    * Enable low power mode
///                                    ###
///               %unsigned 7  avPllPuC_B                0x0
///                                    ###
///                                    * Power up control signal for the channels connected to PLL
///                                    * 0=power down
///                                    * 1=power on
///                                    ###
///               %%        5          # Stuffing bits...
///     # 0x000F8 avPllCtl42           
///               %unsigned 7  avPllResetC_B             0x7F
///                                    ###
///                                    * External Interpolator reset signal.
///                                    * 0=normal work
///                                    * 1=reset
///                                    ###
///               %unsigned 3  avPllDivHdmiC1_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC2_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC3_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC4_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC5_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC6_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivHdmiC7_B          0x0
///                                    ###
///                                    * DIV_HDMI[2] is enable signal
///                                    * 0 : disable HDMI divider channel
///                                    * 1 : enable HDMI divider channel
///                                    * DIV_HDMI[1:0] HDMI channel divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/4
///                                    * 11 : 1/6
///                                    ###
///               %unsigned 3  avPllDivAv1C1_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x000FC avPllCtl43           
///               %unsigned 3  avPllDivAv1C2_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C3_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C4_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C5_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C6_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 3  avPllDivAv1C7_B           0x0
///                                    ###
///                                    * DIV_BV1[2] is enable signal
///                                    * 0 : disable AV divider channel
///                                    * 1 : active AV divider channel
///                                    * DIV_BV1[1:0] c_div125 divider code
///                                    * 00 : bypass
///                                    * 01 : 1/2
///                                    * 10 : 1/5
///                                    * 11 : 1/5
///                                    ###
///               %unsigned 7  avPllDivAv2C1_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C2_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///     # 0x00100 avPllCtl44           
///               %unsigned 7  avPllDivAv2C3_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C4_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C5_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %unsigned 7  avPllDivAv2C6_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %%        4          # Stuffing bits...
///     # 0x00104 avPllCtl45           
///               %unsigned 7  avPllDivAv2C7_B           0x5
///                                    ###
///                                    * N=DIV_BV2[6:0]
///                                    ###
///               %unsigned 4  avPllDivAv3C1_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C2_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C3_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C4_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C5_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 4  avPllDivAv3C6_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x00108 avPllCtl46           
///               %unsigned 4  avPllDivAv3C7_B           0x1
///                                    ###
///                                    * DIV_BV3[3] is enable signal
///                                    * 0 : bypass c_x2_v1
///                                    * 1 : active c_x2_v1
///                                    * DIV_BV3_CX[2:0] is used when you need to divide .5
///                                    ###
///               %unsigned 17 avPllPSync1C1_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        11         # Stuffing bits...
///     # 0x0010C avPllCtl47           
///               %unsigned 17 avPllPSync1C2_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00110 avPllCtl48           
///               %unsigned 17 avPllPSync1C3_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00114 avPllCtl49           
///               %unsigned 17 avPllPSync1C4_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00118 avPllCtl50           
///               %unsigned 17 avPllPSync1C5_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x0011C avPllCtl51           
///               %unsigned 17 avPllPSync1C6_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00120 avPllCtl52           
///               %unsigned 17 avPllPSync1C7_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00124 avPllCtl53           
///               %unsigned 17 avPllPSync1C8_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 1 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00128 avPllCtl54           
///               %unsigned 17 avPllPSync2C1_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x0012C avPllCtl55           
///               %unsigned 17 avPllPSync2C2_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00130 avPllCtl56           
///               %unsigned 17 avPllPSync2C3_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00134 avPllCtl57           
///               %unsigned 17 avPllPSync2C4_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00138 avPllCtl58           
///               %unsigned 17 avPllPSync2C5_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x0013C avPllCtl59           
///               %unsigned 17 avPllPSync2C6_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00140 avPllCtl60           
///               %unsigned 17 avPllPSync2C7_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %%        15         # Stuffing bits...
///     # 0x00144 avPllCtl61           
///               %unsigned 17 avPllPSync2C8_B           0x1FFFF
///                                    ###
///                                    * Sync Divider 2 For DPLL
///                                    ###
///               %unsigned 8  avPllEnDpllC_B            0x0
///                                    ###
///                                    * Enable/Disable DPLL
///                                    ###
///               %unsigned 1  avPllMasterSlaveB_B       0x0
///                                    ###
///                                    * Used to sync frequencies if using 2 PLLs.
///                                    * 1 ' higher frequency PLL
///                                    * 0 ' lower frequency PLL
///                                    ###
///               %unsigned 6  avPllTestAna_B            0x0
///                                    ###
///                                    * Analog test points selection.
///                                    * TEST_ANA [5] is the enable bit.
///                                    * TEST_ANA [4:0]
///                                    * 00000
///                                    * 00001 vddr20_a         2.0V
///                                    * 00010 vddra_a          1.7V
///                                    * 00011 vddr17_pfd_a    1.7V
///                                    * 00100 pll_lock_a     1.7V
///                                    * 00101 vddr17_intp_a   1.7V
///                                    * 00110 vddr10_a        1.0V
///                                    * 00111 vddr_fbdiv_a    1.0V
///                                    * 01000 vddr_refdiv_a   1.0V
///                                    * 01001 vddr_intp_a     1.0V
///                                    * 01010 vddr_lat_a       1.0V
///                                    * 01011 vddbuf_a        1.0V
///                                    * 01100 vddr20_b         2.0V
///                                    * 01101 vddra_b          1.7V
///                                    * 01110 avss              1.7V
///                                    * 01111 pll_lock_b       1.7V
///                                    * 10000 vddr17_intp_b   1.7V
///                                    * 10001 vddr10_b        1.0V
///                                    * 10010 vddr_fbdiv_b    1.0V
///                                    * 10011 vddr_refdiv_b   1.0V
///                                    * 10100 vddr_intp_b     1.0V
///                                    * 10101 vddr_lat_b       1.0V
///                                    * 10110 vddbuf_b        1.0V
///                                    * 10111 v1p0_vth         1.0V
///                                    * 11000 vddvcof2_a      1.0V
///                                    * 11001 vddvcof2_b      1.0V
///                                    * 11010 vcopfa
///                                    * 11011 vcopfb
///                                    * 11100 pbias_intpa
///                                    * 11101 nbias_intpa
///                                    * 11110 vddm      1.4-1.9V
///                                    * 11111 vddl       0.85 - 1.1V
///                                    ###
///     # 0x00148 avPllCtl62           
///               %unsigned 4  avPllReservePll_B         0x0
///                                    ###
///                                    * PLL reserve registers
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x0014C pllStatus            (R-)
///               ###
///               * PLL Status register
///               ###
///               %unsigned 1  sysPllLock                0x0
///                                    ###
///                                    * 0 - PLL not locked
///                                    * 1 - PLL locked
///                                    ###
///               %unsigned 1  memPllLock                0x0
///                                    ###
///                                    * 0 - PLL not locked
///                                    * 1 - PLL locked
///                                    ###
///               %unsigned 1  cpu1PllLock               0x0
///                                    ###
///                                    * 0 - PLL not locked
///                                    * 1 - PLL locked
///                                    ###
///               %unsigned 1  avPllALock                0x0
///                                    ###
///                                    * 0 - PLL not locked
///                                    * 1 - PLL locked
///                                    ###
///               %unsigned 3  avPllAKvcoOut             
///                                    ###
///                                    * Internal KVCO setting for PLL
///                                    ###
///               %unsigned 1  avPllACaliDone            
///                                    ###
///                                    * 1: calibration is done or ready for calibration
///                                    * 0: calibration is in progress
///                                    * Note: Don't start calibration again if CALI_DONE is '0'
///                                    ###
///               %unsigned 1  avPllBLock                0x0
///                                    ###
///                                    * 0 - PLL not locked
///                                    * 1 - PLL locked
///                                    ###
///               %unsigned 3  avPllBKvcoOut             
///                                    ###
///                                    * Internal KVCO setting for PLL
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  avPllBCaliDone            
///                                    ###
///                                    * 1: calibration is done or ready for calibration
///                                    * 0: calibration is in progress
///                                    * Note: Don't start calibration again if CALI_DONE is '0'
///                                    ###
///               %unsigned 4  cpuPllResOut              0x0
///                                    ###
///                                    * CPU PLL reserve output
///                                    ###
///               %unsigned 4  memPllResOut              0x0
///                                    ###
///                                    * MEM PLL reserve output
///                                    ###
///               %unsigned 4  sysPllResOut              0x0
///                                    ###
///                                    * SYS PLL reserve output
///                                    ###
///               %%        7          # Stuffing bits...
///     @ 0x00150 clkEnable            (P-)
///               ###
///               * Clock enable register provides the option to switch 88DE3100 clocks OFF for power saving.
///               ###
///               %unsigned 1  sysClkEn                  0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 88DE3100 System Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  cfgClkEn                  0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 88DE3100 Configuration Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  pCubeClkEn                0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * vMeta pCube Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  vScopeClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * vMeta vScope Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gfxClkEn                  0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 2D Graphics clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  zspClkEn                  0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Audio DSP Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  perifClkEn                0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Peripheral Master Clock enable register
///                                                 * Note: This clock is master clock for all peripheral modules so disabling this will disable the clock to all the peripherals (Ethernet,PCI-E,SATA,USB,AHB-APB,pBridge,SDIO)
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gethCoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Ethernet Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  geth1CoreClkEn            0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Ethernet 1 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  sataCoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SATA Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  ahbApbCoreClkEn           0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * *INTERNAL_ONLY**
///                                                 * AHB-APB module (includes GPIO, Two wire Serial interface, Interrupt controller, Timers and SPI) Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  usb0CoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * USB0 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  usb1CoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * USB1 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  pBridgeCoreClkEn          0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * PBridge module Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  sdioCoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SDIO Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  sdio1CoreClkEn            0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * *INTERNAL_ONLY**
///                                                 * Note: Not used in BG2LPZ1
///                                                 * SDIO 1 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  drmFigoClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * DRM Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  nfcCoreClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Nand Flash Controller core clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  nfcEccClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Nand Flash Controller ECC clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  smemcCoreClkEn            0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * LBC clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  appClkEn                  0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * APP Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  vppSysClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * VPP System clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  audio0ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 7.1 Channel TX (Primary) audio Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  audio1ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 2-Channel TX (Secondary) audio clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  audio2ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * 2-channel RX audio input clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  audio3ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SPDIF TX clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  audioHdClkEn              0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * HDMI audio clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  video0ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * HD Video clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  video1ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SD Auxiliary video clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  video2ClkEn               0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SD Auxiliary video clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  PEX_mx_refclk_off         0x0
///                                    : ON                        0x0
///                                    : OFF                       0x1
///                                                 ###
///                                                 * PEX Phy reference off
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %%        1          # Stuffing bits...
///     @ 0x00154 clkSelect            (P-)
///               ###
///               * Clock Selection
///               ###
///               %unsigned 3  sysClkPllSel              0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * System clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  sysClkSel                 0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * System clock divider selection:
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  cpu0ClkPllSel             0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : MEMPLL                    0x4
///                                                 ###
///                                                 * CPU clock PLL source selection register.
///                                                 * 0-3: Reserved
///                                                 * 4: MEMPLL
///                                                 * 5-7: Reserved
///                                                 * Note: In BG2 only MEMPLL is the supported option as alternative clock source for CPU Clock
///                                                 ###
///               %unsigned 3  cpu0ClkSel                0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * CPU clock source Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 2  cpu1ClkPllSel             0x0
///                                    : AVPllA5                   0x0
///                                    : AVPllA6                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                                 ###
///                                                 * CPU1 PLL clock source selection register
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 3  cpu1ClkSel                0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * CPU1 source Clock divider Selection
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 3  drmFigoClkPllSel          0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * DRM clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  drmFigoClkSel             0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * DRM Clock divider Selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  cfgClkPllSel              0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Configuration clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  cfgClkSel                 0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Configuration clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  gfxClkPllSel              0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Graphics clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///     # 0x00158 clkSelect1           
///               %unsigned 3  gfxClkSel                 0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Graphics Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  zspClkPllSel              0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Audio DSP clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  zspClkSel                 0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Audio DSP clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  perifClkPllSel            0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Peripheral clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  perifClkSel               0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Peripheral clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  pCubeClkPllSel            0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * vMeta pCube clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  pCubeClkSel               0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * vMeta pCube clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  vScopeClkPllSel           0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * vMeta vScope clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  vScopeClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * vMeta vScopeClk divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  nfcEccClkPllSel           0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Nand Flash Controller ECC clock selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %%        2          # Stuffing bits...
///     # 0x0015C clkSelect2           
///               %unsigned 3  nfcEccClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Nand Flash Controller ECC clock divider selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  vppSysClkPllSel           0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * VPP system clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  vppSysClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * VPP system clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  appClkPllSel              0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * APP clock source selection register
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL A[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 3  appClkSel                 0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * APP clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 1  audioFastExtClkSel        0x0
///                                    ###
///                                    * Select ACLKI [0]
///                                    * 0
///                                    * Select ACLKI [1]
///                                    * 1
///                                    * Register to select between the ACLKI clocks as External audio clock source for Fast Audio clock
///                                    * We don't have both ACLKI[0] & ACLKI[1] in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  audioFastClkSel           0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * Audio Fast Clock Selection between PLL/EXT Clock
///                                                 * We don't have external audio clocks in BG2.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 3  audio0ClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * 7.1 Channel TX audio clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  audio2ClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * 2-channel RX input audio clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 3  audio3ClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * SPDIF TX clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 1  audioHdExtClkSel          0x0
///                                    ###
///                                    * Select ACLKI [0]
///                                    * 0
///                                    * Select ACLKI [1]
///                                    * 1
///                                    * Register to select between the ACLKI clocks as External audio clock source for Audio HDMI Clock
///                                    * We don't have both ACLKI[0] & ACLKI[1] in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  audioHdClkSel             0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * Audio HDMI Clock Selection between PLL/EXT Clock
///                                                 * We don't have external audio clocks in BG2.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  audio1ExtClkSel           0x1
///                                    ###
///                                    * Select ACLKI [0]
///                                    * 0
///                                    * Select ACLKI [1]
///                                    * 1
///                                    * Register to select between the ACLKI clocks as External audio clock source for MCLK Secondary
///                                    * We don't have both ACLKI[0] & ACLKI[1] in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  audio1ClkPllSel           0x0
///                                    : AVPllB3                   0x0
///                                    : AVPllA3                   0x1
///                                                 ###
///                                                 * Register to select the PLL clock for 2-channel TX audio
///                                                 * 0 - AVPllB3
///                                                 * 1 - AVPllA3
///                                                 ###
///               %unsigned 1  audio1SrcClkSel           0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * Register to select the clock source for Audio Secondary MCLK
///                                                 * We don't have external audio clocks in BG2.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %%        1          # Stuffing bits...
///     # 0x00160 clkSelect3           
///               %unsigned 3  audio1ClkSel              0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * 2-Channel TX audio clock divider selection register
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %unsigned 1  video0ExtClkSel           0x0
///                                    ###
///                                    * Select VCLKI [0]
///                                    * 0
///                                    * Select VCLKI [1]
///                                    * 1
///                                    * Register to select between the VCLKI clocks as external video clock source for HDMI video (video0) Clock
///                                    * We only have VCLKI[0] option in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  video0ClkSel              0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * HDMI video (video0) clock Selection between PLL/EXT Clock
///                                                 * 0 : Use PLL
///                                                 * 1 : Use External clocks
///                                                 ###
///               %unsigned 1  video1ExtClkSel           0x0
///                                    ###
///                                    * Select VCLKI [0]
///                                    * 0
///                                    * Select VCLKI [1]
///                                    * 1
///                                    * Register to select between the VCLKI clocks as external video clock source for secondary video (video1) Clock
///                                    * We only have VCLKI[0] option in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  video1ClkSel              0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * Secondary video (video1) Clock Selection between PLL/EXT Clock
///                                                 * 0 : Use PLL
///                                                 * 1 : Use External clocks
///                                                 ###
///               %unsigned 1  video1ClkPllSel           0x0
///                                    : AVPllA2                   0x0
///                                    : AVPllB2                   0x1
///                                                 ###
///                                                 * Register to select the PLL clock source for secondary video (video1) Clock
///                                                 * 0 - AVPLLA2
///                                                 * 1 - AVPLLB2
///                                                 ###
///               %unsigned 1  video2ExtClkSel           0x0
///                                    ###
///                                    * Select VCLKI [0]
///                                    * 0
///                                    * Select VCLKI [1]
///                                    * 1
///                                    * Register to select between the VCLKI clocks as External video clock source for SD auxiliary video (video2) Clock
///                                    * We only have VCLKI[0] option in BG2.
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  video2ClkSel              0x0
///                                    : pllClk                    0x0
///                                    : extClk                    0x1
///                                                 ###
///                                                 * Video2 Clock Selection between PLL/EXT Clock
///                                                 * 0 : Use PLL
///                                                 * 1 : Use External clocks
///                                                 ###
///               %unsigned 1  video2ClkPllSel           0x0
///                                    : AVPllB1                   0x0
///                                    : AVPllA5                   0x1
///                                                 ###
///                                                 * Register to select the PLL clock source for SD auxiliary video (video2) Clock
///                                                 * 0 - AVPLLB1
///                                                 * 1 - AVPLLA5
///                                                 ###
///               %%        21         # Stuffing bits...
///     @ 0x00164 ClkSwitch            (P-)
///               ###
///               * Clock Switch register. This register is used to select clock between:
///               * i)   PLL clock or reference clock (PLL Bypass option)
///               * ii) Select SYSPLL or other PLL (AVPLL) as clock source
///               * iii) Select Divided or non-divide clock
///               ###
///               %unsigned 1  sysPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * System PLL Bypass switch
///                                                 * 0: Use PLL
///                                                 * 1: Bypass PLL
///                                                 ###
///               %unsigned 1  memPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * Memory PLL Bypass switch
///                                                 * 0: Use PLL
///                                                 * 1: Bypass PLL
///                                                 ###
///               %unsigned 1  cpu1PLLSWBypass           0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * CPU PLL Bypass switch
///                                                 * 0: Use PLL
///                                                 * 1: Bypass PLL
///                                                 ###
///               %unsigned 1  sysClkPllSwitch           0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  sysClkSwitch              0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * System clock source switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  sysClkD3Switch            0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * System clock 1/3 clock source switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  cpu0ClkPllSwitch          0x0
///                                    : CPUPLL                    0x0
///                                    : MEMPLL                    0x1
///                                                 ###
///                                                 * Switch to select between CPUPLL or MEMPLL as a clock source
///                                                 * 0 : CPUPLL
///                                                 * 1: MEMPLL
///                                                 ###
///               %unsigned 1  cpu0ClkSwitch             0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * CPU clock source switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  cpu0ClkD3Switch           0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * CPU clock 1/3 clock source switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  cpu1ClkPllSwitch          0x0
///                                    : CPU1PLL                   0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between CPU1PLL or AVPLL as a clock source for CPU1
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  cpu1ClkSwitch             0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Switch to select between Divided clock or non divided clock (divide by 1 Source Clk)
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  cpu1ClkD3Switch           0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Switch to select between Divide by 3 or Non divide by 3 Clocks (div1/2/4/6/8/12)
///                                                 * NOT VALID FOR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  drmFigoClkPllSwitch       0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  drmFigoClkSwitch          0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * For DRM clock source switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  drmFigoClkD3Switch        0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * For DRM 1/3 clock source switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  cfgClkPllSwitch           0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  cfgClkSwitch              0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Configuration clock source switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  cfgClkD3Switch            0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Configuration clock divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  gfxClkPllSwitch           0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  gfxClkSwitch              0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Graphics 2D clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  gfxClkD3Switch            0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Graphics 2D divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  zspClkPllSwitch           0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  zspClkSwitch              0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Audio DSP clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  zspClkD3Switch            0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Audio DSP divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  perifClkPllSwitch         0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  perifClkSwitch            0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Peripheral clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  perifClkD3Switch          0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Peripheral divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  pCubeClkPllSwitch         0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  pCubeClkSwitch            0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * pCube clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  pCubeClkD3Switch          0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * pCube clock divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  vScopeClkPllSwitch        0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  vScopeClkSwitch           0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * vScope clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///     # 0x00168 ClkSwitch1           
///               %unsigned 1  vScopeClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * vScope clock divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  nfcEccClkPllSwitch        0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  nfcEccClkSwitch           0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Nand Flash Controller (NFC) ECC clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  nfcEccClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * NFC divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  vppSysClkPllSwitch        0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  vppSysClkSwitch           0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * VPP system clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  vppSysClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * VPP System divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  appClkPllSwitch           0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  appClkSwitch              0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * APP clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  appClkD3Switch            0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * APP clock divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  audio0ClkSwitch           0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * 7.1 Channel TX audio (audio0) clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  audio0ClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * 7.1 Channel TX audio (audio0) divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  audio1ClkSwitch           0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * 2 Channel TX audio (audio1) clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  audio1ClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * 2 Channel TX audio (audio1) divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  audio2ClkSwitch           0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * 2 Channel RX audio (audio2) clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  audio2ClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * 2 Channel RX audio (audio2) divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 1  audio3ClkSwitch           0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * SPDIF TX audio (audio3) clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  audio3ClkD3Switch         0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * SPDIF TX audio (audio3) divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %%        14         # Stuffing bits...
///     @ 0x0016C PadSelect            (P-)
///               ###
///               * IO Pad Selection
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  GBL_PDB                   0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * For Global Group (VDD_IO_1)
///                                                 ###
///               %unsigned 1  NAND_PDB                  0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * For NAND Group (VDD_IO_8)
///                                                 ###
///               %unsigned 1  SD0_PDB                   0x0
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * For SD0 Group (VDD_IO_5)
///                                                 ###
///               %unsigned 1  SD1_PDB                   0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  SPI_PDB                   0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * For SPI Group (VDD_IO_7)
///                                                 ###
///               %unsigned 1  CLK0_V18EN                0x1
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  DVIO0_V18EN               0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  GBL_V18EN                 0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * For Global Group (VDD_IO_1)
///                                                 ###
///               %unsigned 1  SPI0_V18EN                0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 * SPI Group Fixed at 3.3V
///                                                 ###
///               %unsigned 1  SD0_V18EN                 0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * For SD0 Group (VDD_IO_5)
///                                                 ###
///               %unsigned 1  SD10_V18EN                0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  CLK0_V25EN                0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  DVIO0_V25EN               0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  TS0_V25EN                 0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  SPI0_V25EN                0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 * SPI Group Fixed at 3.3V
///                                                 ###
///               %unsigned 1  U6_V25EN                  0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  U7_V25EN                  0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  U8_V25EN                  0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  W14_V25EN                 0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  DVU0_V25EN                0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  GBL_V25EN                 0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * For Global Group (VDD_IO_1)
///                                                 ###
///               %unsigned 1  SD0_V25EN                 0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * For SD0 Group (VDD_IO_5)
///                                                 ###
///               %unsigned 1  DVIO_OEN                  0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * For DVIO output enable; Active high
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 3  CLK0_ZN                   0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 3  CLK0_ZP                   0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 3  DVIO0_ZN                  0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///     # 0x00170 PadSelect1           
///               %unsigned 3  DVIO0_ZP                  0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 4  ND0_ZN                    0x0
///                                    ###
///                                    * For NAND Group (VDD_IO_8)
///                                    ###
///               %unsigned 4  ND0_ZP                    0x0
///                                    ###
///                                    * For NAND Group (VDD_IO_8)
///                                    ###
///               %unsigned 4  GBL_ZN                    0x0
///                                    ###
///                                    * For Global Group (VDD_IO_1)
///                                    ###
///               %unsigned 4  GBL_ZP                    0x0
///                                    ###
///                                    * For Global Group (VDD_IO_1)
///                                    ###
///               %unsigned 4  SPI0_ZN                   0x0
///                                    ###
///                                    * For SPI Group (VDD_IO_7)
///                                    ###
///               %unsigned 4  SPI0_ZP                   0x0
///                                    ###
///                                    * For SPI Group (VDD_IO_7)
///                                    ###
///               %unsigned 4  SD0_ZN                    0x0
///                                    ###
///                                    * For SD0 Group (VDD_IO_5)
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x00174 PadSelect2           
///               %unsigned 4  SD0_ZP                    0x0
///                                    ###
///                                    * For SD0 Group (VDD_IO_5)
///                                    ###
///               %unsigned 4  SD10_ZN                   0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 4  SD10_ZP                   0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  DVIO_1_V18EN              0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  I2S_V18EN                 0x0
///                                    : V1P8                      0x1
///                                    : V3R3                      0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  DVIO_1_V25EN              0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 1  I2S_V25EN                 0x0
///                                    : Enable                    0x1
///                                    : Disable                   0x0
///                                                 ###
///                                                 * Not used in BG2CD
///                                                 ###
///               %unsigned 3  DVIO_1_ZN                 0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 3  DVIO_1_ZP                 0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 3  I2S_ZN                    0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 3  I2S_ZP                    0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %%        4          # Stuffing bits...
///     @ 0x00178 ResetTrigger         (RW-)
///               ###
///               * Software reset trigger register. Using this register software can reset particular module of the chip. Writing 1 to this register will trigger 16 reference clock (640ns) reset to the corresponding module (except for PCIe for PCIe user has all the reset duration control so writing 1 will trigger the reset and writing 0 will de-assert the reset).
///               * In the following register:
///               * 0 : No Reset
///               * 1 : Reset
///               ###
///               %unsigned 1  chipReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in the chip.
///                                                 * Note: When this bit is set then there is no reset sequence followed to de-assert the reset to CPU in the end as done in case of boot-up. So using this bit is not suggested as CPU will come out of the reset earlier than modules which are running on slow clocks as compared to CPU.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  audio0ClkReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset 7.1 channel TX audio
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  audio1ClkReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset 2 channel TX audio
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  audio2ClkReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset 2 channel RX audio
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  audio3ClkReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset SPDIF TX audio
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  audioHdClkReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset HDMI TX audio
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  sysPllSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * SYSPLL reset
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  memPllSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * MEMPLL reset
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  cpu1PllSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * CPU PLL Reset
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  cpu0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset CPU
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  cpu1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in CPU1 module.
///                                                 * NOT VALID OFR BG2
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset memory controller
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  gfxSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Graphics 2D
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  zspSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Audio DSP
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  avioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset whole AVIO unit
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  perifSyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset whole Peripheral unit
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  gethSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral Ethernet module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  sataSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral SATA module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  geth1SyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral Ethernet 1 module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  ahbApbSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral AHB-APB module (includes GPIO, Two wire Serial interface, Interrupt controller, Timers and SPI)
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  nanfSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral NAND Flash module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  smemcSyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral LBC module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  drmSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral DRM module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  usb0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB0 module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  usb1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB1 module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  pBridgeSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral pBridge module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  vppSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset AVIO VPP module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  vipSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset AVIO VIP module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  appSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset AVIO APP module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  sdioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral SDIO module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  sdio1SyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * *INTERNAL_ONLY**
///                                                 * Note: Not used in BG2LPZ1
///                                                 * Reset peripheral SDIO 1 module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///               %unsigned 1  hdmirxSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset HDMI RX module
///                                                 * 0 : No Reset
///                                                 * 1 : Reset
///                                                 ###
///     @ 0x0017C ResetStatus          (RW-)
///               ###
///               * Reset Status register indicates whether reset is triggered or not to the corresponding module.
///               * 0 : Reset not issued
///               * 1 : Reset issued
///               * Note: Software need to write 0 to clear this register.
///               ###
///               %unsigned 1  ChipResetStatus           0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * **INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  wd0Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 0 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd1Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 1 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd2Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 2 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  audio0ClkResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * 7.1 channel TX audio reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  audio1ClkResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * 2 channel TX audio reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  audio2ClkResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * 2 channel RX audio reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  audio3ClkResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * SPDIF TX audio reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  audioHdClkResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * HDMI TX audio reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sysPllSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * SYSPLL reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  memPllSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * MEMPLL reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  cpu1PllSyncResetStatus    0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * CPU PLL reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  avPllASyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVPLL A reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  avPllBSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVPLL B reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  cpu0SyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * CPU reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  cpu1SyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Memory controller reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  gfxSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * 2D Graphics reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  zspSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Audio DSP reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  avioSyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVIO unit reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  perifSyncResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral unit reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  gethSyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral Ethernet module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  geth1SyncResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral Ethernet 1 module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sataSyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral SATA module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  ahbApbSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral AHB-APB module (includes GPIO, Two wire Serial interface, Interrupt controller, Timers and SPI) reset status:
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  nanfSyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral NAND Flash module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  smemcSyncResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral LBC module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  drmSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral DRM module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  usb0SyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral USB0 module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  usb1SyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral USB1 module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  pBridgeSyncResetStatus    0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral pBridge module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  vppSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVIO VPP module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///     # 0x00180 ResetStatus1         
///               %unsigned 1  vipSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVIO VIP module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  appSyncResetStatus        0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * AVIO APP module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sdioSyncResetStatus       0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Peripheral SDIO module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sdio1SyncResetStatus      0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * *INTERNAL_ONLY**
///                                                 * Note: Not used in BG2LPZ1
///                                                 * Peripheral SDIO 1 module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  hdmirxSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * HDMI RX module reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        27         # Stuffing bits...
///     @ 0x00184 sw_generic0          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg0                    0x0
///     @ 0x00188 sw_generic1          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg1                    0x0
///     @ 0x0018C sw_generic2          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg2                    0x0
///     @ 0x00190 sw_generic3          (P-)
///               ###
///               * Generic software register. This register can be reset only by PAD reset.
///               ###
///               %unsigned 32 swReg3                    0x0
///     @ 0x00194 ChipCntl0            (P-)
///               ###
///               * Misc control registers for Berlin.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 2  dCacheCfgCPU0             0x3
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 2  iCacheCfgCPU0             0x3
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 2  dCacheCfgCPU1             0x3
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 2  iCacheCfgCPU1             0x3
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 1  cg_bpass0Cpu0             0x1
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 1  cg_bpass0Cpu1             0x1
///                                    ###
///                                    * Reserved, not used.
///                                    ###
///               %unsigned 1  wfiJtagClkEn              0x1
///                                    : RUNNING                   0x1
///                                    : FREEZE                    0x0
///                                                 ###
///                                                 * This is used to control the JTAG clock during CPU sleep mode.
///                                                 * 1’b1 means the CPU JTAG clock is NOT shut-down during sleep
///                                                 * 1’b0 is to shut-down JTAG clock in sleep mode to save power.
///                                                 ###
///               %%        21         # Stuffing bits...
///     @ 0x00198 ChipCntl1            (P-)
///               ###
///               * Misc control registers for Berlin. This register can be reset only by PAD reset.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 2  bpm_wtc                   0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  bpm_rtc                   0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl0data_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl0data_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl0tag_wtc               0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl0tag_rtc               0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl1data_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl1data_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl1tag_wtc               0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  icl1tag_rtc               0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1data_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1data_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1tag_wtc               0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1tag_rtc               0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1state_wtc             0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1state_rtc             0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///     # 0x0019C ChipCntl11           
///               %unsigned 2  dcl1attr_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1attr_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1fifo_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl1fifo_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl0data_wtc              0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl0data_rtc              0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl0tag_wtc               0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  dcl0tag_rtc               0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  l2c_dataram_wtc           0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_dataram_rtc           0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_dirtyram_wtc          0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  l2c_dirtyram_rtc          0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_lockram_wtc           0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  l2c_lockram_rtc           0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %%        1          # Stuffing bits...
///     # 0x001A0 ChipCntl12           
///               %unsigned 2  l2c_eccram_wtc            0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_eccram_rtc            0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_tagram_wtc            0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_tagram_rtc            0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_tzram_wtc             0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  l2c_tzram_rtc             0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 3  l2c_validram_wtc          0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  l2c_validram_rtc          0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  mmu_wtc                   0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  mmu_rtc                   0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  sf_wtc                    0x1
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %unsigned 2  sf_rtc                    0x2
///                                    ###
///                                    * CPU memory timing controls
///                                    *  
///                                    *  
///                                    ###
///               %%        3          # Stuffing bits...
///     @ 0x001A4 RWTC_avio31to0       (P)
///               %unsigned 32 value                     0x999966AA
///                                    ###
///                                    * RTWC [31:0] value for AVIO
///                                    * *INTERNAL_ONLY**
///                                    ###
///     @ 0x001A8 RWTC_avio41to32      (P)
///               %unsigned 10 value                     0x35A
///                                    ###
///                                    * RTWC [43:32] value for AVIO
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x001AC RWTC_gfx2D31to0      (P)
///               %unsigned 32 value                     0x999966AA
///                                    ###
///                                    * RTWC [31:0] value for gfx2D
///                                    * *INTERNAL_ONLY**
///                                    ###
///     @ 0x001B0 RWTC_gfx2D41to32     (P)
///               %unsigned 10 value                     0x35A
///                                    ###
///                                    * RTWC [43:32] value for gfx2D
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x001B4 RWTC_gfx3D31to0      (P)
///               %unsigned 32 value                     0x999966AA
///                                    ###
///                                    * RTWC [31:0] value for Perif
///                                    * *INTERNAL_ONLY**
///                                    ###
///     @ 0x001B8 RWTC_gfx3D41to32     (P)
///               %unsigned 10 value                     0x35A
///                                    ###
///                                    * RWTC [43:32] value for Perif
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x001BC RWTC_soc31to0        (P)
///               %unsigned 32 value                     0x999966AA
///                                    ###
///                                    * RTWC [31:0] value for SoC
///                                    * *INTERNAL_ONLY**
///                                    ###
///     @ 0x001C0 RWTC_soc41to32       (P)
///               %unsigned 10 value                     0x35A
///                                    ###
///                                    * RTWC [43:32] value for SoC
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x001C4 RWTC_vPro31to0       (P)
///               %unsigned 32 value                     0x999966AA
///                                    ###
///                                    * RTWC [31:0] value for vPro
///                                    * *INTERNAL_ONLY**
///                                    ###
///     @ 0x001C8 RWTC_vPro41to32      (P)
///               %unsigned 10 value                     0x35A
///                                    ###
///                                    * RTWC [43:32] value for vPro
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x001CC ProductId            (R-)
///               ###
///               * Product ID register
///               ###
///               %unsigned 32 Id                        0x3108B11
///                                    ###
///                                    * 88DE3150 Product ID:
///                                    * [31:28]     : Revision Id (0x0)/P
///                                    * [27:12]     : Part Number (0x3108)
///                                    * [11:1]       : Manufacture Id (0x588)
///                                    * [0]            : Reserved (0x1)
///                                    ###
///     @ 0x001D0 ProductId_ext        (R-)
///               ###
///               * 88DE3100 Product ID Extension
///               ###
///               %unsigned 8  ID_EXT                    0x0
///                                    ###
///                                    * ID extension value
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x001D4 FPGAR                (R-)
///               ###
///               * FPGA Revision ID Read only register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGAR                     0xB3A9FA72
///                                    ###
///                                    * FPGA Revision ID register
///                                    ###
///     @ 0x001D8 FPGARW               (RW)
///               ###
///               * FPGA General Purpose RW register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGARW                    0x0
///                                    ###
///                                    * FPGA General purpose RW register
///                                    ###
///     @ 0x001DC RingOscCtl           (RW)
///               ###
///               * Ring Oscillator control register
///               * *INTERNAL_ONLY**
///               * Note: The below register is not used in BG2LPZ1. All the DRO's are controlled using single DRO enable and DRO counter registers.
///               ###
///               %unsigned 1  centerInit                0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  avioTopInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  avioBotInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  usbTopInit                0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  cpu1TopInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  cpu0TopInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  cpuBotInit                0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  topRiteInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  midRiteInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///               %unsigned 1  botRiteInit               0x0
///                                    : OFF                       0x0
///                                    : ON                        0x1
///                                                 ###
///                                                 * Ring Oscillator on/off control
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x001E0 PLLBypsBootStrapEn   (P-)
///               ###
///               * PLL Bypass boot strap control register . This register is used to enable/disable the PLL bypass option using boot strap.
///               ###
///               %unsigned 1  sysPLLBypsEn              0x1
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * System PLL Bypass control:
///                                                 * 0 : Disable bootstrap Bypass
///                                                 * 1 : Allow bootstrap Bypass
///                                                 ###
///               %unsigned 1  memPLLBypsEn              0x1
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * Memory PLL Bypass control:
///                                                 * 0 : Disable bootstrap Bypass
///                                                 * 1 : Allow bootstrap Bypass
///                                                 ###
///               %unsigned 1  cpu1PLLBypsEn             0x1
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * CPU PLL Bypass control:
///                                                 * 0 : Disable bootstrap Bypass
///                                                 * 1 : Allow bootstrap Bypass
///                                                 ###
///               %%        29         # Stuffing bits...
///     @ 0x001E4 IO_CALIBRATE_IN      (P)
///               ###
///               * Input for IO Calibration cell, PTO_PADXHSNPR_VDD_75. This register is for HW read and SW write.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  DO                        0x0
///                                    : NMOS                      0x0
///                                    : PMOS                      0x1
///               %unsigned 1  CAL_EN                    0x0
///                                    : DISABLE                   0x0
///                                    : ENABLE                    0x1
///               %unsigned 3  ZP_CAL                    0x3
///               %unsigned 3  ZN_CAL                    0x3
///               %unsigned 3  RON_ADJ                   0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  TSI_CAL_N_EN              0x0
///               %unsigned 1  TSI_CAL_P_EN              0x0
///               %unsigned 3  TSI_ODR                   0x0
///               %unsigned 1  TSI_ODR_EN                0x0
///               %unsigned 4  TSI_ZN                    0x0
///               %unsigned 4  TSI_ZP                    0x0
///               %unsigned 4  TSI_ZP_AFT_CAL            0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  NAND_CAL_N_EN             0x0
///               %unsigned 1  NAND_CAL_P_EN             0x0
///               %%        1          # Stuffing bits...
///     # 0x001E8 IO_CALIBRATE_IN1     
///               %unsigned 3  NAND_ODR                  0x0
///               %unsigned 1  NAND_ODR_EN               0x0
///               %unsigned 4  NAND_ZN                   0x0
///               %unsigned 4  NAND_ZP                   0x0
///               %unsigned 4  NAND_ZP_AFT_CAL           0x0
///                                    ###
///                                    * Input of NAND Calibration (VDD_IO_8)
///                                    ###
///               %unsigned 1  SPI_CAL_N_EN              0x0
///               %unsigned 1  SPI_CAL_P_EN              0x0
///               %unsigned 3  SPI_ODR                   0x0
///               %unsigned 1  SPI_ODR_EN                0x0
///               %unsigned 4  SPI_ZN                    0x0
///               %unsigned 4  SPI_ZP                    0x0
///               %%        2          # Stuffing bits...
///     # 0x001EC IO_CALIBRATE_IN2     
///               %unsigned 4  SPI_ZP_AFT_CAL            0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  SD0_CAL_N_EN              0x0
///               %unsigned 1  SD0_CAL_P_EN              0x0
///               %unsigned 3  SD0_ODR                   0x0
///               %unsigned 1  SD0_ODR_EN                0x0
///               %unsigned 4  SD0_ZN                    0x0
///               %unsigned 4  SD0_ZP                    0x0
///               %unsigned 4  SD0_ZP_AFT_CAL            0x0
///                                    ###
///                                    * Input of SD0 Calibration (VDD_IO_5)
///                                    ###
///               %unsigned 1  SD1_CAL_N_EN              0x0
///               %unsigned 1  SD1_CAL_P_EN              0x0
///               %unsigned 3  SD1_ODR                   0x0
///               %unsigned 1  SD1_ODR_EN                0x0
///               %unsigned 4  SD1_ZN                    0x0
///     # 0x001F0 IO_CALIBRATE_IN3     
///               %unsigned 4  SD1_ZP                    0x0
///               %unsigned 4  SD1_ZP_AFT_CAL            0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  DVIO_1_DO                 0x0
///                                    : NMOS                      0x0
///                                    : PMOS                      0x1
///               %unsigned 1  DVIO_1_CAL_EN             0x0
///                                    : DISABLE                   0x0
///                                    : ENABLE                    0x1
///               %unsigned 3  DVIO_1_ZP_CAL             0x3
///               %unsigned 3  DVIO_1_ZN_CAL             0x3
///               %unsigned 3  DVIO_1_RON_ADJ            0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  I2S_DO                    0x0
///                                    : NMOS                      0x0
///                                    : PMOS                      0x1
///               %unsigned 1  I2S_CAL_EN                0x0
///                                    : DISABLE                   0x0
///                                    : ENABLE                    0x1
///               %unsigned 3  I2S_ZP_CAL                0x3
///               %unsigned 3  I2S_ZN_CAL                0x3
///               %unsigned 3  I2S_RON_ADJ               0x0
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x001F4 IO_CALBRATE_OUT      (R-)
///               ###
///               * Output for IO Calibration cell, PTO_PADXHSNPR_VDD_75. This register is for HW write and SW read.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  INC                       
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  TSI_CAL_N_INC             
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  TSI_CAL_P_INC             
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  SD0_CAL_N_INC             
///                                    ###
///                                    * Output of Calibration (VDD_IO_5)
///                                    ###
///               %unsigned 1  SD0_CAL_P_INC             
///                                    ###
///                                    * Output of Calibration (VDD_IO_5)
///                                    ###
///               %unsigned 1  SD1_CAL_N_INC             
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  SD1_CAL_P_INC             
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  NAND_CAL_N_INC            
///                                    ###
///                                    * Output of Calibration (VDD_IO_8)
///                                    ###
///               %unsigned 1  NAND_CAL_P_INC            
///                                    ###
///                                    * Output of Calibration (VDD_IO_8)
///                                    ###
///               %unsigned 1  DVIO_1_INC                
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %unsigned 1  I2S_INC                   
///                                    ###
///                                    * Not used in BG2CD
///                                    ###
///               %%        21         # Stuffing bits...
///     @ 0x001F8 SECURE_SCAN_EN       (RW)
///               ###
///               * Enable secure scan, should write 1 to it immediately during boot up to disable scan
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  SET                       0x0
///                                    ###
///                                    * 1: scan is disabled
///                                    * 0: scan is enabled
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x001FC NandWPn              (RW)
///               ###
///               * NAND Write Protect pin control register.
///               ###
///               %unsigned 1  Sel                       0x1
///                                    ###
///                                    * 0 : Write protected
///                                    * 1: Not Write Protected
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00200 RingCntCntl          (RW)
///               ###
///               * **INTERNAL_ONLY**
///               * Note: The below register is not used in BG2LPZ1. All the DRO's are controlled using single DRO enable and DRO counter registers.
///               ###
///               %unsigned 1  centerStart               0x0
///               %unsigned 1  centerStop                0x0
///               %unsigned 1  avioTopStart              0x0
///               %unsigned 1  avioTopStop               0x0
///               %unsigned 1  avioBotStart              0x0
///               %unsigned 1  avioBotStop               0x0
///               %unsigned 1  usbTopStart               0x0
///               %unsigned 1  usbTopStop                0x0
///               %unsigned 1  cpu1TopStart              0x0
///               %unsigned 1  cpu1TopStop               0x0
///               %unsigned 1  cpu0TopStart              0x0
///               %unsigned 1  cpu0TopStop               0x0
///               %unsigned 1  cpuBotStart               0x0
///               %unsigned 1  cpuBotStop                0x0
///               %unsigned 1  topRiteStart              0x0
///               %unsigned 1  topRiteStop               0x0
///               %unsigned 1  midRiteStart              0x0
///               %unsigned 1  midRiteStop               0x0
///               %unsigned 1  botRiteStart              0x0
///               %unsigned 1  botRiteStop               0x0
///                                    ###
///                                    * {start, stop}
///                                    * 2'b0?: cntOut = 0; 
///                                    * 2'b10: cntOut++; 
///                                    * 2'b11: cntOut = cntOut; 
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00204                      (P)
///     # 0x00204 topSvtDro0Cnt        
///               $droCount            topSvtDro0Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level SVT DRO 0 counter value
///                                    ###
///     @ 0x00208                      (P)
///     # 0x00208 topLvtDro1Cnt        
///               $droCount            topLvtDro1Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level LVT DRO 1 counter value
///                                    ###
///     @ 0x0020C                      (P)
///     # 0x0020C topSvtDro2Cnt        
///               $droCount            topSvtDro2Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level SVT DRO 2 counter value
///                                    ###
///     @ 0x00210                      (P)
///     # 0x00210 topLvtDro3Cnt        
///               $droCount            topLvtDro3Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level LVT DRO 3 counter value
///                                    ###
///     @ 0x00214                      (P)
///     # 0x00214 topSvtDro4Cnt        
///               $droCount            topSvtDro4Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level SVT DRO 4 counter value
///                                    ###
///     @ 0x00218                      (P)
///     # 0x00218 topLvtDro5Cnt        
///               $droCount            topLvtDro5Cnt     REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * Top-level LVT DRO 5 counter value
///                                    ###
///     @ 0x0021C                      (P)
///     # 0x0021C avioSvtDro0Cnt       
///               $droCount            avioSvtDro0Cnt    REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * AVIO SVT DRO 0 counter value
///                                    ###
///     @ 0x00220                      (P)
///     # 0x00220 avioLvtDro1Cnt       
///               $droCount            avioLvtDro1Cnt    REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * AVIO LVT DRO 1 counter value
///                                    ###
///     @ 0x00224                      (P)
///     # 0x00224 avioSvtDro2Cnt       
///               $droCount            avioSvtDro2Cnt    REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * AVIO SVT DRO 2 counter value
///                                    ###
///     @ 0x00228                      (P)
///     # 0x00228 avioLvtDro3Cnt       
///               $droCount            avioLvtDro3Cnt    REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * AVIO LVT DRO 3 counter value
///                                    ###
///     @ 0x0022C gfx3DCoreClkCtrl     (P-)
///               ###
///               * 3D Graphics Engine core clock control register
///               ###
///               %unsigned 1  clkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00230 gfx3DSysClkCtrl      (P-)
///               ###
///               * 3D Graphics Engine system clock control register
///               ###
///               %unsigned 1  clkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00234 arcRefClkCtrl        (P-)
///               ###
///               * ARC Reference clock control register
///               ###
///               %unsigned 1  clkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00238 vipClkCtrl           (P-)
///               ###
///               * VIP internal clock control register
///               ###
///               %unsigned 1  clkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x0023C sdioXinClkCtrl       (P-)
///               ###
///               * Peripheral SDIO Module X-Clock Control Register
///               ###
///               %unsigned 1  ClkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00240 sdio1XinClkCtrl      (P-)
///               ###
///               * Peripheral SDIO 1 Module X-Clock Control Register
///               ###
///               %unsigned 1  ClkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00244 gfx3DExtraClkCtrl    (P-)
///               ###
///               * Graphics 3D Extra Clock control register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  ClkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable.
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00248 gfx3DReset           (RW-)
///               ###
///               * Graphics 3D reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Graphics 3D module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0024C gc360ClkCtrl         (P-)
///               ###
///               * Vector Graphics (gfx360) cock control register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  ClkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * GC360 Clock enable register
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch
///                                                 * 0: No divider
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00250 sdioDllMstRef        (RW-)
///               ###
///               * SDIO DLL master Reference Clock. The following are the settings for the different process.
///               * G: 75 ~ 480MHz (auto update supports up to 350MHz)
///               * LP: 55 ~ 340MHz (auto update supports up to 300MHz)
///               * LPM: 60 ~ 330MHz (auto update supports up to 300MHz)
///               ###
///               %unsigned 1  ClkEN                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Clock enable register
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : AVPllB4                   0x0
///                                    : AVPllB5                   0x1
///                                    : AVPllB6                   0x2
///                                    : AVPllB7                   0x3
///                                    : SYSPll                    0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: AVPLL B[4]
///                                                 * 1: AVPLL B[5]
///                                                 * 2: AVPLL B[6]
///                                                 * 3: AVPLL B[7]
///                                                 * 4: SYSPLL
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : AVPLL                     0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0: SYSPLL
///                                                 * 1: AVPLL
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 * Divide by 3 clock switch
///                                                 * 0: No Divide by 3
///                                                 * 1: Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider Selection
///                                                 * 0: Reserved
///                                                 * 1: Divide by 2
///                                                 * 2: Divide by 4
///                                                 * 3: Divide by 6
///                                                 * 4: Divide by 8
///                                                 * 5: Divide by 12
///                                                 * 6-7: Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00254 sdioDllMstCtrl       (RW-)
///               ###
///               * SDIO DLL Master Control register
///               ###
///               %unsigned 5  PH_SEL1                   0x10
///                                    ###
///                                    * Channel 1 Delay Phase Selections. Default setting is 90 degree phase shift.
///                                    ###
///               %unsigned 5  PH_SEL2                   0x10
///                                    ###
///                                    * Channel 2 Delay Phase Selections. Default setting is 90 degree phase shift.
///                                    ###
///               %unsigned 5  PH_SEL3                   0x10
///                                    ###
///                                    * Channel 3 Delay Phase Selections. Default setting is 90 degree phase shift.
///                                    ###
///               %unsigned 5  PH_SEL4                   0x10
///                                    ###
///                                    * Channel 4 Delay Phase Selections. Default setting is 90 degree phase shift.
///                                    ###
///               %unsigned 1  AUTO_UPDATE_EN            0x0
///                                    ###
///                                    * When this bit is enabled, the delay information from the master DLL will be updated to the slave delay automatically.
///                                    * The setting of UPDATE_EN signal will be ignored when this signal is set.
///                                    * Auto update supports 75MHz-300MHz
///                                    ###
///               %unsigned 1  UPDATE_EN                 0x0
///                                    ###
///                                    * This signal is synchronized by internal clock to update the delay information from the master to slave. It should be held high for at least 17 clock periods.
///                                    ###
///               %unsigned 1  RESET                     0x1
///                                    ###
///                                    * DLL reset signal. Active high.
///                                    ###
///               %unsigned 1  GAIN2X                    0x1
///                                    ###
///                                    * G	1: 75~200MHz 0: 200~480MHz
///                                    * LP	1: 55~150MHz 0: 150~340MHz
///                                    * LPM	1: 60~150MHz 0: 150~330MHz
///                                    * This bit controls frequency range.
///                                    * Note that GAIN2X=1, the frequency range is lower.
///                                    ###
///               %unsigned 1  TEST_EN                   0x0
///                                    ###
///                                    * DLL test mode enable signal. This signal disables internal master block. Can save power when only slave is used.
///                                    ###
///               %unsigned 1  BYPASS_EN                 0x0
///                                    ###
///                                    * This signal enables the use of DELAY_TEST[8:0] as slave control. No clock is needed from master block in bypass mode. (refclk not necessary)
///                                    ###
///               %%        6          # Stuffing bits...
///     # 0x00258 sdioDllMstCtrl1      
///               %unsigned 9  DELAY_TEST                0x0
///                                    ###
///                                    * For testing the slave delay chain. Also used to control delays from external register instead of master block.
///                                    ###
///               %unsigned 5  RESERVE                   0x0
///                                    ###
///                                    * Reserve debug bits
///                                    ###
///               %%        18         # Stuffing bits...
///     @ 0x0025C sdioDllMstStatus     (R-)
///               ###
///               * SDIO DLL Master Status register
///               ###
///               %unsigned 9  DELAY_CTRL2               
///                                    ###
///                                    * Control bits for channel 2 slave block
///                                    ###
///               %unsigned 9  DELAY_CTRL3               
///                                    ###
///                                    * Control bits for channel 3 slave block
///                                    ###
///               %unsigned 9  DELAY_CTRL4               
///                                    ###
///                                    * Control bits for channel 4 slave block
///                                    ###
///               %unsigned 1  PRE_LOCK                  
///                                    ###
///                                    * This signal is used under auto update. It generates update signal before DLL is locked. No initial dummy read or manual update is needed for auto update. When manual update is used, this signal can be left floating.
///                                    ###
///               %unsigned 1  DLL_LOCK                  
///                                    ###
///                                    * DLL ready when DLL_LOCK is high. Maximum DLL lock time is 4096 reference clock cycles.
///                                    ###
///               %%        3          # Stuffing bits...
///     # 0x00260 sdioDllMstStatus1    
///               %unsigned 8  DELAY_OUT                 
///                                    ###
///                                    * Delay information from the DLL for testing purpose.
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00264 sdioPortSel          (RW-)
///               ###
///               * SDIO Host Controller Select for Port 0 and 1
///               * **INTERNAL_ONLY**
///               ###
///               %unsigned 1  port0                     0x0
///                                    ###
///                                    * Register bit to select the sdio controller for Port 0:
///                                    * 1 : SDIO 3 Host Controller
///                                    * 0: SDIO2 Host Controller
///                                    ###
///               %unsigned 1  port1                     0x0
///                                    ###
///                                    * Register bit to select the sdio controller for Port 1:
///                                    * 1 : SDIO 3 Host Controller
///                                    * 0: SDIO2 Host Controller
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00268 gc360Reset           (RW-)
///               ###
///               * Vector Graphics (gc360) Reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Gc360 module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0026C SpdifRxReset         (RW-)
///               ###
///               * SPDIF Receiver Reset Register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset the SPDIF Receiver
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00270 gfx3DDisRamClkGate   (P-)
///               ###
///               * **INTERNAL_ONLY**
///               ###
///               %unsigned 1  drcg                      0x0
///                                    : drcgActive                0x1
///                                    : drcgInactive              0x0
///                                                 ###
///                                                 * Disable RAM clock gating in Graphics 3D when in BIST mode.
///                                                 * Graphics 3D disable RAM CG register bit
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00274 gfx3DResetStatus     (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * reset status register
///                                                 * Reset status of Graphics 3D
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00278 gc360DisRCG          (P-)
///               %unsigned 1  drcg                      0x0
///                                    : drcgActive                0x1
///                                    : drcgInactive              0x0
///                                                 ###
///                                                 * Disable RAM clock gating in Graphics 3D when in BIST mode.
///                                                 * Graphics 3D disable RAM CG register bit
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0027C gc360ResetStatus     (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * reset status register
///                                                 * Reset status of Graphics 3D
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00280 SpdifRxResetStatus   (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of spdif Receiver
///                                                 * Reset status for the SPDIF RX
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00284 DroEnable            (P-)
///               ###
///               * *INTERNAL_ONLY**
///               * This register is used to Start all the DROs in the chip. The following is the recommended procedure:
///               * 1) Program the “DroCounter” register to tell how long DRO should run (this count value is in terms of 25Mhz clock (40ns time period). So a value of 100 will mean DRO should run for = 40 x 100 ns.
///               * 2) Start the DRO's by programming the following “EnDroCounter” bit
///               * 3) Wait for the “DroDone” register “status” bit to get set to “1”
///               * 4) After the DroDone status is set to 1, Read the “droCount” registers for each DRO to know the DRO count value of each DRO.
///               * 5) To restart the DROs write “1” to the “EnDroCounter” bit again.
///               ###
///               %unsigned 1  EnDroCounter              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * DRO enable
///                                                 * 0 : Disable
///                                                 * 1: Enabled
///                                                 * Note: Writing 1 to this bit will start the DRO counter. Writing 0 does not stop the DRO. DRO stops after counting is completed.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00288 DroCounter           (P-)
///               ###
///               * *INTERNAL_ONLY**
///               * This register indicates how long the Chip DROs should run in terms of reference clock (25Mhz).
///               ###
///               %unsigned 32 CountVal                  0x0
///                                    ###
///                                    * DRO count length
///                                    * Note: Only [15:0] bits are used. Bits [31:16] are not used
///                                    * Also note that all the Chip DRO's count maximum till 2^15 and after that they overflow to “2^16” value and remain stuck until new DRO DRO enable request is received.
///                                    ###
///     @ 0x0028C DroDone              (R-)
///               ###
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  status                    
///                                    ###
///                                    * DRO Done status bit.
///                                    * 0: DRO is not enabled or DRO is still counting if enabled
///                                    * 1: DRO counting done and values can be read from the count registers.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00290                      (P)
///     # 0x00290 cpussSvtDro0Cnt      
///               $droCount            cpussSvtDro0Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * CPU Sub system SVT DRO 0 counter value
///                                    ###
///     @ 0x00294                      (P)
///     # 0x00294 cpussLvtDro1Cnt      
///               $droCount            cpussLvtDro1Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * CPU Sub system LVT DRO 1 counter value
///                                    ###
///     @ 0x00298                      (P)
///     # 0x00298 cpussSvtDro2Cnt      
///               $droCount            cpussSvtDro2Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * CPU Sub system SVT DRO 2 counter value
///                                    ###
///     @ 0x0029C                      (P)
///     # 0x0029C cpussLvtDro3Cnt      
///               $droCount            cpussLvtDro3Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * CPU Sub system LVT DRO 3 counter value
///                                    ###
///     @ 0x002A0                      (P)
///     # 0x002A0 vMetaSvtDro0Cnt      
///               $droCount            vMetaSvtDro0Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * vMeta SVT DRO 0 counter value
///                                    ###
///     @ 0x002A4                      (P)
///     # 0x002A4 vMetaLvtDro1Cnt      
///               $droCount            vMetaLvtDro1Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * vMeta LVT DRO 1 counter value
///                                    ###
///     @ 0x002A8                      (P)
///     # 0x002A8 gfx3DSvtDro0Cnt      
///               $droCount            gfx3DSvtDro0Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * GFX3D SVT DRO 0 counter value
///                                    ###
///     @ 0x002AC                      (P)
///     # 0x002AC gfx3DLvtDro1Cnt      
///               $droCount            gfx3DLvtDro1Cnt   REG          
///                                    ###
///                                    * *INTERNAL_ONLY**
///                                    * gfx3D LVT DRO 1 counter value
///                                    ###
///     @ 0x002B0 INT_ID               (R-)
///               ###
///               * **INTERNAL_ONLY**
///               * Internal ID register
///               ###
///               %unsigned 8  VALUE                     0x0
///                                    ###
///                                    * Internal ID
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x002B4                      (P)
///     # 0x002B4 hdmirxFpllRefClk     
///               $clkD1               hdmirxFpllRefClk  REG          
///                                    ###
///                                    * HDMI RX FPLL Reference clock
///                                    ###
///     @ 0x002B8                      (P)
///     # 0x002B8 hdmirxTClk           
///               $clkD4               hdmirxTClk        REG          
///                                    ###
///                                    * HDMI RX T CLOCK
///                                    ###
///     @ 0x002BC                      (P)
///     # 0x002BC hdmirxMClk           
///               $clkD8               hdmirxMClk        REG          
///                                    ###
///                                    * HDMI RX M CLOCK
///                                    ###
///     @ 0x002C0                      (P)
///     # 0x002C0 gethRgmiiClk         
///               $clkD8               gethRgmiiClk      REG          
///                                    ###
///                                    * 125 Mhz Clock for Gigabit   Ethernet
///                                    ###
///     @ 0x002C4                      (P)
///     # 0x002C4 pcieTestClk          
///               $clkD4               pcieTestClk       REG          
///                                    ###
///                                    * Test Mode clock for PCI-E
///                                    ###
///     @ 0x002C8 stickyResetN         (P-)
///               ###
///               * sticky reset bits. Active low.
///               * 0: Reset
///               * 1: No Reset
///               ###
///               %unsigned 1  gethRgmiiMemRstn          0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * Giga bit Ethernet RGMII Memory reset ( used to initialze the memory so should be asserted before the gethCore Rstn)
///                                                 * 0 : Reset
///                                                 * 1 : No Reset
///                                                 ###
///               %unsigned 1  gethRgmiiRstn             0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * Giga bit Ethernet RGMII Reset
///                                                 * 0 : Reset
///                                                 * 1 : No Reset
///                                                 ###
///               %unsigned 1  cpuPllRstn                0x1
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * CPUPLL Reset
///                                                 * 0 : Reset PLL
///                                                 * 1 : No Reset
///                                                 ###
///               %unsigned 1  memPllRstn                0x1
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * MEMPLL Reset
///                                                 * 0 : Reset PLL
///                                                 * 1 : No Reset
///                                                 ###
///               %unsigned 1  sysPllRstn                0x1
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * SYSPLL Reset
///                                                 * 0 : Reset PLL
///                                                 * 1 : No Reset
///                                                 ###
///               %%        27         # Stuffing bits...
///     @ 0x002CC gethRgmii_dll        (RW)
///               %unsigned 9  tx_delay                  0x10
///                                    ###
///                                    * Delay value for TX Clock
///                                    ###
///               %unsigned 9  rx_delay                  0x10
///                                    ###
///                                    * Delay value for RX Clock
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x002D0 funcSel              (RW)
///               %unsigned 1  pcie_sata_sel             0x0
///                                    ###
///                                    * 0 : SATA
///                                    * 1 : PCI-E
///                                    ###
///               %unsigned 1  gmac_eth_sel              0x0
///                                    ###
///                                    * 0 : ETHERNET
///                                    * 1: GIGABIT ETHERNET (RGMII)
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x002D4                      (P)
///     # 0x002D4 efuse                
///               $efuse               efuse             REG          
///     @ 0x00300 chipCntl             (P-)
///               ###
///               * The register here is for chip control. Some of them are used to be boot straps in berlin project.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  pcieDownMap               0x0
///                                    : M512                      0x0
///                                    : M256                      0x1
///                                                 ###
///                                                 * Pcie downstream memory size
///                                                 * 0: 512 MB
///                                                 * 1: 256 MB
///                                                 ###
///               %unsigned 1  pcie_rc                   0x1
///                                    : END_POINT                 0x0
///                                    : ROOT_COMPLEX              0x1
///                                                 ###
///                                                 * PCIe Host selection
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00304 bootStrapEn          (P-)
///               ###
///               * Boot strap control register . This register is used to enable/disable the boot straps.
///               ###
///               %unsigned 1  pllPwrDownEn              0x1
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * PLL Power down strap enable
///                                                 * 0 : Disable bootstrap
///                                                 * 1 : Allow bootstrap
///                                                 ###
///               %unsigned 1  refClk12P5MEn             0x1
///                                    : Disable                   0x0
///                                    : Enable                    0x1
///                                                 ###
///                                                 * Reference clock 12.5 Mhz boot strap enable
///                                                 * 0 : Disable bootstrap
///                                                 * 1 : Allow bootstrap
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00308 axiClkEn             (P-)
///               ###
///               * Clock enable for AXI clocks
///               ###
///               %unsigned 1  avioAxiClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///               %%        31         # Stuffing bits...
///     @ 0x0030C ahbClkEn             (P-)
///               ###
///               * Clock enable for AHB clocks
///               ###
///               %unsigned 1  avioAhbClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * The below are the Pad Control Registers starting at 32KB boundary. Please do not change this offset and add any register that is needed before this.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00310                      (W-)
///     #         # Stuffing bytes...
///               %% 255872
///     @ 0x08000 SPI1_SS0nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS0n
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %%        30         # Stuffing bits...
///     @ 0x08004 SPI1_SS1nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS1n
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x1
///               %%        30         # Stuffing bits...
///     @ 0x08008 SPI1_SS2nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS2n
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x1
///               %%        30         # Stuffing bits...
///     @ 0x0800C SPI1_SCLKCntl        (P-)
///               ###
///               * Pad Control for SPI1_SCLK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %%        30         # Stuffing bits...
///     @ 0x08010 SPI1_SDOCntl         (P-)
///               ###
///               * Pad Control for SPI1_SDO
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %%        30         # Stuffing bits...
///     @ 0x08014 SPI1_SDICntl         (P-)
///               ###
///               * Pad Control for SPI1_SDI
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x1
///               %%        30         # Stuffing bits...
///     @ 0x08018 URT0_RXDCntl         (P-)
///               ###
///               * Pad Control for URT0_RXD
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x1
///               %%        30         # Stuffing bits...
///     @ 0x0801C URT0_TXDCntl         (P-)
///               ###
///               * Pad Control for URT0_TXD
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %%        30         # Stuffing bits...
///     @ 0x08020 DVIO0Cntl            (P-)
///               ###
///               * Pad Control for DVIO[0]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08024 DVIO1Cntl            (P-)
///               ###
///               * Pad Control for DVIO[1]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08028 DVIO2Cntl            (P-)
///               ###
///               * Pad Control for DVIO[2]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0802C DVIO3Cntl            (P-)
///               ###
///               * Pad Control for DVIO[3]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08030 DVIO4Cntl            (P-)
///               ###
///               * Pad Control for DVIO[4]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08034 DVIO5Cntl            (P-)
///               ###
///               * Pad Control for DVIO[5]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08038 DVIO6Cntl            (P-)
///               ###
///               * Pad Control for DVIO[6]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0803C DVIO7Cntl            (P-)
///               ###
///               * Pad Control for DVIO[7]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08040 DVIO8Cntl            (P-)
///               ###
///               * Pad Control for DVIO[8]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08044 DVIO9Cntl            (P-)
///               ###
///               * Pad Control for DVIO[9]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08048 DVIO10Cntl           (P-)
///               ###
///               * Pad Control for DVIO[10]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0804C DVIO11Cntl           (P-)
///               ###
///               * Pad Control for DVIO[11]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08050 DV0_CLKCntl          (P-)
///               ###
///               * Pad Control for DV0_CLK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08054 DV0_HSCntl           (P-)
///               ###
///               * Pad Control for DV0_HS
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08058 DV0_VSCntl           (P-)
///               ###
///               * Pad Control for DV0_VS
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0805C DV0_FIDCntl          (P-)
///               ###
///               * Pad Control for DV0_FID
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08060 I2S0_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S0_BCLK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08064 I2S0_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S0_LRCK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08068 I2S0_DO0Cntl         (P-)
///               ###
///               * Pad Control for I2S0_DO[0]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0806C I2S0_DO1Cntl         (P-)
///               ###
///               * Pad Control for I2S0_DO[1]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08070 I2S0_DO2Cntl         (P-)
///               ###
///               * Pad Control for I2S0_DO[2]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08074 I2S0_DO3Cntl         (P-)
///               ###
///               * Pad Control for I2S0_DO[3]
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08078 SPDIFICntl           (P-)
///               ###
///               * Pad Control for SPDIFI
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0807C I2S1_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S1_LRCK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08080 I2S1_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S1_BCLK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08084 I2S1_DOCntl          (P-)
///               ###
///               * Pad Control for I2S1_DO
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08088 I2S2_LRCKCntl        (P-)
///               ###
///               * Pad Control for I2S2_LRCK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x0808C I2S2_BCLKCntl        (P-)
///               ###
///               * Pad Control for I2S2_BCLK
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08090 I2S2_DI_0Cntl        (P-)
///               ###
///               * Pad Control for I2S2_DI_0
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     @ 0x08094 SPDIFOCntl           (P-)
///               ###
///               * Pad Control for SPDIFO
///               ###
///               %unsigned 1  PU_EN                     0x0
///               %unsigned 1  PD_EN                     0x0
///               %unsigned 1  SLP_DI                    0x0
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:   32920B, bits:    3824b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_Gbl
#define h_Gbl (){}

    #define     RA_Gbl_pinMux                                  0x0000

    #define     BA_Gbl_pinMux_gp0                              0x0000
    #define     B16Gbl_pinMux_gp0                              0x0000
    #define   LSb32Gbl_pinMux_gp0                                 0
    #define   LSb16Gbl_pinMux_gp0                                 0
    #define       bGbl_pinMux_gp0                              3
    #define   MSK32Gbl_pinMux_gp0                                 0x00000007
    #define        Gbl_pinMux_gp0_MODE_0                                    0x0
    #define        Gbl_pinMux_gp0_MODE_1                                    0x1
    #define        Gbl_pinMux_gp0_MODE_2                                    0x2
    #define        Gbl_pinMux_gp0_MODE_3                                    0x3

    #define     BA_Gbl_pinMux_gp1                              0x0000
    #define     B16Gbl_pinMux_gp1                              0x0000
    #define   LSb32Gbl_pinMux_gp1                                 3
    #define   LSb16Gbl_pinMux_gp1                                 3
    #define       bGbl_pinMux_gp1                              3
    #define   MSK32Gbl_pinMux_gp1                                 0x00000038
    #define        Gbl_pinMux_gp1_MODE_0                                    0x0
    #define        Gbl_pinMux_gp1_MODE_1                                    0x1
    #define        Gbl_pinMux_gp1_MODE_6                                    0x6
    #define        Gbl_pinMux_gp1_MODE_7                                    0x7

    #define     BA_Gbl_pinMux_gp2                              0x0000
    #define     B16Gbl_pinMux_gp2                              0x0000
    #define   LSb32Gbl_pinMux_gp2                                 6
    #define   LSb16Gbl_pinMux_gp2                                 6
    #define       bGbl_pinMux_gp2                              3
    #define   MSK32Gbl_pinMux_gp2                                 0x000001C0
    #define        Gbl_pinMux_gp2_MODE_0                                    0x0
    #define        Gbl_pinMux_gp2_MODE_1                                    0x1
    #define        Gbl_pinMux_gp2_MODE_2                                    0x2
    #define        Gbl_pinMux_gp2_MODE_3                                    0x3
    #define        Gbl_pinMux_gp2_MODE_6                                    0x6
    #define        Gbl_pinMux_gp2_MODE_7                                    0x7

    #define     BA_Gbl_pinMux_gp3                              0x0001
    #define     B16Gbl_pinMux_gp3                              0x0000
    #define   LSb32Gbl_pinMux_gp3                                 9
    #define   LSb16Gbl_pinMux_gp3                                 9
    #define       bGbl_pinMux_gp3                              3
    #define   MSK32Gbl_pinMux_gp3                                 0x00000E00
    #define        Gbl_pinMux_gp3_MODE_0                                    0x0
    #define        Gbl_pinMux_gp3_MODE_1                                    0x1
    #define        Gbl_pinMux_gp3_MODE_2                                    0x2
    #define        Gbl_pinMux_gp3_MODE_3                                    0x3
    #define        Gbl_pinMux_gp3_MODE_4                                    0x4
    #define        Gbl_pinMux_gp3_MODE_6                                    0x6
    #define        Gbl_pinMux_gp3_MODE_7                                    0x7

    #define     BA_Gbl_pinMux_gp4                              0x0001
    #define     B16Gbl_pinMux_gp4                              0x0000
    #define   LSb32Gbl_pinMux_gp4                                 12
    #define   LSb16Gbl_pinMux_gp4                                 12
    #define       bGbl_pinMux_gp4                              3
    #define   MSK32Gbl_pinMux_gp4                                 0x00007000
    #define        Gbl_pinMux_gp4_MODE_0                                    0x0
    #define        Gbl_pinMux_gp4_MODE_1                                    0x1
    #define        Gbl_pinMux_gp4_MODE_2                                    0x2
    #define        Gbl_pinMux_gp4_MODE_3                                    0x3
    #define        Gbl_pinMux_gp4_MODE_4                                    0x4
    #define        Gbl_pinMux_gp4_MODE_6                                    0x6
    #define        Gbl_pinMux_gp4_MODE_7                                    0x7

    #define     BA_Gbl_pinMux_gp5                              0x0001
    #define     B16Gbl_pinMux_gp5                              0x0000
    #define   LSb32Gbl_pinMux_gp5                                 15
    #define   LSb16Gbl_pinMux_gp5                                 15
    #define       bGbl_pinMux_gp5                              3
    #define   MSK32Gbl_pinMux_gp5                                 0x00038000
    #define        Gbl_pinMux_gp5_MODE_0                                    0x0
    #define        Gbl_pinMux_gp5_MODE_1                                    0x1
    #define        Gbl_pinMux_gp5_MODE_2                                    0x2
    #define        Gbl_pinMux_gp5_MODE_3                                    0x3
    #define        Gbl_pinMux_gp5_MODE_4                                    0x4
    #define        Gbl_pinMux_gp5_MODE_6                                    0x6
    #define        Gbl_pinMux_gp5_MODE_7                                    0x7

    #define     BA_Gbl_pinMux_gp6                              0x0002
    #define     B16Gbl_pinMux_gp6                              0x0002
    #define   LSb32Gbl_pinMux_gp6                                 18
    #define   LSb16Gbl_pinMux_gp6                                 2
    #define       bGbl_pinMux_gp6                              3
    #define   MSK32Gbl_pinMux_gp6                                 0x001C0000
    #define        Gbl_pinMux_gp6_MODE_0                                    0x0
    #define        Gbl_pinMux_gp6_MODE_1                                    0x1

    #define     BA_Gbl_pinMux_gp7                              0x0002
    #define     B16Gbl_pinMux_gp7                              0x0002
    #define   LSb32Gbl_pinMux_gp7                                 21
    #define   LSb16Gbl_pinMux_gp7                                 5
    #define       bGbl_pinMux_gp7                              3
    #define   MSK32Gbl_pinMux_gp7                                 0x00E00000
    #define        Gbl_pinMux_gp7_MODE_0                                    0x0
    #define        Gbl_pinMux_gp7_MODE_1                                    0x1
    #define        Gbl_pinMux_gp7_MODE_2                                    0x2

    #define     BA_Gbl_pinMux_gp8                              0x0003
    #define     B16Gbl_pinMux_gp8                              0x0002
    #define   LSb32Gbl_pinMux_gp8                                 24
    #define   LSb16Gbl_pinMux_gp8                                 8
    #define       bGbl_pinMux_gp8                              3
    #define   MSK32Gbl_pinMux_gp8                                 0x07000000
    #define        Gbl_pinMux_gp8_MODE_0                                    0x0
    #define        Gbl_pinMux_gp8_MODE_1                                    0x1

    #define     BA_Gbl_pinMux_gp9                              0x0003
    #define     B16Gbl_pinMux_gp9                              0x0002
    #define   LSb32Gbl_pinMux_gp9                                 27
    #define   LSb16Gbl_pinMux_gp9                                 11
    #define       bGbl_pinMux_gp9                              3
    #define   MSK32Gbl_pinMux_gp9                                 0x38000000
    #define        Gbl_pinMux_gp9_MODE_0                                    0x0
    #define        Gbl_pinMux_gp9_MODE_1                                    0x1
    #define        Gbl_pinMux_gp9_MODE_3                                    0x3

    #define     BA_Gbl_pinMux_gp10                             0x0003
    #define     B16Gbl_pinMux_gp10                             0x0002
    #define   LSb32Gbl_pinMux_gp10                                30
    #define   LSb16Gbl_pinMux_gp10                                14
    #define       bGbl_pinMux_gp10                             2
    #define   MSK32Gbl_pinMux_gp10                                0xC0000000
    #define        Gbl_pinMux_gp10_MODE_0                                   0x0
    #define        Gbl_pinMux_gp10_MODE_1                                   0x1

    #define     RA_Gbl_pinMux1                                 0x0004

    #define     BA_Gbl_pinMux_gp11                             0x0004
    #define     B16Gbl_pinMux_gp11                             0x0004
    #define   LSb32Gbl_pinMux_gp11                                0
    #define   LSb16Gbl_pinMux_gp11                                0
    #define       bGbl_pinMux_gp11                             2
    #define   MSK32Gbl_pinMux_gp11                                0x00000003
    #define        Gbl_pinMux_gp11_MODE_0                                   0x0
    #define        Gbl_pinMux_gp11_MODE_1                                   0x1

    #define     BA_Gbl_pinMux_gp12                             0x0004
    #define     B16Gbl_pinMux_gp12                             0x0004
    #define   LSb32Gbl_pinMux_gp12                                2
    #define   LSb16Gbl_pinMux_gp12                                2
    #define       bGbl_pinMux_gp12                             3
    #define   MSK32Gbl_pinMux_gp12                                0x0000001C
    #define        Gbl_pinMux_gp12_MODE_0                                   0x0
    #define        Gbl_pinMux_gp12_MODE_1                                   0x1

    #define     BA_Gbl_pinMux_gp13                             0x0004
    #define     B16Gbl_pinMux_gp13                             0x0004
    #define   LSb32Gbl_pinMux_gp13                                5
    #define   LSb16Gbl_pinMux_gp13                                5
    #define       bGbl_pinMux_gp13                             3
    #define   MSK32Gbl_pinMux_gp13                                0x000000E0
    #define        Gbl_pinMux_gp13_MODE_0                                   0x0
    #define        Gbl_pinMux_gp13_MODE_1                                   0x1
    #define        Gbl_pinMux_gp13_MODE_2                                   0x2

    #define     BA_Gbl_pinMux_gp14                             0x0005
    #define     B16Gbl_pinMux_gp14                             0x0004
    #define   LSb32Gbl_pinMux_gp14                                8
    #define   LSb16Gbl_pinMux_gp14                                8
    #define       bGbl_pinMux_gp14                             1
    #define   MSK32Gbl_pinMux_gp14                                0x00000100
    #define        Gbl_pinMux_gp14_MODE_0                                   0x0
    #define        Gbl_pinMux_gp14_MODE_1                                   0x1

    #define     BA_Gbl_pinMux_gp15                             0x0005
    #define     B16Gbl_pinMux_gp15                             0x0004
    #define   LSb32Gbl_pinMux_gp15                                9
    #define   LSb16Gbl_pinMux_gp15                                9
    #define       bGbl_pinMux_gp15                             3
    #define   MSK32Gbl_pinMux_gp15                                0x00000E00
    #define        Gbl_pinMux_gp15_MODE_0                                   0x0
    #define        Gbl_pinMux_gp15_MODE_1                                   0x1

    #define     BA_Gbl_pinMux_gp16                             0x0005
    #define     B16Gbl_pinMux_gp16                             0x0004
    #define   LSb32Gbl_pinMux_gp16                                12
    #define   LSb16Gbl_pinMux_gp16                                12
    #define       bGbl_pinMux_gp16                             3
    #define   MSK32Gbl_pinMux_gp16                                0x00007000
    #define        Gbl_pinMux_gp16_MODE_0                                   0x0
    #define        Gbl_pinMux_gp16_MODE_1                                   0x1
    #define        Gbl_pinMux_gp16_MODE_2                                   0x2
    #define        Gbl_pinMux_gp16_MODE_4                                   0x4

    #define     BA_Gbl_pinMux_gp17                             0x0005
    #define     B16Gbl_pinMux_gp17                             0x0004
    #define   LSb32Gbl_pinMux_gp17                                15
    #define   LSb16Gbl_pinMux_gp17                                15
    #define       bGbl_pinMux_gp17                             3
    #define   MSK32Gbl_pinMux_gp17                                0x00038000
    #define        Gbl_pinMux_gp17_MODE_0                                   0x0
    #define        Gbl_pinMux_gp17_MODE_1                                   0x1
    #define        Gbl_pinMux_gp17_MODE_2                                   0x2
    #define        Gbl_pinMux_gp17_MODE_3                                   0x3
    #define        Gbl_pinMux_gp17_MODE_4                                   0x4
    #define        Gbl_pinMux_gp17_MODE_5                                   0x5

    #define     BA_Gbl_pinMux_gp18                             0x0006
    #define     B16Gbl_pinMux_gp18                             0x0006
    #define   LSb32Gbl_pinMux_gp18                                18
    #define   LSb16Gbl_pinMux_gp18                                2
    #define       bGbl_pinMux_gp18                             2
    #define   MSK32Gbl_pinMux_gp18                                0x000C0000
    #define        Gbl_pinMux_gp18_MODE_0                                   0x0
    #define        Gbl_pinMux_gp18_MODE_1                                   0x1
    #define        Gbl_pinMux_gp18_MODE_2                                   0x2
    #define        Gbl_pinMux_gp18_MODE_3                                   0x3

    #define     BA_Gbl_pinMux_gp19                             0x0006
    #define     B16Gbl_pinMux_gp19                             0x0006
    #define   LSb32Gbl_pinMux_gp19                                20
    #define   LSb16Gbl_pinMux_gp19                                4
    #define       bGbl_pinMux_gp19                             2
    #define   MSK32Gbl_pinMux_gp19                                0x00300000
    #define        Gbl_pinMux_gp19_MODE_0                                   0x0
    #define        Gbl_pinMux_gp19_MODE_1                                   0x1
    #define        Gbl_pinMux_gp19_MODE_2                                   0x2
    #define        Gbl_pinMux_gp19_MODE_3                                   0x3

    #define     BA_Gbl_pinMux_gp20                             0x0006
    #define     B16Gbl_pinMux_gp20                             0x0006
    #define   LSb32Gbl_pinMux_gp20                                22
    #define   LSb16Gbl_pinMux_gp20                                6
    #define       bGbl_pinMux_gp20                             2
    #define   MSK32Gbl_pinMux_gp20                                0x00C00000
    #define        Gbl_pinMux_gp20_MODE_0                                   0x0
    #define        Gbl_pinMux_gp20_MODE_1                                   0x1
    #define        Gbl_pinMux_gp20_MODE_2                                   0x2

    #define     BA_Gbl_pinMux_gp21                             0x0007
    #define     B16Gbl_pinMux_gp21                             0x0006
    #define   LSb32Gbl_pinMux_gp21                                24
    #define   LSb16Gbl_pinMux_gp21                                8
    #define       bGbl_pinMux_gp21                             3
    #define   MSK32Gbl_pinMux_gp21                                0x07000000
    #define        Gbl_pinMux_gp21_MODE_0                                   0x0
    #define        Gbl_pinMux_gp21_MODE_1                                   0x1
    #define        Gbl_pinMux_gp21_MODE_2                                   0x2
    #define        Gbl_pinMux_gp21_MODE_3                                   0x3
    #define        Gbl_pinMux_gp21_MODE_7                                   0x7

    #define     BA_Gbl_pinMux_gp22                             0x0007
    #define     B16Gbl_pinMux_gp22                             0x0006
    #define   LSb32Gbl_pinMux_gp22                                27
    #define   LSb16Gbl_pinMux_gp22                                11
    #define       bGbl_pinMux_gp22                             3
    #define   MSK32Gbl_pinMux_gp22                                0x38000000
    #define        Gbl_pinMux_gp22_MODE_0                                   0x0
    #define        Gbl_pinMux_gp22_MODE_1                                   0x1
    #define        Gbl_pinMux_gp22_MODE_2                                   0x2
    #define        Gbl_pinMux_gp22_MODE_3                                   0x3
    #define        Gbl_pinMux_gp22_MODE_4                                   0x4

    #define     RA_Gbl_pinMux2                                 0x0008

    #define     BA_Gbl_pinMux_gp23                             0x0008
    #define     B16Gbl_pinMux_gp23                             0x0008
    #define   LSb32Gbl_pinMux_gp23                                0
    #define   LSb16Gbl_pinMux_gp23                                0
    #define       bGbl_pinMux_gp23                             3
    #define   MSK32Gbl_pinMux_gp23                                0x00000007
    #define        Gbl_pinMux_gp23_MODE_0                                   0x0
    #define        Gbl_pinMux_gp23_MODE_1                                   0x1
    #define        Gbl_pinMux_gp23_MODE_2                                   0x2
    #define        Gbl_pinMux_gp23_MODE_3                                   0x3
    #define        Gbl_pinMux_gp23_MODE_4                                   0x4
    #define        Gbl_pinMux_gp23_MODE_7                                   0x7

    #define     BA_Gbl_pinMux_gp24                             0x0008
    #define     B16Gbl_pinMux_gp24                             0x0008
    #define   LSb32Gbl_pinMux_gp24                                3
    #define   LSb16Gbl_pinMux_gp24                                3
    #define       bGbl_pinMux_gp24                             2
    #define   MSK32Gbl_pinMux_gp24                                0x00000018
    #define        Gbl_pinMux_gp24_MODE_0                                   0x0
    #define        Gbl_pinMux_gp24_MODE_1                                   0x1
    #define        Gbl_pinMux_gp24_MODE_2                                   0x2

    #define     BA_Gbl_pinMux_gp25                             0x0008
    #define     B16Gbl_pinMux_gp25                             0x0008
    #define   LSb32Gbl_pinMux_gp25                                5
    #define   LSb16Gbl_pinMux_gp25                                5
    #define       bGbl_pinMux_gp25                             2
    #define   MSK32Gbl_pinMux_gp25                                0x00000060
    #define        Gbl_pinMux_gp25_MODE_0                                   0x0
    #define        Gbl_pinMux_gp25_MODE_1                                   0x1
    #define        Gbl_pinMux_gp25_MODE_2                                   0x2
    #define        Gbl_pinMux_gp25_MODE_3                                   0x3

    #define     BA_Gbl_pinMux_gp26                             0x0008
    #define     B16Gbl_pinMux_gp26                             0x0008
    #define   LSb32Gbl_pinMux_gp26                                7
    #define   LSb16Gbl_pinMux_gp26                                7
    #define       bGbl_pinMux_gp26                             1
    #define   MSK32Gbl_pinMux_gp26                                0x00000080
    #define        Gbl_pinMux_gp26_MODE_0                                   0x0
    #define        Gbl_pinMux_gp26_MODE_1                                   0x1

    #define     BA_Gbl_pinMux_gp27                             0x0009
    #define     B16Gbl_pinMux_gp27                             0x0008
    #define   LSb32Gbl_pinMux_gp27                                8
    #define   LSb16Gbl_pinMux_gp27                                8
    #define       bGbl_pinMux_gp27                             2
    #define   MSK32Gbl_pinMux_gp27                                0x00000300
    #define        Gbl_pinMux_gp27_MODE_0                                   0x0
    #define        Gbl_pinMux_gp27_MODE_1                                   0x1
    #define        Gbl_pinMux_gp27_MODE_3                                   0x3

    #define     BA_Gbl_pinMux_gp28                             0x0009
    #define     B16Gbl_pinMux_gp28                             0x0008
    #define   LSb32Gbl_pinMux_gp28                                10
    #define   LSb16Gbl_pinMux_gp28                                10
    #define       bGbl_pinMux_gp28                             3
    #define   MSK32Gbl_pinMux_gp28                                0x00001C00
    #define        Gbl_pinMux_gp28_MODE_0                                   0x0
    #define        Gbl_pinMux_gp28_MODE_1                                   0x1
    #define        Gbl_pinMux_gp28_MODE_2                                   0x2
    #define        Gbl_pinMux_gp28_MODE_5                                   0x5

    #define     BA_Gbl_pinMux_gp29                             0x0009
    #define     B16Gbl_pinMux_gp29                             0x0008
    #define   LSb32Gbl_pinMux_gp29                                13
    #define   LSb16Gbl_pinMux_gp29                                13
    #define       bGbl_pinMux_gp29                             3
    #define   MSK32Gbl_pinMux_gp29                                0x0000E000
    #define        Gbl_pinMux_gp29_MODE_0                                   0x0
    #define        Gbl_pinMux_gp29_MODE_2                                   0x2
    #define        Gbl_pinMux_gp29_MODE_5                                   0x5
    #define        Gbl_pinMux_gp29_MODE_6                                   0x6
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrap                               0x000C

    #define     BA_Gbl_bootStrap_softwareStrap                 0x000C
    #define     B16Gbl_bootStrap_softwareStrap                 0x000C
    #define   LSb32Gbl_bootStrap_softwareStrap                    0
    #define   LSb16Gbl_bootStrap_softwareStrap                    0
    #define       bGbl_bootStrap_softwareStrap                 7
    #define   MSK32Gbl_bootStrap_softwareStrap                    0x0000007F

    #define     BA_Gbl_bootStrap_bootSrc                       0x000C
    #define     B16Gbl_bootStrap_bootSrc                       0x000C
    #define   LSb32Gbl_bootStrap_bootSrc                          7
    #define   LSb16Gbl_bootStrap_bootSrc                          7
    #define       bGbl_bootStrap_bootSrc                       2
    #define   MSK32Gbl_bootStrap_bootSrc                          0x00000180

    #define     BA_Gbl_bootStrap_sysPllByps                    0x000D
    #define     B16Gbl_bootStrap_sysPllByps                    0x000C
    #define   LSb32Gbl_bootStrap_sysPllByps                       9
    #define   LSb16Gbl_bootStrap_sysPllByps                       9
    #define       bGbl_bootStrap_sysPllByps                    1
    #define   MSK32Gbl_bootStrap_sysPllByps                       0x00000200
    #define        Gbl_bootStrap_sysPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_sysPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_memPllByps                    0x000D
    #define     B16Gbl_bootStrap_memPllByps                    0x000C
    #define   LSb32Gbl_bootStrap_memPllByps                       10
    #define   LSb16Gbl_bootStrap_memPllByps                       10
    #define       bGbl_bootStrap_memPllByps                    1
    #define   MSK32Gbl_bootStrap_memPllByps                       0x00000400
    #define        Gbl_bootStrap_memPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_memPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_cpuPllByps                    0x000D
    #define     B16Gbl_bootStrap_cpuPllByps                    0x000C
    #define   LSb32Gbl_bootStrap_cpuPllByps                       11
    #define   LSb16Gbl_bootStrap_cpuPllByps                       11
    #define       bGbl_bootStrap_cpuPllByps                    1
    #define   MSK32Gbl_bootStrap_cpuPllByps                       0x00000800
    #define        Gbl_bootStrap_cpuPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_cpuPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_pllPwrDown                    0x000D
    #define     B16Gbl_bootStrap_pllPwrDown                    0x000C
    #define   LSb32Gbl_bootStrap_pllPwrDown                       12
    #define   LSb16Gbl_bootStrap_pllPwrDown                       12
    #define       bGbl_bootStrap_pllPwrDown                    1
    #define   MSK32Gbl_bootStrap_pllPwrDown                       0x00001000
    #define        Gbl_bootStrap_pllPwrDown_POWER_UP                        0x0
    #define        Gbl_bootStrap_pllPwrDown_POWER_DOWN                      0x1

    #define     BA_Gbl_bootStrap_refClk12P5M                   0x000D
    #define     B16Gbl_bootStrap_refClk12P5M                   0x000C
    #define   LSb32Gbl_bootStrap_refClk12P5M                      13
    #define   LSb16Gbl_bootStrap_refClk12P5M                      13
    #define       bGbl_bootStrap_refClk12P5M                   1
    #define   MSK32Gbl_bootStrap_refClk12P5M                      0x00002000
    #define        Gbl_bootStrap_refClk12P5M_REFCLK25M                      0x0
    #define        Gbl_bootStrap_refClk12P5M_REFCLK12P5M                    0x1

    #define     BA_Gbl_bootStrap_socJtagFromSM                 0x000D
    #define     B16Gbl_bootStrap_socJtagFromSM                 0x000C
    #define   LSb32Gbl_bootStrap_socJtagFromSM                    14
    #define   LSb16Gbl_bootStrap_socJtagFromSM                    14
    #define       bGbl_bootStrap_socJtagFromSM                 1
    #define   MSK32Gbl_bootStrap_socJtagFromSM                    0x00004000
    #define        Gbl_bootStrap_socJtagFromSM_fromPinMux                   0x0
    #define        Gbl_bootStrap_socJtagFromSM_fromSM                       0x1

    #define     BA_Gbl_bootStrap_nandV18Enable                 0x000D
    #define     B16Gbl_bootStrap_nandV18Enable                 0x000C
    #define   LSb32Gbl_bootStrap_nandV18Enable                    15
    #define   LSb16Gbl_bootStrap_nandV18Enable                    15
    #define       bGbl_bootStrap_nandV18Enable                 1
    #define   MSK32Gbl_bootStrap_nandV18Enable                    0x00008000
    #define        Gbl_bootStrap_nandV18Enable_V1R8                         0x1
    #define        Gbl_bootStrap_nandV18Enable_V3R3                         0x0

    #define     BA_Gbl_bootStrap_spi1V18Enable                 0x000E
    #define     B16Gbl_bootStrap_spi1V18Enable                 0x000E
    #define   LSb32Gbl_bootStrap_spi1V18Enable                    16
    #define   LSb16Gbl_bootStrap_spi1V18Enable                    0
    #define       bGbl_bootStrap_spi1V18Enable                 1
    #define   MSK32Gbl_bootStrap_spi1V18Enable                    0x00010000
    #define        Gbl_bootStrap_spi1V18Enable_V1R8                         0x0
    #define        Gbl_bootStrap_spi1V18Enable_V3R3                         0x1

    #define     BA_Gbl_bootStrap_nandV25Enable                 0x000E
    #define     B16Gbl_bootStrap_nandV25Enable                 0x000E
    #define   LSb32Gbl_bootStrap_nandV25Enable                    17
    #define   LSb16Gbl_bootStrap_nandV25Enable                    1
    #define       bGbl_bootStrap_nandV25Enable                 1
    #define   MSK32Gbl_bootStrap_nandV25Enable                    0x00020000

    #define     BA_Gbl_bootStrap_spi1V25Enable                 0x000E
    #define     B16Gbl_bootStrap_spi1V25Enable                 0x000E
    #define   LSb32Gbl_bootStrap_spi1V25Enable                    18
    #define   LSb16Gbl_bootStrap_spi1V25Enable                    2
    #define       bGbl_bootStrap_spi1V25Enable                 1
    #define   MSK32Gbl_bootStrap_spi1V25Enable                    0x00040000

    #define     BA_Gbl_bootStrap_ENG_EN                        0x000E
    #define     B16Gbl_bootStrap_ENG_EN                        0x000E
    #define   LSb32Gbl_bootStrap_ENG_EN                           19
    #define   LSb16Gbl_bootStrap_ENG_EN                           3
    #define       bGbl_bootStrap_ENG_EN                        1
    #define   MSK32Gbl_bootStrap_ENG_EN                           0x00080000
    #define        Gbl_bootStrap_ENG_EN_PRODUCTION_MODE                     0x0
    #define        Gbl_bootStrap_ENG_EN_DEVELOPE_MODE                       0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_anaGrpCtl                               0x0010

    #define     BA_Gbl_anaGrpCtl_anaGrpPu                      0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpPu                      0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpPu                         0
    #define   LSb16Gbl_anaGrpCtl_anaGrpPu                         0
    #define       bGbl_anaGrpCtl_anaGrpPu                      1
    #define   MSK32Gbl_anaGrpCtl_anaGrpPu                         0x00000001

    #define     BA_Gbl_anaGrpCtl_anaGrpBgSel                   0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpBgSel                   0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpBgSel                      1
    #define   LSb16Gbl_anaGrpCtl_anaGrpBgSel                      1
    #define       bGbl_anaGrpCtl_anaGrpBgSel                   2
    #define   MSK32Gbl_anaGrpCtl_anaGrpBgSel                      0x00000006

    #define     BA_Gbl_anaGrpCtl_anaGrpPuXtl                   0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpPuXtl                   0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpPuXtl                      3
    #define   LSb16Gbl_anaGrpCtl_anaGrpPuXtl                      3
    #define       bGbl_anaGrpCtl_anaGrpPuXtl                   1
    #define   MSK32Gbl_anaGrpCtl_anaGrpPuXtl                      0x00000008

    #define     BA_Gbl_anaGrpCtl_anaGrpGainX2                  0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpGainX2                  0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpGainX2                     4
    #define   LSb16Gbl_anaGrpCtl_anaGrpGainX2                     4
    #define       bGbl_anaGrpCtl_anaGrpGainX2                  1
    #define   MSK32Gbl_anaGrpCtl_anaGrpGainX2                     0x00000010

    #define     BA_Gbl_anaGrpCtl_anaGrpSelClkDigDiv1           0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpSelClkDigDiv1           0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpSelClkDigDiv1              5
    #define   LSb16Gbl_anaGrpCtl_anaGrpSelClkDigDiv1              5
    #define       bGbl_anaGrpCtl_anaGrpSelClkDigDiv1           2
    #define   MSK32Gbl_anaGrpCtl_anaGrpSelClkDigDiv1              0x00000060

    #define     BA_Gbl_anaGrpCtl_anaGrpSelClkDigDiv2           0x0010
    #define     B16Gbl_anaGrpCtl_anaGrpSelClkDigDiv2           0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpSelClkDigDiv2              7
    #define   LSb16Gbl_anaGrpCtl_anaGrpSelClkDigDiv2              7
    #define       bGbl_anaGrpCtl_anaGrpSelClkDigDiv2           2
    #define   MSK32Gbl_anaGrpCtl_anaGrpSelClkDigDiv2              0x00000180

    #define     BA_Gbl_anaGrpCtl_anaGrpSelClkDigDiv3           0x0011
    #define     B16Gbl_anaGrpCtl_anaGrpSelClkDigDiv3           0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpSelClkDigDiv3              9
    #define   LSb16Gbl_anaGrpCtl_anaGrpSelClkDigDiv3              9
    #define       bGbl_anaGrpCtl_anaGrpSelClkDigDiv3           2
    #define   MSK32Gbl_anaGrpCtl_anaGrpSelClkDigDiv3              0x00000600

    #define     BA_Gbl_anaGrpCtl_anaGrpSelClkDigDiv4           0x0011
    #define     B16Gbl_anaGrpCtl_anaGrpSelClkDigDiv4           0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpSelClkDigDiv4              11
    #define   LSb16Gbl_anaGrpCtl_anaGrpSelClkDigDiv4              11
    #define       bGbl_anaGrpCtl_anaGrpSelClkDigDiv4           2
    #define   MSK32Gbl_anaGrpCtl_anaGrpSelClkDigDiv4              0x00001800

    #define     BA_Gbl_anaGrpCtl_anaGrpPuOsc                   0x0011
    #define     B16Gbl_anaGrpCtl_anaGrpPuOsc                   0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpPuOsc                      13
    #define   LSb16Gbl_anaGrpCtl_anaGrpPuOsc                      13
    #define       bGbl_anaGrpCtl_anaGrpPuOsc                   1
    #define   MSK32Gbl_anaGrpCtl_anaGrpPuOsc                      0x00002000

    #define     BA_Gbl_anaGrpCtl_anaGrpSpeedOsc                0x0011
    #define     B16Gbl_anaGrpCtl_anaGrpSpeedOsc                0x0010
    #define   LSb32Gbl_anaGrpCtl_anaGrpSpeedOsc                   14
    #define   LSb16Gbl_anaGrpCtl_anaGrpSpeedOsc                   14
    #define       bGbl_anaGrpCtl_anaGrpSpeedOsc                2
    #define   MSK32Gbl_anaGrpCtl_anaGrpSpeedOsc                   0x0000C000

    #define     BA_Gbl_anaGrpCtl_anaGrpTestAna                 0x0012
    #define     B16Gbl_anaGrpCtl_anaGrpTestAna                 0x0012
    #define   LSb32Gbl_anaGrpCtl_anaGrpTestAna                    16
    #define   LSb16Gbl_anaGrpCtl_anaGrpTestAna                    0
    #define       bGbl_anaGrpCtl_anaGrpTestAna                 4
    #define   MSK32Gbl_anaGrpCtl_anaGrpTestAna                    0x000F0000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysPllCtl                               0x0014

    #define     BA_Gbl_sysPllCtl_sysPllPu                      0x0014
    #define     B16Gbl_sysPllCtl_sysPllPu                      0x0014
    #define   LSb32Gbl_sysPllCtl_sysPllPu                         0
    #define   LSb16Gbl_sysPllCtl_sysPllPu                         0
    #define       bGbl_sysPllCtl_sysPllPu                      1
    #define   MSK32Gbl_sysPllCtl_sysPllPu                         0x00000001

    #define     BA_Gbl_sysPllCtl_sysPllRfDiv                   0x0014
    #define     B16Gbl_sysPllCtl_sysPllRfDiv                   0x0014
    #define   LSb32Gbl_sysPllCtl_sysPllRfDiv                      1
    #define   LSb16Gbl_sysPllCtl_sysPllRfDiv                      1
    #define       bGbl_sysPllCtl_sysPllRfDiv                   5
    #define   MSK32Gbl_sysPllCtl_sysPllRfDiv                      0x0000003E

    #define     BA_Gbl_sysPllCtl_sysPllFbDiv                   0x0014
    #define     B16Gbl_sysPllCtl_sysPllFbDiv                   0x0014
    #define   LSb32Gbl_sysPllCtl_sysPllFbDiv                      6
    #define   LSb16Gbl_sysPllCtl_sysPllFbDiv                      6
    #define       bGbl_sysPllCtl_sysPllFbDiv                   9
    #define   MSK32Gbl_sysPllCtl_sysPllFbDiv                      0x00007FC0

    #define     BA_Gbl_sysPllCtl_sysPllVddm                    0x0015
    #define     B16Gbl_sysPllCtl_sysPllVddm                    0x0014
    #define   LSb32Gbl_sysPllCtl_sysPllVddm                       15
    #define   LSb16Gbl_sysPllCtl_sysPllVddm                       15
    #define       bGbl_sysPllCtl_sysPllVddm                    2
    #define   MSK32Gbl_sysPllCtl_sysPllVddm                       0x00018000
    #define        Gbl_sysPllCtl_sysPllVddm_1R40v                           0x0
    #define        Gbl_sysPllCtl_sysPllVddm_1R45v                           0x1
    #define        Gbl_sysPllCtl_sysPllVddm_1R50v                           0x2
    #define        Gbl_sysPllCtl_sysPllVddm_1R55v                           0x3

    #define     BA_Gbl_sysPllCtl_sysPllVddl                    0x0016
    #define     B16Gbl_sysPllCtl_sysPllVddl                    0x0016
    #define   LSb32Gbl_sysPllCtl_sysPllVddl                       17
    #define   LSb16Gbl_sysPllCtl_sysPllVddl                       1
    #define       bGbl_sysPllCtl_sysPllVddl                    4
    #define   MSK32Gbl_sysPllCtl_sysPllVddl                       0x001E0000
    #define        Gbl_sysPllCtl_sysPllVddl_0R78v                           0x1
    #define        Gbl_sysPllCtl_sysPllVddl_0R82v                           0x2
    #define        Gbl_sysPllCtl_sysPllVddl_0R86v                           0x3
    #define        Gbl_sysPllCtl_sysPllVddl_0R90v                           0x4
    #define        Gbl_sysPllCtl_sysPllVddl_0R94v                           0x5
    #define        Gbl_sysPllCtl_sysPllVddl_0R98v                           0x6
    #define        Gbl_sysPllCtl_sysPllVddl_1R02v                           0x7
    #define        Gbl_sysPllCtl_sysPllVddl_1R06v                           0x8
    #define        Gbl_sysPllCtl_sysPllVddl_1R10v                           0x9
    #define        Gbl_sysPllCtl_sysPllVddl_1R14v                           0xA
    #define        Gbl_sysPllCtl_sysPllVddl_1R16v                           0xB

    #define     BA_Gbl_sysPllCtl_sysPllVregIVRef               0x0016
    #define     B16Gbl_sysPllCtl_sysPllVregIVRef               0x0016
    #define   LSb32Gbl_sysPllCtl_sysPllVregIVRef                  21
    #define   LSb16Gbl_sysPllCtl_sysPllVregIVRef                  5
    #define       bGbl_sysPllCtl_sysPllVregIVRef               2
    #define   MSK32Gbl_sysPllCtl_sysPllVregIVRef                  0x00600000

    #define     BA_Gbl_sysPllCtl_sysPllIcp                     0x0016
    #define     B16Gbl_sysPllCtl_sysPllIcp                     0x0016
    #define   LSb32Gbl_sysPllCtl_sysPllIcp                        23
    #define   LSb16Gbl_sysPllCtl_sysPllIcp                        7
    #define       bGbl_sysPllCtl_sysPllIcp                     3
    #define   MSK32Gbl_sysPllCtl_sysPllIcp                        0x03800000
    #define        Gbl_sysPllCtl_sysPllIcp_2uA                              0x0
    #define        Gbl_sysPllCtl_sysPllIcp_3uA                              0x1
    #define        Gbl_sysPllCtl_sysPllIcp_4uA                              0x2
    #define        Gbl_sysPllCtl_sysPllIcp_5uA                              0x3
    #define        Gbl_sysPllCtl_sysPllIcp_6uA                              0x4
    #define        Gbl_sysPllCtl_sysPllIcp_7uA                              0x5
    #define        Gbl_sysPllCtl_sysPllIcp_8uA                              0x6
    #define        Gbl_sysPllCtl_sysPllIcp_9uA                              0x7

    #define     BA_Gbl_sysPllCtl_sysPllKvco                    0x0017
    #define     B16Gbl_sysPllCtl_sysPllKvco                    0x0016
    #define   LSb32Gbl_sysPllCtl_sysPllKvco                       26
    #define   LSb16Gbl_sysPllCtl_sysPllKvco                       10
    #define       bGbl_sysPllCtl_sysPllKvco                    4
    #define   MSK32Gbl_sysPllCtl_sysPllKvco                       0x3C000000
    #define        Gbl_sysPllCtl_sysPllKvco_1R25Gto1R35G                    0x1
    #define        Gbl_sysPllCtl_sysPllKvco_1R35Gto1R55G                    0x2
    #define        Gbl_sysPllCtl_sysPllKvco_1R55Gto1R75G                    0x3
    #define        Gbl_sysPllCtl_sysPllKvco_1R75Gto1R95G                    0x4
    #define        Gbl_sysPllCtl_sysPllKvco_1R95Gto2R15G                    0x5
    #define        Gbl_sysPllCtl_sysPllKvco_2R15Gto2R4G                     0x6
    #define        Gbl_sysPllCtl_sysPllKvco_2R4Gto2R5G                      0x7

    #define     BA_Gbl_sysPllCtl_sysPllCtune                   0x0017
    #define     B16Gbl_sysPllCtl_sysPllCtune                   0x0016
    #define   LSb32Gbl_sysPllCtl_sysPllCtune                      30
    #define   LSb16Gbl_sysPllCtl_sysPllCtune                      14
    #define       bGbl_sysPllCtl_sysPllCtune                   2
    #define   MSK32Gbl_sysPllCtl_sysPllCtune                      0xC0000000

    #define     RA_Gbl_sysPllCtl1                              0x0018

    #define     BA_Gbl_sysPllCtl_sysPllVcoRng                  0x0018
    #define     B16Gbl_sysPllCtl_sysPllVcoRng                  0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllVcoRng                     0
    #define   LSb16Gbl_sysPllCtl_sysPllVcoRng                     0
    #define       bGbl_sysPllCtl_sysPllVcoRng                  3
    #define   MSK32Gbl_sysPllCtl_sysPllVcoRng                     0x00000007

    #define     BA_Gbl_sysPllCtl_sysPllVcoDivSelDiff           0x0018
    #define     B16Gbl_sysPllCtl_sysPllVcoDivSelDiff           0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllVcoDivSelDiff              3
    #define   LSb16Gbl_sysPllCtl_sysPllVcoDivSelDiff              3
    #define       bGbl_sysPllCtl_sysPllVcoDivSelDiff           4
    #define   MSK32Gbl_sysPllCtl_sysPllVcoDivSelDiff              0x00000078

    #define     BA_Gbl_sysPllCtl_sysPllVcoDivSelSe             0x0018
    #define     B16Gbl_sysPllCtl_sysPllVcoDivSelSe             0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllVcoDivSelSe                7
    #define   LSb16Gbl_sysPllCtl_sysPllVcoDivSelSe                7
    #define       bGbl_sysPllCtl_sysPllVcoDivSelSe             4
    #define   MSK32Gbl_sysPllCtl_sysPllVcoDivSelSe                0x00000780

    #define     BA_Gbl_sysPllCtl_sysPllDiffClkEn               0x0019
    #define     B16Gbl_sysPllCtl_sysPllDiffClkEn               0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllDiffClkEn                  11
    #define   LSb16Gbl_sysPllCtl_sysPllDiffClkEn                  11
    #define       bGbl_sysPllCtl_sysPllDiffClkEn               1
    #define   MSK32Gbl_sysPllCtl_sysPllDiffClkEn                  0x00000800

    #define     BA_Gbl_sysPllCtl_sysPllSelVcoDiff              0x0019
    #define     B16Gbl_sysPllCtl_sysPllSelVcoDiff              0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllSelVcoDiff                 12
    #define   LSb16Gbl_sysPllCtl_sysPllSelVcoDiff                 12
    #define       bGbl_sysPllCtl_sysPllSelVcoDiff              1
    #define   MSK32Gbl_sysPllCtl_sysPllSelVcoDiff                 0x00001000

    #define     BA_Gbl_sysPllCtl_sysPllSelVcoClkSe             0x0019
    #define     B16Gbl_sysPllCtl_sysPllSelVcoClkSe             0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllSelVcoClkSe                13
    #define   LSb16Gbl_sysPllCtl_sysPllSelVcoClkSe                13
    #define       bGbl_sysPllCtl_sysPllSelVcoClkSe             1
    #define   MSK32Gbl_sysPllCtl_sysPllSelVcoClkSe                0x00002000

    #define     BA_Gbl_sysPllCtl_sysPllBypassFbDiv             0x0019
    #define     B16Gbl_sysPllCtl_sysPllBypassFbDiv             0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllBypassFbDiv                14
    #define   LSb16Gbl_sysPllCtl_sysPllBypassFbDiv                14
    #define       bGbl_sysPllCtl_sysPllBypassFbDiv             1
    #define   MSK32Gbl_sysPllCtl_sysPllBypassFbDiv                0x00004000

    #define     BA_Gbl_sysPllCtl_sysPllBypassEn                0x0019
    #define     B16Gbl_sysPllCtl_sysPllBypassEn                0x0018
    #define   LSb32Gbl_sysPllCtl_sysPllBypassEn                   15
    #define   LSb16Gbl_sysPllCtl_sysPllBypassEn                   15
    #define       bGbl_sysPllCtl_sysPllBypassEn                1
    #define   MSK32Gbl_sysPllCtl_sysPllBypassEn                   0x00008000

    #define     BA_Gbl_sysPllCtl_sysPllGateClkCtrl             0x001A
    #define     B16Gbl_sysPllCtl_sysPllGateClkCtrl             0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllGateClkCtrl                16
    #define   LSb16Gbl_sysPllCtl_sysPllGateClkCtrl                0
    #define       bGbl_sysPllCtl_sysPllGateClkCtrl             1
    #define   MSK32Gbl_sysPllCtl_sysPllGateClkCtrl                0x00010000

    #define     BA_Gbl_sysPllCtl_sysPllLineUpEn                0x001A
    #define     B16Gbl_sysPllCtl_sysPllLineUpEn                0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllLineUpEn                   17
    #define   LSb16Gbl_sysPllCtl_sysPllLineUpEn                   1
    #define       bGbl_sysPllCtl_sysPllLineUpEn                1
    #define   MSK32Gbl_sysPllCtl_sysPllLineUpEn                   0x00020000

    #define     BA_Gbl_sysPllCtl_sysPllIntpi                   0x001A
    #define     B16Gbl_sysPllCtl_sysPllIntpi                   0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllIntpi                      18
    #define   LSb16Gbl_sysPllCtl_sysPllIntpi                      2
    #define       bGbl_sysPllCtl_sysPllIntpi                   4
    #define   MSK32Gbl_sysPllCtl_sysPllIntpi                      0x003C0000

    #define     BA_Gbl_sysPllCtl_sysPllPiEn                    0x001A
    #define     B16Gbl_sysPllCtl_sysPllPiEn                    0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllPiEn                       22
    #define   LSb16Gbl_sysPllCtl_sysPllPiEn                       6
    #define       bGbl_sysPllCtl_sysPllPiEn                    1
    #define   MSK32Gbl_sysPllCtl_sysPllPiEn                       0x00400000

    #define     BA_Gbl_sysPllCtl_sysPllSscClkEn                0x001A
    #define     B16Gbl_sysPllCtl_sysPllSscClkEn                0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllSscClkEn                   23
    #define   LSb16Gbl_sysPllCtl_sysPllSscClkEn                   7
    #define       bGbl_sysPllCtl_sysPllSscClkEn                1
    #define   MSK32Gbl_sysPllCtl_sysPllSscClkEn                   0x00800000

    #define     BA_Gbl_sysPllCtl_sysPllClkDetEn                0x001B
    #define     B16Gbl_sysPllCtl_sysPllClkDetEn                0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllClkDetEn                   24
    #define   LSb16Gbl_sysPllCtl_sysPllClkDetEn                   8
    #define       bGbl_sysPllCtl_sysPllClkDetEn                1
    #define   MSK32Gbl_sysPllCtl_sysPllClkDetEn                   0x01000000

    #define     BA_Gbl_sysPllCtl_sysPllFreqOffsetEn            0x001B
    #define     B16Gbl_sysPllCtl_sysPllFreqOffsetEn            0x001A
    #define   LSb32Gbl_sysPllCtl_sysPllFreqOffsetEn               25
    #define   LSb16Gbl_sysPllCtl_sysPllFreqOffsetEn               9
    #define       bGbl_sysPllCtl_sysPllFreqOffsetEn            1
    #define   MSK32Gbl_sysPllCtl_sysPllFreqOffsetEn               0x02000000

    #define     RA_Gbl_sysPllCtl2                              0x001C

    #define     BA_Gbl_sysPllCtl_sysPllFreqOffset              0x001C
    #define     B16Gbl_sysPllCtl_sysPllFreqOffset              0x001C
    #define   LSb32Gbl_sysPllCtl_sysPllFreqOffset                 0
    #define   LSb16Gbl_sysPllCtl_sysPllFreqOffset                 0
    #define       bGbl_sysPllCtl_sysPllFreqOffset              17
    #define   MSK32Gbl_sysPllCtl_sysPllFreqOffset                 0x0001FFFF

    #define     BA_Gbl_sysPllCtl_sysPllFreqOffsetModeSel       0x001E
    #define     B16Gbl_sysPllCtl_sysPllFreqOffsetModeSel       0x001E
    #define   LSb32Gbl_sysPllCtl_sysPllFreqOffsetModeSel          17
    #define   LSb16Gbl_sysPllCtl_sysPllFreqOffsetModeSel          1
    #define       bGbl_sysPllCtl_sysPllFreqOffsetModeSel       1
    #define   MSK32Gbl_sysPllCtl_sysPllFreqOffsetModeSel          0x00020000

    #define     BA_Gbl_sysPllCtl_sysPllFreqOffsetValid         0x001E
    #define     B16Gbl_sysPllCtl_sysPllFreqOffsetValid         0x001E
    #define   LSb32Gbl_sysPllCtl_sysPllFreqOffsetValid            18
    #define   LSb16Gbl_sysPllCtl_sysPllFreqOffsetValid            2
    #define       bGbl_sysPllCtl_sysPllFreqOffsetValid         1
    #define   MSK32Gbl_sysPllCtl_sysPllFreqOffsetValid            0x00040000

    #define     BA_Gbl_sysPllCtl_sysPllSscEn                   0x001E
    #define     B16Gbl_sysPllCtl_sysPllSscEn                   0x001E
    #define   LSb32Gbl_sysPllCtl_sysPllSscEn                      19
    #define   LSb16Gbl_sysPllCtl_sysPllSscEn                      3
    #define       bGbl_sysPllCtl_sysPllSscEn                   1
    #define   MSK32Gbl_sysPllCtl_sysPllSscEn                      0x00080000
    #define        Gbl_sysPllCtl_sysPllSscEn_Disable                        0x0
    #define        Gbl_sysPllCtl_sysPllSscEn_Enable                         0x1

    #define     BA_Gbl_sysPllCtl_sysPllSscmode                 0x001E
    #define     B16Gbl_sysPllCtl_sysPllSscmode                 0x001E
    #define   LSb32Gbl_sysPllCtl_sysPllSscmode                    20
    #define   LSb16Gbl_sysPllCtl_sysPllSscmode                    4
    #define       bGbl_sysPllCtl_sysPllSscmode                 1
    #define   MSK32Gbl_sysPllCtl_sysPllSscmode                    0x00100000
    #define        Gbl_sysPllCtl_sysPllSscmode_Centre                       0x0
    #define        Gbl_sysPllCtl_sysPllSscmode_Down                         0x1

    #define     RA_Gbl_sysPllCtl3                              0x0020

    #define     BA_Gbl_sysPllCtl_sysPllSscFdiv                 0x0020
    #define     B16Gbl_sysPllCtl_sysPllSscFdiv                 0x0020
    #define   LSb32Gbl_sysPllCtl_sysPllSscFdiv                    0
    #define   LSb16Gbl_sysPllCtl_sysPllSscFdiv                    0
    #define       bGbl_sysPllCtl_sysPllSscFdiv                 16
    #define   MSK32Gbl_sysPllCtl_sysPllSscFdiv                    0x0000FFFF

    #define     BA_Gbl_sysPllCtl_sysPllSscRnge                 0x0022
    #define     B16Gbl_sysPllCtl_sysPllSscRnge                 0x0022
    #define   LSb32Gbl_sysPllCtl_sysPllSscRnge                    16
    #define   LSb16Gbl_sysPllCtl_sysPllSscRnge                    0
    #define       bGbl_sysPllCtl_sysPllSscRnge                 11
    #define   MSK32Gbl_sysPllCtl_sysPllSscRnge                    0x07FF0000

    #define     BA_Gbl_sysPllCtl_sysPllSscResetExt             0x0023
    #define     B16Gbl_sysPllCtl_sysPllSscResetExt             0x0022
    #define   LSb32Gbl_sysPllCtl_sysPllSscResetExt                27
    #define   LSb16Gbl_sysPllCtl_sysPllSscResetExt                11
    #define       bGbl_sysPllCtl_sysPllSscResetExt             1
    #define   MSK32Gbl_sysPllCtl_sysPllSscResetExt                0x08000000
    #define        Gbl_sysPllCtl_sysPllSscResetExt_Int                      0x0
    #define        Gbl_sysPllCtl_sysPllSscResetExt_Ext                      0x1

    #define     BA_Gbl_sysPllCtl_sysPllTestMon                 0x0023
    #define     B16Gbl_sysPllCtl_sysPllTestMon                 0x0022
    #define   LSb32Gbl_sysPllCtl_sysPllTestMon                    28
    #define   LSb16Gbl_sysPllCtl_sysPllTestMon                    12
    #define       bGbl_sysPllCtl_sysPllTestMon                 4
    #define   MSK32Gbl_sysPllCtl_sysPllTestMon                    0xF0000000

    #define     RA_Gbl_sysPllCtl4                              0x0024

    #define     BA_Gbl_sysPllCtl_sysPllRsvdIn                  0x0024
    #define     B16Gbl_sysPllCtl_sysPllRsvdIn                  0x0024
    #define   LSb32Gbl_sysPllCtl_sysPllRsvdIn                     0
    #define   LSb16Gbl_sysPllCtl_sysPllRsvdIn                     0
    #define       bGbl_sysPllCtl_sysPllRsvdIn                  4
    #define   MSK32Gbl_sysPllCtl_sysPllRsvdIn                     0x0000000F

    #define     BA_Gbl_sysPllCtl_sysPllExtRst                  0x0024
    #define     B16Gbl_sysPllCtl_sysPllExtRst                  0x0024
    #define   LSb32Gbl_sysPllCtl_sysPllExtRst                     4
    #define   LSb16Gbl_sysPllCtl_sysPllExtRst                     4
    #define       bGbl_sysPllCtl_sysPllExtRst                  1
    #define   MSK32Gbl_sysPllCtl_sysPllExtRst                     0x00000010
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_memPllCtl                               0x0028

    #define     BA_Gbl_memPllCtl_memPllPu                      0x0028
    #define     B16Gbl_memPllCtl_memPllPu                      0x0028
    #define   LSb32Gbl_memPllCtl_memPllPu                         0
    #define   LSb16Gbl_memPllCtl_memPllPu                         0
    #define       bGbl_memPllCtl_memPllPu                      1
    #define   MSK32Gbl_memPllCtl_memPllPu                         0x00000001

    #define     BA_Gbl_memPllCtl_memPllRfDiv                   0x0028
    #define     B16Gbl_memPllCtl_memPllRfDiv                   0x0028
    #define   LSb32Gbl_memPllCtl_memPllRfDiv                      1
    #define   LSb16Gbl_memPllCtl_memPllRfDiv                      1
    #define       bGbl_memPllCtl_memPllRfDiv                   5
    #define   MSK32Gbl_memPllCtl_memPllRfDiv                      0x0000003E

    #define     BA_Gbl_memPllCtl_memPllFbDiv                   0x0028
    #define     B16Gbl_memPllCtl_memPllFbDiv                   0x0028
    #define   LSb32Gbl_memPllCtl_memPllFbDiv                      6
    #define   LSb16Gbl_memPllCtl_memPllFbDiv                      6
    #define       bGbl_memPllCtl_memPllFbDiv                   9
    #define   MSK32Gbl_memPllCtl_memPllFbDiv                      0x00007FC0

    #define     BA_Gbl_memPllCtl_memPllVddm                    0x0029
    #define     B16Gbl_memPllCtl_memPllVddm                    0x0028
    #define   LSb32Gbl_memPllCtl_memPllVddm                       15
    #define   LSb16Gbl_memPllCtl_memPllVddm                       15
    #define       bGbl_memPllCtl_memPllVddm                    2
    #define   MSK32Gbl_memPllCtl_memPllVddm                       0x00018000
    #define        Gbl_memPllCtl_memPllVddm_1R40v                           0x0
    #define        Gbl_memPllCtl_memPllVddm_1R45v                           0x1
    #define        Gbl_memPllCtl_memPllVddm_1R50v                           0x2
    #define        Gbl_memPllCtl_memPllVddm_1R55v                           0x3

    #define     BA_Gbl_memPllCtl_memPllVddl                    0x002A
    #define     B16Gbl_memPllCtl_memPllVddl                    0x002A
    #define   LSb32Gbl_memPllCtl_memPllVddl                       17
    #define   LSb16Gbl_memPllCtl_memPllVddl                       1
    #define       bGbl_memPllCtl_memPllVddl                    4
    #define   MSK32Gbl_memPllCtl_memPllVddl                       0x001E0000
    #define        Gbl_memPllCtl_memPllVddl_0R78v                           0x1
    #define        Gbl_memPllCtl_memPllVddl_0R82v                           0x2
    #define        Gbl_memPllCtl_memPllVddl_0R86v                           0x3
    #define        Gbl_memPllCtl_memPllVddl_0R90v                           0x4

    #define     BA_Gbl_memPllCtl_memPllVregIVRef               0x002A
    #define     B16Gbl_memPllCtl_memPllVregIVRef               0x002A
    #define   LSb32Gbl_memPllCtl_memPllVregIVRef                  21
    #define   LSb16Gbl_memPllCtl_memPllVregIVRef                  5
    #define       bGbl_memPllCtl_memPllVregIVRef               2
    #define   MSK32Gbl_memPllCtl_memPllVregIVRef                  0x00600000

    #define     BA_Gbl_memPllCtl_memPllIcp                     0x002A
    #define     B16Gbl_memPllCtl_memPllIcp                     0x002A
    #define   LSb32Gbl_memPllCtl_memPllIcp                        23
    #define   LSb16Gbl_memPllCtl_memPllIcp                        7
    #define       bGbl_memPllCtl_memPllIcp                     3
    #define   MSK32Gbl_memPllCtl_memPllIcp                        0x03800000
    #define        Gbl_memPllCtl_memPllIcp_2uA                              0x0
    #define        Gbl_memPllCtl_memPllIcp_3uA                              0x1
    #define        Gbl_memPllCtl_memPllIcp_4uA                              0x2
    #define        Gbl_memPllCtl_memPllIcp_5uA                              0x3
    #define        Gbl_memPllCtl_memPllIcp_6uA                              0x4
    #define        Gbl_memPllCtl_memPllIcp_7uA                              0x5
    #define        Gbl_memPllCtl_memPllIcp_8uA                              0x6
    #define        Gbl_memPllCtl_memPllIcp_9uA                              0x7

    #define     BA_Gbl_memPllCtl_memPllKvco                    0x002B
    #define     B16Gbl_memPllCtl_memPllKvco                    0x002A
    #define   LSb32Gbl_memPllCtl_memPllKvco                       26
    #define   LSb16Gbl_memPllCtl_memPllKvco                       10
    #define       bGbl_memPllCtl_memPllKvco                    4
    #define   MSK32Gbl_memPllCtl_memPllKvco                       0x3C000000
    #define        Gbl_memPllCtl_memPllKvco_1R25Gto1R35G                    0x1
    #define        Gbl_memPllCtl_memPllKvco_1R35Gto1R55G                    0x2
    #define        Gbl_memPllCtl_memPllKvco_1R55Gto1R75G                    0x3
    #define        Gbl_memPllCtl_memPllKvco_1R75Gto1R95G                    0x4
    #define        Gbl_memPllCtl_memPllKvco_1R95Gto2R15G                    0x5
    #define        Gbl_memPllCtl_memPllKvco_2R15Gto2R4G                     0x6
    #define        Gbl_memPllCtl_memPllKvco_2R4Gto2R5G                      0x7

    #define     BA_Gbl_memPllCtl_memPllCtune                   0x002B
    #define     B16Gbl_memPllCtl_memPllCtune                   0x002A
    #define   LSb32Gbl_memPllCtl_memPllCtune                      30
    #define   LSb16Gbl_memPllCtl_memPllCtune                      14
    #define       bGbl_memPllCtl_memPllCtune                   2
    #define   MSK32Gbl_memPllCtl_memPllCtune                      0xC0000000

    #define     RA_Gbl_memPllCtl1                              0x002C

    #define     BA_Gbl_memPllCtl_memPllVcoRng                  0x002C
    #define     B16Gbl_memPllCtl_memPllVcoRng                  0x002C
    #define   LSb32Gbl_memPllCtl_memPllVcoRng                     0
    #define   LSb16Gbl_memPllCtl_memPllVcoRng                     0
    #define       bGbl_memPllCtl_memPllVcoRng                  3
    #define   MSK32Gbl_memPllCtl_memPllVcoRng                     0x00000007

    #define     BA_Gbl_memPllCtl_memPllVcoDivSelDiff           0x002C
    #define     B16Gbl_memPllCtl_memPllVcoDivSelDiff           0x002C
    #define   LSb32Gbl_memPllCtl_memPllVcoDivSelDiff              3
    #define   LSb16Gbl_memPllCtl_memPllVcoDivSelDiff              3
    #define       bGbl_memPllCtl_memPllVcoDivSelDiff           4
    #define   MSK32Gbl_memPllCtl_memPllVcoDivSelDiff              0x00000078

    #define     BA_Gbl_memPllCtl_memPllVcoDivSelSe             0x002C
    #define     B16Gbl_memPllCtl_memPllVcoDivSelSe             0x002C
    #define   LSb32Gbl_memPllCtl_memPllVcoDivSelSe                7
    #define   LSb16Gbl_memPllCtl_memPllVcoDivSelSe                7
    #define       bGbl_memPllCtl_memPllVcoDivSelSe             4
    #define   MSK32Gbl_memPllCtl_memPllVcoDivSelSe                0x00000780

    #define     BA_Gbl_memPllCtl_memPllDiffClkEn               0x002D
    #define     B16Gbl_memPllCtl_memPllDiffClkEn               0x002C
    #define   LSb32Gbl_memPllCtl_memPllDiffClkEn                  11
    #define   LSb16Gbl_memPllCtl_memPllDiffClkEn                  11
    #define       bGbl_memPllCtl_memPllDiffClkEn               1
    #define   MSK32Gbl_memPllCtl_memPllDiffClkEn                  0x00000800

    #define     BA_Gbl_memPllCtl_memPllSelVcoDiff              0x002D
    #define     B16Gbl_memPllCtl_memPllSelVcoDiff              0x002C
    #define   LSb32Gbl_memPllCtl_memPllSelVcoDiff                 12
    #define   LSb16Gbl_memPllCtl_memPllSelVcoDiff                 12
    #define       bGbl_memPllCtl_memPllSelVcoDiff              1
    #define   MSK32Gbl_memPllCtl_memPllSelVcoDiff                 0x00001000

    #define     BA_Gbl_memPllCtl_memPllSelVcoClkSe             0x002D
    #define     B16Gbl_memPllCtl_memPllSelVcoClkSe             0x002C
    #define   LSb32Gbl_memPllCtl_memPllSelVcoClkSe                13
    #define   LSb16Gbl_memPllCtl_memPllSelVcoClkSe                13
    #define       bGbl_memPllCtl_memPllSelVcoClkSe             1
    #define   MSK32Gbl_memPllCtl_memPllSelVcoClkSe                0x00002000

    #define     BA_Gbl_memPllCtl_memPllBypassFbDiv             0x002D
    #define     B16Gbl_memPllCtl_memPllBypassFbDiv             0x002C
    #define   LSb32Gbl_memPllCtl_memPllBypassFbDiv                14
    #define   LSb16Gbl_memPllCtl_memPllBypassFbDiv                14
    #define       bGbl_memPllCtl_memPllBypassFbDiv             1
    #define   MSK32Gbl_memPllCtl_memPllBypassFbDiv                0x00004000

    #define     BA_Gbl_memPllCtl_memPllBypassEn                0x002D
    #define     B16Gbl_memPllCtl_memPllBypassEn                0x002C
    #define   LSb32Gbl_memPllCtl_memPllBypassEn                   15
    #define   LSb16Gbl_memPllCtl_memPllBypassEn                   15
    #define       bGbl_memPllCtl_memPllBypassEn                1
    #define   MSK32Gbl_memPllCtl_memPllBypassEn                   0x00008000

    #define     BA_Gbl_memPllCtl_memPllGateClkCtrl             0x002E
    #define     B16Gbl_memPllCtl_memPllGateClkCtrl             0x002E
    #define   LSb32Gbl_memPllCtl_memPllGateClkCtrl                16
    #define   LSb16Gbl_memPllCtl_memPllGateClkCtrl                0
    #define       bGbl_memPllCtl_memPllGateClkCtrl             1
    #define   MSK32Gbl_memPllCtl_memPllGateClkCtrl                0x00010000

    #define     BA_Gbl_memPllCtl_memPllLineUpEn                0x002E
    #define     B16Gbl_memPllCtl_memPllLineUpEn                0x002E
    #define   LSb32Gbl_memPllCtl_memPllLineUpEn                   17
    #define   LSb16Gbl_memPllCtl_memPllLineUpEn                   1
    #define       bGbl_memPllCtl_memPllLineUpEn                1
    #define   MSK32Gbl_memPllCtl_memPllLineUpEn                   0x00020000

    #define     BA_Gbl_memPllCtl_memPllIntpi                   0x002E
    #define     B16Gbl_memPllCtl_memPllIntpi                   0x002E
    #define   LSb32Gbl_memPllCtl_memPllIntpi                      18
    #define   LSb16Gbl_memPllCtl_memPllIntpi                      2
    #define       bGbl_memPllCtl_memPllIntpi                   4
    #define   MSK32Gbl_memPllCtl_memPllIntpi                      0x003C0000

    #define     BA_Gbl_memPllCtl_memPllPiEn                    0x002E
    #define     B16Gbl_memPllCtl_memPllPiEn                    0x002E
    #define   LSb32Gbl_memPllCtl_memPllPiEn                       22
    #define   LSb16Gbl_memPllCtl_memPllPiEn                       6
    #define       bGbl_memPllCtl_memPllPiEn                    1
    #define   MSK32Gbl_memPllCtl_memPllPiEn                       0x00400000

    #define     BA_Gbl_memPllCtl_memPllSscClkEn                0x002E
    #define     B16Gbl_memPllCtl_memPllSscClkEn                0x002E
    #define   LSb32Gbl_memPllCtl_memPllSscClkEn                   23
    #define   LSb16Gbl_memPllCtl_memPllSscClkEn                   7
    #define       bGbl_memPllCtl_memPllSscClkEn                1
    #define   MSK32Gbl_memPllCtl_memPllSscClkEn                   0x00800000

    #define     BA_Gbl_memPllCtl_memPllClkDetEn                0x002F
    #define     B16Gbl_memPllCtl_memPllClkDetEn                0x002E
    #define   LSb32Gbl_memPllCtl_memPllClkDetEn                   24
    #define   LSb16Gbl_memPllCtl_memPllClkDetEn                   8
    #define       bGbl_memPllCtl_memPllClkDetEn                1
    #define   MSK32Gbl_memPllCtl_memPllClkDetEn                   0x01000000

    #define     BA_Gbl_memPllCtl_memPllFreqOffsetEn            0x002F
    #define     B16Gbl_memPllCtl_memPllFreqOffsetEn            0x002E
    #define   LSb32Gbl_memPllCtl_memPllFreqOffsetEn               25
    #define   LSb16Gbl_memPllCtl_memPllFreqOffsetEn               9
    #define       bGbl_memPllCtl_memPllFreqOffsetEn            1
    #define   MSK32Gbl_memPllCtl_memPllFreqOffsetEn               0x02000000

    #define     RA_Gbl_memPllCtl2                              0x0030

    #define     BA_Gbl_memPllCtl_memPllFreqOffset              0x0030
    #define     B16Gbl_memPllCtl_memPllFreqOffset              0x0030
    #define   LSb32Gbl_memPllCtl_memPllFreqOffset                 0
    #define   LSb16Gbl_memPllCtl_memPllFreqOffset                 0
    #define       bGbl_memPllCtl_memPllFreqOffset              17
    #define   MSK32Gbl_memPllCtl_memPllFreqOffset                 0x0001FFFF

    #define     BA_Gbl_memPllCtl_memPllFreqOffsetModeSel       0x0032
    #define     B16Gbl_memPllCtl_memPllFreqOffsetModeSel       0x0032
    #define   LSb32Gbl_memPllCtl_memPllFreqOffsetModeSel          17
    #define   LSb16Gbl_memPllCtl_memPllFreqOffsetModeSel          1
    #define       bGbl_memPllCtl_memPllFreqOffsetModeSel       1
    #define   MSK32Gbl_memPllCtl_memPllFreqOffsetModeSel          0x00020000

    #define     BA_Gbl_memPllCtl_memPllFreqOffsetValid         0x0032
    #define     B16Gbl_memPllCtl_memPllFreqOffsetValid         0x0032
    #define   LSb32Gbl_memPllCtl_memPllFreqOffsetValid            18
    #define   LSb16Gbl_memPllCtl_memPllFreqOffsetValid            2
    #define       bGbl_memPllCtl_memPllFreqOffsetValid         1
    #define   MSK32Gbl_memPllCtl_memPllFreqOffsetValid            0x00040000

    #define     BA_Gbl_memPllCtl_memPllSscEn                   0x0032
    #define     B16Gbl_memPllCtl_memPllSscEn                   0x0032
    #define   LSb32Gbl_memPllCtl_memPllSscEn                      19
    #define   LSb16Gbl_memPllCtl_memPllSscEn                      3
    #define       bGbl_memPllCtl_memPllSscEn                   1
    #define   MSK32Gbl_memPllCtl_memPllSscEn                      0x00080000
    #define        Gbl_memPllCtl_memPllSscEn_Disable                        0x0
    #define        Gbl_memPllCtl_memPllSscEn_Enable                         0x1

    #define     BA_Gbl_memPllCtl_memPllSscmode                 0x0032
    #define     B16Gbl_memPllCtl_memPllSscmode                 0x0032
    #define   LSb32Gbl_memPllCtl_memPllSscmode                    20
    #define   LSb16Gbl_memPllCtl_memPllSscmode                    4
    #define       bGbl_memPllCtl_memPllSscmode                 1
    #define   MSK32Gbl_memPllCtl_memPllSscmode                    0x00100000
    #define        Gbl_memPllCtl_memPllSscmode_Centre                       0x0
    #define        Gbl_memPllCtl_memPllSscmode_Down                         0x1

    #define     RA_Gbl_memPllCtl3                              0x0034

    #define     BA_Gbl_memPllCtl_memPllSscFdiv                 0x0034
    #define     B16Gbl_memPllCtl_memPllSscFdiv                 0x0034
    #define   LSb32Gbl_memPllCtl_memPllSscFdiv                    0
    #define   LSb16Gbl_memPllCtl_memPllSscFdiv                    0
    #define       bGbl_memPllCtl_memPllSscFdiv                 16
    #define   MSK32Gbl_memPllCtl_memPllSscFdiv                    0x0000FFFF

    #define     BA_Gbl_memPllCtl_memPllSscRnge                 0x0036
    #define     B16Gbl_memPllCtl_memPllSscRnge                 0x0036
    #define   LSb32Gbl_memPllCtl_memPllSscRnge                    16
    #define   LSb16Gbl_memPllCtl_memPllSscRnge                    0
    #define       bGbl_memPllCtl_memPllSscRnge                 11
    #define   MSK32Gbl_memPllCtl_memPllSscRnge                    0x07FF0000

    #define     BA_Gbl_memPllCtl_memPllSscResetExt             0x0037
    #define     B16Gbl_memPllCtl_memPllSscResetExt             0x0036
    #define   LSb32Gbl_memPllCtl_memPllSscResetExt                27
    #define   LSb16Gbl_memPllCtl_memPllSscResetExt                11
    #define       bGbl_memPllCtl_memPllSscResetExt             1
    #define   MSK32Gbl_memPllCtl_memPllSscResetExt                0x08000000
    #define        Gbl_memPllCtl_memPllSscResetExt_Int                      0x0
    #define        Gbl_memPllCtl_memPllSscResetExt_Ext                      0x1

    #define     BA_Gbl_memPllCtl_memPllTestMon                 0x0037
    #define     B16Gbl_memPllCtl_memPllTestMon                 0x0036
    #define   LSb32Gbl_memPllCtl_memPllTestMon                    28
    #define   LSb16Gbl_memPllCtl_memPllTestMon                    12
    #define       bGbl_memPllCtl_memPllTestMon                 4
    #define   MSK32Gbl_memPllCtl_memPllTestMon                    0xF0000000

    #define     RA_Gbl_memPllCtl4                              0x0038

    #define     BA_Gbl_memPllCtl_memPllRsvdIn                  0x0038
    #define     B16Gbl_memPllCtl_memPllRsvdIn                  0x0038
    #define   LSb32Gbl_memPllCtl_memPllRsvdIn                     0
    #define   LSb16Gbl_memPllCtl_memPllRsvdIn                     0
    #define       bGbl_memPllCtl_memPllRsvdIn                  4
    #define   MSK32Gbl_memPllCtl_memPllRsvdIn                     0x0000000F

    #define     BA_Gbl_memPllCtl_memPllExtRst                  0x0038
    #define     B16Gbl_memPllCtl_memPllExtRst                  0x0038
    #define   LSb32Gbl_memPllCtl_memPllExtRst                     4
    #define   LSb16Gbl_memPllCtl_memPllExtRst                     4
    #define       bGbl_memPllCtl_memPllExtRst                  1
    #define   MSK32Gbl_memPllCtl_memPllExtRst                     0x00000010
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpuPllCtl                               0x003C

    #define     BA_Gbl_cpuPllCtl_cpuPllPu                      0x003C
    #define     B16Gbl_cpuPllCtl_cpuPllPu                      0x003C
    #define   LSb32Gbl_cpuPllCtl_cpuPllPu                         0
    #define   LSb16Gbl_cpuPllCtl_cpuPllPu                         0
    #define       bGbl_cpuPllCtl_cpuPllPu                      1
    #define   MSK32Gbl_cpuPllCtl_cpuPllPu                         0x00000001

    #define     BA_Gbl_cpuPllCtl_cpuPllRfDiv                   0x003C
    #define     B16Gbl_cpuPllCtl_cpuPllRfDiv                   0x003C
    #define   LSb32Gbl_cpuPllCtl_cpuPllRfDiv                      1
    #define   LSb16Gbl_cpuPllCtl_cpuPllRfDiv                      1
    #define       bGbl_cpuPllCtl_cpuPllRfDiv                   5
    #define   MSK32Gbl_cpuPllCtl_cpuPllRfDiv                      0x0000003E

    #define     BA_Gbl_cpuPllCtl_cpuPllFbDiv                   0x003C
    #define     B16Gbl_cpuPllCtl_cpuPllFbDiv                   0x003C
    #define   LSb32Gbl_cpuPllCtl_cpuPllFbDiv                      6
    #define   LSb16Gbl_cpuPllCtl_cpuPllFbDiv                      6
    #define       bGbl_cpuPllCtl_cpuPllFbDiv                   9
    #define   MSK32Gbl_cpuPllCtl_cpuPllFbDiv                      0x00007FC0

    #define     BA_Gbl_cpuPllCtl_cpuPllVddm                    0x003D
    #define     B16Gbl_cpuPllCtl_cpuPllVddm                    0x003C
    #define   LSb32Gbl_cpuPllCtl_cpuPllVddm                       15
    #define   LSb16Gbl_cpuPllCtl_cpuPllVddm                       15
    #define       bGbl_cpuPllCtl_cpuPllVddm                    2
    #define   MSK32Gbl_cpuPllCtl_cpuPllVddm                       0x00018000
    #define        Gbl_cpuPllCtl_cpuPllVddm_1R40v                           0x0
    #define        Gbl_cpuPllCtl_cpuPllVddm_1R45v                           0x1
    #define        Gbl_cpuPllCtl_cpuPllVddm_1R50v                           0x2
    #define        Gbl_cpuPllCtl_cpuPllVddm_1R55v                           0x3

    #define     BA_Gbl_cpuPllCtl_cpuPllVddl                    0x003E
    #define     B16Gbl_cpuPllCtl_cpuPllVddl                    0x003E
    #define   LSb32Gbl_cpuPllCtl_cpuPllVddl                       17
    #define   LSb16Gbl_cpuPllCtl_cpuPllVddl                       1
    #define       bGbl_cpuPllCtl_cpuPllVddl                    4
    #define   MSK32Gbl_cpuPllCtl_cpuPllVddl                       0x001E0000
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R78v                           0x1
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R82v                           0x2
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R86v                           0x3
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R90v                           0x4
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R94v                           0x5
    #define        Gbl_cpuPllCtl_cpuPllVddl_0R98v                           0x6
    #define        Gbl_cpuPllCtl_cpuPllVddl_1R02v                           0x7
    #define        Gbl_cpuPllCtl_cpuPllVddl_1R06v                           0x8
    #define        Gbl_cpuPllCtl_cpuPllVddl_1R10v                           0x9
    #define        Gbl_cpuPllCtl_cpuPllVddl_1R14v                           0xA
    #define        Gbl_cpuPllCtl_cpuPllVddl_1R16v                           0xB

    #define     BA_Gbl_cpuPllCtl_cpuPllVregIVRef               0x003E
    #define     B16Gbl_cpuPllCtl_cpuPllVregIVRef               0x003E
    #define   LSb32Gbl_cpuPllCtl_cpuPllVregIVRef                  21
    #define   LSb16Gbl_cpuPllCtl_cpuPllVregIVRef                  5
    #define       bGbl_cpuPllCtl_cpuPllVregIVRef               2
    #define   MSK32Gbl_cpuPllCtl_cpuPllVregIVRef                  0x00600000

    #define     BA_Gbl_cpuPllCtl_cpuPllIcp                     0x003E
    #define     B16Gbl_cpuPllCtl_cpuPllIcp                     0x003E
    #define   LSb32Gbl_cpuPllCtl_cpuPllIcp                        23
    #define   LSb16Gbl_cpuPllCtl_cpuPllIcp                        7
    #define       bGbl_cpuPllCtl_cpuPllIcp                     3
    #define   MSK32Gbl_cpuPllCtl_cpuPllIcp                        0x03800000
    #define        Gbl_cpuPllCtl_cpuPllIcp_2uA                              0x0
    #define        Gbl_cpuPllCtl_cpuPllIcp_3uA                              0x1
    #define        Gbl_cpuPllCtl_cpuPllIcp_4uA                              0x2
    #define        Gbl_cpuPllCtl_cpuPllIcp_5uA                              0x3
    #define        Gbl_cpuPllCtl_cpuPllIcp_6uA                              0x4
    #define        Gbl_cpuPllCtl_cpuPllIcp_7uA                              0x5
    #define        Gbl_cpuPllCtl_cpuPllIcp_8uA                              0x6
    #define        Gbl_cpuPllCtl_cpuPllIcp_9uA                              0x7

    #define     BA_Gbl_cpuPllCtl_cpuPllKvco                    0x003F
    #define     B16Gbl_cpuPllCtl_cpuPllKvco                    0x003E
    #define   LSb32Gbl_cpuPllCtl_cpuPllKvco                       26
    #define   LSb16Gbl_cpuPllCtl_cpuPllKvco                       10
    #define       bGbl_cpuPllCtl_cpuPllKvco                    4
    #define   MSK32Gbl_cpuPllCtl_cpuPllKvco                       0x3C000000
    #define        Gbl_cpuPllCtl_cpuPllKvco_1R25Gto1R35G                    0x1
    #define        Gbl_cpuPllCtl_cpuPllKvco_1R35Gto1R55G                    0x2
    #define        Gbl_cpuPllCtl_cpuPllKvco_1R55Gto1R75G                    0x3
    #define        Gbl_cpuPllCtl_cpuPllKvco_1R75Gto1R95G                    0x4
    #define        Gbl_cpuPllCtl_cpuPllKvco_1R95Gto2R15G                    0x5
    #define        Gbl_cpuPllCtl_cpuPllKvco_2R15Gto2R4G                     0x6
    #define        Gbl_cpuPllCtl_cpuPllKvco_2R4Gto2R5G                      0x7

    #define     BA_Gbl_cpuPllCtl_cpuPllCtune                   0x003F
    #define     B16Gbl_cpuPllCtl_cpuPllCtune                   0x003E
    #define   LSb32Gbl_cpuPllCtl_cpuPllCtune                      30
    #define   LSb16Gbl_cpuPllCtl_cpuPllCtune                      14
    #define       bGbl_cpuPllCtl_cpuPllCtune                   2
    #define   MSK32Gbl_cpuPllCtl_cpuPllCtune                      0xC0000000

    #define     RA_Gbl_cpuPllCtl1                              0x0040

    #define     BA_Gbl_cpuPllCtl_cpuPllVcoRng                  0x0040
    #define     B16Gbl_cpuPllCtl_cpuPllVcoRng                  0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllVcoRng                     0
    #define   LSb16Gbl_cpuPllCtl_cpuPllVcoRng                     0
    #define       bGbl_cpuPllCtl_cpuPllVcoRng                  3
    #define   MSK32Gbl_cpuPllCtl_cpuPllVcoRng                     0x00000007

    #define     BA_Gbl_cpuPllCtl_cpuPllVcoDivSelDiff           0x0040
    #define     B16Gbl_cpuPllCtl_cpuPllVcoDivSelDiff           0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllVcoDivSelDiff              3
    #define   LSb16Gbl_cpuPllCtl_cpuPllVcoDivSelDiff              3
    #define       bGbl_cpuPllCtl_cpuPllVcoDivSelDiff           4
    #define   MSK32Gbl_cpuPllCtl_cpuPllVcoDivSelDiff              0x00000078

    #define     BA_Gbl_cpuPllCtl_cpuPllVcoDivSelSe             0x0040
    #define     B16Gbl_cpuPllCtl_cpuPllVcoDivSelSe             0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllVcoDivSelSe                7
    #define   LSb16Gbl_cpuPllCtl_cpuPllVcoDivSelSe                7
    #define       bGbl_cpuPllCtl_cpuPllVcoDivSelSe             4
    #define   MSK32Gbl_cpuPllCtl_cpuPllVcoDivSelSe                0x00000780

    #define     BA_Gbl_cpuPllCtl_cpuPllDiffClkEn               0x0041
    #define     B16Gbl_cpuPllCtl_cpuPllDiffClkEn               0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllDiffClkEn                  11
    #define   LSb16Gbl_cpuPllCtl_cpuPllDiffClkEn                  11
    #define       bGbl_cpuPllCtl_cpuPllDiffClkEn               1
    #define   MSK32Gbl_cpuPllCtl_cpuPllDiffClkEn                  0x00000800

    #define     BA_Gbl_cpuPllCtl_cpuPllSelVcoDiff              0x0041
    #define     B16Gbl_cpuPllCtl_cpuPllSelVcoDiff              0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllSelVcoDiff                 12
    #define   LSb16Gbl_cpuPllCtl_cpuPllSelVcoDiff                 12
    #define       bGbl_cpuPllCtl_cpuPllSelVcoDiff              1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSelVcoDiff                 0x00001000

    #define     BA_Gbl_cpuPllCtl_cpuPllSelVcoClkSe             0x0041
    #define     B16Gbl_cpuPllCtl_cpuPllSelVcoClkSe             0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllSelVcoClkSe                13
    #define   LSb16Gbl_cpuPllCtl_cpuPllSelVcoClkSe                13
    #define       bGbl_cpuPllCtl_cpuPllSelVcoClkSe             1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSelVcoClkSe                0x00002000

    #define     BA_Gbl_cpuPllCtl_cpuPllBypassFbDiv             0x0041
    #define     B16Gbl_cpuPllCtl_cpuPllBypassFbDiv             0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllBypassFbDiv                14
    #define   LSb16Gbl_cpuPllCtl_cpuPllBypassFbDiv                14
    #define       bGbl_cpuPllCtl_cpuPllBypassFbDiv             1
    #define   MSK32Gbl_cpuPllCtl_cpuPllBypassFbDiv                0x00004000

    #define     BA_Gbl_cpuPllCtl_cpuPllBypassEn                0x0041
    #define     B16Gbl_cpuPllCtl_cpuPllBypassEn                0x0040
    #define   LSb32Gbl_cpuPllCtl_cpuPllBypassEn                   15
    #define   LSb16Gbl_cpuPllCtl_cpuPllBypassEn                   15
    #define       bGbl_cpuPllCtl_cpuPllBypassEn                1
    #define   MSK32Gbl_cpuPllCtl_cpuPllBypassEn                   0x00008000

    #define     BA_Gbl_cpuPllCtl_cpuPllGateClkCtrl             0x0042
    #define     B16Gbl_cpuPllCtl_cpuPllGateClkCtrl             0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllGateClkCtrl                16
    #define   LSb16Gbl_cpuPllCtl_cpuPllGateClkCtrl                0
    #define       bGbl_cpuPllCtl_cpuPllGateClkCtrl             1
    #define   MSK32Gbl_cpuPllCtl_cpuPllGateClkCtrl                0x00010000

    #define     BA_Gbl_cpuPllCtl_cpuPllLineUpEn                0x0042
    #define     B16Gbl_cpuPllCtl_cpuPllLineUpEn                0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllLineUpEn                   17
    #define   LSb16Gbl_cpuPllCtl_cpuPllLineUpEn                   1
    #define       bGbl_cpuPllCtl_cpuPllLineUpEn                1
    #define   MSK32Gbl_cpuPllCtl_cpuPllLineUpEn                   0x00020000

    #define     BA_Gbl_cpuPllCtl_cpuPllIntpi                   0x0042
    #define     B16Gbl_cpuPllCtl_cpuPllIntpi                   0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllIntpi                      18
    #define   LSb16Gbl_cpuPllCtl_cpuPllIntpi                      2
    #define       bGbl_cpuPllCtl_cpuPllIntpi                   4
    #define   MSK32Gbl_cpuPllCtl_cpuPllIntpi                      0x003C0000

    #define     BA_Gbl_cpuPllCtl_cpuPllPiEn                    0x0042
    #define     B16Gbl_cpuPllCtl_cpuPllPiEn                    0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllPiEn                       22
    #define   LSb16Gbl_cpuPllCtl_cpuPllPiEn                       6
    #define       bGbl_cpuPllCtl_cpuPllPiEn                    1
    #define   MSK32Gbl_cpuPllCtl_cpuPllPiEn                       0x00400000

    #define     BA_Gbl_cpuPllCtl_cpuPllSscClkEn                0x0042
    #define     B16Gbl_cpuPllCtl_cpuPllSscClkEn                0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscClkEn                   23
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscClkEn                   7
    #define       bGbl_cpuPllCtl_cpuPllSscClkEn                1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscClkEn                   0x00800000

    #define     BA_Gbl_cpuPllCtl_cpuPllClkDetEn                0x0043
    #define     B16Gbl_cpuPllCtl_cpuPllClkDetEn                0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllClkDetEn                   24
    #define   LSb16Gbl_cpuPllCtl_cpuPllClkDetEn                   8
    #define       bGbl_cpuPllCtl_cpuPllClkDetEn                1
    #define   MSK32Gbl_cpuPllCtl_cpuPllClkDetEn                   0x01000000

    #define     BA_Gbl_cpuPllCtl_cpuPllFreqOffsetEn            0x0043
    #define     B16Gbl_cpuPllCtl_cpuPllFreqOffsetEn            0x0042
    #define   LSb32Gbl_cpuPllCtl_cpuPllFreqOffsetEn               25
    #define   LSb16Gbl_cpuPllCtl_cpuPllFreqOffsetEn               9
    #define       bGbl_cpuPllCtl_cpuPllFreqOffsetEn            1
    #define   MSK32Gbl_cpuPllCtl_cpuPllFreqOffsetEn               0x02000000

    #define     RA_Gbl_cpuPllCtl2                              0x0044

    #define     BA_Gbl_cpuPllCtl_cpuPllFreqOffset              0x0044
    #define     B16Gbl_cpuPllCtl_cpuPllFreqOffset              0x0044
    #define   LSb32Gbl_cpuPllCtl_cpuPllFreqOffset                 0
    #define   LSb16Gbl_cpuPllCtl_cpuPllFreqOffset                 0
    #define       bGbl_cpuPllCtl_cpuPllFreqOffset              17
    #define   MSK32Gbl_cpuPllCtl_cpuPllFreqOffset                 0x0001FFFF

    #define     BA_Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel       0x0046
    #define     B16Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel       0x0046
    #define   LSb32Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel          17
    #define   LSb16Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel          1
    #define       bGbl_cpuPllCtl_cpuPllFreqOffsetModeSel       1
    #define   MSK32Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel          0x00020000

    #define     BA_Gbl_cpuPllCtl_cpuPllFreqOffsetValid         0x0046
    #define     B16Gbl_cpuPllCtl_cpuPllFreqOffsetValid         0x0046
    #define   LSb32Gbl_cpuPllCtl_cpuPllFreqOffsetValid            18
    #define   LSb16Gbl_cpuPllCtl_cpuPllFreqOffsetValid            2
    #define       bGbl_cpuPllCtl_cpuPllFreqOffsetValid         1
    #define   MSK32Gbl_cpuPllCtl_cpuPllFreqOffsetValid            0x00040000

    #define     BA_Gbl_cpuPllCtl_cpuPllSscEn                   0x0046
    #define     B16Gbl_cpuPllCtl_cpuPllSscEn                   0x0046
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscEn                      19
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscEn                      3
    #define       bGbl_cpuPllCtl_cpuPllSscEn                   1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscEn                      0x00080000
    #define        Gbl_cpuPllCtl_cpuPllSscEn_Disable                        0x0
    #define        Gbl_cpuPllCtl_cpuPllSscEn_Enable                         0x1

    #define     BA_Gbl_cpuPllCtl_cpuPllSscmode                 0x0046
    #define     B16Gbl_cpuPllCtl_cpuPllSscmode                 0x0046
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscmode                    20
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscmode                    4
    #define       bGbl_cpuPllCtl_cpuPllSscmode                 1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscmode                    0x00100000
    #define        Gbl_cpuPllCtl_cpuPllSscmode_Centre                       0x0
    #define        Gbl_cpuPllCtl_cpuPllSscmode_Down                         0x1

    #define     RA_Gbl_cpuPllCtl3                              0x0048

    #define     BA_Gbl_cpuPllCtl_cpuPllSscFdiv                 0x0048
    #define     B16Gbl_cpuPllCtl_cpuPllSscFdiv                 0x0048
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscFdiv                    0
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscFdiv                    0
    #define       bGbl_cpuPllCtl_cpuPllSscFdiv                 16
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscFdiv                    0x0000FFFF

    #define     BA_Gbl_cpuPllCtl_cpuPllSscRnge                 0x004A
    #define     B16Gbl_cpuPllCtl_cpuPllSscRnge                 0x004A
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscRnge                    16
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscRnge                    0
    #define       bGbl_cpuPllCtl_cpuPllSscRnge                 11
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscRnge                    0x07FF0000

    #define     BA_Gbl_cpuPllCtl_cpuPllSscResetExt             0x004B
    #define     B16Gbl_cpuPllCtl_cpuPllSscResetExt             0x004A
    #define   LSb32Gbl_cpuPllCtl_cpuPllSscResetExt                27
    #define   LSb16Gbl_cpuPllCtl_cpuPllSscResetExt                11
    #define       bGbl_cpuPllCtl_cpuPllSscResetExt             1
    #define   MSK32Gbl_cpuPllCtl_cpuPllSscResetExt                0x08000000
    #define        Gbl_cpuPllCtl_cpuPllSscResetExt_Int                      0x0
    #define        Gbl_cpuPllCtl_cpuPllSscResetExt_Ext                      0x1

    #define     BA_Gbl_cpuPllCtl_cpuPllTestMon                 0x004B
    #define     B16Gbl_cpuPllCtl_cpuPllTestMon                 0x004A
    #define   LSb32Gbl_cpuPllCtl_cpuPllTestMon                    28
    #define   LSb16Gbl_cpuPllCtl_cpuPllTestMon                    12
    #define       bGbl_cpuPllCtl_cpuPllTestMon                 4
    #define   MSK32Gbl_cpuPllCtl_cpuPllTestMon                    0xF0000000

    #define     RA_Gbl_cpuPllCtl4                              0x004C

    #define     BA_Gbl_cpuPllCtl_cpuPllRsvdIn                  0x004C
    #define     B16Gbl_cpuPllCtl_cpuPllRsvdIn                  0x004C
    #define   LSb32Gbl_cpuPllCtl_cpuPllRsvdIn                     0
    #define   LSb16Gbl_cpuPllCtl_cpuPllRsvdIn                     0
    #define       bGbl_cpuPllCtl_cpuPllRsvdIn                  4
    #define   MSK32Gbl_cpuPllCtl_cpuPllRsvdIn                     0x0000000F

    #define     BA_Gbl_cpuPllCtl_cpuPllExtRst                  0x004C
    #define     B16Gbl_cpuPllCtl_cpuPllExtRst                  0x004C
    #define   LSb32Gbl_cpuPllCtl_cpuPllExtRst                     4
    #define   LSb16Gbl_cpuPllCtl_cpuPllExtRst                     4
    #define       bGbl_cpuPllCtl_cpuPllExtRst                  1
    #define   MSK32Gbl_cpuPllCtl_cpuPllExtRst                     0x00000010
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avPllCtl                                0x0050

    #define     BA_Gbl_avPllCtl_avPllResetPll_A                0x0050
    #define     B16Gbl_avPllCtl_avPllResetPll_A                0x0050
    #define   LSb32Gbl_avPllCtl_avPllResetPll_A                   0
    #define   LSb16Gbl_avPllCtl_avPllResetPll_A                   0
    #define       bGbl_avPllCtl_avPllResetPll_A                1
    #define   MSK32Gbl_avPllCtl_avPllResetPll_A                   0x00000001

    #define     BA_Gbl_avPllCtl_avPllPu_A                      0x0050
    #define     B16Gbl_avPllCtl_avPllPu_A                      0x0050
    #define   LSb32Gbl_avPllCtl_avPllPu_A                         1
    #define   LSb16Gbl_avPllCtl_avPllPu_A                         1
    #define       bGbl_avPllCtl_avPllPu_A                      1
    #define   MSK32Gbl_avPllCtl_avPllPu_A                         0x00000002

    #define     BA_Gbl_avPllCtl_avPllIntpi_A                   0x0050
    #define     B16Gbl_avPllCtl_avPllIntpi_A                   0x0050
    #define   LSb32Gbl_avPllCtl_avPllIntpi_A                      2
    #define   LSb16Gbl_avPllCtl_avPllIntpi_A                      2
    #define       bGbl_avPllCtl_avPllIntpi_A                   4
    #define   MSK32Gbl_avPllCtl_avPllIntpi_A                      0x0000003C

    #define     BA_Gbl_avPllCtl_avPllVddr1p45V_A               0x0050
    #define     B16Gbl_avPllCtl_avPllVddr1p45V_A               0x0050
    #define   LSb32Gbl_avPllCtl_avPllVddr1p45V_A                  6
    #define   LSb16Gbl_avPllCtl_avPllVddr1p45V_A                  6
    #define       bGbl_avPllCtl_avPllVddr1p45V_A               2
    #define   MSK32Gbl_avPllCtl_avPllVddr1p45V_A                  0x000000C0

    #define     BA_Gbl_avPllCtl_avPllVddr0p9V_A                0x0051
    #define     B16Gbl_avPllCtl_avPllVddr0p9V_A                0x0050
    #define   LSb32Gbl_avPllCtl_avPllVddr0p9V_A                   8
    #define   LSb16Gbl_avPllCtl_avPllVddr0p9V_A                   8
    #define       bGbl_avPllCtl_avPllVddr0p9V_A                4
    #define   MSK32Gbl_avPllCtl_avPllVddr0p9V_A                   0x00000F00

    #define     BA_Gbl_avPllCtl_avPllVthVcoCal_A               0x0051
    #define     B16Gbl_avPllCtl_avPllVthVcoCal_A               0x0050
    #define   LSb32Gbl_avPllCtl_avPllVthVcoCal_A                  12
    #define   LSb16Gbl_avPllCtl_avPllVthVcoCal_A                  12
    #define       bGbl_avPllCtl_avPllVthVcoCal_A               2
    #define   MSK32Gbl_avPllCtl_avPllVthVcoCal_A                  0x00003000

    #define     BA_Gbl_avPllCtl_avPllKvcoExt_A                 0x0051
    #define     B16Gbl_avPllCtl_avPllKvcoExt_A                 0x0050
    #define   LSb32Gbl_avPllCtl_avPllKvcoExt_A                    14
    #define   LSb16Gbl_avPllCtl_avPllKvcoExt_A                    14
    #define       bGbl_avPllCtl_avPllKvcoExt_A                 3
    #define   MSK32Gbl_avPllCtl_avPllKvcoExt_A                    0x0001C000

    #define     BA_Gbl_avPllCtl_avPllKvcoExtEn_A               0x0052
    #define     B16Gbl_avPllCtl_avPllKvcoExtEn_A               0x0052
    #define   LSb32Gbl_avPllCtl_avPllKvcoExtEn_A                  17
    #define   LSb16Gbl_avPllCtl_avPllKvcoExtEn_A                  1
    #define       bGbl_avPllCtl_avPllKvcoExtEn_A               1
    #define   MSK32Gbl_avPllCtl_avPllKvcoExtEn_A                  0x00020000

    #define     BA_Gbl_avPllCtl_avPllV2iExt_A                  0x0052
    #define     B16Gbl_avPllCtl_avPllV2iExt_A                  0x0052
    #define   LSb32Gbl_avPllCtl_avPllV2iExt_A                     18
    #define   LSb16Gbl_avPllCtl_avPllV2iExt_A                     2
    #define       bGbl_avPllCtl_avPllV2iExt_A                  4
    #define   MSK32Gbl_avPllCtl_avPllV2iExt_A                     0x003C0000

    #define     BA_Gbl_avPllCtl_avPllV2iExtEn_A                0x0052
    #define     B16Gbl_avPllCtl_avPllV2iExtEn_A                0x0052
    #define   LSb32Gbl_avPllCtl_avPllV2iExtEn_A                   22
    #define   LSb16Gbl_avPllCtl_avPllV2iExtEn_A                   6
    #define       bGbl_avPllCtl_avPllV2iExtEn_A                1
    #define   MSK32Gbl_avPllCtl_avPllV2iExtEn_A                   0x00400000

    #define     BA_Gbl_avPllCtl_avPllSpeed_A                   0x0052
    #define     B16Gbl_avPllCtl_avPllSpeed_A                   0x0052
    #define   LSb32Gbl_avPllCtl_avPllSpeed_A                      23
    #define   LSb16Gbl_avPllCtl_avPllSpeed_A                      7
    #define       bGbl_avPllCtl_avPllSpeed_A                   3
    #define   MSK32Gbl_avPllCtl_avPllSpeed_A                      0x03800000

    #define     BA_Gbl_avPllCtl_avPllClkDetEn_A                0x0053
    #define     B16Gbl_avPllCtl_avPllClkDetEn_A                0x0052
    #define   LSb32Gbl_avPllCtl_avPllClkDetEn_A                   26
    #define   LSb16Gbl_avPllCtl_avPllClkDetEn_A                   10
    #define       bGbl_avPllCtl_avPllClkDetEn_A                1
    #define   MSK32Gbl_avPllCtl_avPllClkDetEn_A                   0x04000000

    #define     RA_Gbl_avPllCtl1                               0x0054

    #define     BA_Gbl_avPllCtl_avPllRefDiv_A                  0x0054
    #define     B16Gbl_avPllCtl_avPllRefDiv_A                  0x0054
    #define   LSb32Gbl_avPllCtl_avPllRefDiv_A                     0
    #define   LSb16Gbl_avPllCtl_avPllRefDiv_A                     0
    #define       bGbl_avPllCtl_avPllRefDiv_A                  6
    #define   MSK32Gbl_avPllCtl_avPllRefDiv_A                     0x0000003F

    #define     BA_Gbl_avPllCtl_avPllFbDiv_A                   0x0054
    #define     B16Gbl_avPllCtl_avPllFbDiv_A                   0x0054
    #define   LSb32Gbl_avPllCtl_avPllFbDiv_A                      6
    #define   LSb16Gbl_avPllCtl_avPllFbDiv_A                      6
    #define       bGbl_avPllCtl_avPllFbDiv_A                   8
    #define   MSK32Gbl_avPllCtl_avPllFbDiv_A                      0x00003FC0

    #define     BA_Gbl_avPllCtl_avPllIcp_A                     0x0055
    #define     B16Gbl_avPllCtl_avPllIcp_A                     0x0054
    #define   LSb32Gbl_avPllCtl_avPllIcp_A                        14
    #define   LSb16Gbl_avPllCtl_avPllIcp_A                        14
    #define       bGbl_avPllCtl_avPllIcp_A                     4
    #define   MSK32Gbl_avPllCtl_avPllIcp_A                        0x0003C000

    #define     BA_Gbl_avPllCtl_avPllLoadCap_A                 0x0056
    #define     B16Gbl_avPllCtl_avPllLoadCap_A                 0x0056
    #define   LSb32Gbl_avPllCtl_avPllLoadCap_A                    18
    #define   LSb16Gbl_avPllCtl_avPllLoadCap_A                    2
    #define       bGbl_avPllCtl_avPllLoadCap_A                 1
    #define   MSK32Gbl_avPllCtl_avPllLoadCap_A                    0x00040000

    #define     BA_Gbl_avPllCtl_avPllPllCaliStart_A            0x0056
    #define     B16Gbl_avPllCtl_avPllPllCaliStart_A            0x0056
    #define   LSb32Gbl_avPllCtl_avPllPllCaliStart_A               19
    #define   LSb16Gbl_avPllCtl_avPllPllCaliStart_A               3
    #define       bGbl_avPllCtl_avPllPllCaliStart_A            1
    #define   MSK32Gbl_avPllCtl_avPllPllCaliStart_A               0x00080000

    #define     RA_Gbl_avPllCtl2                               0x0058

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC1_A            0x0058
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC1_A            0x0058
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC1_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC1_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC1_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC1_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl3                               0x005C

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC2_A            0x005C
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC2_A            0x005C
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC2_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC2_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC2_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC2_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl4                               0x0060

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC3_A            0x0060
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC3_A            0x0060
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC3_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC3_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC3_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC3_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl5                               0x0064

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC4_A            0x0064
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC4_A            0x0064
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC4_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC4_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC4_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC4_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl6                               0x0068

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC5_A            0x0068
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC5_A            0x0068
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC5_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC5_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC5_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC5_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl7                               0x006C

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC6_A            0x006C
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC6_A            0x006C
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC6_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC6_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC6_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC6_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl8                               0x0070

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC7_A            0x0070
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC7_A            0x0070
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC7_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC7_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC7_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC7_A               0x0007FFFF

    #define     RA_Gbl_avPllCtl9                               0x0074

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC8_A            0x0074
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC8_A            0x0074
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC8_A               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC8_A               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC8_A            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC8_A               0x0007FFFF

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetReadyC_A        0x0076
    #define     B16Gbl_avPllCtl_avPllFreqOffsetReadyC_A        0x0076
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetReadyC_A           19
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetReadyC_A           3
    #define       bGbl_avPllCtl_avPllFreqOffsetReadyC_A        8
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetReadyC_A           0x07F80000

    #define     BA_Gbl_avPllCtl_avPllReserveC1_A               0x0077
    #define     B16Gbl_avPllCtl_avPllReserveC1_A               0x0076
    #define   LSb32Gbl_avPllCtl_avPllReserveC1_A                  27
    #define   LSb16Gbl_avPllCtl_avPllReserveC1_A                  11
    #define       bGbl_avPllCtl_avPllReserveC1_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC1_A                  0x18000000

    #define     BA_Gbl_avPllCtl_avPllReserveC2_A               0x0077
    #define     B16Gbl_avPllCtl_avPllReserveC2_A               0x0076
    #define   LSb32Gbl_avPllCtl_avPllReserveC2_A                  29
    #define   LSb16Gbl_avPllCtl_avPllReserveC2_A                  13
    #define       bGbl_avPllCtl_avPllReserveC2_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC2_A                  0x60000000

    #define     RA_Gbl_avPllCtl10                              0x0078

    #define     BA_Gbl_avPllCtl_avPllReserveC3_A               0x0078
    #define     B16Gbl_avPllCtl_avPllReserveC3_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC3_A                  0
    #define   LSb16Gbl_avPllCtl_avPllReserveC3_A                  0
    #define       bGbl_avPllCtl_avPllReserveC3_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC3_A                  0x00000003

    #define     BA_Gbl_avPllCtl_avPllReserveC4_A               0x0078
    #define     B16Gbl_avPllCtl_avPllReserveC4_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC4_A                  2
    #define   LSb16Gbl_avPllCtl_avPllReserveC4_A                  2
    #define       bGbl_avPllCtl_avPllReserveC4_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC4_A                  0x0000000C

    #define     BA_Gbl_avPllCtl_avPllReserveC5_A               0x0078
    #define     B16Gbl_avPllCtl_avPllReserveC5_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC5_A                  4
    #define   LSb16Gbl_avPllCtl_avPllReserveC5_A                  4
    #define       bGbl_avPllCtl_avPllReserveC5_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC5_A                  0x00000030

    #define     BA_Gbl_avPllCtl_avPllReserveC6_A               0x0078
    #define     B16Gbl_avPllCtl_avPllReserveC6_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC6_A                  6
    #define   LSb16Gbl_avPllCtl_avPllReserveC6_A                  6
    #define       bGbl_avPllCtl_avPllReserveC6_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC6_A                  0x000000C0

    #define     BA_Gbl_avPllCtl_avPllReserveC7_A               0x0079
    #define     B16Gbl_avPllCtl_avPllReserveC7_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC7_A                  8
    #define   LSb16Gbl_avPllCtl_avPllReserveC7_A                  8
    #define       bGbl_avPllCtl_avPllReserveC7_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC7_A                  0x00000300

    #define     BA_Gbl_avPllCtl_avPllReserveC8_A               0x0079
    #define     B16Gbl_avPllCtl_avPllReserveC8_A               0x0078
    #define   LSb32Gbl_avPllCtl_avPllReserveC8_A                  10
    #define   LSb16Gbl_avPllCtl_avPllReserveC8_A                  10
    #define       bGbl_avPllCtl_avPllReserveC8_A               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC8_A                  0x00000C00

    #define     BA_Gbl_avPllCtl_avPllEnLpC_A                   0x0079
    #define     B16Gbl_avPllCtl_avPllEnLpC_A                   0x0078
    #define   LSb32Gbl_avPllCtl_avPllEnLpC_A                      12
    #define   LSb16Gbl_avPllCtl_avPllEnLpC_A                      12
    #define       bGbl_avPllCtl_avPllEnLpC_A                   8
    #define   MSK32Gbl_avPllCtl_avPllEnLpC_A                      0x000FF000

    #define     BA_Gbl_avPllCtl_avPllPuC_A                     0x007A
    #define     B16Gbl_avPllCtl_avPllPuC_A                     0x007A
    #define   LSb32Gbl_avPllCtl_avPllPuC_A                        20
    #define   LSb16Gbl_avPllCtl_avPllPuC_A                        4
    #define       bGbl_avPllCtl_avPllPuC_A                     7
    #define   MSK32Gbl_avPllCtl_avPllPuC_A                        0x07F00000

    #define     RA_Gbl_avPllCtl11                              0x007C

    #define     BA_Gbl_avPllCtl_avPllResetC_A                  0x007C
    #define     B16Gbl_avPllCtl_avPllResetC_A                  0x007C
    #define   LSb32Gbl_avPllCtl_avPllResetC_A                     0
    #define   LSb16Gbl_avPllCtl_avPllResetC_A                     0
    #define       bGbl_avPllCtl_avPllResetC_A                  7
    #define   MSK32Gbl_avPllCtl_avPllResetC_A                     0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC1_A               0x007C
    #define     B16Gbl_avPllCtl_avPllDivHdmiC1_A               0x007C
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC1_A                  7
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC1_A                  7
    #define       bGbl_avPllCtl_avPllDivHdmiC1_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC1_A                  0x00000380

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC2_A               0x007D
    #define     B16Gbl_avPllCtl_avPllDivHdmiC2_A               0x007C
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC2_A                  10
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC2_A                  10
    #define       bGbl_avPllCtl_avPllDivHdmiC2_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC2_A                  0x00001C00

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC3_A               0x007D
    #define     B16Gbl_avPllCtl_avPllDivHdmiC3_A               0x007C
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC3_A                  13
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC3_A                  13
    #define       bGbl_avPllCtl_avPllDivHdmiC3_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC3_A                  0x0000E000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC4_A               0x007E
    #define     B16Gbl_avPllCtl_avPllDivHdmiC4_A               0x007E
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC4_A                  16
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC4_A                  0
    #define       bGbl_avPllCtl_avPllDivHdmiC4_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC4_A                  0x00070000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC5_A               0x007E
    #define     B16Gbl_avPllCtl_avPllDivHdmiC5_A               0x007E
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC5_A                  19
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC5_A                  3
    #define       bGbl_avPllCtl_avPllDivHdmiC5_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC5_A                  0x00380000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC6_A               0x007E
    #define     B16Gbl_avPllCtl_avPllDivHdmiC6_A               0x007E
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC6_A                  22
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC6_A                  6
    #define       bGbl_avPllCtl_avPllDivHdmiC6_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC6_A                  0x01C00000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC7_A               0x007F
    #define     B16Gbl_avPllCtl_avPllDivHdmiC7_A               0x007E
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC7_A                  25
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC7_A                  9
    #define       bGbl_avPllCtl_avPllDivHdmiC7_A               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC7_A                  0x0E000000

    #define     BA_Gbl_avPllCtl_avPllDivAv1C1_A                0x007F
    #define     B16Gbl_avPllCtl_avPllDivAv1C1_A                0x007E
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C1_A                   28
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C1_A                   12
    #define       bGbl_avPllCtl_avPllDivAv1C1_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C1_A                   0x70000000

    #define     RA_Gbl_avPllCtl12                              0x0080

    #define     BA_Gbl_avPllCtl_avPllDivAv1C2_A                0x0080
    #define     B16Gbl_avPllCtl_avPllDivAv1C2_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C2_A                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C2_A                   0
    #define       bGbl_avPllCtl_avPllDivAv1C2_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C2_A                   0x00000007

    #define     BA_Gbl_avPllCtl_avPllDivAv1C3_A                0x0080
    #define     B16Gbl_avPllCtl_avPllDivAv1C3_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C3_A                   3
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C3_A                   3
    #define       bGbl_avPllCtl_avPllDivAv1C3_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C3_A                   0x00000038

    #define     BA_Gbl_avPllCtl_avPllDivAv1C4_A                0x0080
    #define     B16Gbl_avPllCtl_avPllDivAv1C4_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C4_A                   6
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C4_A                   6
    #define       bGbl_avPllCtl_avPllDivAv1C4_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C4_A                   0x000001C0

    #define     BA_Gbl_avPllCtl_avPllDivAv1C5_A                0x0081
    #define     B16Gbl_avPllCtl_avPllDivAv1C5_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C5_A                   9
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C5_A                   9
    #define       bGbl_avPllCtl_avPllDivAv1C5_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C5_A                   0x00000E00

    #define     BA_Gbl_avPllCtl_avPllDivAv1C6_A                0x0081
    #define     B16Gbl_avPllCtl_avPllDivAv1C6_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C6_A                   12
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C6_A                   12
    #define       bGbl_avPllCtl_avPllDivAv1C6_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C6_A                   0x00007000

    #define     BA_Gbl_avPllCtl_avPllDivAv1C7_A                0x0081
    #define     B16Gbl_avPllCtl_avPllDivAv1C7_A                0x0080
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C7_A                   15
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C7_A                   15
    #define       bGbl_avPllCtl_avPllDivAv1C7_A                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C7_A                   0x00038000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C1_A                0x0082
    #define     B16Gbl_avPllCtl_avPllDivAv2C1_A                0x0082
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C1_A                   18
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C1_A                   2
    #define       bGbl_avPllCtl_avPllDivAv2C1_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C1_A                   0x01FC0000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C2_A                0x0083
    #define     B16Gbl_avPllCtl_avPllDivAv2C2_A                0x0082
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C2_A                   25
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C2_A                   9
    #define       bGbl_avPllCtl_avPllDivAv2C2_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C2_A                   0xFE000000

    #define     RA_Gbl_avPllCtl13                              0x0084

    #define     BA_Gbl_avPllCtl_avPllDivAv2C3_A                0x0084
    #define     B16Gbl_avPllCtl_avPllDivAv2C3_A                0x0084
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C3_A                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C3_A                   0
    #define       bGbl_avPllCtl_avPllDivAv2C3_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C3_A                   0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivAv2C4_A                0x0084
    #define     B16Gbl_avPllCtl_avPllDivAv2C4_A                0x0084
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C4_A                   7
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C4_A                   7
    #define       bGbl_avPllCtl_avPllDivAv2C4_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C4_A                   0x00003F80

    #define     BA_Gbl_avPllCtl_avPllDivAv2C5_A                0x0085
    #define     B16Gbl_avPllCtl_avPllDivAv2C5_A                0x0084
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C5_A                   14
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C5_A                   14
    #define       bGbl_avPllCtl_avPllDivAv2C5_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C5_A                   0x001FC000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C6_A                0x0086
    #define     B16Gbl_avPllCtl_avPllDivAv2C6_A                0x0086
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C6_A                   21
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C6_A                   5
    #define       bGbl_avPllCtl_avPllDivAv2C6_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C6_A                   0x0FE00000

    #define     RA_Gbl_avPllCtl14                              0x0088

    #define     BA_Gbl_avPllCtl_avPllDivAv2C7_A                0x0088
    #define     B16Gbl_avPllCtl_avPllDivAv2C7_A                0x0088
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C7_A                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C7_A                   0
    #define       bGbl_avPllCtl_avPllDivAv2C7_A                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C7_A                   0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivAv3C1_A                0x0088
    #define     B16Gbl_avPllCtl_avPllDivAv3C1_A                0x0088
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C1_A                   7
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C1_A                   7
    #define       bGbl_avPllCtl_avPllDivAv3C1_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C1_A                   0x00000780

    #define     BA_Gbl_avPllCtl_avPllDivAv3C2_A                0x0089
    #define     B16Gbl_avPllCtl_avPllDivAv3C2_A                0x0088
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C2_A                   11
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C2_A                   11
    #define       bGbl_avPllCtl_avPllDivAv3C2_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C2_A                   0x00007800

    #define     BA_Gbl_avPllCtl_avPllDivAv3C3_A                0x0089
    #define     B16Gbl_avPllCtl_avPllDivAv3C3_A                0x0088
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C3_A                   15
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C3_A                   15
    #define       bGbl_avPllCtl_avPllDivAv3C3_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C3_A                   0x00078000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C4_A                0x008A
    #define     B16Gbl_avPllCtl_avPllDivAv3C4_A                0x008A
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C4_A                   19
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C4_A                   3
    #define       bGbl_avPllCtl_avPllDivAv3C4_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C4_A                   0x00780000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C5_A                0x008A
    #define     B16Gbl_avPllCtl_avPllDivAv3C5_A                0x008A
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C5_A                   23
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C5_A                   7
    #define       bGbl_avPllCtl_avPllDivAv3C5_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C5_A                   0x07800000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C6_A                0x008B
    #define     B16Gbl_avPllCtl_avPllDivAv3C6_A                0x008A
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C6_A                   27
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C6_A                   11
    #define       bGbl_avPllCtl_avPllDivAv3C6_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C6_A                   0x78000000

    #define     RA_Gbl_avPllCtl15                              0x008C

    #define     BA_Gbl_avPllCtl_avPllDivAv3C7_A                0x008C
    #define     B16Gbl_avPllCtl_avPllDivAv3C7_A                0x008C
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C7_A                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C7_A                   0
    #define       bGbl_avPllCtl_avPllDivAv3C7_A                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C7_A                   0x0000000F

    #define     BA_Gbl_avPllCtl_avPllPSync1C1_A                0x008C
    #define     B16Gbl_avPllCtl_avPllPSync1C1_A                0x008C
    #define   LSb32Gbl_avPllCtl_avPllPSync1C1_A                   4
    #define   LSb16Gbl_avPllCtl_avPllPSync1C1_A                   4
    #define       bGbl_avPllCtl_avPllPSync1C1_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C1_A                   0x001FFFF0

    #define     RA_Gbl_avPllCtl16                              0x0090

    #define     BA_Gbl_avPllCtl_avPllPSync1C2_A                0x0090
    #define     B16Gbl_avPllCtl_avPllPSync1C2_A                0x0090
    #define   LSb32Gbl_avPllCtl_avPllPSync1C2_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C2_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C2_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C2_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl17                              0x0094

    #define     BA_Gbl_avPllCtl_avPllPSync1C3_A                0x0094
    #define     B16Gbl_avPllCtl_avPllPSync1C3_A                0x0094
    #define   LSb32Gbl_avPllCtl_avPllPSync1C3_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C3_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C3_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C3_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl18                              0x0098

    #define     BA_Gbl_avPllCtl_avPllPSync1C4_A                0x0098
    #define     B16Gbl_avPllCtl_avPllPSync1C4_A                0x0098
    #define   LSb32Gbl_avPllCtl_avPllPSync1C4_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C4_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C4_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C4_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl19                              0x009C

    #define     BA_Gbl_avPllCtl_avPllPSync1C5_A                0x009C
    #define     B16Gbl_avPllCtl_avPllPSync1C5_A                0x009C
    #define   LSb32Gbl_avPllCtl_avPllPSync1C5_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C5_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C5_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C5_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl20                              0x00A0

    #define     BA_Gbl_avPllCtl_avPllPSync1C6_A                0x00A0
    #define     B16Gbl_avPllCtl_avPllPSync1C6_A                0x00A0
    #define   LSb32Gbl_avPllCtl_avPllPSync1C6_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C6_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C6_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C6_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl21                              0x00A4

    #define     BA_Gbl_avPllCtl_avPllPSync1C7_A                0x00A4
    #define     B16Gbl_avPllCtl_avPllPSync1C7_A                0x00A4
    #define   LSb32Gbl_avPllCtl_avPllPSync1C7_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C7_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C7_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C7_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl22                              0x00A8

    #define     BA_Gbl_avPllCtl_avPllPSync1C8_A                0x00A8
    #define     B16Gbl_avPllCtl_avPllPSync1C8_A                0x00A8
    #define   LSb32Gbl_avPllCtl_avPllPSync1C8_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C8_A                   0
    #define       bGbl_avPllCtl_avPllPSync1C8_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C8_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl23                              0x00AC

    #define     BA_Gbl_avPllCtl_avPllPSync2C1_A                0x00AC
    #define     B16Gbl_avPllCtl_avPllPSync2C1_A                0x00AC
    #define   LSb32Gbl_avPllCtl_avPllPSync2C1_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C1_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C1_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C1_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl24                              0x00B0

    #define     BA_Gbl_avPllCtl_avPllPSync2C2_A                0x00B0
    #define     B16Gbl_avPllCtl_avPllPSync2C2_A                0x00B0
    #define   LSb32Gbl_avPllCtl_avPllPSync2C2_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C2_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C2_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C2_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl25                              0x00B4

    #define     BA_Gbl_avPllCtl_avPllPSync2C3_A                0x00B4
    #define     B16Gbl_avPllCtl_avPllPSync2C3_A                0x00B4
    #define   LSb32Gbl_avPllCtl_avPllPSync2C3_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C3_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C3_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C3_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl26                              0x00B8

    #define     BA_Gbl_avPllCtl_avPllPSync2C4_A                0x00B8
    #define     B16Gbl_avPllCtl_avPllPSync2C4_A                0x00B8
    #define   LSb32Gbl_avPllCtl_avPllPSync2C4_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C4_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C4_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C4_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl27                              0x00BC

    #define     BA_Gbl_avPllCtl_avPllPSync2C5_A                0x00BC
    #define     B16Gbl_avPllCtl_avPllPSync2C5_A                0x00BC
    #define   LSb32Gbl_avPllCtl_avPllPSync2C5_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C5_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C5_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C5_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl28                              0x00C0

    #define     BA_Gbl_avPllCtl_avPllPSync2C6_A                0x00C0
    #define     B16Gbl_avPllCtl_avPllPSync2C6_A                0x00C0
    #define   LSb32Gbl_avPllCtl_avPllPSync2C6_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C6_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C6_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C6_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl29                              0x00C4

    #define     BA_Gbl_avPllCtl_avPllPSync2C7_A                0x00C4
    #define     B16Gbl_avPllCtl_avPllPSync2C7_A                0x00C4
    #define   LSb32Gbl_avPllCtl_avPllPSync2C7_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C7_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C7_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C7_A                   0x0001FFFF

    #define     RA_Gbl_avPllCtl30                              0x00C8

    #define     BA_Gbl_avPllCtl_avPllPSync2C8_A                0x00C8
    #define     B16Gbl_avPllCtl_avPllPSync2C8_A                0x00C8
    #define   LSb32Gbl_avPllCtl_avPllPSync2C8_A                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C8_A                   0
    #define       bGbl_avPllCtl_avPllPSync2C8_A                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C8_A                   0x0001FFFF

    #define     BA_Gbl_avPllCtl_avPllEnDpllC_A                 0x00CA
    #define     B16Gbl_avPllCtl_avPllEnDpllC_A                 0x00CA
    #define   LSb32Gbl_avPllCtl_avPllEnDpllC_A                    17
    #define   LSb16Gbl_avPllCtl_avPllEnDpllC_A                    1
    #define       bGbl_avPllCtl_avPllEnDpllC_A                 8
    #define   MSK32Gbl_avPllCtl_avPllEnDpllC_A                    0x01FE0000

    #define     BA_Gbl_avPllCtl_avPllMasterSlaveB_A            0x00CB
    #define     B16Gbl_avPllCtl_avPllMasterSlaveB_A            0x00CA
    #define   LSb32Gbl_avPllCtl_avPllMasterSlaveB_A               25
    #define   LSb16Gbl_avPllCtl_avPllMasterSlaveB_A               9
    #define       bGbl_avPllCtl_avPllMasterSlaveB_A            1
    #define   MSK32Gbl_avPllCtl_avPllMasterSlaveB_A               0x02000000

    #define     BA_Gbl_avPllCtl_avPllTestAna_A                 0x00CB
    #define     B16Gbl_avPllCtl_avPllTestAna_A                 0x00CA
    #define   LSb32Gbl_avPllCtl_avPllTestAna_A                    26
    #define   LSb16Gbl_avPllCtl_avPllTestAna_A                    10
    #define       bGbl_avPllCtl_avPllTestAna_A                 6
    #define   MSK32Gbl_avPllCtl_avPllTestAna_A                    0xFC000000

    #define     RA_Gbl_avPllCtl31                              0x00CC

    #define     BA_Gbl_avPllCtl_avPllReservePll_A              0x00CC
    #define     B16Gbl_avPllCtl_avPllReservePll_A              0x00CC
    #define   LSb32Gbl_avPllCtl_avPllReservePll_A                 0
    #define   LSb16Gbl_avPllCtl_avPllReservePll_A                 0
    #define       bGbl_avPllCtl_avPllReservePll_A              4
    #define   MSK32Gbl_avPllCtl_avPllReservePll_A                 0x0000000F

    #define     BA_Gbl_avPllCtl_avPllResetPll_B                0x00CC
    #define     B16Gbl_avPllCtl_avPllResetPll_B                0x00CC
    #define   LSb32Gbl_avPllCtl_avPllResetPll_B                   4
    #define   LSb16Gbl_avPllCtl_avPllResetPll_B                   4
    #define       bGbl_avPllCtl_avPllResetPll_B                1
    #define   MSK32Gbl_avPllCtl_avPllResetPll_B                   0x00000010

    #define     BA_Gbl_avPllCtl_avPllPu_B                      0x00CC
    #define     B16Gbl_avPllCtl_avPllPu_B                      0x00CC
    #define   LSb32Gbl_avPllCtl_avPllPu_B                         5
    #define   LSb16Gbl_avPllCtl_avPllPu_B                         5
    #define       bGbl_avPllCtl_avPllPu_B                      1
    #define   MSK32Gbl_avPllCtl_avPllPu_B                         0x00000020

    #define     BA_Gbl_avPllCtl_avPllIntpi_B                   0x00CC
    #define     B16Gbl_avPllCtl_avPllIntpi_B                   0x00CC
    #define   LSb32Gbl_avPllCtl_avPllIntpi_B                      6
    #define   LSb16Gbl_avPllCtl_avPllIntpi_B                      6
    #define       bGbl_avPllCtl_avPllIntpi_B                   4
    #define   MSK32Gbl_avPllCtl_avPllIntpi_B                      0x000003C0

    #define     BA_Gbl_avPllCtl_avPllVddr1p45V_B               0x00CD
    #define     B16Gbl_avPllCtl_avPllVddr1p45V_B               0x00CC
    #define   LSb32Gbl_avPllCtl_avPllVddr1p45V_B                  10
    #define   LSb16Gbl_avPllCtl_avPllVddr1p45V_B                  10
    #define       bGbl_avPllCtl_avPllVddr1p45V_B               2
    #define   MSK32Gbl_avPllCtl_avPllVddr1p45V_B                  0x00000C00

    #define     BA_Gbl_avPllCtl_avPllVddr0p9V_B                0x00CD
    #define     B16Gbl_avPllCtl_avPllVddr0p9V_B                0x00CC
    #define   LSb32Gbl_avPllCtl_avPllVddr0p9V_B                   12
    #define   LSb16Gbl_avPllCtl_avPllVddr0p9V_B                   12
    #define       bGbl_avPllCtl_avPllVddr0p9V_B                4
    #define   MSK32Gbl_avPllCtl_avPllVddr0p9V_B                   0x0000F000

    #define     BA_Gbl_avPllCtl_avPllVthVcoCal_B               0x00CE
    #define     B16Gbl_avPllCtl_avPllVthVcoCal_B               0x00CE
    #define   LSb32Gbl_avPllCtl_avPllVthVcoCal_B                  16
    #define   LSb16Gbl_avPllCtl_avPllVthVcoCal_B                  0
    #define       bGbl_avPllCtl_avPllVthVcoCal_B               2
    #define   MSK32Gbl_avPllCtl_avPllVthVcoCal_B                  0x00030000

    #define     BA_Gbl_avPllCtl_avPllKvcoExt_B                 0x00CE
    #define     B16Gbl_avPllCtl_avPllKvcoExt_B                 0x00CE
    #define   LSb32Gbl_avPllCtl_avPllKvcoExt_B                    18
    #define   LSb16Gbl_avPllCtl_avPllKvcoExt_B                    2
    #define       bGbl_avPllCtl_avPllKvcoExt_B                 3
    #define   MSK32Gbl_avPllCtl_avPllKvcoExt_B                    0x001C0000

    #define     BA_Gbl_avPllCtl_avPllKvcoExtEn_B               0x00CE
    #define     B16Gbl_avPllCtl_avPllKvcoExtEn_B               0x00CE
    #define   LSb32Gbl_avPllCtl_avPllKvcoExtEn_B                  21
    #define   LSb16Gbl_avPllCtl_avPllKvcoExtEn_B                  5
    #define       bGbl_avPllCtl_avPllKvcoExtEn_B               1
    #define   MSK32Gbl_avPllCtl_avPllKvcoExtEn_B                  0x00200000

    #define     BA_Gbl_avPllCtl_avPllV2iExt_B                  0x00CE
    #define     B16Gbl_avPllCtl_avPllV2iExt_B                  0x00CE
    #define   LSb32Gbl_avPllCtl_avPllV2iExt_B                     22
    #define   LSb16Gbl_avPllCtl_avPllV2iExt_B                     6
    #define       bGbl_avPllCtl_avPllV2iExt_B                  4
    #define   MSK32Gbl_avPllCtl_avPllV2iExt_B                     0x03C00000

    #define     BA_Gbl_avPllCtl_avPllV2iExtEn_B                0x00CF
    #define     B16Gbl_avPllCtl_avPllV2iExtEn_B                0x00CE
    #define   LSb32Gbl_avPllCtl_avPllV2iExtEn_B                   26
    #define   LSb16Gbl_avPllCtl_avPllV2iExtEn_B                   10
    #define       bGbl_avPllCtl_avPllV2iExtEn_B                1
    #define   MSK32Gbl_avPllCtl_avPllV2iExtEn_B                   0x04000000

    #define     BA_Gbl_avPllCtl_avPllSpeed_B                   0x00CF
    #define     B16Gbl_avPllCtl_avPllSpeed_B                   0x00CE
    #define   LSb32Gbl_avPllCtl_avPllSpeed_B                      27
    #define   LSb16Gbl_avPllCtl_avPllSpeed_B                      11
    #define       bGbl_avPllCtl_avPllSpeed_B                   3
    #define   MSK32Gbl_avPllCtl_avPllSpeed_B                      0x38000000

    #define     BA_Gbl_avPllCtl_avPllClkDetEn_B                0x00CF
    #define     B16Gbl_avPllCtl_avPllClkDetEn_B                0x00CE
    #define   LSb32Gbl_avPllCtl_avPllClkDetEn_B                   30
    #define   LSb16Gbl_avPllCtl_avPllClkDetEn_B                   14
    #define       bGbl_avPllCtl_avPllClkDetEn_B                1
    #define   MSK32Gbl_avPllCtl_avPllClkDetEn_B                   0x40000000

    #define     RA_Gbl_avPllCtl32                              0x00D0

    #define     BA_Gbl_avPllCtl_avPllRefDiv_B                  0x00D0
    #define     B16Gbl_avPllCtl_avPllRefDiv_B                  0x00D0
    #define   LSb32Gbl_avPllCtl_avPllRefDiv_B                     0
    #define   LSb16Gbl_avPllCtl_avPllRefDiv_B                     0
    #define       bGbl_avPllCtl_avPllRefDiv_B                  6
    #define   MSK32Gbl_avPllCtl_avPllRefDiv_B                     0x0000003F

    #define     BA_Gbl_avPllCtl_avPllFbDiv_B                   0x00D0
    #define     B16Gbl_avPllCtl_avPllFbDiv_B                   0x00D0
    #define   LSb32Gbl_avPllCtl_avPllFbDiv_B                      6
    #define   LSb16Gbl_avPllCtl_avPllFbDiv_B                      6
    #define       bGbl_avPllCtl_avPllFbDiv_B                   8
    #define   MSK32Gbl_avPllCtl_avPllFbDiv_B                      0x00003FC0

    #define     BA_Gbl_avPllCtl_avPllIcp_B                     0x00D1
    #define     B16Gbl_avPllCtl_avPllIcp_B                     0x00D0
    #define   LSb32Gbl_avPllCtl_avPllIcp_B                        14
    #define   LSb16Gbl_avPllCtl_avPllIcp_B                        14
    #define       bGbl_avPllCtl_avPllIcp_B                     4
    #define   MSK32Gbl_avPllCtl_avPllIcp_B                        0x0003C000

    #define     BA_Gbl_avPllCtl_avPllLoadCap_B                 0x00D2
    #define     B16Gbl_avPllCtl_avPllLoadCap_B                 0x00D2
    #define   LSb32Gbl_avPllCtl_avPllLoadCap_B                    18
    #define   LSb16Gbl_avPllCtl_avPllLoadCap_B                    2
    #define       bGbl_avPllCtl_avPllLoadCap_B                 1
    #define   MSK32Gbl_avPllCtl_avPllLoadCap_B                    0x00040000

    #define     BA_Gbl_avPllCtl_avPllPllCaliStart_B            0x00D2
    #define     B16Gbl_avPllCtl_avPllPllCaliStart_B            0x00D2
    #define   LSb32Gbl_avPllCtl_avPllPllCaliStart_B               19
    #define   LSb16Gbl_avPllCtl_avPllPllCaliStart_B               3
    #define       bGbl_avPllCtl_avPllPllCaliStart_B            1
    #define   MSK32Gbl_avPllCtl_avPllPllCaliStart_B               0x00080000

    #define     RA_Gbl_avPllCtl33                              0x00D4

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC1_B            0x00D4
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC1_B            0x00D4
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC1_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC1_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC1_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC1_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl34                              0x00D8

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC2_B            0x00D8
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC2_B            0x00D8
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC2_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC2_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC2_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC2_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl35                              0x00DC

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC3_B            0x00DC
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC3_B            0x00DC
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC3_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC3_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC3_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC3_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl36                              0x00E0

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC4_B            0x00E0
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC4_B            0x00E0
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC4_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC4_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC4_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC4_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl37                              0x00E4

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC5_B            0x00E4
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC5_B            0x00E4
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC5_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC5_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC5_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC5_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl38                              0x00E8

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC6_B            0x00E8
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC6_B            0x00E8
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC6_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC6_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC6_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC6_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl39                              0x00EC

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC7_B            0x00EC
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC7_B            0x00EC
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC7_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC7_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC7_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC7_B               0x0007FFFF

    #define     RA_Gbl_avPllCtl40                              0x00F0

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetC8_B            0x00F0
    #define     B16Gbl_avPllCtl_avPllFreqOffsetC8_B            0x00F0
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetC8_B               0
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetC8_B               0
    #define       bGbl_avPllCtl_avPllFreqOffsetC8_B            19
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetC8_B               0x0007FFFF

    #define     BA_Gbl_avPllCtl_avPllFreqOffsetReadyC_B        0x00F2
    #define     B16Gbl_avPllCtl_avPllFreqOffsetReadyC_B        0x00F2
    #define   LSb32Gbl_avPllCtl_avPllFreqOffsetReadyC_B           19
    #define   LSb16Gbl_avPllCtl_avPllFreqOffsetReadyC_B           3
    #define       bGbl_avPllCtl_avPllFreqOffsetReadyC_B        8
    #define   MSK32Gbl_avPllCtl_avPllFreqOffsetReadyC_B           0x07F80000

    #define     BA_Gbl_avPllCtl_avPllReserveC1_B               0x00F3
    #define     B16Gbl_avPllCtl_avPllReserveC1_B               0x00F2
    #define   LSb32Gbl_avPllCtl_avPllReserveC1_B                  27
    #define   LSb16Gbl_avPllCtl_avPllReserveC1_B                  11
    #define       bGbl_avPllCtl_avPllReserveC1_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC1_B                  0x18000000

    #define     BA_Gbl_avPllCtl_avPllReserveC2_B               0x00F3
    #define     B16Gbl_avPllCtl_avPllReserveC2_B               0x00F2
    #define   LSb32Gbl_avPllCtl_avPllReserveC2_B                  29
    #define   LSb16Gbl_avPllCtl_avPllReserveC2_B                  13
    #define       bGbl_avPllCtl_avPllReserveC2_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC2_B                  0x60000000

    #define     RA_Gbl_avPllCtl41                              0x00F4

    #define     BA_Gbl_avPllCtl_avPllReserveC3_B               0x00F4
    #define     B16Gbl_avPllCtl_avPllReserveC3_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC3_B                  0
    #define   LSb16Gbl_avPllCtl_avPllReserveC3_B                  0
    #define       bGbl_avPllCtl_avPllReserveC3_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC3_B                  0x00000003

    #define     BA_Gbl_avPllCtl_avPllReserveC4_B               0x00F4
    #define     B16Gbl_avPllCtl_avPllReserveC4_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC4_B                  2
    #define   LSb16Gbl_avPllCtl_avPllReserveC4_B                  2
    #define       bGbl_avPllCtl_avPllReserveC4_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC4_B                  0x0000000C

    #define     BA_Gbl_avPllCtl_avPllReserveC5_B               0x00F4
    #define     B16Gbl_avPllCtl_avPllReserveC5_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC5_B                  4
    #define   LSb16Gbl_avPllCtl_avPllReserveC5_B                  4
    #define       bGbl_avPllCtl_avPllReserveC5_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC5_B                  0x00000030

    #define     BA_Gbl_avPllCtl_avPllReserveC6_B               0x00F4
    #define     B16Gbl_avPllCtl_avPllReserveC6_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC6_B                  6
    #define   LSb16Gbl_avPllCtl_avPllReserveC6_B                  6
    #define       bGbl_avPllCtl_avPllReserveC6_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC6_B                  0x000000C0

    #define     BA_Gbl_avPllCtl_avPllReserveC7_B               0x00F5
    #define     B16Gbl_avPllCtl_avPllReserveC7_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC7_B                  8
    #define   LSb16Gbl_avPllCtl_avPllReserveC7_B                  8
    #define       bGbl_avPllCtl_avPllReserveC7_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC7_B                  0x00000300

    #define     BA_Gbl_avPllCtl_avPllReserveC8_B               0x00F5
    #define     B16Gbl_avPllCtl_avPllReserveC8_B               0x00F4
    #define   LSb32Gbl_avPllCtl_avPllReserveC8_B                  10
    #define   LSb16Gbl_avPllCtl_avPllReserveC8_B                  10
    #define       bGbl_avPllCtl_avPllReserveC8_B               2
    #define   MSK32Gbl_avPllCtl_avPllReserveC8_B                  0x00000C00

    #define     BA_Gbl_avPllCtl_avPllEnLpC_B                   0x00F5
    #define     B16Gbl_avPllCtl_avPllEnLpC_B                   0x00F4
    #define   LSb32Gbl_avPllCtl_avPllEnLpC_B                      12
    #define   LSb16Gbl_avPllCtl_avPllEnLpC_B                      12
    #define       bGbl_avPllCtl_avPllEnLpC_B                   8
    #define   MSK32Gbl_avPllCtl_avPllEnLpC_B                      0x000FF000

    #define     BA_Gbl_avPllCtl_avPllPuC_B                     0x00F6
    #define     B16Gbl_avPllCtl_avPllPuC_B                     0x00F6
    #define   LSb32Gbl_avPllCtl_avPllPuC_B                        20
    #define   LSb16Gbl_avPllCtl_avPllPuC_B                        4
    #define       bGbl_avPllCtl_avPllPuC_B                     7
    #define   MSK32Gbl_avPllCtl_avPllPuC_B                        0x07F00000

    #define     RA_Gbl_avPllCtl42                              0x00F8

    #define     BA_Gbl_avPllCtl_avPllResetC_B                  0x00F8
    #define     B16Gbl_avPllCtl_avPllResetC_B                  0x00F8
    #define   LSb32Gbl_avPllCtl_avPllResetC_B                     0
    #define   LSb16Gbl_avPllCtl_avPllResetC_B                     0
    #define       bGbl_avPllCtl_avPllResetC_B                  7
    #define   MSK32Gbl_avPllCtl_avPllResetC_B                     0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC1_B               0x00F8
    #define     B16Gbl_avPllCtl_avPllDivHdmiC1_B               0x00F8
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC1_B                  7
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC1_B                  7
    #define       bGbl_avPllCtl_avPllDivHdmiC1_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC1_B                  0x00000380

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC2_B               0x00F9
    #define     B16Gbl_avPllCtl_avPllDivHdmiC2_B               0x00F8
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC2_B                  10
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC2_B                  10
    #define       bGbl_avPllCtl_avPllDivHdmiC2_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC2_B                  0x00001C00

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC3_B               0x00F9
    #define     B16Gbl_avPllCtl_avPllDivHdmiC3_B               0x00F8
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC3_B                  13
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC3_B                  13
    #define       bGbl_avPllCtl_avPllDivHdmiC3_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC3_B                  0x0000E000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC4_B               0x00FA
    #define     B16Gbl_avPllCtl_avPllDivHdmiC4_B               0x00FA
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC4_B                  16
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC4_B                  0
    #define       bGbl_avPllCtl_avPllDivHdmiC4_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC4_B                  0x00070000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC5_B               0x00FA
    #define     B16Gbl_avPllCtl_avPllDivHdmiC5_B               0x00FA
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC5_B                  19
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC5_B                  3
    #define       bGbl_avPllCtl_avPllDivHdmiC5_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC5_B                  0x00380000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC6_B               0x00FA
    #define     B16Gbl_avPllCtl_avPllDivHdmiC6_B               0x00FA
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC6_B                  22
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC6_B                  6
    #define       bGbl_avPllCtl_avPllDivHdmiC6_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC6_B                  0x01C00000

    #define     BA_Gbl_avPllCtl_avPllDivHdmiC7_B               0x00FB
    #define     B16Gbl_avPllCtl_avPllDivHdmiC7_B               0x00FA
    #define   LSb32Gbl_avPllCtl_avPllDivHdmiC7_B                  25
    #define   LSb16Gbl_avPllCtl_avPllDivHdmiC7_B                  9
    #define       bGbl_avPllCtl_avPllDivHdmiC7_B               3
    #define   MSK32Gbl_avPllCtl_avPllDivHdmiC7_B                  0x0E000000

    #define     BA_Gbl_avPllCtl_avPllDivAv1C1_B                0x00FB
    #define     B16Gbl_avPllCtl_avPllDivAv1C1_B                0x00FA
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C1_B                   28
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C1_B                   12
    #define       bGbl_avPllCtl_avPllDivAv1C1_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C1_B                   0x70000000

    #define     RA_Gbl_avPllCtl43                              0x00FC

    #define     BA_Gbl_avPllCtl_avPllDivAv1C2_B                0x00FC
    #define     B16Gbl_avPllCtl_avPllDivAv1C2_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C2_B                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C2_B                   0
    #define       bGbl_avPllCtl_avPllDivAv1C2_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C2_B                   0x00000007

    #define     BA_Gbl_avPllCtl_avPllDivAv1C3_B                0x00FC
    #define     B16Gbl_avPllCtl_avPllDivAv1C3_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C3_B                   3
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C3_B                   3
    #define       bGbl_avPllCtl_avPllDivAv1C3_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C3_B                   0x00000038

    #define     BA_Gbl_avPllCtl_avPllDivAv1C4_B                0x00FC
    #define     B16Gbl_avPllCtl_avPllDivAv1C4_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C4_B                   6
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C4_B                   6
    #define       bGbl_avPllCtl_avPllDivAv1C4_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C4_B                   0x000001C0

    #define     BA_Gbl_avPllCtl_avPllDivAv1C5_B                0x00FD
    #define     B16Gbl_avPllCtl_avPllDivAv1C5_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C5_B                   9
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C5_B                   9
    #define       bGbl_avPllCtl_avPllDivAv1C5_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C5_B                   0x00000E00

    #define     BA_Gbl_avPllCtl_avPllDivAv1C6_B                0x00FD
    #define     B16Gbl_avPllCtl_avPllDivAv1C6_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C6_B                   12
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C6_B                   12
    #define       bGbl_avPllCtl_avPllDivAv1C6_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C6_B                   0x00007000

    #define     BA_Gbl_avPllCtl_avPllDivAv1C7_B                0x00FD
    #define     B16Gbl_avPllCtl_avPllDivAv1C7_B                0x00FC
    #define   LSb32Gbl_avPllCtl_avPllDivAv1C7_B                   15
    #define   LSb16Gbl_avPllCtl_avPllDivAv1C7_B                   15
    #define       bGbl_avPllCtl_avPllDivAv1C7_B                3
    #define   MSK32Gbl_avPllCtl_avPllDivAv1C7_B                   0x00038000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C1_B                0x00FE
    #define     B16Gbl_avPllCtl_avPllDivAv2C1_B                0x00FE
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C1_B                   18
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C1_B                   2
    #define       bGbl_avPllCtl_avPllDivAv2C1_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C1_B                   0x01FC0000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C2_B                0x00FF
    #define     B16Gbl_avPllCtl_avPllDivAv2C2_B                0x00FE
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C2_B                   25
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C2_B                   9
    #define       bGbl_avPllCtl_avPllDivAv2C2_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C2_B                   0xFE000000

    #define     RA_Gbl_avPllCtl44                              0x0100

    #define     BA_Gbl_avPllCtl_avPllDivAv2C3_B                0x0100
    #define     B16Gbl_avPllCtl_avPllDivAv2C3_B                0x0100
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C3_B                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C3_B                   0
    #define       bGbl_avPllCtl_avPllDivAv2C3_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C3_B                   0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivAv2C4_B                0x0100
    #define     B16Gbl_avPllCtl_avPllDivAv2C4_B                0x0100
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C4_B                   7
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C4_B                   7
    #define       bGbl_avPllCtl_avPllDivAv2C4_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C4_B                   0x00003F80

    #define     BA_Gbl_avPllCtl_avPllDivAv2C5_B                0x0101
    #define     B16Gbl_avPllCtl_avPllDivAv2C5_B                0x0100
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C5_B                   14
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C5_B                   14
    #define       bGbl_avPllCtl_avPllDivAv2C5_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C5_B                   0x001FC000

    #define     BA_Gbl_avPllCtl_avPllDivAv2C6_B                0x0102
    #define     B16Gbl_avPllCtl_avPllDivAv2C6_B                0x0102
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C6_B                   21
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C6_B                   5
    #define       bGbl_avPllCtl_avPllDivAv2C6_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C6_B                   0x0FE00000

    #define     RA_Gbl_avPllCtl45                              0x0104

    #define     BA_Gbl_avPllCtl_avPllDivAv2C7_B                0x0104
    #define     B16Gbl_avPllCtl_avPllDivAv2C7_B                0x0104
    #define   LSb32Gbl_avPllCtl_avPllDivAv2C7_B                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv2C7_B                   0
    #define       bGbl_avPllCtl_avPllDivAv2C7_B                7
    #define   MSK32Gbl_avPllCtl_avPllDivAv2C7_B                   0x0000007F

    #define     BA_Gbl_avPllCtl_avPllDivAv3C1_B                0x0104
    #define     B16Gbl_avPllCtl_avPllDivAv3C1_B                0x0104
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C1_B                   7
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C1_B                   7
    #define       bGbl_avPllCtl_avPllDivAv3C1_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C1_B                   0x00000780

    #define     BA_Gbl_avPllCtl_avPllDivAv3C2_B                0x0105
    #define     B16Gbl_avPllCtl_avPllDivAv3C2_B                0x0104
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C2_B                   11
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C2_B                   11
    #define       bGbl_avPllCtl_avPllDivAv3C2_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C2_B                   0x00007800

    #define     BA_Gbl_avPllCtl_avPllDivAv3C3_B                0x0105
    #define     B16Gbl_avPllCtl_avPllDivAv3C3_B                0x0104
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C3_B                   15
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C3_B                   15
    #define       bGbl_avPllCtl_avPllDivAv3C3_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C3_B                   0x00078000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C4_B                0x0106
    #define     B16Gbl_avPllCtl_avPllDivAv3C4_B                0x0106
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C4_B                   19
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C4_B                   3
    #define       bGbl_avPllCtl_avPllDivAv3C4_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C4_B                   0x00780000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C5_B                0x0106
    #define     B16Gbl_avPllCtl_avPllDivAv3C5_B                0x0106
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C5_B                   23
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C5_B                   7
    #define       bGbl_avPllCtl_avPllDivAv3C5_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C5_B                   0x07800000

    #define     BA_Gbl_avPllCtl_avPllDivAv3C6_B                0x0107
    #define     B16Gbl_avPllCtl_avPllDivAv3C6_B                0x0106
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C6_B                   27
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C6_B                   11
    #define       bGbl_avPllCtl_avPllDivAv3C6_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C6_B                   0x78000000

    #define     RA_Gbl_avPllCtl46                              0x0108

    #define     BA_Gbl_avPllCtl_avPllDivAv3C7_B                0x0108
    #define     B16Gbl_avPllCtl_avPllDivAv3C7_B                0x0108
    #define   LSb32Gbl_avPllCtl_avPllDivAv3C7_B                   0
    #define   LSb16Gbl_avPllCtl_avPllDivAv3C7_B                   0
    #define       bGbl_avPllCtl_avPllDivAv3C7_B                4
    #define   MSK32Gbl_avPllCtl_avPllDivAv3C7_B                   0x0000000F

    #define     BA_Gbl_avPllCtl_avPllPSync1C1_B                0x0108
    #define     B16Gbl_avPllCtl_avPllPSync1C1_B                0x0108
    #define   LSb32Gbl_avPllCtl_avPllPSync1C1_B                   4
    #define   LSb16Gbl_avPllCtl_avPllPSync1C1_B                   4
    #define       bGbl_avPllCtl_avPllPSync1C1_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C1_B                   0x001FFFF0

    #define     RA_Gbl_avPllCtl47                              0x010C

    #define     BA_Gbl_avPllCtl_avPllPSync1C2_B                0x010C
    #define     B16Gbl_avPllCtl_avPllPSync1C2_B                0x010C
    #define   LSb32Gbl_avPllCtl_avPllPSync1C2_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C2_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C2_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C2_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl48                              0x0110

    #define     BA_Gbl_avPllCtl_avPllPSync1C3_B                0x0110
    #define     B16Gbl_avPllCtl_avPllPSync1C3_B                0x0110
    #define   LSb32Gbl_avPllCtl_avPllPSync1C3_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C3_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C3_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C3_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl49                              0x0114

    #define     BA_Gbl_avPllCtl_avPllPSync1C4_B                0x0114
    #define     B16Gbl_avPllCtl_avPllPSync1C4_B                0x0114
    #define   LSb32Gbl_avPllCtl_avPllPSync1C4_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C4_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C4_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C4_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl50                              0x0118

    #define     BA_Gbl_avPllCtl_avPllPSync1C5_B                0x0118
    #define     B16Gbl_avPllCtl_avPllPSync1C5_B                0x0118
    #define   LSb32Gbl_avPllCtl_avPllPSync1C5_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C5_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C5_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C5_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl51                              0x011C

    #define     BA_Gbl_avPllCtl_avPllPSync1C6_B                0x011C
    #define     B16Gbl_avPllCtl_avPllPSync1C6_B                0x011C
    #define   LSb32Gbl_avPllCtl_avPllPSync1C6_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C6_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C6_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C6_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl52                              0x0120

    #define     BA_Gbl_avPllCtl_avPllPSync1C7_B                0x0120
    #define     B16Gbl_avPllCtl_avPllPSync1C7_B                0x0120
    #define   LSb32Gbl_avPllCtl_avPllPSync1C7_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C7_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C7_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C7_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl53                              0x0124

    #define     BA_Gbl_avPllCtl_avPllPSync1C8_B                0x0124
    #define     B16Gbl_avPllCtl_avPllPSync1C8_B                0x0124
    #define   LSb32Gbl_avPllCtl_avPllPSync1C8_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync1C8_B                   0
    #define       bGbl_avPllCtl_avPllPSync1C8_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync1C8_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl54                              0x0128

    #define     BA_Gbl_avPllCtl_avPllPSync2C1_B                0x0128
    #define     B16Gbl_avPllCtl_avPllPSync2C1_B                0x0128
    #define   LSb32Gbl_avPllCtl_avPllPSync2C1_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C1_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C1_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C1_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl55                              0x012C

    #define     BA_Gbl_avPllCtl_avPllPSync2C2_B                0x012C
    #define     B16Gbl_avPllCtl_avPllPSync2C2_B                0x012C
    #define   LSb32Gbl_avPllCtl_avPllPSync2C2_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C2_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C2_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C2_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl56                              0x0130

    #define     BA_Gbl_avPllCtl_avPllPSync2C3_B                0x0130
    #define     B16Gbl_avPllCtl_avPllPSync2C3_B                0x0130
    #define   LSb32Gbl_avPllCtl_avPllPSync2C3_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C3_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C3_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C3_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl57                              0x0134

    #define     BA_Gbl_avPllCtl_avPllPSync2C4_B                0x0134
    #define     B16Gbl_avPllCtl_avPllPSync2C4_B                0x0134
    #define   LSb32Gbl_avPllCtl_avPllPSync2C4_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C4_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C4_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C4_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl58                              0x0138

    #define     BA_Gbl_avPllCtl_avPllPSync2C5_B                0x0138
    #define     B16Gbl_avPllCtl_avPllPSync2C5_B                0x0138
    #define   LSb32Gbl_avPllCtl_avPllPSync2C5_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C5_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C5_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C5_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl59                              0x013C

    #define     BA_Gbl_avPllCtl_avPllPSync2C6_B                0x013C
    #define     B16Gbl_avPllCtl_avPllPSync2C6_B                0x013C
    #define   LSb32Gbl_avPllCtl_avPllPSync2C6_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C6_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C6_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C6_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl60                              0x0140

    #define     BA_Gbl_avPllCtl_avPllPSync2C7_B                0x0140
    #define     B16Gbl_avPllCtl_avPllPSync2C7_B                0x0140
    #define   LSb32Gbl_avPllCtl_avPllPSync2C7_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C7_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C7_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C7_B                   0x0001FFFF

    #define     RA_Gbl_avPllCtl61                              0x0144

    #define     BA_Gbl_avPllCtl_avPllPSync2C8_B                0x0144
    #define     B16Gbl_avPllCtl_avPllPSync2C8_B                0x0144
    #define   LSb32Gbl_avPllCtl_avPllPSync2C8_B                   0
    #define   LSb16Gbl_avPllCtl_avPllPSync2C8_B                   0
    #define       bGbl_avPllCtl_avPllPSync2C8_B                17
    #define   MSK32Gbl_avPllCtl_avPllPSync2C8_B                   0x0001FFFF

    #define     BA_Gbl_avPllCtl_avPllEnDpllC_B                 0x0146
    #define     B16Gbl_avPllCtl_avPllEnDpllC_B                 0x0146
    #define   LSb32Gbl_avPllCtl_avPllEnDpllC_B                    17
    #define   LSb16Gbl_avPllCtl_avPllEnDpllC_B                    1
    #define       bGbl_avPllCtl_avPllEnDpllC_B                 8
    #define   MSK32Gbl_avPllCtl_avPllEnDpllC_B                    0x01FE0000

    #define     BA_Gbl_avPllCtl_avPllMasterSlaveB_B            0x0147
    #define     B16Gbl_avPllCtl_avPllMasterSlaveB_B            0x0146
    #define   LSb32Gbl_avPllCtl_avPllMasterSlaveB_B               25
    #define   LSb16Gbl_avPllCtl_avPllMasterSlaveB_B               9
    #define       bGbl_avPllCtl_avPllMasterSlaveB_B            1
    #define   MSK32Gbl_avPllCtl_avPllMasterSlaveB_B               0x02000000

    #define     BA_Gbl_avPllCtl_avPllTestAna_B                 0x0147
    #define     B16Gbl_avPllCtl_avPllTestAna_B                 0x0146
    #define   LSb32Gbl_avPllCtl_avPllTestAna_B                    26
    #define   LSb16Gbl_avPllCtl_avPllTestAna_B                    10
    #define       bGbl_avPllCtl_avPllTestAna_B                 6
    #define   MSK32Gbl_avPllCtl_avPllTestAna_B                    0xFC000000

    #define     RA_Gbl_avPllCtl62                              0x0148

    #define     BA_Gbl_avPllCtl_avPllReservePll_B              0x0148
    #define     B16Gbl_avPllCtl_avPllReservePll_B              0x0148
    #define   LSb32Gbl_avPllCtl_avPllReservePll_B                 0
    #define   LSb16Gbl_avPllCtl_avPllReservePll_B                 0
    #define       bGbl_avPllCtl_avPllReservePll_B              4
    #define   MSK32Gbl_avPllCtl_avPllReservePll_B                 0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pllStatus                               0x014C

    #define     BA_Gbl_pllStatus_sysPllLock                    0x014C
    #define     B16Gbl_pllStatus_sysPllLock                    0x014C
    #define   LSb32Gbl_pllStatus_sysPllLock                       0
    #define   LSb16Gbl_pllStatus_sysPllLock                       0
    #define       bGbl_pllStatus_sysPllLock                    1
    #define   MSK32Gbl_pllStatus_sysPllLock                       0x00000001

    #define     BA_Gbl_pllStatus_memPllLock                    0x014C
    #define     B16Gbl_pllStatus_memPllLock                    0x014C
    #define   LSb32Gbl_pllStatus_memPllLock                       1
    #define   LSb16Gbl_pllStatus_memPllLock                       1
    #define       bGbl_pllStatus_memPllLock                    1
    #define   MSK32Gbl_pllStatus_memPllLock                       0x00000002

    #define     BA_Gbl_pllStatus_cpu1PllLock                   0x014C
    #define     B16Gbl_pllStatus_cpu1PllLock                   0x014C
    #define   LSb32Gbl_pllStatus_cpu1PllLock                      2
    #define   LSb16Gbl_pllStatus_cpu1PllLock                      2
    #define       bGbl_pllStatus_cpu1PllLock                   1
    #define   MSK32Gbl_pllStatus_cpu1PllLock                      0x00000004

    #define     BA_Gbl_pllStatus_avPllALock                    0x014C
    #define     B16Gbl_pllStatus_avPllALock                    0x014C
    #define   LSb32Gbl_pllStatus_avPllALock                       3
    #define   LSb16Gbl_pllStatus_avPllALock                       3
    #define       bGbl_pllStatus_avPllALock                    1
    #define   MSK32Gbl_pllStatus_avPllALock                       0x00000008

    #define     BA_Gbl_pllStatus_avPllAKvcoOut                 0x014C
    #define     B16Gbl_pllStatus_avPllAKvcoOut                 0x014C
    #define   LSb32Gbl_pllStatus_avPllAKvcoOut                    4
    #define   LSb16Gbl_pllStatus_avPllAKvcoOut                    4
    #define       bGbl_pllStatus_avPllAKvcoOut                 3
    #define   MSK32Gbl_pllStatus_avPllAKvcoOut                    0x00000070

    #define     BA_Gbl_pllStatus_avPllACaliDone                0x014C
    #define     B16Gbl_pllStatus_avPllACaliDone                0x014C
    #define   LSb32Gbl_pllStatus_avPllACaliDone                   7
    #define   LSb16Gbl_pllStatus_avPllACaliDone                   7
    #define       bGbl_pllStatus_avPllACaliDone                1
    #define   MSK32Gbl_pllStatus_avPllACaliDone                   0x00000080

    #define     BA_Gbl_pllStatus_avPllBLock                    0x014D
    #define     B16Gbl_pllStatus_avPllBLock                    0x014C
    #define   LSb32Gbl_pllStatus_avPllBLock                       8
    #define   LSb16Gbl_pllStatus_avPllBLock                       8
    #define       bGbl_pllStatus_avPllBLock                    1
    #define   MSK32Gbl_pllStatus_avPllBLock                       0x00000100

    #define     BA_Gbl_pllStatus_avPllBKvcoOut                 0x014D
    #define     B16Gbl_pllStatus_avPllBKvcoOut                 0x014C
    #define   LSb32Gbl_pllStatus_avPllBKvcoOut                    9
    #define   LSb16Gbl_pllStatus_avPllBKvcoOut                    9
    #define       bGbl_pllStatus_avPllBKvcoOut                 3
    #define   MSK32Gbl_pllStatus_avPllBKvcoOut                    0x00000E00

    #define     BA_Gbl_pllStatus_avPllBCaliDone                0x014D
    #define     B16Gbl_pllStatus_avPllBCaliDone                0x014C
    #define   LSb32Gbl_pllStatus_avPllBCaliDone                   12
    #define   LSb16Gbl_pllStatus_avPllBCaliDone                   12
    #define       bGbl_pllStatus_avPllBCaliDone                1
    #define   MSK32Gbl_pllStatus_avPllBCaliDone                   0x00001000

    #define     BA_Gbl_pllStatus_cpuPllResOut                  0x014D
    #define     B16Gbl_pllStatus_cpuPllResOut                  0x014C
    #define   LSb32Gbl_pllStatus_cpuPllResOut                     13
    #define   LSb16Gbl_pllStatus_cpuPllResOut                     13
    #define       bGbl_pllStatus_cpuPllResOut                  4
    #define   MSK32Gbl_pllStatus_cpuPllResOut                     0x0001E000

    #define     BA_Gbl_pllStatus_memPllResOut                  0x014E
    #define     B16Gbl_pllStatus_memPllResOut                  0x014E
    #define   LSb32Gbl_pllStatus_memPllResOut                     17
    #define   LSb16Gbl_pllStatus_memPllResOut                     1
    #define       bGbl_pllStatus_memPllResOut                  4
    #define   MSK32Gbl_pllStatus_memPllResOut                     0x001E0000

    #define     BA_Gbl_pllStatus_sysPllResOut                  0x014E
    #define     B16Gbl_pllStatus_sysPllResOut                  0x014E
    #define   LSb32Gbl_pllStatus_sysPllResOut                     21
    #define   LSb16Gbl_pllStatus_sysPllResOut                     5
    #define       bGbl_pllStatus_sysPllResOut                  4
    #define   MSK32Gbl_pllStatus_sysPllResOut                     0x01E00000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_clkEnable                               0x0150

    #define     BA_Gbl_clkEnable_sysClkEn                      0x0150
    #define     B16Gbl_clkEnable_sysClkEn                      0x0150
    #define   LSb32Gbl_clkEnable_sysClkEn                         0
    #define   LSb16Gbl_clkEnable_sysClkEn                         0
    #define       bGbl_clkEnable_sysClkEn                      1
    #define   MSK32Gbl_clkEnable_sysClkEn                         0x00000001
    #define        Gbl_clkEnable_sysClkEn_enable                            0x1
    #define        Gbl_clkEnable_sysClkEn_disable                           0x0

    #define     BA_Gbl_clkEnable_cfgClkEn                      0x0150
    #define     B16Gbl_clkEnable_cfgClkEn                      0x0150
    #define   LSb32Gbl_clkEnable_cfgClkEn                         1
    #define   LSb16Gbl_clkEnable_cfgClkEn                         1
    #define       bGbl_clkEnable_cfgClkEn                      1
    #define   MSK32Gbl_clkEnable_cfgClkEn                         0x00000002
    #define        Gbl_clkEnable_cfgClkEn_enable                            0x1
    #define        Gbl_clkEnable_cfgClkEn_disable                           0x0

    #define     BA_Gbl_clkEnable_pCubeClkEn                    0x0150
    #define     B16Gbl_clkEnable_pCubeClkEn                    0x0150
    #define   LSb32Gbl_clkEnable_pCubeClkEn                       2
    #define   LSb16Gbl_clkEnable_pCubeClkEn                       2
    #define       bGbl_clkEnable_pCubeClkEn                    1
    #define   MSK32Gbl_clkEnable_pCubeClkEn                       0x00000004
    #define        Gbl_clkEnable_pCubeClkEn_enable                          0x1
    #define        Gbl_clkEnable_pCubeClkEn_disable                         0x0

    #define     BA_Gbl_clkEnable_vScopeClkEn                   0x0150
    #define     B16Gbl_clkEnable_vScopeClkEn                   0x0150
    #define   LSb32Gbl_clkEnable_vScopeClkEn                      3
    #define   LSb16Gbl_clkEnable_vScopeClkEn                      3
    #define       bGbl_clkEnable_vScopeClkEn                   1
    #define   MSK32Gbl_clkEnable_vScopeClkEn                      0x00000008
    #define        Gbl_clkEnable_vScopeClkEn_enable                         0x1
    #define        Gbl_clkEnable_vScopeClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_gfxClkEn                      0x0150
    #define     B16Gbl_clkEnable_gfxClkEn                      0x0150
    #define   LSb32Gbl_clkEnable_gfxClkEn                         4
    #define   LSb16Gbl_clkEnable_gfxClkEn                         4
    #define       bGbl_clkEnable_gfxClkEn                      1
    #define   MSK32Gbl_clkEnable_gfxClkEn                         0x00000010
    #define        Gbl_clkEnable_gfxClkEn_enable                            0x1
    #define        Gbl_clkEnable_gfxClkEn_disable                           0x0

    #define     BA_Gbl_clkEnable_zspClkEn                      0x0150
    #define     B16Gbl_clkEnable_zspClkEn                      0x0150
    #define   LSb32Gbl_clkEnable_zspClkEn                         5
    #define   LSb16Gbl_clkEnable_zspClkEn                         5
    #define       bGbl_clkEnable_zspClkEn                      1
    #define   MSK32Gbl_clkEnable_zspClkEn                         0x00000020
    #define        Gbl_clkEnable_zspClkEn_enable                            0x1
    #define        Gbl_clkEnable_zspClkEn_disable                           0x0

    #define     BA_Gbl_clkEnable_perifClkEn                    0x0150
    #define     B16Gbl_clkEnable_perifClkEn                    0x0150
    #define   LSb32Gbl_clkEnable_perifClkEn                       6
    #define   LSb16Gbl_clkEnable_perifClkEn                       6
    #define       bGbl_clkEnable_perifClkEn                    1
    #define   MSK32Gbl_clkEnable_perifClkEn                       0x00000040
    #define        Gbl_clkEnable_perifClkEn_enable                          0x1
    #define        Gbl_clkEnable_perifClkEn_disable                         0x0

    #define     BA_Gbl_clkEnable_gethCoreClkEn                 0x0150
    #define     B16Gbl_clkEnable_gethCoreClkEn                 0x0150
    #define   LSb32Gbl_clkEnable_gethCoreClkEn                    7
    #define   LSb16Gbl_clkEnable_gethCoreClkEn                    7
    #define       bGbl_clkEnable_gethCoreClkEn                 1
    #define   MSK32Gbl_clkEnable_gethCoreClkEn                    0x00000080
    #define        Gbl_clkEnable_gethCoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_gethCoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_geth1CoreClkEn                0x0151
    #define     B16Gbl_clkEnable_geth1CoreClkEn                0x0150
    #define   LSb32Gbl_clkEnable_geth1CoreClkEn                   8
    #define   LSb16Gbl_clkEnable_geth1CoreClkEn                   8
    #define       bGbl_clkEnable_geth1CoreClkEn                1
    #define   MSK32Gbl_clkEnable_geth1CoreClkEn                   0x00000100
    #define        Gbl_clkEnable_geth1CoreClkEn_enable                      0x1
    #define        Gbl_clkEnable_geth1CoreClkEn_disable                     0x0

    #define     BA_Gbl_clkEnable_sataCoreClkEn                 0x0151
    #define     B16Gbl_clkEnable_sataCoreClkEn                 0x0150
    #define   LSb32Gbl_clkEnable_sataCoreClkEn                    9
    #define   LSb16Gbl_clkEnable_sataCoreClkEn                    9
    #define       bGbl_clkEnable_sataCoreClkEn                 1
    #define   MSK32Gbl_clkEnable_sataCoreClkEn                    0x00000200
    #define        Gbl_clkEnable_sataCoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_sataCoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_ahbApbCoreClkEn               0x0151
    #define     B16Gbl_clkEnable_ahbApbCoreClkEn               0x0150
    #define   LSb32Gbl_clkEnable_ahbApbCoreClkEn                  10
    #define   LSb16Gbl_clkEnable_ahbApbCoreClkEn                  10
    #define       bGbl_clkEnable_ahbApbCoreClkEn               1
    #define   MSK32Gbl_clkEnable_ahbApbCoreClkEn                  0x00000400
    #define        Gbl_clkEnable_ahbApbCoreClkEn_enable                     0x1
    #define        Gbl_clkEnable_ahbApbCoreClkEn_disable                    0x0

    #define     BA_Gbl_clkEnable_usb0CoreClkEn                 0x0151
    #define     B16Gbl_clkEnable_usb0CoreClkEn                 0x0150
    #define   LSb32Gbl_clkEnable_usb0CoreClkEn                    11
    #define   LSb16Gbl_clkEnable_usb0CoreClkEn                    11
    #define       bGbl_clkEnable_usb0CoreClkEn                 1
    #define   MSK32Gbl_clkEnable_usb0CoreClkEn                    0x00000800
    #define        Gbl_clkEnable_usb0CoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_usb0CoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_usb1CoreClkEn                 0x0151
    #define     B16Gbl_clkEnable_usb1CoreClkEn                 0x0150
    #define   LSb32Gbl_clkEnable_usb1CoreClkEn                    12
    #define   LSb16Gbl_clkEnable_usb1CoreClkEn                    12
    #define       bGbl_clkEnable_usb1CoreClkEn                 1
    #define   MSK32Gbl_clkEnable_usb1CoreClkEn                    0x00001000
    #define        Gbl_clkEnable_usb1CoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_usb1CoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_pBridgeCoreClkEn              0x0151
    #define     B16Gbl_clkEnable_pBridgeCoreClkEn              0x0150
    #define   LSb32Gbl_clkEnable_pBridgeCoreClkEn                 13
    #define   LSb16Gbl_clkEnable_pBridgeCoreClkEn                 13
    #define       bGbl_clkEnable_pBridgeCoreClkEn              1
    #define   MSK32Gbl_clkEnable_pBridgeCoreClkEn                 0x00002000
    #define        Gbl_clkEnable_pBridgeCoreClkEn_enable                    0x1
    #define        Gbl_clkEnable_pBridgeCoreClkEn_disable                   0x0

    #define     BA_Gbl_clkEnable_sdioCoreClkEn                 0x0151
    #define     B16Gbl_clkEnable_sdioCoreClkEn                 0x0150
    #define   LSb32Gbl_clkEnable_sdioCoreClkEn                    14
    #define   LSb16Gbl_clkEnable_sdioCoreClkEn                    14
    #define       bGbl_clkEnable_sdioCoreClkEn                 1
    #define   MSK32Gbl_clkEnable_sdioCoreClkEn                    0x00004000
    #define        Gbl_clkEnable_sdioCoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_sdioCoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_sdio1CoreClkEn                0x0151
    #define     B16Gbl_clkEnable_sdio1CoreClkEn                0x0150
    #define   LSb32Gbl_clkEnable_sdio1CoreClkEn                   15
    #define   LSb16Gbl_clkEnable_sdio1CoreClkEn                   15
    #define       bGbl_clkEnable_sdio1CoreClkEn                1
    #define   MSK32Gbl_clkEnable_sdio1CoreClkEn                   0x00008000
    #define        Gbl_clkEnable_sdio1CoreClkEn_enable                      0x1
    #define        Gbl_clkEnable_sdio1CoreClkEn_disable                     0x0

    #define     BA_Gbl_clkEnable_drmFigoClkEn                  0x0152
    #define     B16Gbl_clkEnable_drmFigoClkEn                  0x0152
    #define   LSb32Gbl_clkEnable_drmFigoClkEn                     16
    #define   LSb16Gbl_clkEnable_drmFigoClkEn                     0
    #define       bGbl_clkEnable_drmFigoClkEn                  1
    #define   MSK32Gbl_clkEnable_drmFigoClkEn                     0x00010000
    #define        Gbl_clkEnable_drmFigoClkEn_enable                        0x1
    #define        Gbl_clkEnable_drmFigoClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_nfcCoreClkEn                  0x0152
    #define     B16Gbl_clkEnable_nfcCoreClkEn                  0x0152
    #define   LSb32Gbl_clkEnable_nfcCoreClkEn                     17
    #define   LSb16Gbl_clkEnable_nfcCoreClkEn                     1
    #define       bGbl_clkEnable_nfcCoreClkEn                  1
    #define   MSK32Gbl_clkEnable_nfcCoreClkEn                     0x00020000
    #define        Gbl_clkEnable_nfcCoreClkEn_enable                        0x1
    #define        Gbl_clkEnable_nfcCoreClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_nfcEccClkEn                   0x0152
    #define     B16Gbl_clkEnable_nfcEccClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_nfcEccClkEn                      18
    #define   LSb16Gbl_clkEnable_nfcEccClkEn                      2
    #define       bGbl_clkEnable_nfcEccClkEn                   1
    #define   MSK32Gbl_clkEnable_nfcEccClkEn                      0x00040000
    #define        Gbl_clkEnable_nfcEccClkEn_enable                         0x1
    #define        Gbl_clkEnable_nfcEccClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_smemcCoreClkEn                0x0152
    #define     B16Gbl_clkEnable_smemcCoreClkEn                0x0152
    #define   LSb32Gbl_clkEnable_smemcCoreClkEn                   19
    #define   LSb16Gbl_clkEnable_smemcCoreClkEn                   3
    #define       bGbl_clkEnable_smemcCoreClkEn                1
    #define   MSK32Gbl_clkEnable_smemcCoreClkEn                   0x00080000
    #define        Gbl_clkEnable_smemcCoreClkEn_enable                      0x1
    #define        Gbl_clkEnable_smemcCoreClkEn_disable                     0x0

    #define     BA_Gbl_clkEnable_appClkEn                      0x0152
    #define     B16Gbl_clkEnable_appClkEn                      0x0152
    #define   LSb32Gbl_clkEnable_appClkEn                         20
    #define   LSb16Gbl_clkEnable_appClkEn                         4
    #define       bGbl_clkEnable_appClkEn                      1
    #define   MSK32Gbl_clkEnable_appClkEn                         0x00100000
    #define        Gbl_clkEnable_appClkEn_enable                            0x1
    #define        Gbl_clkEnable_appClkEn_disable                           0x0

    #define     BA_Gbl_clkEnable_vppSysClkEn                   0x0152
    #define     B16Gbl_clkEnable_vppSysClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_vppSysClkEn                      21
    #define   LSb16Gbl_clkEnable_vppSysClkEn                      5
    #define       bGbl_clkEnable_vppSysClkEn                   1
    #define   MSK32Gbl_clkEnable_vppSysClkEn                      0x00200000
    #define        Gbl_clkEnable_vppSysClkEn_enable                         0x1
    #define        Gbl_clkEnable_vppSysClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_audio0ClkEn                   0x0152
    #define     B16Gbl_clkEnable_audio0ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_audio0ClkEn                      22
    #define   LSb16Gbl_clkEnable_audio0ClkEn                      6
    #define       bGbl_clkEnable_audio0ClkEn                   1
    #define   MSK32Gbl_clkEnable_audio0ClkEn                      0x00400000
    #define        Gbl_clkEnable_audio0ClkEn_enable                         0x1
    #define        Gbl_clkEnable_audio0ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_audio1ClkEn                   0x0152
    #define     B16Gbl_clkEnable_audio1ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_audio1ClkEn                      23
    #define   LSb16Gbl_clkEnable_audio1ClkEn                      7
    #define       bGbl_clkEnable_audio1ClkEn                   1
    #define   MSK32Gbl_clkEnable_audio1ClkEn                      0x00800000
    #define        Gbl_clkEnable_audio1ClkEn_enable                         0x1
    #define        Gbl_clkEnable_audio1ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_audio2ClkEn                   0x0153
    #define     B16Gbl_clkEnable_audio2ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_audio2ClkEn                      24
    #define   LSb16Gbl_clkEnable_audio2ClkEn                      8
    #define       bGbl_clkEnable_audio2ClkEn                   1
    #define   MSK32Gbl_clkEnable_audio2ClkEn                      0x01000000
    #define        Gbl_clkEnable_audio2ClkEn_enable                         0x1
    #define        Gbl_clkEnable_audio2ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_audio3ClkEn                   0x0153
    #define     B16Gbl_clkEnable_audio3ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_audio3ClkEn                      25
    #define   LSb16Gbl_clkEnable_audio3ClkEn                      9
    #define       bGbl_clkEnable_audio3ClkEn                   1
    #define   MSK32Gbl_clkEnable_audio3ClkEn                      0x02000000
    #define        Gbl_clkEnable_audio3ClkEn_enable                         0x1
    #define        Gbl_clkEnable_audio3ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_audioHdClkEn                  0x0153
    #define     B16Gbl_clkEnable_audioHdClkEn                  0x0152
    #define   LSb32Gbl_clkEnable_audioHdClkEn                     26
    #define   LSb16Gbl_clkEnable_audioHdClkEn                     10
    #define       bGbl_clkEnable_audioHdClkEn                  1
    #define   MSK32Gbl_clkEnable_audioHdClkEn                     0x04000000
    #define        Gbl_clkEnable_audioHdClkEn_enable                        0x1
    #define        Gbl_clkEnable_audioHdClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_video0ClkEn                   0x0153
    #define     B16Gbl_clkEnable_video0ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_video0ClkEn                      27
    #define   LSb16Gbl_clkEnable_video0ClkEn                      11
    #define       bGbl_clkEnable_video0ClkEn                   1
    #define   MSK32Gbl_clkEnable_video0ClkEn                      0x08000000
    #define        Gbl_clkEnable_video0ClkEn_enable                         0x1
    #define        Gbl_clkEnable_video0ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_video1ClkEn                   0x0153
    #define     B16Gbl_clkEnable_video1ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_video1ClkEn                      28
    #define   LSb16Gbl_clkEnable_video1ClkEn                      12
    #define       bGbl_clkEnable_video1ClkEn                   1
    #define   MSK32Gbl_clkEnable_video1ClkEn                      0x10000000
    #define        Gbl_clkEnable_video1ClkEn_enable                         0x1
    #define        Gbl_clkEnable_video1ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_video2ClkEn                   0x0153
    #define     B16Gbl_clkEnable_video2ClkEn                   0x0152
    #define   LSb32Gbl_clkEnable_video2ClkEn                      29
    #define   LSb16Gbl_clkEnable_video2ClkEn                      13
    #define       bGbl_clkEnable_video2ClkEn                   1
    #define   MSK32Gbl_clkEnable_video2ClkEn                      0x20000000
    #define        Gbl_clkEnable_video2ClkEn_enable                         0x1
    #define        Gbl_clkEnable_video2ClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_PEX_mx_refclk_off             0x0153
    #define     B16Gbl_clkEnable_PEX_mx_refclk_off             0x0152
    #define   LSb32Gbl_clkEnable_PEX_mx_refclk_off                30
    #define   LSb16Gbl_clkEnable_PEX_mx_refclk_off                14
    #define       bGbl_clkEnable_PEX_mx_refclk_off             1
    #define   MSK32Gbl_clkEnable_PEX_mx_refclk_off                0x40000000
    #define        Gbl_clkEnable_PEX_mx_refclk_off_ON                       0x0
    #define        Gbl_clkEnable_PEX_mx_refclk_off_OFF                      0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_clkSelect                               0x0154

    #define     BA_Gbl_clkSelect_sysClkPllSel                  0x0154
    #define     B16Gbl_clkSelect_sysClkPllSel                  0x0154
    #define   LSb32Gbl_clkSelect_sysClkPllSel                     0
    #define   LSb16Gbl_clkSelect_sysClkPllSel                     0
    #define       bGbl_clkSelect_sysClkPllSel                  3
    #define   MSK32Gbl_clkSelect_sysClkPllSel                     0x00000007
    #define        Gbl_clkSelect_sysClkPllSel_AVPllB4                       0x0
    #define        Gbl_clkSelect_sysClkPllSel_AVPllB5                       0x1
    #define        Gbl_clkSelect_sysClkPllSel_AVPllB6                       0x2
    #define        Gbl_clkSelect_sysClkPllSel_AVPllB7                       0x3
    #define        Gbl_clkSelect_sysClkPllSel_SYSPll                        0x4

    #define     BA_Gbl_clkSelect_sysClkSel                     0x0154
    #define     B16Gbl_clkSelect_sysClkSel                     0x0154
    #define   LSb32Gbl_clkSelect_sysClkSel                        3
    #define   LSb16Gbl_clkSelect_sysClkSel                        3
    #define       bGbl_clkSelect_sysClkSel                     3
    #define   MSK32Gbl_clkSelect_sysClkSel                        0x00000038
    #define        Gbl_clkSelect_sysClkSel_d2                               0x1
    #define        Gbl_clkSelect_sysClkSel_d4                               0x2
    #define        Gbl_clkSelect_sysClkSel_d6                               0x3
    #define        Gbl_clkSelect_sysClkSel_d8                               0x4
    #define        Gbl_clkSelect_sysClkSel_d12                              0x5

    #define     BA_Gbl_clkSelect_cpu0ClkPllSel                 0x0154
    #define     B16Gbl_clkSelect_cpu0ClkPllSel                 0x0154
    #define   LSb32Gbl_clkSelect_cpu0ClkPllSel                    6
    #define   LSb16Gbl_clkSelect_cpu0ClkPllSel                    6
    #define       bGbl_clkSelect_cpu0ClkPllSel                 3
    #define   MSK32Gbl_clkSelect_cpu0ClkPllSel                    0x000001C0
    #define        Gbl_clkSelect_cpu0ClkPllSel_AVPllB4                      0x0
    #define        Gbl_clkSelect_cpu0ClkPllSel_AVPllB5                      0x1
    #define        Gbl_clkSelect_cpu0ClkPllSel_AVPllB6                      0x2
    #define        Gbl_clkSelect_cpu0ClkPllSel_AVPllB7                      0x3
    #define        Gbl_clkSelect_cpu0ClkPllSel_MEMPLL                       0x4

    #define     BA_Gbl_clkSelect_cpu0ClkSel                    0x0155
    #define     B16Gbl_clkSelect_cpu0ClkSel                    0x0154
    #define   LSb32Gbl_clkSelect_cpu0ClkSel                       9
    #define   LSb16Gbl_clkSelect_cpu0ClkSel                       9
    #define       bGbl_clkSelect_cpu0ClkSel                    3
    #define   MSK32Gbl_clkSelect_cpu0ClkSel                       0x00000E00
    #define        Gbl_clkSelect_cpu0ClkSel_d2                              0x1
    #define        Gbl_clkSelect_cpu0ClkSel_d4                              0x2
    #define        Gbl_clkSelect_cpu0ClkSel_d6                              0x3
    #define        Gbl_clkSelect_cpu0ClkSel_d8                              0x4
    #define        Gbl_clkSelect_cpu0ClkSel_d12                             0x5

    #define     BA_Gbl_clkSelect_cpu1ClkPllSel                 0x0155
    #define     B16Gbl_clkSelect_cpu1ClkPllSel                 0x0154
    #define   LSb32Gbl_clkSelect_cpu1ClkPllSel                    12
    #define   LSb16Gbl_clkSelect_cpu1ClkPllSel                    12
    #define       bGbl_clkSelect_cpu1ClkPllSel                 2
    #define   MSK32Gbl_clkSelect_cpu1ClkPllSel                    0x00003000
    #define        Gbl_clkSelect_cpu1ClkPllSel_AVPllA5                      0x0
    #define        Gbl_clkSelect_cpu1ClkPllSel_AVPllA6                      0x1
    #define        Gbl_clkSelect_cpu1ClkPllSel_AVPllB6                      0x2
    #define        Gbl_clkSelect_cpu1ClkPllSel_AVPllB7                      0x3

    #define     BA_Gbl_clkSelect_cpu1ClkSel                    0x0155
    #define     B16Gbl_clkSelect_cpu1ClkSel                    0x0154
    #define   LSb32Gbl_clkSelect_cpu1ClkSel                       14
    #define   LSb16Gbl_clkSelect_cpu1ClkSel                       14
    #define       bGbl_clkSelect_cpu1ClkSel                    3
    #define   MSK32Gbl_clkSelect_cpu1ClkSel                       0x0001C000
    #define        Gbl_clkSelect_cpu1ClkSel_d2                              0x1
    #define        Gbl_clkSelect_cpu1ClkSel_d4                              0x2
    #define        Gbl_clkSelect_cpu1ClkSel_d6                              0x3
    #define        Gbl_clkSelect_cpu1ClkSel_d8                              0x4
    #define        Gbl_clkSelect_cpu1ClkSel_d12                             0x5

    #define     BA_Gbl_clkSelect_drmFigoClkPllSel              0x0156
    #define     B16Gbl_clkSelect_drmFigoClkPllSel              0x0156
    #define   LSb32Gbl_clkSelect_drmFigoClkPllSel                 17
    #define   LSb16Gbl_clkSelect_drmFigoClkPllSel                 1
    #define       bGbl_clkSelect_drmFigoClkPllSel              3
    #define   MSK32Gbl_clkSelect_drmFigoClkPllSel                 0x000E0000
    #define        Gbl_clkSelect_drmFigoClkPllSel_AVPllB4                   0x0
    #define        Gbl_clkSelect_drmFigoClkPllSel_AVPllB5                   0x1
    #define        Gbl_clkSelect_drmFigoClkPllSel_AVPllB6                   0x2
    #define        Gbl_clkSelect_drmFigoClkPllSel_AVPllB7                   0x3
    #define        Gbl_clkSelect_drmFigoClkPllSel_SYSPll                    0x4

    #define     BA_Gbl_clkSelect_drmFigoClkSel                 0x0156
    #define     B16Gbl_clkSelect_drmFigoClkSel                 0x0156
    #define   LSb32Gbl_clkSelect_drmFigoClkSel                    20
    #define   LSb16Gbl_clkSelect_drmFigoClkSel                    4
    #define       bGbl_clkSelect_drmFigoClkSel                 3
    #define   MSK32Gbl_clkSelect_drmFigoClkSel                    0x00700000
    #define        Gbl_clkSelect_drmFigoClkSel_d2                           0x1
    #define        Gbl_clkSelect_drmFigoClkSel_d4                           0x2
    #define        Gbl_clkSelect_drmFigoClkSel_d6                           0x3
    #define        Gbl_clkSelect_drmFigoClkSel_d8                           0x4
    #define        Gbl_clkSelect_drmFigoClkSel_d12                          0x5

    #define     BA_Gbl_clkSelect_cfgClkPllSel                  0x0156
    #define     B16Gbl_clkSelect_cfgClkPllSel                  0x0156
    #define   LSb32Gbl_clkSelect_cfgClkPllSel                     23
    #define   LSb16Gbl_clkSelect_cfgClkPllSel                     7
    #define       bGbl_clkSelect_cfgClkPllSel                  3
    #define   MSK32Gbl_clkSelect_cfgClkPllSel                     0x03800000
    #define        Gbl_clkSelect_cfgClkPllSel_AVPllB4                       0x0
    #define        Gbl_clkSelect_cfgClkPllSel_AVPllB5                       0x1
    #define        Gbl_clkSelect_cfgClkPllSel_AVPllB6                       0x2
    #define        Gbl_clkSelect_cfgClkPllSel_AVPllB7                       0x3
    #define        Gbl_clkSelect_cfgClkPllSel_SYSPll                        0x4

    #define     BA_Gbl_clkSelect_cfgClkSel                     0x0157
    #define     B16Gbl_clkSelect_cfgClkSel                     0x0156
    #define   LSb32Gbl_clkSelect_cfgClkSel                        26
    #define   LSb16Gbl_clkSelect_cfgClkSel                        10
    #define       bGbl_clkSelect_cfgClkSel                     3
    #define   MSK32Gbl_clkSelect_cfgClkSel                        0x1C000000
    #define        Gbl_clkSelect_cfgClkSel_d2                               0x1
    #define        Gbl_clkSelect_cfgClkSel_d4                               0x2
    #define        Gbl_clkSelect_cfgClkSel_d6                               0x3
    #define        Gbl_clkSelect_cfgClkSel_d8                               0x4
    #define        Gbl_clkSelect_cfgClkSel_d12                              0x5

    #define     BA_Gbl_clkSelect_gfxClkPllSel                  0x0157
    #define     B16Gbl_clkSelect_gfxClkPllSel                  0x0156
    #define   LSb32Gbl_clkSelect_gfxClkPllSel                     29
    #define   LSb16Gbl_clkSelect_gfxClkPllSel                     13
    #define       bGbl_clkSelect_gfxClkPllSel                  3
    #define   MSK32Gbl_clkSelect_gfxClkPllSel                     0xE0000000
    #define        Gbl_clkSelect_gfxClkPllSel_AVPllB4                       0x0
    #define        Gbl_clkSelect_gfxClkPllSel_AVPllB5                       0x1
    #define        Gbl_clkSelect_gfxClkPllSel_AVPllB6                       0x2
    #define        Gbl_clkSelect_gfxClkPllSel_AVPllB7                       0x3
    #define        Gbl_clkSelect_gfxClkPllSel_SYSPll                        0x4

    #define     RA_Gbl_clkSelect1                              0x0158

    #define     BA_Gbl_clkSelect_gfxClkSel                     0x0158
    #define     B16Gbl_clkSelect_gfxClkSel                     0x0158
    #define   LSb32Gbl_clkSelect_gfxClkSel                        0
    #define   LSb16Gbl_clkSelect_gfxClkSel                        0
    #define       bGbl_clkSelect_gfxClkSel                     3
    #define   MSK32Gbl_clkSelect_gfxClkSel                        0x00000007
    #define        Gbl_clkSelect_gfxClkSel_d2                               0x1
    #define        Gbl_clkSelect_gfxClkSel_d4                               0x2
    #define        Gbl_clkSelect_gfxClkSel_d6                               0x3
    #define        Gbl_clkSelect_gfxClkSel_d8                               0x4
    #define        Gbl_clkSelect_gfxClkSel_d12                              0x5

    #define     BA_Gbl_clkSelect_zspClkPllSel                  0x0158
    #define     B16Gbl_clkSelect_zspClkPllSel                  0x0158
    #define   LSb32Gbl_clkSelect_zspClkPllSel                     3
    #define   LSb16Gbl_clkSelect_zspClkPllSel                     3
    #define       bGbl_clkSelect_zspClkPllSel                  3
    #define   MSK32Gbl_clkSelect_zspClkPllSel                     0x00000038
    #define        Gbl_clkSelect_zspClkPllSel_AVPllB4                       0x0
    #define        Gbl_clkSelect_zspClkPllSel_AVPllB5                       0x1
    #define        Gbl_clkSelect_zspClkPllSel_AVPllB6                       0x2
    #define        Gbl_clkSelect_zspClkPllSel_AVPllB7                       0x3
    #define        Gbl_clkSelect_zspClkPllSel_SYSPll                        0x4

    #define     BA_Gbl_clkSelect_zspClkSel                     0x0158
    #define     B16Gbl_clkSelect_zspClkSel                     0x0158
    #define   LSb32Gbl_clkSelect_zspClkSel                        6
    #define   LSb16Gbl_clkSelect_zspClkSel                        6
    #define       bGbl_clkSelect_zspClkSel                     3
    #define   MSK32Gbl_clkSelect_zspClkSel                        0x000001C0
    #define        Gbl_clkSelect_zspClkSel_d2                               0x1
    #define        Gbl_clkSelect_zspClkSel_d4                               0x2
    #define        Gbl_clkSelect_zspClkSel_d6                               0x3
    #define        Gbl_clkSelect_zspClkSel_d8                               0x4
    #define        Gbl_clkSelect_zspClkSel_d12                              0x5

    #define     BA_Gbl_clkSelect_perifClkPllSel                0x0159
    #define     B16Gbl_clkSelect_perifClkPllSel                0x0158
    #define   LSb32Gbl_clkSelect_perifClkPllSel                   9
    #define   LSb16Gbl_clkSelect_perifClkPllSel                   9
    #define       bGbl_clkSelect_perifClkPllSel                3
    #define   MSK32Gbl_clkSelect_perifClkPllSel                   0x00000E00
    #define        Gbl_clkSelect_perifClkPllSel_AVPllB4                     0x0
    #define        Gbl_clkSelect_perifClkPllSel_AVPllB5                     0x1
    #define        Gbl_clkSelect_perifClkPllSel_AVPllB6                     0x2
    #define        Gbl_clkSelect_perifClkPllSel_AVPllB7                     0x3
    #define        Gbl_clkSelect_perifClkPllSel_SYSPll                      0x4

    #define     BA_Gbl_clkSelect_perifClkSel                   0x0159
    #define     B16Gbl_clkSelect_perifClkSel                   0x0158
    #define   LSb32Gbl_clkSelect_perifClkSel                      12
    #define   LSb16Gbl_clkSelect_perifClkSel                      12
    #define       bGbl_clkSelect_perifClkSel                   3
    #define   MSK32Gbl_clkSelect_perifClkSel                      0x00007000
    #define        Gbl_clkSelect_perifClkSel_d2                             0x1
    #define        Gbl_clkSelect_perifClkSel_d4                             0x2
    #define        Gbl_clkSelect_perifClkSel_d6                             0x3
    #define        Gbl_clkSelect_perifClkSel_d8                             0x4
    #define        Gbl_clkSelect_perifClkSel_d12                            0x5

    #define     BA_Gbl_clkSelect_pCubeClkPllSel                0x0159
    #define     B16Gbl_clkSelect_pCubeClkPllSel                0x0158
    #define   LSb32Gbl_clkSelect_pCubeClkPllSel                   15
    #define   LSb16Gbl_clkSelect_pCubeClkPllSel                   15
    #define       bGbl_clkSelect_pCubeClkPllSel                3
    #define   MSK32Gbl_clkSelect_pCubeClkPllSel                   0x00038000
    #define        Gbl_clkSelect_pCubeClkPllSel_AVPllB4                     0x0
    #define        Gbl_clkSelect_pCubeClkPllSel_AVPllB5                     0x1
    #define        Gbl_clkSelect_pCubeClkPllSel_AVPllB6                     0x2
    #define        Gbl_clkSelect_pCubeClkPllSel_AVPllB7                     0x3
    #define        Gbl_clkSelect_pCubeClkPllSel_SYSPll                      0x4

    #define     BA_Gbl_clkSelect_pCubeClkSel                   0x015A
    #define     B16Gbl_clkSelect_pCubeClkSel                   0x015A
    #define   LSb32Gbl_clkSelect_pCubeClkSel                      18
    #define   LSb16Gbl_clkSelect_pCubeClkSel                      2
    #define       bGbl_clkSelect_pCubeClkSel                   3
    #define   MSK32Gbl_clkSelect_pCubeClkSel                      0x001C0000
    #define        Gbl_clkSelect_pCubeClkSel_d2                             0x1
    #define        Gbl_clkSelect_pCubeClkSel_d4                             0x2
    #define        Gbl_clkSelect_pCubeClkSel_d6                             0x3
    #define        Gbl_clkSelect_pCubeClkSel_d8                             0x4
    #define        Gbl_clkSelect_pCubeClkSel_d12                            0x5

    #define     BA_Gbl_clkSelect_vScopeClkPllSel               0x015A
    #define     B16Gbl_clkSelect_vScopeClkPllSel               0x015A
    #define   LSb32Gbl_clkSelect_vScopeClkPllSel                  21
    #define   LSb16Gbl_clkSelect_vScopeClkPllSel                  5
    #define       bGbl_clkSelect_vScopeClkPllSel               3
    #define   MSK32Gbl_clkSelect_vScopeClkPllSel                  0x00E00000
    #define        Gbl_clkSelect_vScopeClkPllSel_AVPllB4                    0x0
    #define        Gbl_clkSelect_vScopeClkPllSel_AVPllB5                    0x1
    #define        Gbl_clkSelect_vScopeClkPllSel_AVPllB6                    0x2
    #define        Gbl_clkSelect_vScopeClkPllSel_AVPllB7                    0x3
    #define        Gbl_clkSelect_vScopeClkPllSel_SYSPll                     0x4

    #define     BA_Gbl_clkSelect_vScopeClkSel                  0x015B
    #define     B16Gbl_clkSelect_vScopeClkSel                  0x015A
    #define   LSb32Gbl_clkSelect_vScopeClkSel                     24
    #define   LSb16Gbl_clkSelect_vScopeClkSel                     8
    #define       bGbl_clkSelect_vScopeClkSel                  3
    #define   MSK32Gbl_clkSelect_vScopeClkSel                     0x07000000
    #define        Gbl_clkSelect_vScopeClkSel_d2                            0x1
    #define        Gbl_clkSelect_vScopeClkSel_d4                            0x2
    #define        Gbl_clkSelect_vScopeClkSel_d6                            0x3
    #define        Gbl_clkSelect_vScopeClkSel_d8                            0x4
    #define        Gbl_clkSelect_vScopeClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_nfcEccClkPllSel               0x015B
    #define     B16Gbl_clkSelect_nfcEccClkPllSel               0x015A
    #define   LSb32Gbl_clkSelect_nfcEccClkPllSel                  27
    #define   LSb16Gbl_clkSelect_nfcEccClkPllSel                  11
    #define       bGbl_clkSelect_nfcEccClkPllSel               3
    #define   MSK32Gbl_clkSelect_nfcEccClkPllSel                  0x38000000
    #define        Gbl_clkSelect_nfcEccClkPllSel_AVPllB4                    0x0
    #define        Gbl_clkSelect_nfcEccClkPllSel_AVPllB5                    0x1
    #define        Gbl_clkSelect_nfcEccClkPllSel_AVPllB6                    0x2
    #define        Gbl_clkSelect_nfcEccClkPllSel_AVPllB7                    0x3
    #define        Gbl_clkSelect_nfcEccClkPllSel_SYSPll                     0x4

    #define     RA_Gbl_clkSelect2                              0x015C

    #define     BA_Gbl_clkSelect_nfcEccClkSel                  0x015C
    #define     B16Gbl_clkSelect_nfcEccClkSel                  0x015C
    #define   LSb32Gbl_clkSelect_nfcEccClkSel                     0
    #define   LSb16Gbl_clkSelect_nfcEccClkSel                     0
    #define       bGbl_clkSelect_nfcEccClkSel                  3
    #define   MSK32Gbl_clkSelect_nfcEccClkSel                     0x00000007
    #define        Gbl_clkSelect_nfcEccClkSel_d2                            0x1
    #define        Gbl_clkSelect_nfcEccClkSel_d4                            0x2
    #define        Gbl_clkSelect_nfcEccClkSel_d6                            0x3
    #define        Gbl_clkSelect_nfcEccClkSel_d8                            0x4
    #define        Gbl_clkSelect_nfcEccClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_vppSysClkPllSel               0x015C
    #define     B16Gbl_clkSelect_vppSysClkPllSel               0x015C
    #define   LSb32Gbl_clkSelect_vppSysClkPllSel                  3
    #define   LSb16Gbl_clkSelect_vppSysClkPllSel                  3
    #define       bGbl_clkSelect_vppSysClkPllSel               3
    #define   MSK32Gbl_clkSelect_vppSysClkPllSel                  0x00000038
    #define        Gbl_clkSelect_vppSysClkPllSel_AVPllB4                    0x0
    #define        Gbl_clkSelect_vppSysClkPllSel_AVPllB5                    0x1
    #define        Gbl_clkSelect_vppSysClkPllSel_AVPllB6                    0x2
    #define        Gbl_clkSelect_vppSysClkPllSel_AVPllB7                    0x3
    #define        Gbl_clkSelect_vppSysClkPllSel_SYSPll                     0x4

    #define     BA_Gbl_clkSelect_vppSysClkSel                  0x015C
    #define     B16Gbl_clkSelect_vppSysClkSel                  0x015C
    #define   LSb32Gbl_clkSelect_vppSysClkSel                     6
    #define   LSb16Gbl_clkSelect_vppSysClkSel                     6
    #define       bGbl_clkSelect_vppSysClkSel                  3
    #define   MSK32Gbl_clkSelect_vppSysClkSel                     0x000001C0
    #define        Gbl_clkSelect_vppSysClkSel_d2                            0x1
    #define        Gbl_clkSelect_vppSysClkSel_d4                            0x2
    #define        Gbl_clkSelect_vppSysClkSel_d6                            0x3
    #define        Gbl_clkSelect_vppSysClkSel_d8                            0x4
    #define        Gbl_clkSelect_vppSysClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_appClkPllSel                  0x015D
    #define     B16Gbl_clkSelect_appClkPllSel                  0x015C
    #define   LSb32Gbl_clkSelect_appClkPllSel                     9
    #define   LSb16Gbl_clkSelect_appClkPllSel                     9
    #define       bGbl_clkSelect_appClkPllSel                  3
    #define   MSK32Gbl_clkSelect_appClkPllSel                     0x00000E00
    #define        Gbl_clkSelect_appClkPllSel_AVPllB4                       0x0
    #define        Gbl_clkSelect_appClkPllSel_AVPllB5                       0x1
    #define        Gbl_clkSelect_appClkPllSel_AVPllB6                       0x2
    #define        Gbl_clkSelect_appClkPllSel_AVPllB7                       0x3
    #define        Gbl_clkSelect_appClkPllSel_SYSPll                        0x4

    #define     BA_Gbl_clkSelect_appClkSel                     0x015D
    #define     B16Gbl_clkSelect_appClkSel                     0x015C
    #define   LSb32Gbl_clkSelect_appClkSel                        12
    #define   LSb16Gbl_clkSelect_appClkSel                        12
    #define       bGbl_clkSelect_appClkSel                     3
    #define   MSK32Gbl_clkSelect_appClkSel                        0x00007000
    #define        Gbl_clkSelect_appClkSel_d2                               0x1
    #define        Gbl_clkSelect_appClkSel_d4                               0x2
    #define        Gbl_clkSelect_appClkSel_d6                               0x3
    #define        Gbl_clkSelect_appClkSel_d8                               0x4
    #define        Gbl_clkSelect_appClkSel_d12                              0x5

    #define     BA_Gbl_clkSelect_audioFastExtClkSel            0x015D
    #define     B16Gbl_clkSelect_audioFastExtClkSel            0x015C
    #define   LSb32Gbl_clkSelect_audioFastExtClkSel               15
    #define   LSb16Gbl_clkSelect_audioFastExtClkSel               15
    #define       bGbl_clkSelect_audioFastExtClkSel            1
    #define   MSK32Gbl_clkSelect_audioFastExtClkSel               0x00008000

    #define     BA_Gbl_clkSelect_audioFastClkSel               0x015E
    #define     B16Gbl_clkSelect_audioFastClkSel               0x015E
    #define   LSb32Gbl_clkSelect_audioFastClkSel                  16
    #define   LSb16Gbl_clkSelect_audioFastClkSel                  0
    #define       bGbl_clkSelect_audioFastClkSel               1
    #define   MSK32Gbl_clkSelect_audioFastClkSel                  0x00010000
    #define        Gbl_clkSelect_audioFastClkSel_pllClk                     0x0
    #define        Gbl_clkSelect_audioFastClkSel_extClk                     0x1

    #define     BA_Gbl_clkSelect_audio0ClkSel                  0x015E
    #define     B16Gbl_clkSelect_audio0ClkSel                  0x015E
    #define   LSb32Gbl_clkSelect_audio0ClkSel                     17
    #define   LSb16Gbl_clkSelect_audio0ClkSel                     1
    #define       bGbl_clkSelect_audio0ClkSel                  3
    #define   MSK32Gbl_clkSelect_audio0ClkSel                     0x000E0000
    #define        Gbl_clkSelect_audio0ClkSel_d2                            0x1
    #define        Gbl_clkSelect_audio0ClkSel_d4                            0x2
    #define        Gbl_clkSelect_audio0ClkSel_d6                            0x3
    #define        Gbl_clkSelect_audio0ClkSel_d8                            0x4
    #define        Gbl_clkSelect_audio0ClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_audio2ClkSel                  0x015E
    #define     B16Gbl_clkSelect_audio2ClkSel                  0x015E
    #define   LSb32Gbl_clkSelect_audio2ClkSel                     20
    #define   LSb16Gbl_clkSelect_audio2ClkSel                     4
    #define       bGbl_clkSelect_audio2ClkSel                  3
    #define   MSK32Gbl_clkSelect_audio2ClkSel                     0x00700000
    #define        Gbl_clkSelect_audio2ClkSel_d2                            0x1
    #define        Gbl_clkSelect_audio2ClkSel_d4                            0x2
    #define        Gbl_clkSelect_audio2ClkSel_d6                            0x3
    #define        Gbl_clkSelect_audio2ClkSel_d8                            0x4
    #define        Gbl_clkSelect_audio2ClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_audio3ClkSel                  0x015E
    #define     B16Gbl_clkSelect_audio3ClkSel                  0x015E
    #define   LSb32Gbl_clkSelect_audio3ClkSel                     23
    #define   LSb16Gbl_clkSelect_audio3ClkSel                     7
    #define       bGbl_clkSelect_audio3ClkSel                  3
    #define   MSK32Gbl_clkSelect_audio3ClkSel                     0x03800000
    #define        Gbl_clkSelect_audio3ClkSel_d2                            0x1
    #define        Gbl_clkSelect_audio3ClkSel_d4                            0x2
    #define        Gbl_clkSelect_audio3ClkSel_d6                            0x3
    #define        Gbl_clkSelect_audio3ClkSel_d8                            0x4
    #define        Gbl_clkSelect_audio3ClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_audioHdExtClkSel              0x015F
    #define     B16Gbl_clkSelect_audioHdExtClkSel              0x015E
    #define   LSb32Gbl_clkSelect_audioHdExtClkSel                 26
    #define   LSb16Gbl_clkSelect_audioHdExtClkSel                 10
    #define       bGbl_clkSelect_audioHdExtClkSel              1
    #define   MSK32Gbl_clkSelect_audioHdExtClkSel                 0x04000000

    #define     BA_Gbl_clkSelect_audioHdClkSel                 0x015F
    #define     B16Gbl_clkSelect_audioHdClkSel                 0x015E
    #define   LSb32Gbl_clkSelect_audioHdClkSel                    27
    #define   LSb16Gbl_clkSelect_audioHdClkSel                    11
    #define       bGbl_clkSelect_audioHdClkSel                 1
    #define   MSK32Gbl_clkSelect_audioHdClkSel                    0x08000000
    #define        Gbl_clkSelect_audioHdClkSel_pllClk                       0x0
    #define        Gbl_clkSelect_audioHdClkSel_extClk                       0x1

    #define     BA_Gbl_clkSelect_audio1ExtClkSel               0x015F
    #define     B16Gbl_clkSelect_audio1ExtClkSel               0x015E
    #define   LSb32Gbl_clkSelect_audio1ExtClkSel                  28
    #define   LSb16Gbl_clkSelect_audio1ExtClkSel                  12
    #define       bGbl_clkSelect_audio1ExtClkSel               1
    #define   MSK32Gbl_clkSelect_audio1ExtClkSel                  0x10000000

    #define     BA_Gbl_clkSelect_audio1ClkPllSel               0x015F
    #define     B16Gbl_clkSelect_audio1ClkPllSel               0x015E
    #define   LSb32Gbl_clkSelect_audio1ClkPllSel                  29
    #define   LSb16Gbl_clkSelect_audio1ClkPllSel                  13
    #define       bGbl_clkSelect_audio1ClkPllSel               1
    #define   MSK32Gbl_clkSelect_audio1ClkPllSel                  0x20000000
    #define        Gbl_clkSelect_audio1ClkPllSel_AVPllB3                    0x0
    #define        Gbl_clkSelect_audio1ClkPllSel_AVPllA3                    0x1

    #define     BA_Gbl_clkSelect_audio1SrcClkSel               0x015F
    #define     B16Gbl_clkSelect_audio1SrcClkSel               0x015E
    #define   LSb32Gbl_clkSelect_audio1SrcClkSel                  30
    #define   LSb16Gbl_clkSelect_audio1SrcClkSel                  14
    #define       bGbl_clkSelect_audio1SrcClkSel               1
    #define   MSK32Gbl_clkSelect_audio1SrcClkSel                  0x40000000
    #define        Gbl_clkSelect_audio1SrcClkSel_pllClk                     0x0
    #define        Gbl_clkSelect_audio1SrcClkSel_extClk                     0x1

    #define     RA_Gbl_clkSelect3                              0x0160

    #define     BA_Gbl_clkSelect_audio1ClkSel                  0x0160
    #define     B16Gbl_clkSelect_audio1ClkSel                  0x0160
    #define   LSb32Gbl_clkSelect_audio1ClkSel                     0
    #define   LSb16Gbl_clkSelect_audio1ClkSel                     0
    #define       bGbl_clkSelect_audio1ClkSel                  3
    #define   MSK32Gbl_clkSelect_audio1ClkSel                     0x00000007
    #define        Gbl_clkSelect_audio1ClkSel_d2                            0x1
    #define        Gbl_clkSelect_audio1ClkSel_d4                            0x2
    #define        Gbl_clkSelect_audio1ClkSel_d6                            0x3
    #define        Gbl_clkSelect_audio1ClkSel_d8                            0x4
    #define        Gbl_clkSelect_audio1ClkSel_d12                           0x5

    #define     BA_Gbl_clkSelect_video0ExtClkSel               0x0160
    #define     B16Gbl_clkSelect_video0ExtClkSel               0x0160
    #define   LSb32Gbl_clkSelect_video0ExtClkSel                  3
    #define   LSb16Gbl_clkSelect_video0ExtClkSel                  3
    #define       bGbl_clkSelect_video0ExtClkSel               1
    #define   MSK32Gbl_clkSelect_video0ExtClkSel                  0x00000008

    #define     BA_Gbl_clkSelect_video0ClkSel                  0x0160
    #define     B16Gbl_clkSelect_video0ClkSel                  0x0160
    #define   LSb32Gbl_clkSelect_video0ClkSel                     4
    #define   LSb16Gbl_clkSelect_video0ClkSel                     4
    #define       bGbl_clkSelect_video0ClkSel                  1
    #define   MSK32Gbl_clkSelect_video0ClkSel                     0x00000010
    #define        Gbl_clkSelect_video0ClkSel_pllClk                        0x0
    #define        Gbl_clkSelect_video0ClkSel_extClk                        0x1

    #define     BA_Gbl_clkSelect_video1ExtClkSel               0x0160
    #define     B16Gbl_clkSelect_video1ExtClkSel               0x0160
    #define   LSb32Gbl_clkSelect_video1ExtClkSel                  5
    #define   LSb16Gbl_clkSelect_video1ExtClkSel                  5
    #define       bGbl_clkSelect_video1ExtClkSel               1
    #define   MSK32Gbl_clkSelect_video1ExtClkSel                  0x00000020

    #define     BA_Gbl_clkSelect_video1ClkSel                  0x0160
    #define     B16Gbl_clkSelect_video1ClkSel                  0x0160
    #define   LSb32Gbl_clkSelect_video1ClkSel                     6
    #define   LSb16Gbl_clkSelect_video1ClkSel                     6
    #define       bGbl_clkSelect_video1ClkSel                  1
    #define   MSK32Gbl_clkSelect_video1ClkSel                     0x00000040
    #define        Gbl_clkSelect_video1ClkSel_pllClk                        0x0
    #define        Gbl_clkSelect_video1ClkSel_extClk                        0x1

    #define     BA_Gbl_clkSelect_video1ClkPllSel               0x0160
    #define     B16Gbl_clkSelect_video1ClkPllSel               0x0160
    #define   LSb32Gbl_clkSelect_video1ClkPllSel                  7
    #define   LSb16Gbl_clkSelect_video1ClkPllSel                  7
    #define       bGbl_clkSelect_video1ClkPllSel               1
    #define   MSK32Gbl_clkSelect_video1ClkPllSel                  0x00000080
    #define        Gbl_clkSelect_video1ClkPllSel_AVPllA2                    0x0
    #define        Gbl_clkSelect_video1ClkPllSel_AVPllB2                    0x1

    #define     BA_Gbl_clkSelect_video2ExtClkSel               0x0161
    #define     B16Gbl_clkSelect_video2ExtClkSel               0x0160
    #define   LSb32Gbl_clkSelect_video2ExtClkSel                  8
    #define   LSb16Gbl_clkSelect_video2ExtClkSel                  8
    #define       bGbl_clkSelect_video2ExtClkSel               1
    #define   MSK32Gbl_clkSelect_video2ExtClkSel                  0x00000100

    #define     BA_Gbl_clkSelect_video2ClkSel                  0x0161
    #define     B16Gbl_clkSelect_video2ClkSel                  0x0160
    #define   LSb32Gbl_clkSelect_video2ClkSel                     9
    #define   LSb16Gbl_clkSelect_video2ClkSel                     9
    #define       bGbl_clkSelect_video2ClkSel                  1
    #define   MSK32Gbl_clkSelect_video2ClkSel                     0x00000200
    #define        Gbl_clkSelect_video2ClkSel_pllClk                        0x0
    #define        Gbl_clkSelect_video2ClkSel_extClk                        0x1

    #define     BA_Gbl_clkSelect_video2ClkPllSel               0x0161
    #define     B16Gbl_clkSelect_video2ClkPllSel               0x0160
    #define   LSb32Gbl_clkSelect_video2ClkPllSel                  10
    #define   LSb16Gbl_clkSelect_video2ClkPllSel                  10
    #define       bGbl_clkSelect_video2ClkPllSel               1
    #define   MSK32Gbl_clkSelect_video2ClkPllSel                  0x00000400
    #define        Gbl_clkSelect_video2ClkPllSel_AVPllB1                    0x0
    #define        Gbl_clkSelect_video2ClkPllSel_AVPllA5                    0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ClkSwitch                               0x0164

    #define     BA_Gbl_ClkSwitch_sysPLLSWBypass                0x0164
    #define     B16Gbl_ClkSwitch_sysPLLSWBypass                0x0164
    #define   LSb32Gbl_ClkSwitch_sysPLLSWBypass                   0
    #define   LSb16Gbl_ClkSwitch_sysPLLSWBypass                   0
    #define       bGbl_ClkSwitch_sysPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_sysPLLSWBypass                   0x00000001
    #define        Gbl_ClkSwitch_sysPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_sysPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_memPLLSWBypass                0x0164
    #define     B16Gbl_ClkSwitch_memPLLSWBypass                0x0164
    #define   LSb32Gbl_ClkSwitch_memPLLSWBypass                   1
    #define   LSb16Gbl_ClkSwitch_memPLLSWBypass                   1
    #define       bGbl_ClkSwitch_memPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_memPLLSWBypass                   0x00000002
    #define        Gbl_ClkSwitch_memPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_memPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_cpu1PLLSWBypass               0x0164
    #define     B16Gbl_ClkSwitch_cpu1PLLSWBypass               0x0164
    #define   LSb32Gbl_ClkSwitch_cpu1PLLSWBypass                  2
    #define   LSb16Gbl_ClkSwitch_cpu1PLLSWBypass                  2
    #define       bGbl_ClkSwitch_cpu1PLLSWBypass               1
    #define   MSK32Gbl_ClkSwitch_cpu1PLLSWBypass                  0x00000004
    #define        Gbl_ClkSwitch_cpu1PLLSWBypass_refClk                     0x1
    #define        Gbl_ClkSwitch_cpu1PLLSWBypass_pllClk                     0x0

    #define     BA_Gbl_ClkSwitch_sysClkPllSwitch               0x0164
    #define     B16Gbl_ClkSwitch_sysClkPllSwitch               0x0164
    #define   LSb32Gbl_ClkSwitch_sysClkPllSwitch                  3
    #define   LSb16Gbl_ClkSwitch_sysClkPllSwitch                  3
    #define       bGbl_ClkSwitch_sysClkPllSwitch               1
    #define   MSK32Gbl_ClkSwitch_sysClkPllSwitch                  0x00000008
    #define        Gbl_ClkSwitch_sysClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_ClkSwitch_sysClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_ClkSwitch_sysClkSwitch                  0x0164
    #define     B16Gbl_ClkSwitch_sysClkSwitch                  0x0164
    #define   LSb32Gbl_ClkSwitch_sysClkSwitch                     4
    #define   LSb16Gbl_ClkSwitch_sysClkSwitch                     4
    #define       bGbl_ClkSwitch_sysClkSwitch                  1
    #define   MSK32Gbl_ClkSwitch_sysClkSwitch                     0x00000010
    #define        Gbl_ClkSwitch_sysClkSwitch_SrcClk                        0x0
    #define        Gbl_ClkSwitch_sysClkSwitch_DivClk                        0x1

    #define     BA_Gbl_ClkSwitch_sysClkD3Switch                0x0164
    #define     B16Gbl_ClkSwitch_sysClkD3Switch                0x0164
    #define   LSb32Gbl_ClkSwitch_sysClkD3Switch                   5
    #define   LSb16Gbl_ClkSwitch_sysClkD3Switch                   5
    #define       bGbl_ClkSwitch_sysClkD3Switch                1
    #define   MSK32Gbl_ClkSwitch_sysClkD3Switch                   0x00000020
    #define        Gbl_ClkSwitch_sysClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_ClkSwitch_sysClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_ClkSwitch_cpu0ClkPllSwitch              0x0164
    #define     B16Gbl_ClkSwitch_cpu0ClkPllSwitch              0x0164
    #define   LSb32Gbl_ClkSwitch_cpu0ClkPllSwitch                 6
    #define   LSb16Gbl_ClkSwitch_cpu0ClkPllSwitch                 6
    #define       bGbl_ClkSwitch_cpu0ClkPllSwitch              1
    #define   MSK32Gbl_ClkSwitch_cpu0ClkPllSwitch                 0x00000040
    #define        Gbl_ClkSwitch_cpu0ClkPllSwitch_CPUPLL                    0x0
    #define        Gbl_ClkSwitch_cpu0ClkPllSwitch_MEMPLL                    0x1

    #define     BA_Gbl_ClkSwitch_cpu0ClkSwitch                 0x0164
    #define     B16Gbl_ClkSwitch_cpu0ClkSwitch                 0x0164
    #define   LSb32Gbl_ClkSwitch_cpu0ClkSwitch                    7
    #define   LSb16Gbl_ClkSwitch_cpu0ClkSwitch                    7
    #define       bGbl_ClkSwitch_cpu0ClkSwitch                 1
    #define   MSK32Gbl_ClkSwitch_cpu0ClkSwitch                    0x00000080
    #define        Gbl_ClkSwitch_cpu0ClkSwitch_SrcClk                       0x0
    #define        Gbl_ClkSwitch_cpu0ClkSwitch_DivClk                       0x1

    #define     BA_Gbl_ClkSwitch_cpu0ClkD3Switch               0x0165
    #define     B16Gbl_ClkSwitch_cpu0ClkD3Switch               0x0164
    #define   LSb32Gbl_ClkSwitch_cpu0ClkD3Switch                  8
    #define   LSb16Gbl_ClkSwitch_cpu0ClkD3Switch                  8
    #define       bGbl_ClkSwitch_cpu0ClkD3Switch               1
    #define   MSK32Gbl_ClkSwitch_cpu0ClkD3Switch                  0x00000100
    #define        Gbl_ClkSwitch_cpu0ClkD3Switch_NonDiv3Clk                 0x0
    #define        Gbl_ClkSwitch_cpu0ClkD3Switch_Div3Clk                    0x1

    #define     BA_Gbl_ClkSwitch_cpu1ClkPllSwitch              0x0165
    #define     B16Gbl_ClkSwitch_cpu1ClkPllSwitch              0x0164
    #define   LSb32Gbl_ClkSwitch_cpu1ClkPllSwitch                 9
    #define   LSb16Gbl_ClkSwitch_cpu1ClkPllSwitch                 9
    #define       bGbl_ClkSwitch_cpu1ClkPllSwitch              1
    #define   MSK32Gbl_ClkSwitch_cpu1ClkPllSwitch                 0x00000200
    #define        Gbl_ClkSwitch_cpu1ClkPllSwitch_CPU1PLL                   0x0
    #define        Gbl_ClkSwitch_cpu1ClkPllSwitch_AVPLL                     0x1

    #define     BA_Gbl_ClkSwitch_cpu1ClkSwitch                 0x0165
    #define     B16Gbl_ClkSwitch_cpu1ClkSwitch                 0x0164
    #define   LSb32Gbl_ClkSwitch_cpu1ClkSwitch                    10
    #define   LSb16Gbl_ClkSwitch_cpu1ClkSwitch                    10
    #define       bGbl_ClkSwitch_cpu1ClkSwitch                 1
    #define   MSK32Gbl_ClkSwitch_cpu1ClkSwitch                    0x00000400
    #define        Gbl_ClkSwitch_cpu1ClkSwitch_SrcClk                       0x0
    #define        Gbl_ClkSwitch_cpu1ClkSwitch_DivClk                       0x1

    #define     BA_Gbl_ClkSwitch_cpu1ClkD3Switch               0x0165
    #define     B16Gbl_ClkSwitch_cpu1ClkD3Switch               0x0164
    #define   LSb32Gbl_ClkSwitch_cpu1ClkD3Switch                  11
    #define   LSb16Gbl_ClkSwitch_cpu1ClkD3Switch                  11
    #define       bGbl_ClkSwitch_cpu1ClkD3Switch               1
    #define   MSK32Gbl_ClkSwitch_cpu1ClkD3Switch                  0x00000800
    #define        Gbl_ClkSwitch_cpu1ClkD3Switch_NonDiv3Clk                 0x0
    #define        Gbl_ClkSwitch_cpu1ClkD3Switch_Div3Clk                    0x1

    #define     BA_Gbl_ClkSwitch_drmFigoClkPllSwitch           0x0165
    #define     B16Gbl_ClkSwitch_drmFigoClkPllSwitch           0x0164
    #define   LSb32Gbl_ClkSwitch_drmFigoClkPllSwitch              12
    #define   LSb16Gbl_ClkSwitch_drmFigoClkPllSwitch              12
    #define       bGbl_ClkSwitch_drmFigoClkPllSwitch           1
    #define   MSK32Gbl_ClkSwitch_drmFigoClkPllSwitch              0x00001000
    #define        Gbl_ClkSwitch_drmFigoClkPllSwitch_SYSPLL                 0x0
    #define        Gbl_ClkSwitch_drmFigoClkPllSwitch_AVPLL                  0x1

    #define     BA_Gbl_ClkSwitch_drmFigoClkSwitch              0x0165
    #define     B16Gbl_ClkSwitch_drmFigoClkSwitch              0x0164
    #define   LSb32Gbl_ClkSwitch_drmFigoClkSwitch                 13
    #define   LSb16Gbl_ClkSwitch_drmFigoClkSwitch                 13
    #define       bGbl_ClkSwitch_drmFigoClkSwitch              1
    #define   MSK32Gbl_ClkSwitch_drmFigoClkSwitch                 0x00002000
    #define        Gbl_ClkSwitch_drmFigoClkSwitch_SrcClk                    0x0
    #define        Gbl_ClkSwitch_drmFigoClkSwitch_DivClk                    0x1

    #define     BA_Gbl_ClkSwitch_drmFigoClkD3Switch            0x0165
    #define     B16Gbl_ClkSwitch_drmFigoClkD3Switch            0x0164
    #define   LSb32Gbl_ClkSwitch_drmFigoClkD3Switch               14
    #define   LSb16Gbl_ClkSwitch_drmFigoClkD3Switch               14
    #define       bGbl_ClkSwitch_drmFigoClkD3Switch            1
    #define   MSK32Gbl_ClkSwitch_drmFigoClkD3Switch               0x00004000
    #define        Gbl_ClkSwitch_drmFigoClkD3Switch_NonDiv3Clk              0x0
    #define        Gbl_ClkSwitch_drmFigoClkD3Switch_Div3Clk                 0x1

    #define     BA_Gbl_ClkSwitch_cfgClkPllSwitch               0x0165
    #define     B16Gbl_ClkSwitch_cfgClkPllSwitch               0x0164
    #define   LSb32Gbl_ClkSwitch_cfgClkPllSwitch                  15
    #define   LSb16Gbl_ClkSwitch_cfgClkPllSwitch                  15
    #define       bGbl_ClkSwitch_cfgClkPllSwitch               1
    #define   MSK32Gbl_ClkSwitch_cfgClkPllSwitch                  0x00008000
    #define        Gbl_ClkSwitch_cfgClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_ClkSwitch_cfgClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_ClkSwitch_cfgClkSwitch                  0x0166
    #define     B16Gbl_ClkSwitch_cfgClkSwitch                  0x0166
    #define   LSb32Gbl_ClkSwitch_cfgClkSwitch                     16
    #define   LSb16Gbl_ClkSwitch_cfgClkSwitch                     0
    #define       bGbl_ClkSwitch_cfgClkSwitch                  1
    #define   MSK32Gbl_ClkSwitch_cfgClkSwitch                     0x00010000
    #define        Gbl_ClkSwitch_cfgClkSwitch_SrcClk                        0x0
    #define        Gbl_ClkSwitch_cfgClkSwitch_DivClk                        0x1

    #define     BA_Gbl_ClkSwitch_cfgClkD3Switch                0x0166
    #define     B16Gbl_ClkSwitch_cfgClkD3Switch                0x0166
    #define   LSb32Gbl_ClkSwitch_cfgClkD3Switch                   17
    #define   LSb16Gbl_ClkSwitch_cfgClkD3Switch                   1
    #define       bGbl_ClkSwitch_cfgClkD3Switch                1
    #define   MSK32Gbl_ClkSwitch_cfgClkD3Switch                   0x00020000
    #define        Gbl_ClkSwitch_cfgClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_ClkSwitch_cfgClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_ClkSwitch_gfxClkPllSwitch               0x0166
    #define     B16Gbl_ClkSwitch_gfxClkPllSwitch               0x0166
    #define   LSb32Gbl_ClkSwitch_gfxClkPllSwitch                  18
    #define   LSb16Gbl_ClkSwitch_gfxClkPllSwitch                  2
    #define       bGbl_ClkSwitch_gfxClkPllSwitch               1
    #define   MSK32Gbl_ClkSwitch_gfxClkPllSwitch                  0x00040000
    #define        Gbl_ClkSwitch_gfxClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_ClkSwitch_gfxClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_ClkSwitch_gfxClkSwitch                  0x0166
    #define     B16Gbl_ClkSwitch_gfxClkSwitch                  0x0166
    #define   LSb32Gbl_ClkSwitch_gfxClkSwitch                     19
    #define   LSb16Gbl_ClkSwitch_gfxClkSwitch                     3
    #define       bGbl_ClkSwitch_gfxClkSwitch                  1
    #define   MSK32Gbl_ClkSwitch_gfxClkSwitch                     0x00080000
    #define        Gbl_ClkSwitch_gfxClkSwitch_SrcClk                        0x0
    #define        Gbl_ClkSwitch_gfxClkSwitch_DivClk                        0x1

    #define     BA_Gbl_ClkSwitch_gfxClkD3Switch                0x0166
    #define     B16Gbl_ClkSwitch_gfxClkD3Switch                0x0166
    #define   LSb32Gbl_ClkSwitch_gfxClkD3Switch                   20
    #define   LSb16Gbl_ClkSwitch_gfxClkD3Switch                   4
    #define       bGbl_ClkSwitch_gfxClkD3Switch                1
    #define   MSK32Gbl_ClkSwitch_gfxClkD3Switch                   0x00100000
    #define        Gbl_ClkSwitch_gfxClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_ClkSwitch_gfxClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_ClkSwitch_zspClkPllSwitch               0x0166
    #define     B16Gbl_ClkSwitch_zspClkPllSwitch               0x0166
    #define   LSb32Gbl_ClkSwitch_zspClkPllSwitch                  21
    #define   LSb16Gbl_ClkSwitch_zspClkPllSwitch                  5
    #define       bGbl_ClkSwitch_zspClkPllSwitch               1
    #define   MSK32Gbl_ClkSwitch_zspClkPllSwitch                  0x00200000
    #define        Gbl_ClkSwitch_zspClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_ClkSwitch_zspClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_ClkSwitch_zspClkSwitch                  0x0166
    #define     B16Gbl_ClkSwitch_zspClkSwitch                  0x0166
    #define   LSb32Gbl_ClkSwitch_zspClkSwitch                     22
    #define   LSb16Gbl_ClkSwitch_zspClkSwitch                     6
    #define       bGbl_ClkSwitch_zspClkSwitch                  1
    #define   MSK32Gbl_ClkSwitch_zspClkSwitch                     0x00400000
    #define        Gbl_ClkSwitch_zspClkSwitch_SrcClk                        0x0
    #define        Gbl_ClkSwitch_zspClkSwitch_DivClk                        0x1

    #define     BA_Gbl_ClkSwitch_zspClkD3Switch                0x0166
    #define     B16Gbl_ClkSwitch_zspClkD3Switch                0x0166
    #define   LSb32Gbl_ClkSwitch_zspClkD3Switch                   23
    #define   LSb16Gbl_ClkSwitch_zspClkD3Switch                   7
    #define       bGbl_ClkSwitch_zspClkD3Switch                1
    #define   MSK32Gbl_ClkSwitch_zspClkD3Switch                   0x00800000
    #define        Gbl_ClkSwitch_zspClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_ClkSwitch_zspClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_ClkSwitch_perifClkPllSwitch             0x0167
    #define     B16Gbl_ClkSwitch_perifClkPllSwitch             0x0166
    #define   LSb32Gbl_ClkSwitch_perifClkPllSwitch                24
    #define   LSb16Gbl_ClkSwitch_perifClkPllSwitch                8
    #define       bGbl_ClkSwitch_perifClkPllSwitch             1
    #define   MSK32Gbl_ClkSwitch_perifClkPllSwitch                0x01000000
    #define        Gbl_ClkSwitch_perifClkPllSwitch_SYSPLL                   0x0
    #define        Gbl_ClkSwitch_perifClkPllSwitch_AVPLL                    0x1

    #define     BA_Gbl_ClkSwitch_perifClkSwitch                0x0167
    #define     B16Gbl_ClkSwitch_perifClkSwitch                0x0166
    #define   LSb32Gbl_ClkSwitch_perifClkSwitch                   25
    #define   LSb16Gbl_ClkSwitch_perifClkSwitch                   9
    #define       bGbl_ClkSwitch_perifClkSwitch                1
    #define   MSK32Gbl_ClkSwitch_perifClkSwitch                   0x02000000
    #define        Gbl_ClkSwitch_perifClkSwitch_SrcClk                      0x0
    #define        Gbl_ClkSwitch_perifClkSwitch_DivClk                      0x1

    #define     BA_Gbl_ClkSwitch_perifClkD3Switch              0x0167
    #define     B16Gbl_ClkSwitch_perifClkD3Switch              0x0166
    #define   LSb32Gbl_ClkSwitch_perifClkD3Switch                 26
    #define   LSb16Gbl_ClkSwitch_perifClkD3Switch                 10
    #define       bGbl_ClkSwitch_perifClkD3Switch              1
    #define   MSK32Gbl_ClkSwitch_perifClkD3Switch                 0x04000000
    #define        Gbl_ClkSwitch_perifClkD3Switch_NonDiv3Clk                0x0
    #define        Gbl_ClkSwitch_perifClkD3Switch_Div3Clk                   0x1

    #define     BA_Gbl_ClkSwitch_pCubeClkPllSwitch             0x0167
    #define     B16Gbl_ClkSwitch_pCubeClkPllSwitch             0x0166
    #define   LSb32Gbl_ClkSwitch_pCubeClkPllSwitch                27
    #define   LSb16Gbl_ClkSwitch_pCubeClkPllSwitch                11
    #define       bGbl_ClkSwitch_pCubeClkPllSwitch             1
    #define   MSK32Gbl_ClkSwitch_pCubeClkPllSwitch                0x08000000
    #define        Gbl_ClkSwitch_pCubeClkPllSwitch_SYSPLL                   0x0
    #define        Gbl_ClkSwitch_pCubeClkPllSwitch_AVPLL                    0x1

    #define     BA_Gbl_ClkSwitch_pCubeClkSwitch                0x0167
    #define     B16Gbl_ClkSwitch_pCubeClkSwitch                0x0166
    #define   LSb32Gbl_ClkSwitch_pCubeClkSwitch                   28
    #define   LSb16Gbl_ClkSwitch_pCubeClkSwitch                   12
    #define       bGbl_ClkSwitch_pCubeClkSwitch                1
    #define   MSK32Gbl_ClkSwitch_pCubeClkSwitch                   0x10000000
    #define        Gbl_ClkSwitch_pCubeClkSwitch_SrcClk                      0x0
    #define        Gbl_ClkSwitch_pCubeClkSwitch_DivClk                      0x1

    #define     BA_Gbl_ClkSwitch_pCubeClkD3Switch              0x0167
    #define     B16Gbl_ClkSwitch_pCubeClkD3Switch              0x0166
    #define   LSb32Gbl_ClkSwitch_pCubeClkD3Switch                 29
    #define   LSb16Gbl_ClkSwitch_pCubeClkD3Switch                 13
    #define       bGbl_ClkSwitch_pCubeClkD3Switch              1
    #define   MSK32Gbl_ClkSwitch_pCubeClkD3Switch                 0x20000000
    #define        Gbl_ClkSwitch_pCubeClkD3Switch_NonDiv3Clk                0x0
    #define        Gbl_ClkSwitch_pCubeClkD3Switch_Div3Clk                   0x1

    #define     BA_Gbl_ClkSwitch_vScopeClkPllSwitch            0x0167
    #define     B16Gbl_ClkSwitch_vScopeClkPllSwitch            0x0166
    #define   LSb32Gbl_ClkSwitch_vScopeClkPllSwitch               30
    #define   LSb16Gbl_ClkSwitch_vScopeClkPllSwitch               14
    #define       bGbl_ClkSwitch_vScopeClkPllSwitch            1
    #define   MSK32Gbl_ClkSwitch_vScopeClkPllSwitch               0x40000000
    #define        Gbl_ClkSwitch_vScopeClkPllSwitch_SYSPLL                  0x0
    #define        Gbl_ClkSwitch_vScopeClkPllSwitch_AVPLL                   0x1

    #define     BA_Gbl_ClkSwitch_vScopeClkSwitch               0x0167
    #define     B16Gbl_ClkSwitch_vScopeClkSwitch               0x0166
    #define   LSb32Gbl_ClkSwitch_vScopeClkSwitch                  31
    #define   LSb16Gbl_ClkSwitch_vScopeClkSwitch                  15
    #define       bGbl_ClkSwitch_vScopeClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_vScopeClkSwitch                  0x80000000
    #define        Gbl_ClkSwitch_vScopeClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_vScopeClkSwitch_DivClk                     0x1

    #define     RA_Gbl_ClkSwitch1                              0x0168

    #define     BA_Gbl_ClkSwitch_vScopeClkD3Switch             0x0168
    #define     B16Gbl_ClkSwitch_vScopeClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_vScopeClkD3Switch                0
    #define   LSb16Gbl_ClkSwitch_vScopeClkD3Switch                0
    #define       bGbl_ClkSwitch_vScopeClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_vScopeClkD3Switch                0x00000001
    #define        Gbl_ClkSwitch_vScopeClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_vScopeClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_nfcEccClkPllSwitch            0x0168
    #define     B16Gbl_ClkSwitch_nfcEccClkPllSwitch            0x0168
    #define   LSb32Gbl_ClkSwitch_nfcEccClkPllSwitch               1
    #define   LSb16Gbl_ClkSwitch_nfcEccClkPllSwitch               1
    #define       bGbl_ClkSwitch_nfcEccClkPllSwitch            1
    #define   MSK32Gbl_ClkSwitch_nfcEccClkPllSwitch               0x00000002
    #define        Gbl_ClkSwitch_nfcEccClkPllSwitch_SYSPLL                  0x0
    #define        Gbl_ClkSwitch_nfcEccClkPllSwitch_AVPLL                   0x1

    #define     BA_Gbl_ClkSwitch_nfcEccClkSwitch               0x0168
    #define     B16Gbl_ClkSwitch_nfcEccClkSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_nfcEccClkSwitch                  2
    #define   LSb16Gbl_ClkSwitch_nfcEccClkSwitch                  2
    #define       bGbl_ClkSwitch_nfcEccClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_nfcEccClkSwitch                  0x00000004
    #define        Gbl_ClkSwitch_nfcEccClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_nfcEccClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_nfcEccClkD3Switch             0x0168
    #define     B16Gbl_ClkSwitch_nfcEccClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_nfcEccClkD3Switch                3
    #define   LSb16Gbl_ClkSwitch_nfcEccClkD3Switch                3
    #define       bGbl_ClkSwitch_nfcEccClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_nfcEccClkD3Switch                0x00000008
    #define        Gbl_ClkSwitch_nfcEccClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_nfcEccClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_vppSysClkPllSwitch            0x0168
    #define     B16Gbl_ClkSwitch_vppSysClkPllSwitch            0x0168
    #define   LSb32Gbl_ClkSwitch_vppSysClkPllSwitch               4
    #define   LSb16Gbl_ClkSwitch_vppSysClkPllSwitch               4
    #define       bGbl_ClkSwitch_vppSysClkPllSwitch            1
    #define   MSK32Gbl_ClkSwitch_vppSysClkPllSwitch               0x00000010
    #define        Gbl_ClkSwitch_vppSysClkPllSwitch_SYSPLL                  0x0
    #define        Gbl_ClkSwitch_vppSysClkPllSwitch_AVPLL                   0x1

    #define     BA_Gbl_ClkSwitch_vppSysClkSwitch               0x0168
    #define     B16Gbl_ClkSwitch_vppSysClkSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_vppSysClkSwitch                  5
    #define   LSb16Gbl_ClkSwitch_vppSysClkSwitch                  5
    #define       bGbl_ClkSwitch_vppSysClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_vppSysClkSwitch                  0x00000020
    #define        Gbl_ClkSwitch_vppSysClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_vppSysClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_vppSysClkD3Switch             0x0168
    #define     B16Gbl_ClkSwitch_vppSysClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_vppSysClkD3Switch                6
    #define   LSb16Gbl_ClkSwitch_vppSysClkD3Switch                6
    #define       bGbl_ClkSwitch_vppSysClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_vppSysClkD3Switch                0x00000040
    #define        Gbl_ClkSwitch_vppSysClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_vppSysClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_appClkPllSwitch               0x0168
    #define     B16Gbl_ClkSwitch_appClkPllSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_appClkPllSwitch                  7
    #define   LSb16Gbl_ClkSwitch_appClkPllSwitch                  7
    #define       bGbl_ClkSwitch_appClkPllSwitch               1
    #define   MSK32Gbl_ClkSwitch_appClkPllSwitch                  0x00000080
    #define        Gbl_ClkSwitch_appClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_ClkSwitch_appClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_ClkSwitch_appClkSwitch                  0x0169
    #define     B16Gbl_ClkSwitch_appClkSwitch                  0x0168
    #define   LSb32Gbl_ClkSwitch_appClkSwitch                     8
    #define   LSb16Gbl_ClkSwitch_appClkSwitch                     8
    #define       bGbl_ClkSwitch_appClkSwitch                  1
    #define   MSK32Gbl_ClkSwitch_appClkSwitch                     0x00000100
    #define        Gbl_ClkSwitch_appClkSwitch_SrcClk                        0x0
    #define        Gbl_ClkSwitch_appClkSwitch_DivClk                        0x1

    #define     BA_Gbl_ClkSwitch_appClkD3Switch                0x0169
    #define     B16Gbl_ClkSwitch_appClkD3Switch                0x0168
    #define   LSb32Gbl_ClkSwitch_appClkD3Switch                   9
    #define   LSb16Gbl_ClkSwitch_appClkD3Switch                   9
    #define       bGbl_ClkSwitch_appClkD3Switch                1
    #define   MSK32Gbl_ClkSwitch_appClkD3Switch                   0x00000200
    #define        Gbl_ClkSwitch_appClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_ClkSwitch_appClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_ClkSwitch_audio0ClkSwitch               0x0169
    #define     B16Gbl_ClkSwitch_audio0ClkSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_audio0ClkSwitch                  10
    #define   LSb16Gbl_ClkSwitch_audio0ClkSwitch                  10
    #define       bGbl_ClkSwitch_audio0ClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_audio0ClkSwitch                  0x00000400
    #define        Gbl_ClkSwitch_audio0ClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_audio0ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_audio0ClkD3Switch             0x0169
    #define     B16Gbl_ClkSwitch_audio0ClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_audio0ClkD3Switch                11
    #define   LSb16Gbl_ClkSwitch_audio0ClkD3Switch                11
    #define       bGbl_ClkSwitch_audio0ClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_audio0ClkD3Switch                0x00000800
    #define        Gbl_ClkSwitch_audio0ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_audio0ClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_audio1ClkSwitch               0x0169
    #define     B16Gbl_ClkSwitch_audio1ClkSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_audio1ClkSwitch                  12
    #define   LSb16Gbl_ClkSwitch_audio1ClkSwitch                  12
    #define       bGbl_ClkSwitch_audio1ClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_audio1ClkSwitch                  0x00001000
    #define        Gbl_ClkSwitch_audio1ClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_audio1ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_audio1ClkD3Switch             0x0169
    #define     B16Gbl_ClkSwitch_audio1ClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_audio1ClkD3Switch                13
    #define   LSb16Gbl_ClkSwitch_audio1ClkD3Switch                13
    #define       bGbl_ClkSwitch_audio1ClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_audio1ClkD3Switch                0x00002000
    #define        Gbl_ClkSwitch_audio1ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_audio1ClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_audio2ClkSwitch               0x0169
    #define     B16Gbl_ClkSwitch_audio2ClkSwitch               0x0168
    #define   LSb32Gbl_ClkSwitch_audio2ClkSwitch                  14
    #define   LSb16Gbl_ClkSwitch_audio2ClkSwitch                  14
    #define       bGbl_ClkSwitch_audio2ClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_audio2ClkSwitch                  0x00004000
    #define        Gbl_ClkSwitch_audio2ClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_audio2ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_audio2ClkD3Switch             0x0169
    #define     B16Gbl_ClkSwitch_audio2ClkD3Switch             0x0168
    #define   LSb32Gbl_ClkSwitch_audio2ClkD3Switch                15
    #define   LSb16Gbl_ClkSwitch_audio2ClkD3Switch                15
    #define       bGbl_ClkSwitch_audio2ClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_audio2ClkD3Switch                0x00008000
    #define        Gbl_ClkSwitch_audio2ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_audio2ClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_ClkSwitch_audio3ClkSwitch               0x016A
    #define     B16Gbl_ClkSwitch_audio3ClkSwitch               0x016A
    #define   LSb32Gbl_ClkSwitch_audio3ClkSwitch                  16
    #define   LSb16Gbl_ClkSwitch_audio3ClkSwitch                  0
    #define       bGbl_ClkSwitch_audio3ClkSwitch               1
    #define   MSK32Gbl_ClkSwitch_audio3ClkSwitch                  0x00010000
    #define        Gbl_ClkSwitch_audio3ClkSwitch_SrcClk                     0x0
    #define        Gbl_ClkSwitch_audio3ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_ClkSwitch_audio3ClkD3Switch             0x016A
    #define     B16Gbl_ClkSwitch_audio3ClkD3Switch             0x016A
    #define   LSb32Gbl_ClkSwitch_audio3ClkD3Switch                17
    #define   LSb16Gbl_ClkSwitch_audio3ClkD3Switch                1
    #define       bGbl_ClkSwitch_audio3ClkD3Switch             1
    #define   MSK32Gbl_ClkSwitch_audio3ClkD3Switch                0x00020000
    #define        Gbl_ClkSwitch_audio3ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_ClkSwitch_audio3ClkD3Switch_Div3Clk                  0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PadSelect                               0x016C

    #define     BA_Gbl_PadSelect_GBL_PDB                       0x016C
    #define     B16Gbl_PadSelect_GBL_PDB                       0x016C
    #define   LSb32Gbl_PadSelect_GBL_PDB                          0
    #define   LSb16Gbl_PadSelect_GBL_PDB                          0
    #define       bGbl_PadSelect_GBL_PDB                       1
    #define   MSK32Gbl_PadSelect_GBL_PDB                          0x00000001
    #define        Gbl_PadSelect_GBL_PDB_NORMAL                             0x1
    #define        Gbl_PadSelect_GBL_PDB_PWRDN                              0x0

    #define     BA_Gbl_PadSelect_NAND_PDB                      0x016C
    #define     B16Gbl_PadSelect_NAND_PDB                      0x016C
    #define   LSb32Gbl_PadSelect_NAND_PDB                         1
    #define   LSb16Gbl_PadSelect_NAND_PDB                         1
    #define       bGbl_PadSelect_NAND_PDB                      1
    #define   MSK32Gbl_PadSelect_NAND_PDB                         0x00000002
    #define        Gbl_PadSelect_NAND_PDB_NORMAL                            0x1
    #define        Gbl_PadSelect_NAND_PDB_PWRDN                             0x0

    #define     BA_Gbl_PadSelect_SD0_PDB                       0x016C
    #define     B16Gbl_PadSelect_SD0_PDB                       0x016C
    #define   LSb32Gbl_PadSelect_SD0_PDB                          2
    #define   LSb16Gbl_PadSelect_SD0_PDB                          2
    #define       bGbl_PadSelect_SD0_PDB                       1
    #define   MSK32Gbl_PadSelect_SD0_PDB                          0x00000004
    #define        Gbl_PadSelect_SD0_PDB_NORMAL                             0x1
    #define        Gbl_PadSelect_SD0_PDB_PWRDN                              0x0

    #define     BA_Gbl_PadSelect_SD1_PDB                       0x016C
    #define     B16Gbl_PadSelect_SD1_PDB                       0x016C
    #define   LSb32Gbl_PadSelect_SD1_PDB                          3
    #define   LSb16Gbl_PadSelect_SD1_PDB                          3
    #define       bGbl_PadSelect_SD1_PDB                       1
    #define   MSK32Gbl_PadSelect_SD1_PDB                          0x00000008
    #define        Gbl_PadSelect_SD1_PDB_NORMAL                             0x1
    #define        Gbl_PadSelect_SD1_PDB_PWRDN                              0x0

    #define     BA_Gbl_PadSelect_SPI_PDB                       0x016C
    #define     B16Gbl_PadSelect_SPI_PDB                       0x016C
    #define   LSb32Gbl_PadSelect_SPI_PDB                          4
    #define   LSb16Gbl_PadSelect_SPI_PDB                          4
    #define       bGbl_PadSelect_SPI_PDB                       1
    #define   MSK32Gbl_PadSelect_SPI_PDB                          0x00000010
    #define        Gbl_PadSelect_SPI_PDB_NORMAL                             0x1
    #define        Gbl_PadSelect_SPI_PDB_PWRDN                              0x0

    #define     BA_Gbl_PadSelect_CLK0_V18EN                    0x016C
    #define     B16Gbl_PadSelect_CLK0_V18EN                    0x016C
    #define   LSb32Gbl_PadSelect_CLK0_V18EN                       5
    #define   LSb16Gbl_PadSelect_CLK0_V18EN                       5
    #define       bGbl_PadSelect_CLK0_V18EN                    1
    #define   MSK32Gbl_PadSelect_CLK0_V18EN                       0x00000020
    #define        Gbl_PadSelect_CLK0_V18EN_V1P8                            0x1
    #define        Gbl_PadSelect_CLK0_V18EN_V3R3                            0x0

    #define     BA_Gbl_PadSelect_DVIO0_V18EN                   0x016C
    #define     B16Gbl_PadSelect_DVIO0_V18EN                   0x016C
    #define   LSb32Gbl_PadSelect_DVIO0_V18EN                      6
    #define   LSb16Gbl_PadSelect_DVIO0_V18EN                      6
    #define       bGbl_PadSelect_DVIO0_V18EN                   1
    #define   MSK32Gbl_PadSelect_DVIO0_V18EN                      0x00000040
    #define        Gbl_PadSelect_DVIO0_V18EN_V1P8                           0x1
    #define        Gbl_PadSelect_DVIO0_V18EN_V3R3                           0x0

    #define     BA_Gbl_PadSelect_GBL_V18EN                     0x016C
    #define     B16Gbl_PadSelect_GBL_V18EN                     0x016C
    #define   LSb32Gbl_PadSelect_GBL_V18EN                        7
    #define   LSb16Gbl_PadSelect_GBL_V18EN                        7
    #define       bGbl_PadSelect_GBL_V18EN                     1
    #define   MSK32Gbl_PadSelect_GBL_V18EN                        0x00000080
    #define        Gbl_PadSelect_GBL_V18EN_V1P8                             0x1
    #define        Gbl_PadSelect_GBL_V18EN_V3R3                             0x0

    #define     BA_Gbl_PadSelect_SPI0_V18EN                    0x016D
    #define     B16Gbl_PadSelect_SPI0_V18EN                    0x016C
    #define   LSb32Gbl_PadSelect_SPI0_V18EN                       8
    #define   LSb16Gbl_PadSelect_SPI0_V18EN                       8
    #define       bGbl_PadSelect_SPI0_V18EN                    1
    #define   MSK32Gbl_PadSelect_SPI0_V18EN                       0x00000100
    #define        Gbl_PadSelect_SPI0_V18EN_V1P8                            0x1
    #define        Gbl_PadSelect_SPI0_V18EN_V3R3                            0x0

    #define     BA_Gbl_PadSelect_SD0_V18EN                     0x016D
    #define     B16Gbl_PadSelect_SD0_V18EN                     0x016C
    #define   LSb32Gbl_PadSelect_SD0_V18EN                        9
    #define   LSb16Gbl_PadSelect_SD0_V18EN                        9
    #define       bGbl_PadSelect_SD0_V18EN                     1
    #define   MSK32Gbl_PadSelect_SD0_V18EN                        0x00000200
    #define        Gbl_PadSelect_SD0_V18EN_V1P8                             0x1
    #define        Gbl_PadSelect_SD0_V18EN_V3R3                             0x0

    #define     BA_Gbl_PadSelect_SD10_V18EN                    0x016D
    #define     B16Gbl_PadSelect_SD10_V18EN                    0x016C
    #define   LSb32Gbl_PadSelect_SD10_V18EN                       10
    #define   LSb16Gbl_PadSelect_SD10_V18EN                       10
    #define       bGbl_PadSelect_SD10_V18EN                    1
    #define   MSK32Gbl_PadSelect_SD10_V18EN                       0x00000400
    #define        Gbl_PadSelect_SD10_V18EN_V1P8                            0x1
    #define        Gbl_PadSelect_SD10_V18EN_V3R3                            0x0

    #define     BA_Gbl_PadSelect_CLK0_V25EN                    0x016D
    #define     B16Gbl_PadSelect_CLK0_V25EN                    0x016C
    #define   LSb32Gbl_PadSelect_CLK0_V25EN                       11
    #define   LSb16Gbl_PadSelect_CLK0_V25EN                       11
    #define       bGbl_PadSelect_CLK0_V25EN                    1
    #define   MSK32Gbl_PadSelect_CLK0_V25EN                       0x00000800
    #define        Gbl_PadSelect_CLK0_V25EN_Enable                          0x1
    #define        Gbl_PadSelect_CLK0_V25EN_Disable                         0x0

    #define     BA_Gbl_PadSelect_DVIO0_V25EN                   0x016D
    #define     B16Gbl_PadSelect_DVIO0_V25EN                   0x016C
    #define   LSb32Gbl_PadSelect_DVIO0_V25EN                      12
    #define   LSb16Gbl_PadSelect_DVIO0_V25EN                      12
    #define       bGbl_PadSelect_DVIO0_V25EN                   1
    #define   MSK32Gbl_PadSelect_DVIO0_V25EN                      0x00001000
    #define        Gbl_PadSelect_DVIO0_V25EN_Enable                         0x1
    #define        Gbl_PadSelect_DVIO0_V25EN_Disable                        0x0

    #define     BA_Gbl_PadSelect_TS0_V25EN                     0x016D
    #define     B16Gbl_PadSelect_TS0_V25EN                     0x016C
    #define   LSb32Gbl_PadSelect_TS0_V25EN                        13
    #define   LSb16Gbl_PadSelect_TS0_V25EN                        13
    #define       bGbl_PadSelect_TS0_V25EN                     1
    #define   MSK32Gbl_PadSelect_TS0_V25EN                        0x00002000
    #define        Gbl_PadSelect_TS0_V25EN_Enable                           0x1
    #define        Gbl_PadSelect_TS0_V25EN_Disable                          0x0

    #define     BA_Gbl_PadSelect_SPI0_V25EN                    0x016D
    #define     B16Gbl_PadSelect_SPI0_V25EN                    0x016C
    #define   LSb32Gbl_PadSelect_SPI0_V25EN                       14
    #define   LSb16Gbl_PadSelect_SPI0_V25EN                       14
    #define       bGbl_PadSelect_SPI0_V25EN                    1
    #define   MSK32Gbl_PadSelect_SPI0_V25EN                       0x00004000
    #define        Gbl_PadSelect_SPI0_V25EN_Enable                          0x1
    #define        Gbl_PadSelect_SPI0_V25EN_Disable                         0x0

    #define     BA_Gbl_PadSelect_U6_V25EN                      0x016D
    #define     B16Gbl_PadSelect_U6_V25EN                      0x016C
    #define   LSb32Gbl_PadSelect_U6_V25EN                         15
    #define   LSb16Gbl_PadSelect_U6_V25EN                         15
    #define       bGbl_PadSelect_U6_V25EN                      1
    #define   MSK32Gbl_PadSelect_U6_V25EN                         0x00008000
    #define        Gbl_PadSelect_U6_V25EN_Enable                            0x1
    #define        Gbl_PadSelect_U6_V25EN_Disable                           0x0

    #define     BA_Gbl_PadSelect_U7_V25EN                      0x016E
    #define     B16Gbl_PadSelect_U7_V25EN                      0x016E
    #define   LSb32Gbl_PadSelect_U7_V25EN                         16
    #define   LSb16Gbl_PadSelect_U7_V25EN                         0
    #define       bGbl_PadSelect_U7_V25EN                      1
    #define   MSK32Gbl_PadSelect_U7_V25EN                         0x00010000
    #define        Gbl_PadSelect_U7_V25EN_Enable                            0x1
    #define        Gbl_PadSelect_U7_V25EN_Disable                           0x0

    #define     BA_Gbl_PadSelect_U8_V25EN                      0x016E
    #define     B16Gbl_PadSelect_U8_V25EN                      0x016E
    #define   LSb32Gbl_PadSelect_U8_V25EN                         17
    #define   LSb16Gbl_PadSelect_U8_V25EN                         1
    #define       bGbl_PadSelect_U8_V25EN                      1
    #define   MSK32Gbl_PadSelect_U8_V25EN                         0x00020000
    #define        Gbl_PadSelect_U8_V25EN_Enable                            0x1
    #define        Gbl_PadSelect_U8_V25EN_Disable                           0x0

    #define     BA_Gbl_PadSelect_W14_V25EN                     0x016E
    #define     B16Gbl_PadSelect_W14_V25EN                     0x016E
    #define   LSb32Gbl_PadSelect_W14_V25EN                        18
    #define   LSb16Gbl_PadSelect_W14_V25EN                        2
    #define       bGbl_PadSelect_W14_V25EN                     1
    #define   MSK32Gbl_PadSelect_W14_V25EN                        0x00040000
    #define        Gbl_PadSelect_W14_V25EN_Enable                           0x1
    #define        Gbl_PadSelect_W14_V25EN_Disable                          0x0

    #define     BA_Gbl_PadSelect_DVU0_V25EN                    0x016E
    #define     B16Gbl_PadSelect_DVU0_V25EN                    0x016E
    #define   LSb32Gbl_PadSelect_DVU0_V25EN                       19
    #define   LSb16Gbl_PadSelect_DVU0_V25EN                       3
    #define       bGbl_PadSelect_DVU0_V25EN                    1
    #define   MSK32Gbl_PadSelect_DVU0_V25EN                       0x00080000
    #define        Gbl_PadSelect_DVU0_V25EN_Enable                          0x1
    #define        Gbl_PadSelect_DVU0_V25EN_Disable                         0x0

    #define     BA_Gbl_PadSelect_GBL_V25EN                     0x016E
    #define     B16Gbl_PadSelect_GBL_V25EN                     0x016E
    #define   LSb32Gbl_PadSelect_GBL_V25EN                        20
    #define   LSb16Gbl_PadSelect_GBL_V25EN                        4
    #define       bGbl_PadSelect_GBL_V25EN                     1
    #define   MSK32Gbl_PadSelect_GBL_V25EN                        0x00100000
    #define        Gbl_PadSelect_GBL_V25EN_Enable                           0x1
    #define        Gbl_PadSelect_GBL_V25EN_Disable                          0x0

    #define     BA_Gbl_PadSelect_SD0_V25EN                     0x016E
    #define     B16Gbl_PadSelect_SD0_V25EN                     0x016E
    #define   LSb32Gbl_PadSelect_SD0_V25EN                        21
    #define   LSb16Gbl_PadSelect_SD0_V25EN                        5
    #define       bGbl_PadSelect_SD0_V25EN                     1
    #define   MSK32Gbl_PadSelect_SD0_V25EN                        0x00200000
    #define        Gbl_PadSelect_SD0_V25EN_Enable                           0x1
    #define        Gbl_PadSelect_SD0_V25EN_Disable                          0x0

    #define     BA_Gbl_PadSelect_DVIO_OEN                      0x016E
    #define     B16Gbl_PadSelect_DVIO_OEN                      0x016E
    #define   LSb32Gbl_PadSelect_DVIO_OEN                         22
    #define   LSb16Gbl_PadSelect_DVIO_OEN                         6
    #define       bGbl_PadSelect_DVIO_OEN                      1
    #define   MSK32Gbl_PadSelect_DVIO_OEN                         0x00400000
    #define        Gbl_PadSelect_DVIO_OEN_Enable                            0x1
    #define        Gbl_PadSelect_DVIO_OEN_Disable                           0x0

    #define     BA_Gbl_PadSelect_CLK0_ZN                       0x016E
    #define     B16Gbl_PadSelect_CLK0_ZN                       0x016E
    #define   LSb32Gbl_PadSelect_CLK0_ZN                          23
    #define   LSb16Gbl_PadSelect_CLK0_ZN                          7
    #define       bGbl_PadSelect_CLK0_ZN                       3
    #define   MSK32Gbl_PadSelect_CLK0_ZN                          0x03800000

    #define     BA_Gbl_PadSelect_CLK0_ZP                       0x016F
    #define     B16Gbl_PadSelect_CLK0_ZP                       0x016E
    #define   LSb32Gbl_PadSelect_CLK0_ZP                          26
    #define   LSb16Gbl_PadSelect_CLK0_ZP                          10
    #define       bGbl_PadSelect_CLK0_ZP                       3
    #define   MSK32Gbl_PadSelect_CLK0_ZP                          0x1C000000

    #define     BA_Gbl_PadSelect_DVIO0_ZN                      0x016F
    #define     B16Gbl_PadSelect_DVIO0_ZN                      0x016E
    #define   LSb32Gbl_PadSelect_DVIO0_ZN                         29
    #define   LSb16Gbl_PadSelect_DVIO0_ZN                         13
    #define       bGbl_PadSelect_DVIO0_ZN                      3
    #define   MSK32Gbl_PadSelect_DVIO0_ZN                         0xE0000000

    #define     RA_Gbl_PadSelect1                              0x0170

    #define     BA_Gbl_PadSelect_DVIO0_ZP                      0x0170
    #define     B16Gbl_PadSelect_DVIO0_ZP                      0x0170
    #define   LSb32Gbl_PadSelect_DVIO0_ZP                         0
    #define   LSb16Gbl_PadSelect_DVIO0_ZP                         0
    #define       bGbl_PadSelect_DVIO0_ZP                      3
    #define   MSK32Gbl_PadSelect_DVIO0_ZP                         0x00000007

    #define     BA_Gbl_PadSelect_ND0_ZN                        0x0170
    #define     B16Gbl_PadSelect_ND0_ZN                        0x0170
    #define   LSb32Gbl_PadSelect_ND0_ZN                           3
    #define   LSb16Gbl_PadSelect_ND0_ZN                           3
    #define       bGbl_PadSelect_ND0_ZN                        4
    #define   MSK32Gbl_PadSelect_ND0_ZN                           0x00000078

    #define     BA_Gbl_PadSelect_ND0_ZP                        0x0170
    #define     B16Gbl_PadSelect_ND0_ZP                        0x0170
    #define   LSb32Gbl_PadSelect_ND0_ZP                           7
    #define   LSb16Gbl_PadSelect_ND0_ZP                           7
    #define       bGbl_PadSelect_ND0_ZP                        4
    #define   MSK32Gbl_PadSelect_ND0_ZP                           0x00000780

    #define     BA_Gbl_PadSelect_GBL_ZN                        0x0171
    #define     B16Gbl_PadSelect_GBL_ZN                        0x0170
    #define   LSb32Gbl_PadSelect_GBL_ZN                           11
    #define   LSb16Gbl_PadSelect_GBL_ZN                           11
    #define       bGbl_PadSelect_GBL_ZN                        4
    #define   MSK32Gbl_PadSelect_GBL_ZN                           0x00007800

    #define     BA_Gbl_PadSelect_GBL_ZP                        0x0171
    #define     B16Gbl_PadSelect_GBL_ZP                        0x0170
    #define   LSb32Gbl_PadSelect_GBL_ZP                           15
    #define   LSb16Gbl_PadSelect_GBL_ZP                           15
    #define       bGbl_PadSelect_GBL_ZP                        4
    #define   MSK32Gbl_PadSelect_GBL_ZP                           0x00078000

    #define     BA_Gbl_PadSelect_SPI0_ZN                       0x0172
    #define     B16Gbl_PadSelect_SPI0_ZN                       0x0172
    #define   LSb32Gbl_PadSelect_SPI0_ZN                          19
    #define   LSb16Gbl_PadSelect_SPI0_ZN                          3
    #define       bGbl_PadSelect_SPI0_ZN                       4
    #define   MSK32Gbl_PadSelect_SPI0_ZN                          0x00780000

    #define     BA_Gbl_PadSelect_SPI0_ZP                       0x0172
    #define     B16Gbl_PadSelect_SPI0_ZP                       0x0172
    #define   LSb32Gbl_PadSelect_SPI0_ZP                          23
    #define   LSb16Gbl_PadSelect_SPI0_ZP                          7
    #define       bGbl_PadSelect_SPI0_ZP                       4
    #define   MSK32Gbl_PadSelect_SPI0_ZP                          0x07800000

    #define     BA_Gbl_PadSelect_SD0_ZN                        0x0173
    #define     B16Gbl_PadSelect_SD0_ZN                        0x0172
    #define   LSb32Gbl_PadSelect_SD0_ZN                           27
    #define   LSb16Gbl_PadSelect_SD0_ZN                           11
    #define       bGbl_PadSelect_SD0_ZN                        4
    #define   MSK32Gbl_PadSelect_SD0_ZN                           0x78000000

    #define     RA_Gbl_PadSelect2                              0x0174

    #define     BA_Gbl_PadSelect_SD0_ZP                        0x0174
    #define     B16Gbl_PadSelect_SD0_ZP                        0x0174
    #define   LSb32Gbl_PadSelect_SD0_ZP                           0
    #define   LSb16Gbl_PadSelect_SD0_ZP                           0
    #define       bGbl_PadSelect_SD0_ZP                        4
    #define   MSK32Gbl_PadSelect_SD0_ZP                           0x0000000F

    #define     BA_Gbl_PadSelect_SD10_ZN                       0x0174
    #define     B16Gbl_PadSelect_SD10_ZN                       0x0174
    #define   LSb32Gbl_PadSelect_SD10_ZN                          4
    #define   LSb16Gbl_PadSelect_SD10_ZN                          4
    #define       bGbl_PadSelect_SD10_ZN                       4
    #define   MSK32Gbl_PadSelect_SD10_ZN                          0x000000F0

    #define     BA_Gbl_PadSelect_SD10_ZP                       0x0175
    #define     B16Gbl_PadSelect_SD10_ZP                       0x0174
    #define   LSb32Gbl_PadSelect_SD10_ZP                          8
    #define   LSb16Gbl_PadSelect_SD10_ZP                          8
    #define       bGbl_PadSelect_SD10_ZP                       4
    #define   MSK32Gbl_PadSelect_SD10_ZP                          0x00000F00

    #define     BA_Gbl_PadSelect_DVIO_1_V18EN                  0x0175
    #define     B16Gbl_PadSelect_DVIO_1_V18EN                  0x0174
    #define   LSb32Gbl_PadSelect_DVIO_1_V18EN                     12
    #define   LSb16Gbl_PadSelect_DVIO_1_V18EN                     12
    #define       bGbl_PadSelect_DVIO_1_V18EN                  1
    #define   MSK32Gbl_PadSelect_DVIO_1_V18EN                     0x00001000
    #define        Gbl_PadSelect_DVIO_1_V18EN_V1P8                          0x1
    #define        Gbl_PadSelect_DVIO_1_V18EN_V3R3                          0x0

    #define     BA_Gbl_PadSelect_I2S_V18EN                     0x0175
    #define     B16Gbl_PadSelect_I2S_V18EN                     0x0174
    #define   LSb32Gbl_PadSelect_I2S_V18EN                        13
    #define   LSb16Gbl_PadSelect_I2S_V18EN                        13
    #define       bGbl_PadSelect_I2S_V18EN                     1
    #define   MSK32Gbl_PadSelect_I2S_V18EN                        0x00002000
    #define        Gbl_PadSelect_I2S_V18EN_V1P8                             0x1
    #define        Gbl_PadSelect_I2S_V18EN_V3R3                             0x0

    #define     BA_Gbl_PadSelect_DVIO_1_V25EN                  0x0175
    #define     B16Gbl_PadSelect_DVIO_1_V25EN                  0x0174
    #define   LSb32Gbl_PadSelect_DVIO_1_V25EN                     14
    #define   LSb16Gbl_PadSelect_DVIO_1_V25EN                     14
    #define       bGbl_PadSelect_DVIO_1_V25EN                  1
    #define   MSK32Gbl_PadSelect_DVIO_1_V25EN                     0x00004000
    #define        Gbl_PadSelect_DVIO_1_V25EN_Enable                        0x1
    #define        Gbl_PadSelect_DVIO_1_V25EN_Disable                       0x0

    #define     BA_Gbl_PadSelect_I2S_V25EN                     0x0175
    #define     B16Gbl_PadSelect_I2S_V25EN                     0x0174
    #define   LSb32Gbl_PadSelect_I2S_V25EN                        15
    #define   LSb16Gbl_PadSelect_I2S_V25EN                        15
    #define       bGbl_PadSelect_I2S_V25EN                     1
    #define   MSK32Gbl_PadSelect_I2S_V25EN                        0x00008000
    #define        Gbl_PadSelect_I2S_V25EN_Enable                           0x1
    #define        Gbl_PadSelect_I2S_V25EN_Disable                          0x0

    #define     BA_Gbl_PadSelect_DVIO_1_ZN                     0x0176
    #define     B16Gbl_PadSelect_DVIO_1_ZN                     0x0176
    #define   LSb32Gbl_PadSelect_DVIO_1_ZN                        16
    #define   LSb16Gbl_PadSelect_DVIO_1_ZN                        0
    #define       bGbl_PadSelect_DVIO_1_ZN                     3
    #define   MSK32Gbl_PadSelect_DVIO_1_ZN                        0x00070000

    #define     BA_Gbl_PadSelect_DVIO_1_ZP                     0x0176
    #define     B16Gbl_PadSelect_DVIO_1_ZP                     0x0176
    #define   LSb32Gbl_PadSelect_DVIO_1_ZP                        19
    #define   LSb16Gbl_PadSelect_DVIO_1_ZP                        3
    #define       bGbl_PadSelect_DVIO_1_ZP                     3
    #define   MSK32Gbl_PadSelect_DVIO_1_ZP                        0x00380000

    #define     BA_Gbl_PadSelect_I2S_ZN                        0x0176
    #define     B16Gbl_PadSelect_I2S_ZN                        0x0176
    #define   LSb32Gbl_PadSelect_I2S_ZN                           22
    #define   LSb16Gbl_PadSelect_I2S_ZN                           6
    #define       bGbl_PadSelect_I2S_ZN                        3
    #define   MSK32Gbl_PadSelect_I2S_ZN                           0x01C00000

    #define     BA_Gbl_PadSelect_I2S_ZP                        0x0177
    #define     B16Gbl_PadSelect_I2S_ZP                        0x0176
    #define   LSb32Gbl_PadSelect_I2S_ZP                           25
    #define   LSb16Gbl_PadSelect_I2S_ZP                           9
    #define       bGbl_PadSelect_I2S_ZP                        3
    #define   MSK32Gbl_PadSelect_I2S_ZP                           0x0E000000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetTrigger                            0x0178

    #define     BA_Gbl_ResetTrigger_chipReset                  0x0178
    #define     B16Gbl_ResetTrigger_chipReset                  0x0178
    #define   LSb32Gbl_ResetTrigger_chipReset                     0
    #define   LSb16Gbl_ResetTrigger_chipReset                     0
    #define       bGbl_ResetTrigger_chipReset                  1
    #define   MSK32Gbl_ResetTrigger_chipReset                     0x00000001
    #define        Gbl_ResetTrigger_chipReset_assert                        0x1
    #define        Gbl_ResetTrigger_chipReset_deassert                      0x0

    #define     BA_Gbl_ResetTrigger_audio0ClkReset             0x0178
    #define     B16Gbl_ResetTrigger_audio0ClkReset             0x0178
    #define   LSb32Gbl_ResetTrigger_audio0ClkReset                1
    #define   LSb16Gbl_ResetTrigger_audio0ClkReset                1
    #define       bGbl_ResetTrigger_audio0ClkReset             1
    #define   MSK32Gbl_ResetTrigger_audio0ClkReset                0x00000002
    #define        Gbl_ResetTrigger_audio0ClkReset_assert                   0x1
    #define        Gbl_ResetTrigger_audio0ClkReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_audio1ClkReset             0x0178
    #define     B16Gbl_ResetTrigger_audio1ClkReset             0x0178
    #define   LSb32Gbl_ResetTrigger_audio1ClkReset                2
    #define   LSb16Gbl_ResetTrigger_audio1ClkReset                2
    #define       bGbl_ResetTrigger_audio1ClkReset             1
    #define   MSK32Gbl_ResetTrigger_audio1ClkReset                0x00000004
    #define        Gbl_ResetTrigger_audio1ClkReset_assert                   0x1
    #define        Gbl_ResetTrigger_audio1ClkReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_audio2ClkReset             0x0178
    #define     B16Gbl_ResetTrigger_audio2ClkReset             0x0178
    #define   LSb32Gbl_ResetTrigger_audio2ClkReset                3
    #define   LSb16Gbl_ResetTrigger_audio2ClkReset                3
    #define       bGbl_ResetTrigger_audio2ClkReset             1
    #define   MSK32Gbl_ResetTrigger_audio2ClkReset                0x00000008
    #define        Gbl_ResetTrigger_audio2ClkReset_assert                   0x1
    #define        Gbl_ResetTrigger_audio2ClkReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_audio3ClkReset             0x0178
    #define     B16Gbl_ResetTrigger_audio3ClkReset             0x0178
    #define   LSb32Gbl_ResetTrigger_audio3ClkReset                4
    #define   LSb16Gbl_ResetTrigger_audio3ClkReset                4
    #define       bGbl_ResetTrigger_audio3ClkReset             1
    #define   MSK32Gbl_ResetTrigger_audio3ClkReset                0x00000010
    #define        Gbl_ResetTrigger_audio3ClkReset_assert                   0x1
    #define        Gbl_ResetTrigger_audio3ClkReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_audioHdClkReset            0x0178
    #define     B16Gbl_ResetTrigger_audioHdClkReset            0x0178
    #define   LSb32Gbl_ResetTrigger_audioHdClkReset               5
    #define   LSb16Gbl_ResetTrigger_audioHdClkReset               5
    #define       bGbl_ResetTrigger_audioHdClkReset            1
    #define   MSK32Gbl_ResetTrigger_audioHdClkReset               0x00000020
    #define        Gbl_ResetTrigger_audioHdClkReset_assert                  0x1
    #define        Gbl_ResetTrigger_audioHdClkReset_deassert                0x0

    #define     BA_Gbl_ResetTrigger_sysPllSyncReset            0x0178
    #define     B16Gbl_ResetTrigger_sysPllSyncReset            0x0178
    #define   LSb32Gbl_ResetTrigger_sysPllSyncReset               6
    #define   LSb16Gbl_ResetTrigger_sysPllSyncReset               6
    #define       bGbl_ResetTrigger_sysPllSyncReset            1
    #define   MSK32Gbl_ResetTrigger_sysPllSyncReset               0x00000040
    #define        Gbl_ResetTrigger_sysPllSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_sysPllSyncReset_deassert                0x0

    #define     BA_Gbl_ResetTrigger_memPllSyncReset            0x0178
    #define     B16Gbl_ResetTrigger_memPllSyncReset            0x0178
    #define   LSb32Gbl_ResetTrigger_memPllSyncReset               7
    #define   LSb16Gbl_ResetTrigger_memPllSyncReset               7
    #define       bGbl_ResetTrigger_memPllSyncReset            1
    #define   MSK32Gbl_ResetTrigger_memPllSyncReset               0x00000080
    #define        Gbl_ResetTrigger_memPllSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_memPllSyncReset_deassert                0x0

    #define     BA_Gbl_ResetTrigger_cpu1PllSyncReset           0x0179
    #define     B16Gbl_ResetTrigger_cpu1PllSyncReset           0x0178
    #define   LSb32Gbl_ResetTrigger_cpu1PllSyncReset              8
    #define   LSb16Gbl_ResetTrigger_cpu1PllSyncReset              8
    #define       bGbl_ResetTrigger_cpu1PllSyncReset           1
    #define   MSK32Gbl_ResetTrigger_cpu1PllSyncReset              0x00000100
    #define        Gbl_ResetTrigger_cpu1PllSyncReset_assert                 0x1
    #define        Gbl_ResetTrigger_cpu1PllSyncReset_deassert               0x0

    #define     BA_Gbl_ResetTrigger_cpu0SyncReset              0x0179
    #define     B16Gbl_ResetTrigger_cpu0SyncReset              0x0178
    #define   LSb32Gbl_ResetTrigger_cpu0SyncReset                 9
    #define   LSb16Gbl_ResetTrigger_cpu0SyncReset                 9
    #define       bGbl_ResetTrigger_cpu0SyncReset              1
    #define   MSK32Gbl_ResetTrigger_cpu0SyncReset                 0x00000200
    #define        Gbl_ResetTrigger_cpu0SyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_cpu0SyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_cpu1SyncReset              0x0179
    #define     B16Gbl_ResetTrigger_cpu1SyncReset              0x0178
    #define   LSb32Gbl_ResetTrigger_cpu1SyncReset                 10
    #define   LSb16Gbl_ResetTrigger_cpu1SyncReset                 10
    #define       bGbl_ResetTrigger_cpu1SyncReset              1
    #define   MSK32Gbl_ResetTrigger_cpu1SyncReset                 0x00000400
    #define        Gbl_ResetTrigger_cpu1SyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_cpu1SyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_socDdrSyncReset            0x0179
    #define     B16Gbl_ResetTrigger_socDdrSyncReset            0x0178
    #define   LSb32Gbl_ResetTrigger_socDdrSyncReset               11
    #define   LSb16Gbl_ResetTrigger_socDdrSyncReset               11
    #define       bGbl_ResetTrigger_socDdrSyncReset            1
    #define   MSK32Gbl_ResetTrigger_socDdrSyncReset               0x00000800
    #define        Gbl_ResetTrigger_socDdrSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_socDdrSyncReset_deassert                0x0

    #define     BA_Gbl_ResetTrigger_gfxSyncReset               0x0179
    #define     B16Gbl_ResetTrigger_gfxSyncReset               0x0178
    #define   LSb32Gbl_ResetTrigger_gfxSyncReset                  12
    #define   LSb16Gbl_ResetTrigger_gfxSyncReset                  12
    #define       bGbl_ResetTrigger_gfxSyncReset               1
    #define   MSK32Gbl_ResetTrigger_gfxSyncReset                  0x00001000
    #define        Gbl_ResetTrigger_gfxSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_gfxSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_zspSyncReset               0x0179
    #define     B16Gbl_ResetTrigger_zspSyncReset               0x0178
    #define   LSb32Gbl_ResetTrigger_zspSyncReset                  13
    #define   LSb16Gbl_ResetTrigger_zspSyncReset                  13
    #define       bGbl_ResetTrigger_zspSyncReset               1
    #define   MSK32Gbl_ResetTrigger_zspSyncReset                  0x00002000
    #define        Gbl_ResetTrigger_zspSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_zspSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_avioSyncReset              0x0179
    #define     B16Gbl_ResetTrigger_avioSyncReset              0x0178
    #define   LSb32Gbl_ResetTrigger_avioSyncReset                 14
    #define   LSb16Gbl_ResetTrigger_avioSyncReset                 14
    #define       bGbl_ResetTrigger_avioSyncReset              1
    #define   MSK32Gbl_ResetTrigger_avioSyncReset                 0x00004000
    #define        Gbl_ResetTrigger_avioSyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_avioSyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_perifSyncReset             0x0179
    #define     B16Gbl_ResetTrigger_perifSyncReset             0x0178
    #define   LSb32Gbl_ResetTrigger_perifSyncReset                15
    #define   LSb16Gbl_ResetTrigger_perifSyncReset                15
    #define       bGbl_ResetTrigger_perifSyncReset             1
    #define   MSK32Gbl_ResetTrigger_perifSyncReset                0x00008000
    #define        Gbl_ResetTrigger_perifSyncReset_assert                   0x1
    #define        Gbl_ResetTrigger_perifSyncReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_gethSyncReset              0x017A
    #define     B16Gbl_ResetTrigger_gethSyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_gethSyncReset                 16
    #define   LSb16Gbl_ResetTrigger_gethSyncReset                 0
    #define       bGbl_ResetTrigger_gethSyncReset              1
    #define   MSK32Gbl_ResetTrigger_gethSyncReset                 0x00010000
    #define        Gbl_ResetTrigger_gethSyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_gethSyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_sataSyncReset              0x017A
    #define     B16Gbl_ResetTrigger_sataSyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_sataSyncReset                 17
    #define   LSb16Gbl_ResetTrigger_sataSyncReset                 1
    #define       bGbl_ResetTrigger_sataSyncReset              1
    #define   MSK32Gbl_ResetTrigger_sataSyncReset                 0x00020000
    #define        Gbl_ResetTrigger_sataSyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_sataSyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_geth1SyncReset             0x017A
    #define     B16Gbl_ResetTrigger_geth1SyncReset             0x017A
    #define   LSb32Gbl_ResetTrigger_geth1SyncReset                18
    #define   LSb16Gbl_ResetTrigger_geth1SyncReset                2
    #define       bGbl_ResetTrigger_geth1SyncReset             1
    #define   MSK32Gbl_ResetTrigger_geth1SyncReset                0x00040000
    #define        Gbl_ResetTrigger_geth1SyncReset_assert                   0x1
    #define        Gbl_ResetTrigger_geth1SyncReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_ahbApbSyncReset            0x017A
    #define     B16Gbl_ResetTrigger_ahbApbSyncReset            0x017A
    #define   LSb32Gbl_ResetTrigger_ahbApbSyncReset               19
    #define   LSb16Gbl_ResetTrigger_ahbApbSyncReset               3
    #define       bGbl_ResetTrigger_ahbApbSyncReset            1
    #define   MSK32Gbl_ResetTrigger_ahbApbSyncReset               0x00080000
    #define        Gbl_ResetTrigger_ahbApbSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_ahbApbSyncReset_deassert                0x0

    #define     BA_Gbl_ResetTrigger_nanfSyncReset              0x017A
    #define     B16Gbl_ResetTrigger_nanfSyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_nanfSyncReset                 20
    #define   LSb16Gbl_ResetTrigger_nanfSyncReset                 4
    #define       bGbl_ResetTrigger_nanfSyncReset              1
    #define   MSK32Gbl_ResetTrigger_nanfSyncReset                 0x00100000
    #define        Gbl_ResetTrigger_nanfSyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_nanfSyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_smemcSyncReset             0x017A
    #define     B16Gbl_ResetTrigger_smemcSyncReset             0x017A
    #define   LSb32Gbl_ResetTrigger_smemcSyncReset                21
    #define   LSb16Gbl_ResetTrigger_smemcSyncReset                5
    #define       bGbl_ResetTrigger_smemcSyncReset             1
    #define   MSK32Gbl_ResetTrigger_smemcSyncReset                0x00200000
    #define        Gbl_ResetTrigger_smemcSyncReset_assert                   0x1
    #define        Gbl_ResetTrigger_smemcSyncReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_drmSyncReset               0x017A
    #define     B16Gbl_ResetTrigger_drmSyncReset               0x017A
    #define   LSb32Gbl_ResetTrigger_drmSyncReset                  22
    #define   LSb16Gbl_ResetTrigger_drmSyncReset                  6
    #define       bGbl_ResetTrigger_drmSyncReset               1
    #define   MSK32Gbl_ResetTrigger_drmSyncReset                  0x00400000
    #define        Gbl_ResetTrigger_drmSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_drmSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_usb0SyncReset              0x017A
    #define     B16Gbl_ResetTrigger_usb0SyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_usb0SyncReset                 23
    #define   LSb16Gbl_ResetTrigger_usb0SyncReset                 7
    #define       bGbl_ResetTrigger_usb0SyncReset              1
    #define   MSK32Gbl_ResetTrigger_usb0SyncReset                 0x00800000
    #define        Gbl_ResetTrigger_usb0SyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_usb0SyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_usb1SyncReset              0x017B
    #define     B16Gbl_ResetTrigger_usb1SyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_usb1SyncReset                 24
    #define   LSb16Gbl_ResetTrigger_usb1SyncReset                 8
    #define       bGbl_ResetTrigger_usb1SyncReset              1
    #define   MSK32Gbl_ResetTrigger_usb1SyncReset                 0x01000000
    #define        Gbl_ResetTrigger_usb1SyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_usb1SyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_pBridgeSyncReset           0x017B
    #define     B16Gbl_ResetTrigger_pBridgeSyncReset           0x017A
    #define   LSb32Gbl_ResetTrigger_pBridgeSyncReset              25
    #define   LSb16Gbl_ResetTrigger_pBridgeSyncReset              9
    #define       bGbl_ResetTrigger_pBridgeSyncReset           1
    #define   MSK32Gbl_ResetTrigger_pBridgeSyncReset              0x02000000
    #define        Gbl_ResetTrigger_pBridgeSyncReset_assert                 0x1
    #define        Gbl_ResetTrigger_pBridgeSyncReset_deassert               0x0

    #define     BA_Gbl_ResetTrigger_vppSyncReset               0x017B
    #define     B16Gbl_ResetTrigger_vppSyncReset               0x017A
    #define   LSb32Gbl_ResetTrigger_vppSyncReset                  26
    #define   LSb16Gbl_ResetTrigger_vppSyncReset                  10
    #define       bGbl_ResetTrigger_vppSyncReset               1
    #define   MSK32Gbl_ResetTrigger_vppSyncReset                  0x04000000
    #define        Gbl_ResetTrigger_vppSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_vppSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_vipSyncReset               0x017B
    #define     B16Gbl_ResetTrigger_vipSyncReset               0x017A
    #define   LSb32Gbl_ResetTrigger_vipSyncReset                  27
    #define   LSb16Gbl_ResetTrigger_vipSyncReset                  11
    #define       bGbl_ResetTrigger_vipSyncReset               1
    #define   MSK32Gbl_ResetTrigger_vipSyncReset                  0x08000000
    #define        Gbl_ResetTrigger_vipSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_vipSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_appSyncReset               0x017B
    #define     B16Gbl_ResetTrigger_appSyncReset               0x017A
    #define   LSb32Gbl_ResetTrigger_appSyncReset                  28
    #define   LSb16Gbl_ResetTrigger_appSyncReset                  12
    #define       bGbl_ResetTrigger_appSyncReset               1
    #define   MSK32Gbl_ResetTrigger_appSyncReset                  0x10000000
    #define        Gbl_ResetTrigger_appSyncReset_assert                     0x1
    #define        Gbl_ResetTrigger_appSyncReset_deassert                   0x0

    #define     BA_Gbl_ResetTrigger_sdioSyncReset              0x017B
    #define     B16Gbl_ResetTrigger_sdioSyncReset              0x017A
    #define   LSb32Gbl_ResetTrigger_sdioSyncReset                 29
    #define   LSb16Gbl_ResetTrigger_sdioSyncReset                 13
    #define       bGbl_ResetTrigger_sdioSyncReset              1
    #define   MSK32Gbl_ResetTrigger_sdioSyncReset                 0x20000000
    #define        Gbl_ResetTrigger_sdioSyncReset_assert                    0x1
    #define        Gbl_ResetTrigger_sdioSyncReset_deassert                  0x0

    #define     BA_Gbl_ResetTrigger_sdio1SyncReset             0x017B
    #define     B16Gbl_ResetTrigger_sdio1SyncReset             0x017A
    #define   LSb32Gbl_ResetTrigger_sdio1SyncReset                30
    #define   LSb16Gbl_ResetTrigger_sdio1SyncReset                14
    #define       bGbl_ResetTrigger_sdio1SyncReset             1
    #define   MSK32Gbl_ResetTrigger_sdio1SyncReset                0x40000000
    #define        Gbl_ResetTrigger_sdio1SyncReset_assert                   0x1
    #define        Gbl_ResetTrigger_sdio1SyncReset_deassert                 0x0

    #define     BA_Gbl_ResetTrigger_hdmirxSyncReset            0x017B
    #define     B16Gbl_ResetTrigger_hdmirxSyncReset            0x017A
    #define   LSb32Gbl_ResetTrigger_hdmirxSyncReset               31
    #define   LSb16Gbl_ResetTrigger_hdmirxSyncReset               15
    #define       bGbl_ResetTrigger_hdmirxSyncReset            1
    #define   MSK32Gbl_ResetTrigger_hdmirxSyncReset               0x80000000
    #define        Gbl_ResetTrigger_hdmirxSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_hdmirxSyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetStatus                             0x017C

    #define     BA_Gbl_ResetStatus_ChipResetStatus             0x017C
    #define     B16Gbl_ResetStatus_ChipResetStatus             0x017C
    #define   LSb32Gbl_ResetStatus_ChipResetStatus                0
    #define   LSb16Gbl_ResetStatus_ChipResetStatus                0
    #define       bGbl_ResetStatus_ChipResetStatus             1
    #define   MSK32Gbl_ResetStatus_ChipResetStatus                0x00000001
    #define        Gbl_ResetStatus_ChipResetStatus_asserted                 0x1
    #define        Gbl_ResetStatus_ChipResetStatus_deasserted               0x0

    #define     BA_Gbl_ResetStatus_wd0Status                   0x017C
    #define     B16Gbl_ResetStatus_wd0Status                   0x017C
    #define   LSb32Gbl_ResetStatus_wd0Status                      1
    #define   LSb16Gbl_ResetStatus_wd0Status                      1
    #define       bGbl_ResetStatus_wd0Status                   1
    #define   MSK32Gbl_ResetStatus_wd0Status                      0x00000002
    #define        Gbl_ResetStatus_wd0Status_asserted                       0x1
    #define        Gbl_ResetStatus_wd0Status_deasserted                     0x0

    #define     BA_Gbl_ResetStatus_wd1Status                   0x017C
    #define     B16Gbl_ResetStatus_wd1Status                   0x017C
    #define   LSb32Gbl_ResetStatus_wd1Status                      2
    #define   LSb16Gbl_ResetStatus_wd1Status                      2
    #define       bGbl_ResetStatus_wd1Status                   1
    #define   MSK32Gbl_ResetStatus_wd1Status                      0x00000004
    #define        Gbl_ResetStatus_wd1Status_asserted                       0x1
    #define        Gbl_ResetStatus_wd1Status_deasserted                     0x0

    #define     BA_Gbl_ResetStatus_wd2Status                   0x017C
    #define     B16Gbl_ResetStatus_wd2Status                   0x017C
    #define   LSb32Gbl_ResetStatus_wd2Status                      3
    #define   LSb16Gbl_ResetStatus_wd2Status                      3
    #define       bGbl_ResetStatus_wd2Status                   1
    #define   MSK32Gbl_ResetStatus_wd2Status                      0x00000008
    #define        Gbl_ResetStatus_wd2Status_asserted                       0x1
    #define        Gbl_ResetStatus_wd2Status_deasserted                     0x0

    #define     BA_Gbl_ResetStatus_audio0ClkResetStatus        0x017C
    #define     B16Gbl_ResetStatus_audio0ClkResetStatus        0x017C
    #define   LSb32Gbl_ResetStatus_audio0ClkResetStatus           4
    #define   LSb16Gbl_ResetStatus_audio0ClkResetStatus           4
    #define       bGbl_ResetStatus_audio0ClkResetStatus        1
    #define   MSK32Gbl_ResetStatus_audio0ClkResetStatus           0x00000010
    #define        Gbl_ResetStatus_audio0ClkResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_audio0ClkResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_audio1ClkResetStatus        0x017C
    #define     B16Gbl_ResetStatus_audio1ClkResetStatus        0x017C
    #define   LSb32Gbl_ResetStatus_audio1ClkResetStatus           5
    #define   LSb16Gbl_ResetStatus_audio1ClkResetStatus           5
    #define       bGbl_ResetStatus_audio1ClkResetStatus        1
    #define   MSK32Gbl_ResetStatus_audio1ClkResetStatus           0x00000020
    #define        Gbl_ResetStatus_audio1ClkResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_audio1ClkResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_audio2ClkResetStatus        0x017C
    #define     B16Gbl_ResetStatus_audio2ClkResetStatus        0x017C
    #define   LSb32Gbl_ResetStatus_audio2ClkResetStatus           6
    #define   LSb16Gbl_ResetStatus_audio2ClkResetStatus           6
    #define       bGbl_ResetStatus_audio2ClkResetStatus        1
    #define   MSK32Gbl_ResetStatus_audio2ClkResetStatus           0x00000040
    #define        Gbl_ResetStatus_audio2ClkResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_audio2ClkResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_audio3ClkResetStatus        0x017C
    #define     B16Gbl_ResetStatus_audio3ClkResetStatus        0x017C
    #define   LSb32Gbl_ResetStatus_audio3ClkResetStatus           7
    #define   LSb16Gbl_ResetStatus_audio3ClkResetStatus           7
    #define       bGbl_ResetStatus_audio3ClkResetStatus        1
    #define   MSK32Gbl_ResetStatus_audio3ClkResetStatus           0x00000080
    #define        Gbl_ResetStatus_audio3ClkResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_audio3ClkResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_audioHdClkResetStatus       0x017D
    #define     B16Gbl_ResetStatus_audioHdClkResetStatus       0x017C
    #define   LSb32Gbl_ResetStatus_audioHdClkResetStatus          8
    #define   LSb16Gbl_ResetStatus_audioHdClkResetStatus          8
    #define       bGbl_ResetStatus_audioHdClkResetStatus       1
    #define   MSK32Gbl_ResetStatus_audioHdClkResetStatus          0x00000100
    #define        Gbl_ResetStatus_audioHdClkResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_audioHdClkResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_sysPllSyncResetStatus       0x017D
    #define     B16Gbl_ResetStatus_sysPllSyncResetStatus       0x017C
    #define   LSb32Gbl_ResetStatus_sysPllSyncResetStatus          9
    #define   LSb16Gbl_ResetStatus_sysPllSyncResetStatus          9
    #define       bGbl_ResetStatus_sysPllSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_sysPllSyncResetStatus          0x00000200
    #define        Gbl_ResetStatus_sysPllSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_sysPllSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_memPllSyncResetStatus       0x017D
    #define     B16Gbl_ResetStatus_memPllSyncResetStatus       0x017C
    #define   LSb32Gbl_ResetStatus_memPllSyncResetStatus          10
    #define   LSb16Gbl_ResetStatus_memPllSyncResetStatus          10
    #define       bGbl_ResetStatus_memPllSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_memPllSyncResetStatus          0x00000400
    #define        Gbl_ResetStatus_memPllSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_memPllSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_cpu1PllSyncResetStatus      0x017D
    #define     B16Gbl_ResetStatus_cpu1PllSyncResetStatus      0x017C
    #define   LSb32Gbl_ResetStatus_cpu1PllSyncResetStatus         11
    #define   LSb16Gbl_ResetStatus_cpu1PllSyncResetStatus         11
    #define       bGbl_ResetStatus_cpu1PllSyncResetStatus      1
    #define   MSK32Gbl_ResetStatus_cpu1PllSyncResetStatus         0x00000800
    #define        Gbl_ResetStatus_cpu1PllSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_cpu1PllSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_avPllASyncResetStatus       0x017D
    #define     B16Gbl_ResetStatus_avPllASyncResetStatus       0x017C
    #define   LSb32Gbl_ResetStatus_avPllASyncResetStatus          12
    #define   LSb16Gbl_ResetStatus_avPllASyncResetStatus          12
    #define       bGbl_ResetStatus_avPllASyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_avPllASyncResetStatus          0x00001000
    #define        Gbl_ResetStatus_avPllASyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_avPllASyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_avPllBSyncResetStatus       0x017D
    #define     B16Gbl_ResetStatus_avPllBSyncResetStatus       0x017C
    #define   LSb32Gbl_ResetStatus_avPllBSyncResetStatus          13
    #define   LSb16Gbl_ResetStatus_avPllBSyncResetStatus          13
    #define       bGbl_ResetStatus_avPllBSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_avPllBSyncResetStatus          0x00002000
    #define        Gbl_ResetStatus_avPllBSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_avPllBSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_cpu0SyncResetStatus         0x017D
    #define     B16Gbl_ResetStatus_cpu0SyncResetStatus         0x017C
    #define   LSb32Gbl_ResetStatus_cpu0SyncResetStatus            14
    #define   LSb16Gbl_ResetStatus_cpu0SyncResetStatus            14
    #define       bGbl_ResetStatus_cpu0SyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_cpu0SyncResetStatus            0x00004000
    #define        Gbl_ResetStatus_cpu0SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_cpu0SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_cpu1SyncResetStatus         0x017D
    #define     B16Gbl_ResetStatus_cpu1SyncResetStatus         0x017C
    #define   LSb32Gbl_ResetStatus_cpu1SyncResetStatus            15
    #define   LSb16Gbl_ResetStatus_cpu1SyncResetStatus            15
    #define       bGbl_ResetStatus_cpu1SyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_cpu1SyncResetStatus            0x00008000
    #define        Gbl_ResetStatus_cpu1SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_cpu1SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_socDdrSyncResetStatus       0x017E
    #define     B16Gbl_ResetStatus_socDdrSyncResetStatus       0x017E
    #define   LSb32Gbl_ResetStatus_socDdrSyncResetStatus          16
    #define   LSb16Gbl_ResetStatus_socDdrSyncResetStatus          0
    #define       bGbl_ResetStatus_socDdrSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_socDdrSyncResetStatus          0x00010000
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_gfxSyncResetStatus          0x017E
    #define     B16Gbl_ResetStatus_gfxSyncResetStatus          0x017E
    #define   LSb32Gbl_ResetStatus_gfxSyncResetStatus             17
    #define   LSb16Gbl_ResetStatus_gfxSyncResetStatus             1
    #define       bGbl_ResetStatus_gfxSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_gfxSyncResetStatus             0x00020000
    #define        Gbl_ResetStatus_gfxSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_gfxSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_zspSyncResetStatus          0x017E
    #define     B16Gbl_ResetStatus_zspSyncResetStatus          0x017E
    #define   LSb32Gbl_ResetStatus_zspSyncResetStatus             18
    #define   LSb16Gbl_ResetStatus_zspSyncResetStatus             2
    #define       bGbl_ResetStatus_zspSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_zspSyncResetStatus             0x00040000
    #define        Gbl_ResetStatus_zspSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_zspSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_avioSyncResetStatus         0x017E
    #define     B16Gbl_ResetStatus_avioSyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_avioSyncResetStatus            19
    #define   LSb16Gbl_ResetStatus_avioSyncResetStatus            3
    #define       bGbl_ResetStatus_avioSyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_avioSyncResetStatus            0x00080000
    #define        Gbl_ResetStatus_avioSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_avioSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_perifSyncResetStatus        0x017E
    #define     B16Gbl_ResetStatus_perifSyncResetStatus        0x017E
    #define   LSb32Gbl_ResetStatus_perifSyncResetStatus           20
    #define   LSb16Gbl_ResetStatus_perifSyncResetStatus           4
    #define       bGbl_ResetStatus_perifSyncResetStatus        1
    #define   MSK32Gbl_ResetStatus_perifSyncResetStatus           0x00100000
    #define        Gbl_ResetStatus_perifSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_perifSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_gethSyncResetStatus         0x017E
    #define     B16Gbl_ResetStatus_gethSyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_gethSyncResetStatus            21
    #define   LSb16Gbl_ResetStatus_gethSyncResetStatus            5
    #define       bGbl_ResetStatus_gethSyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_gethSyncResetStatus            0x00200000
    #define        Gbl_ResetStatus_gethSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_gethSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_geth1SyncResetStatus        0x017E
    #define     B16Gbl_ResetStatus_geth1SyncResetStatus        0x017E
    #define   LSb32Gbl_ResetStatus_geth1SyncResetStatus           22
    #define   LSb16Gbl_ResetStatus_geth1SyncResetStatus           6
    #define       bGbl_ResetStatus_geth1SyncResetStatus        1
    #define   MSK32Gbl_ResetStatus_geth1SyncResetStatus           0x00400000
    #define        Gbl_ResetStatus_geth1SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_geth1SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_sataSyncResetStatus         0x017E
    #define     B16Gbl_ResetStatus_sataSyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_sataSyncResetStatus            23
    #define   LSb16Gbl_ResetStatus_sataSyncResetStatus            7
    #define       bGbl_ResetStatus_sataSyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_sataSyncResetStatus            0x00800000
    #define        Gbl_ResetStatus_sataSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_sataSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_ahbApbSyncResetStatus       0x017F
    #define     B16Gbl_ResetStatus_ahbApbSyncResetStatus       0x017E
    #define   LSb32Gbl_ResetStatus_ahbApbSyncResetStatus          24
    #define   LSb16Gbl_ResetStatus_ahbApbSyncResetStatus          8
    #define       bGbl_ResetStatus_ahbApbSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_ahbApbSyncResetStatus          0x01000000
    #define        Gbl_ResetStatus_ahbApbSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_ahbApbSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_nanfSyncResetStatus         0x017F
    #define     B16Gbl_ResetStatus_nanfSyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_nanfSyncResetStatus            25
    #define   LSb16Gbl_ResetStatus_nanfSyncResetStatus            9
    #define       bGbl_ResetStatus_nanfSyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_nanfSyncResetStatus            0x02000000
    #define        Gbl_ResetStatus_nanfSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_nanfSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_smemcSyncResetStatus        0x017F
    #define     B16Gbl_ResetStatus_smemcSyncResetStatus        0x017E
    #define   LSb32Gbl_ResetStatus_smemcSyncResetStatus           26
    #define   LSb16Gbl_ResetStatus_smemcSyncResetStatus           10
    #define       bGbl_ResetStatus_smemcSyncResetStatus        1
    #define   MSK32Gbl_ResetStatus_smemcSyncResetStatus           0x04000000
    #define        Gbl_ResetStatus_smemcSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_smemcSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_drmSyncResetStatus          0x017F
    #define     B16Gbl_ResetStatus_drmSyncResetStatus          0x017E
    #define   LSb32Gbl_ResetStatus_drmSyncResetStatus             27
    #define   LSb16Gbl_ResetStatus_drmSyncResetStatus             11
    #define       bGbl_ResetStatus_drmSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_drmSyncResetStatus             0x08000000
    #define        Gbl_ResetStatus_drmSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_drmSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_usb0SyncResetStatus         0x017F
    #define     B16Gbl_ResetStatus_usb0SyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_usb0SyncResetStatus            28
    #define   LSb16Gbl_ResetStatus_usb0SyncResetStatus            12
    #define       bGbl_ResetStatus_usb0SyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_usb0SyncResetStatus            0x10000000
    #define        Gbl_ResetStatus_usb0SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_usb0SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_usb1SyncResetStatus         0x017F
    #define     B16Gbl_ResetStatus_usb1SyncResetStatus         0x017E
    #define   LSb32Gbl_ResetStatus_usb1SyncResetStatus            29
    #define   LSb16Gbl_ResetStatus_usb1SyncResetStatus            13
    #define       bGbl_ResetStatus_usb1SyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_usb1SyncResetStatus            0x20000000
    #define        Gbl_ResetStatus_usb1SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_usb1SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_pBridgeSyncResetStatus      0x017F
    #define     B16Gbl_ResetStatus_pBridgeSyncResetStatus      0x017E
    #define   LSb32Gbl_ResetStatus_pBridgeSyncResetStatus         30
    #define   LSb16Gbl_ResetStatus_pBridgeSyncResetStatus         14
    #define       bGbl_ResetStatus_pBridgeSyncResetStatus      1
    #define   MSK32Gbl_ResetStatus_pBridgeSyncResetStatus         0x40000000
    #define        Gbl_ResetStatus_pBridgeSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_pBridgeSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_vppSyncResetStatus          0x017F
    #define     B16Gbl_ResetStatus_vppSyncResetStatus          0x017E
    #define   LSb32Gbl_ResetStatus_vppSyncResetStatus             31
    #define   LSb16Gbl_ResetStatus_vppSyncResetStatus             15
    #define       bGbl_ResetStatus_vppSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_vppSyncResetStatus             0x80000000
    #define        Gbl_ResetStatus_vppSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_vppSyncResetStatus_deasserted              0x0

    #define     RA_Gbl_ResetStatus1                            0x0180

    #define     BA_Gbl_ResetStatus_vipSyncResetStatus          0x0180
    #define     B16Gbl_ResetStatus_vipSyncResetStatus          0x0180
    #define   LSb32Gbl_ResetStatus_vipSyncResetStatus             0
    #define   LSb16Gbl_ResetStatus_vipSyncResetStatus             0
    #define       bGbl_ResetStatus_vipSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_vipSyncResetStatus             0x00000001
    #define        Gbl_ResetStatus_vipSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_vipSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_appSyncResetStatus          0x0180
    #define     B16Gbl_ResetStatus_appSyncResetStatus          0x0180
    #define   LSb32Gbl_ResetStatus_appSyncResetStatus             1
    #define   LSb16Gbl_ResetStatus_appSyncResetStatus             1
    #define       bGbl_ResetStatus_appSyncResetStatus          1
    #define   MSK32Gbl_ResetStatus_appSyncResetStatus             0x00000002
    #define        Gbl_ResetStatus_appSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_appSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_sdioSyncResetStatus         0x0180
    #define     B16Gbl_ResetStatus_sdioSyncResetStatus         0x0180
    #define   LSb32Gbl_ResetStatus_sdioSyncResetStatus            2
    #define   LSb16Gbl_ResetStatus_sdioSyncResetStatus            2
    #define       bGbl_ResetStatus_sdioSyncResetStatus         1
    #define   MSK32Gbl_ResetStatus_sdioSyncResetStatus            0x00000004
    #define        Gbl_ResetStatus_sdioSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_sdioSyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_sdio1SyncResetStatus        0x0180
    #define     B16Gbl_ResetStatus_sdio1SyncResetStatus        0x0180
    #define   LSb32Gbl_ResetStatus_sdio1SyncResetStatus           3
    #define   LSb16Gbl_ResetStatus_sdio1SyncResetStatus           3
    #define       bGbl_ResetStatus_sdio1SyncResetStatus        1
    #define   MSK32Gbl_ResetStatus_sdio1SyncResetStatus           0x00000008
    #define        Gbl_ResetStatus_sdio1SyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_sdio1SyncResetStatus_deasserted              0x0

    #define     BA_Gbl_ResetStatus_hdmirxSyncResetStatus       0x0180
    #define     B16Gbl_ResetStatus_hdmirxSyncResetStatus       0x0180
    #define   LSb32Gbl_ResetStatus_hdmirxSyncResetStatus          4
    #define   LSb16Gbl_ResetStatus_hdmirxSyncResetStatus          4
    #define       bGbl_ResetStatus_hdmirxSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_hdmirxSyncResetStatus          0x00000010
    #define        Gbl_ResetStatus_hdmirxSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_hdmirxSyncResetStatus_deasserted              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic0                             0x0184

    #define     BA_Gbl_sw_generic0_swReg0                      0x0184
    #define     B16Gbl_sw_generic0_swReg0                      0x0184
    #define   LSb32Gbl_sw_generic0_swReg0                         0
    #define   LSb16Gbl_sw_generic0_swReg0                         0
    #define       bGbl_sw_generic0_swReg0                      32
    #define   MSK32Gbl_sw_generic0_swReg0                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic1                             0x0188

    #define     BA_Gbl_sw_generic1_swReg1                      0x0188
    #define     B16Gbl_sw_generic1_swReg1                      0x0188
    #define   LSb32Gbl_sw_generic1_swReg1                         0
    #define   LSb16Gbl_sw_generic1_swReg1                         0
    #define       bGbl_sw_generic1_swReg1                      32
    #define   MSK32Gbl_sw_generic1_swReg1                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic2                             0x018C

    #define     BA_Gbl_sw_generic2_swReg2                      0x018C
    #define     B16Gbl_sw_generic2_swReg2                      0x018C
    #define   LSb32Gbl_sw_generic2_swReg2                         0
    #define   LSb16Gbl_sw_generic2_swReg2                         0
    #define       bGbl_sw_generic2_swReg2                      32
    #define   MSK32Gbl_sw_generic2_swReg2                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic3                             0x0190

    #define     BA_Gbl_sw_generic3_swReg3                      0x0190
    #define     B16Gbl_sw_generic3_swReg3                      0x0190
    #define   LSb32Gbl_sw_generic3_swReg3                         0
    #define   LSb16Gbl_sw_generic3_swReg3                         0
    #define       bGbl_sw_generic3_swReg3                      32
    #define   MSK32Gbl_sw_generic3_swReg3                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ChipCntl0                               0x0194

    #define     BA_Gbl_ChipCntl0_dCacheCfgCPU0                 0x0194
    #define     B16Gbl_ChipCntl0_dCacheCfgCPU0                 0x0194
    #define   LSb32Gbl_ChipCntl0_dCacheCfgCPU0                    0
    #define   LSb16Gbl_ChipCntl0_dCacheCfgCPU0                    0
    #define       bGbl_ChipCntl0_dCacheCfgCPU0                 2
    #define   MSK32Gbl_ChipCntl0_dCacheCfgCPU0                    0x00000003

    #define     BA_Gbl_ChipCntl0_iCacheCfgCPU0                 0x0194
    #define     B16Gbl_ChipCntl0_iCacheCfgCPU0                 0x0194
    #define   LSb32Gbl_ChipCntl0_iCacheCfgCPU0                    2
    #define   LSb16Gbl_ChipCntl0_iCacheCfgCPU0                    2
    #define       bGbl_ChipCntl0_iCacheCfgCPU0                 2
    #define   MSK32Gbl_ChipCntl0_iCacheCfgCPU0                    0x0000000C

    #define     BA_Gbl_ChipCntl0_dCacheCfgCPU1                 0x0194
    #define     B16Gbl_ChipCntl0_dCacheCfgCPU1                 0x0194
    #define   LSb32Gbl_ChipCntl0_dCacheCfgCPU1                    4
    #define   LSb16Gbl_ChipCntl0_dCacheCfgCPU1                    4
    #define       bGbl_ChipCntl0_dCacheCfgCPU1                 2
    #define   MSK32Gbl_ChipCntl0_dCacheCfgCPU1                    0x00000030

    #define     BA_Gbl_ChipCntl0_iCacheCfgCPU1                 0x0194
    #define     B16Gbl_ChipCntl0_iCacheCfgCPU1                 0x0194
    #define   LSb32Gbl_ChipCntl0_iCacheCfgCPU1                    6
    #define   LSb16Gbl_ChipCntl0_iCacheCfgCPU1                    6
    #define       bGbl_ChipCntl0_iCacheCfgCPU1                 2
    #define   MSK32Gbl_ChipCntl0_iCacheCfgCPU1                    0x000000C0

    #define     BA_Gbl_ChipCntl0_cg_bpass0Cpu0                 0x0195
    #define     B16Gbl_ChipCntl0_cg_bpass0Cpu0                 0x0194
    #define   LSb32Gbl_ChipCntl0_cg_bpass0Cpu0                    8
    #define   LSb16Gbl_ChipCntl0_cg_bpass0Cpu0                    8
    #define       bGbl_ChipCntl0_cg_bpass0Cpu0                 1
    #define   MSK32Gbl_ChipCntl0_cg_bpass0Cpu0                    0x00000100

    #define     BA_Gbl_ChipCntl0_cg_bpass0Cpu1                 0x0195
    #define     B16Gbl_ChipCntl0_cg_bpass0Cpu1                 0x0194
    #define   LSb32Gbl_ChipCntl0_cg_bpass0Cpu1                    9
    #define   LSb16Gbl_ChipCntl0_cg_bpass0Cpu1                    9
    #define       bGbl_ChipCntl0_cg_bpass0Cpu1                 1
    #define   MSK32Gbl_ChipCntl0_cg_bpass0Cpu1                    0x00000200

    #define     BA_Gbl_ChipCntl0_wfiJtagClkEn                  0x0195
    #define     B16Gbl_ChipCntl0_wfiJtagClkEn                  0x0194
    #define   LSb32Gbl_ChipCntl0_wfiJtagClkEn                     10
    #define   LSb16Gbl_ChipCntl0_wfiJtagClkEn                     10
    #define       bGbl_ChipCntl0_wfiJtagClkEn                  1
    #define   MSK32Gbl_ChipCntl0_wfiJtagClkEn                     0x00000400
    #define        Gbl_ChipCntl0_wfiJtagClkEn_RUNNING                       0x1
    #define        Gbl_ChipCntl0_wfiJtagClkEn_FREEZE                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ChipCntl1                               0x0198

    #define     BA_Gbl_ChipCntl1_bpm_wtc                       0x0198
    #define     B16Gbl_ChipCntl1_bpm_wtc                       0x0198
    #define   LSb32Gbl_ChipCntl1_bpm_wtc                          0
    #define   LSb16Gbl_ChipCntl1_bpm_wtc                          0
    #define       bGbl_ChipCntl1_bpm_wtc                       2
    #define   MSK32Gbl_ChipCntl1_bpm_wtc                          0x00000003

    #define     BA_Gbl_ChipCntl1_bpm_rtc                       0x0198
    #define     B16Gbl_ChipCntl1_bpm_rtc                       0x0198
    #define   LSb32Gbl_ChipCntl1_bpm_rtc                          2
    #define   LSb16Gbl_ChipCntl1_bpm_rtc                          2
    #define       bGbl_ChipCntl1_bpm_rtc                       2
    #define   MSK32Gbl_ChipCntl1_bpm_rtc                          0x0000000C

    #define     BA_Gbl_ChipCntl1_icl0data_wtc                  0x0198
    #define     B16Gbl_ChipCntl1_icl0data_wtc                  0x0198
    #define   LSb32Gbl_ChipCntl1_icl0data_wtc                     4
    #define   LSb16Gbl_ChipCntl1_icl0data_wtc                     4
    #define       bGbl_ChipCntl1_icl0data_wtc                  2
    #define   MSK32Gbl_ChipCntl1_icl0data_wtc                     0x00000030

    #define     BA_Gbl_ChipCntl1_icl0data_rtc                  0x0198
    #define     B16Gbl_ChipCntl1_icl0data_rtc                  0x0198
    #define   LSb32Gbl_ChipCntl1_icl0data_rtc                     6
    #define   LSb16Gbl_ChipCntl1_icl0data_rtc                     6
    #define       bGbl_ChipCntl1_icl0data_rtc                  2
    #define   MSK32Gbl_ChipCntl1_icl0data_rtc                     0x000000C0

    #define     BA_Gbl_ChipCntl1_icl0tag_wtc                   0x0199
    #define     B16Gbl_ChipCntl1_icl0tag_wtc                   0x0198
    #define   LSb32Gbl_ChipCntl1_icl0tag_wtc                      8
    #define   LSb16Gbl_ChipCntl1_icl0tag_wtc                      8
    #define       bGbl_ChipCntl1_icl0tag_wtc                   2
    #define   MSK32Gbl_ChipCntl1_icl0tag_wtc                      0x00000300

    #define     BA_Gbl_ChipCntl1_icl0tag_rtc                   0x0199
    #define     B16Gbl_ChipCntl1_icl0tag_rtc                   0x0198
    #define   LSb32Gbl_ChipCntl1_icl0tag_rtc                      10
    #define   LSb16Gbl_ChipCntl1_icl0tag_rtc                      10
    #define       bGbl_ChipCntl1_icl0tag_rtc                   2
    #define   MSK32Gbl_ChipCntl1_icl0tag_rtc                      0x00000C00

    #define     BA_Gbl_ChipCntl1_icl1data_wtc                  0x0199
    #define     B16Gbl_ChipCntl1_icl1data_wtc                  0x0198
    #define   LSb32Gbl_ChipCntl1_icl1data_wtc                     12
    #define   LSb16Gbl_ChipCntl1_icl1data_wtc                     12
    #define       bGbl_ChipCntl1_icl1data_wtc                  2
    #define   MSK32Gbl_ChipCntl1_icl1data_wtc                     0x00003000

    #define     BA_Gbl_ChipCntl1_icl1data_rtc                  0x0199
    #define     B16Gbl_ChipCntl1_icl1data_rtc                  0x0198
    #define   LSb32Gbl_ChipCntl1_icl1data_rtc                     14
    #define   LSb16Gbl_ChipCntl1_icl1data_rtc                     14
    #define       bGbl_ChipCntl1_icl1data_rtc                  2
    #define   MSK32Gbl_ChipCntl1_icl1data_rtc                     0x0000C000

    #define     BA_Gbl_ChipCntl1_icl1tag_wtc                   0x019A
    #define     B16Gbl_ChipCntl1_icl1tag_wtc                   0x019A
    #define   LSb32Gbl_ChipCntl1_icl1tag_wtc                      16
    #define   LSb16Gbl_ChipCntl1_icl1tag_wtc                      0
    #define       bGbl_ChipCntl1_icl1tag_wtc                   2
    #define   MSK32Gbl_ChipCntl1_icl1tag_wtc                      0x00030000

    #define     BA_Gbl_ChipCntl1_icl1tag_rtc                   0x019A
    #define     B16Gbl_ChipCntl1_icl1tag_rtc                   0x019A
    #define   LSb32Gbl_ChipCntl1_icl1tag_rtc                      18
    #define   LSb16Gbl_ChipCntl1_icl1tag_rtc                      2
    #define       bGbl_ChipCntl1_icl1tag_rtc                   2
    #define   MSK32Gbl_ChipCntl1_icl1tag_rtc                      0x000C0000

    #define     BA_Gbl_ChipCntl1_dcl1data_wtc                  0x019A
    #define     B16Gbl_ChipCntl1_dcl1data_wtc                  0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1data_wtc                     20
    #define   LSb16Gbl_ChipCntl1_dcl1data_wtc                     4
    #define       bGbl_ChipCntl1_dcl1data_wtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1data_wtc                     0x00300000

    #define     BA_Gbl_ChipCntl1_dcl1data_rtc                  0x019A
    #define     B16Gbl_ChipCntl1_dcl1data_rtc                  0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1data_rtc                     22
    #define   LSb16Gbl_ChipCntl1_dcl1data_rtc                     6
    #define       bGbl_ChipCntl1_dcl1data_rtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1data_rtc                     0x00C00000

    #define     BA_Gbl_ChipCntl1_dcl1tag_wtc                   0x019B
    #define     B16Gbl_ChipCntl1_dcl1tag_wtc                   0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1tag_wtc                      24
    #define   LSb16Gbl_ChipCntl1_dcl1tag_wtc                      8
    #define       bGbl_ChipCntl1_dcl1tag_wtc                   2
    #define   MSK32Gbl_ChipCntl1_dcl1tag_wtc                      0x03000000

    #define     BA_Gbl_ChipCntl1_dcl1tag_rtc                   0x019B
    #define     B16Gbl_ChipCntl1_dcl1tag_rtc                   0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1tag_rtc                      26
    #define   LSb16Gbl_ChipCntl1_dcl1tag_rtc                      10
    #define       bGbl_ChipCntl1_dcl1tag_rtc                   2
    #define   MSK32Gbl_ChipCntl1_dcl1tag_rtc                      0x0C000000

    #define     BA_Gbl_ChipCntl1_dcl1state_wtc                 0x019B
    #define     B16Gbl_ChipCntl1_dcl1state_wtc                 0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1state_wtc                    28
    #define   LSb16Gbl_ChipCntl1_dcl1state_wtc                    12
    #define       bGbl_ChipCntl1_dcl1state_wtc                 2
    #define   MSK32Gbl_ChipCntl1_dcl1state_wtc                    0x30000000

    #define     BA_Gbl_ChipCntl1_dcl1state_rtc                 0x019B
    #define     B16Gbl_ChipCntl1_dcl1state_rtc                 0x019A
    #define   LSb32Gbl_ChipCntl1_dcl1state_rtc                    30
    #define   LSb16Gbl_ChipCntl1_dcl1state_rtc                    14
    #define       bGbl_ChipCntl1_dcl1state_rtc                 2
    #define   MSK32Gbl_ChipCntl1_dcl1state_rtc                    0xC0000000

    #define     RA_Gbl_ChipCntl11                              0x019C

    #define     BA_Gbl_ChipCntl1_dcl1attr_wtc                  0x019C
    #define     B16Gbl_ChipCntl1_dcl1attr_wtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl1attr_wtc                     0
    #define   LSb16Gbl_ChipCntl1_dcl1attr_wtc                     0
    #define       bGbl_ChipCntl1_dcl1attr_wtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1attr_wtc                     0x00000003

    #define     BA_Gbl_ChipCntl1_dcl1attr_rtc                  0x019C
    #define     B16Gbl_ChipCntl1_dcl1attr_rtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl1attr_rtc                     2
    #define   LSb16Gbl_ChipCntl1_dcl1attr_rtc                     2
    #define       bGbl_ChipCntl1_dcl1attr_rtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1attr_rtc                     0x0000000C

    #define     BA_Gbl_ChipCntl1_dcl1fifo_wtc                  0x019C
    #define     B16Gbl_ChipCntl1_dcl1fifo_wtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl1fifo_wtc                     4
    #define   LSb16Gbl_ChipCntl1_dcl1fifo_wtc                     4
    #define       bGbl_ChipCntl1_dcl1fifo_wtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1fifo_wtc                     0x00000030

    #define     BA_Gbl_ChipCntl1_dcl1fifo_rtc                  0x019C
    #define     B16Gbl_ChipCntl1_dcl1fifo_rtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl1fifo_rtc                     6
    #define   LSb16Gbl_ChipCntl1_dcl1fifo_rtc                     6
    #define       bGbl_ChipCntl1_dcl1fifo_rtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl1fifo_rtc                     0x000000C0

    #define     BA_Gbl_ChipCntl1_dcl0data_wtc                  0x019D
    #define     B16Gbl_ChipCntl1_dcl0data_wtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl0data_wtc                     8
    #define   LSb16Gbl_ChipCntl1_dcl0data_wtc                     8
    #define       bGbl_ChipCntl1_dcl0data_wtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl0data_wtc                     0x00000300

    #define     BA_Gbl_ChipCntl1_dcl0data_rtc                  0x019D
    #define     B16Gbl_ChipCntl1_dcl0data_rtc                  0x019C
    #define   LSb32Gbl_ChipCntl1_dcl0data_rtc                     10
    #define   LSb16Gbl_ChipCntl1_dcl0data_rtc                     10
    #define       bGbl_ChipCntl1_dcl0data_rtc                  2
    #define   MSK32Gbl_ChipCntl1_dcl0data_rtc                     0x00000C00

    #define     BA_Gbl_ChipCntl1_dcl0tag_wtc                   0x019D
    #define     B16Gbl_ChipCntl1_dcl0tag_wtc                   0x019C
    #define   LSb32Gbl_ChipCntl1_dcl0tag_wtc                      12
    #define   LSb16Gbl_ChipCntl1_dcl0tag_wtc                      12
    #define       bGbl_ChipCntl1_dcl0tag_wtc                   2
    #define   MSK32Gbl_ChipCntl1_dcl0tag_wtc                      0x00003000

    #define     BA_Gbl_ChipCntl1_dcl0tag_rtc                   0x019D
    #define     B16Gbl_ChipCntl1_dcl0tag_rtc                   0x019C
    #define   LSb32Gbl_ChipCntl1_dcl0tag_rtc                      14
    #define   LSb16Gbl_ChipCntl1_dcl0tag_rtc                      14
    #define       bGbl_ChipCntl1_dcl0tag_rtc                   2
    #define   MSK32Gbl_ChipCntl1_dcl0tag_rtc                      0x0000C000

    #define     BA_Gbl_ChipCntl1_l2c_dataram_wtc               0x019E
    #define     B16Gbl_ChipCntl1_l2c_dataram_wtc               0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_dataram_wtc                  16
    #define   LSb16Gbl_ChipCntl1_l2c_dataram_wtc                  0
    #define       bGbl_ChipCntl1_l2c_dataram_wtc               2
    #define   MSK32Gbl_ChipCntl1_l2c_dataram_wtc                  0x00030000

    #define     BA_Gbl_ChipCntl1_l2c_dataram_rtc               0x019E
    #define     B16Gbl_ChipCntl1_l2c_dataram_rtc               0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_dataram_rtc                  18
    #define   LSb16Gbl_ChipCntl1_l2c_dataram_rtc                  2
    #define       bGbl_ChipCntl1_l2c_dataram_rtc               3
    #define   MSK32Gbl_ChipCntl1_l2c_dataram_rtc                  0x001C0000

    #define     BA_Gbl_ChipCntl1_l2c_dirtyram_wtc              0x019E
    #define     B16Gbl_ChipCntl1_l2c_dirtyram_wtc              0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_dirtyram_wtc                 21
    #define   LSb16Gbl_ChipCntl1_l2c_dirtyram_wtc                 5
    #define       bGbl_ChipCntl1_l2c_dirtyram_wtc              3
    #define   MSK32Gbl_ChipCntl1_l2c_dirtyram_wtc                 0x00E00000

    #define     BA_Gbl_ChipCntl1_l2c_dirtyram_rtc              0x019F
    #define     B16Gbl_ChipCntl1_l2c_dirtyram_rtc              0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_dirtyram_rtc                 24
    #define   LSb16Gbl_ChipCntl1_l2c_dirtyram_rtc                 8
    #define       bGbl_ChipCntl1_l2c_dirtyram_rtc              2
    #define   MSK32Gbl_ChipCntl1_l2c_dirtyram_rtc                 0x03000000

    #define     BA_Gbl_ChipCntl1_l2c_lockram_wtc               0x019F
    #define     B16Gbl_ChipCntl1_l2c_lockram_wtc               0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_lockram_wtc                  26
    #define   LSb16Gbl_ChipCntl1_l2c_lockram_wtc                  10
    #define       bGbl_ChipCntl1_l2c_lockram_wtc               3
    #define   MSK32Gbl_ChipCntl1_l2c_lockram_wtc                  0x1C000000

    #define     BA_Gbl_ChipCntl1_l2c_lockram_rtc               0x019F
    #define     B16Gbl_ChipCntl1_l2c_lockram_rtc               0x019E
    #define   LSb32Gbl_ChipCntl1_l2c_lockram_rtc                  29
    #define   LSb16Gbl_ChipCntl1_l2c_lockram_rtc                  13
    #define       bGbl_ChipCntl1_l2c_lockram_rtc               2
    #define   MSK32Gbl_ChipCntl1_l2c_lockram_rtc                  0x60000000

    #define     RA_Gbl_ChipCntl12                              0x01A0

    #define     BA_Gbl_ChipCntl1_l2c_eccram_wtc                0x01A0
    #define     B16Gbl_ChipCntl1_l2c_eccram_wtc                0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_eccram_wtc                   0
    #define   LSb16Gbl_ChipCntl1_l2c_eccram_wtc                   0
    #define       bGbl_ChipCntl1_l2c_eccram_wtc                2
    #define   MSK32Gbl_ChipCntl1_l2c_eccram_wtc                   0x00000003

    #define     BA_Gbl_ChipCntl1_l2c_eccram_rtc                0x01A0
    #define     B16Gbl_ChipCntl1_l2c_eccram_rtc                0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_eccram_rtc                   2
    #define   LSb16Gbl_ChipCntl1_l2c_eccram_rtc                   2
    #define       bGbl_ChipCntl1_l2c_eccram_rtc                3
    #define   MSK32Gbl_ChipCntl1_l2c_eccram_rtc                   0x0000001C

    #define     BA_Gbl_ChipCntl1_l2c_tagram_wtc                0x01A0
    #define     B16Gbl_ChipCntl1_l2c_tagram_wtc                0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_tagram_wtc                   5
    #define   LSb16Gbl_ChipCntl1_l2c_tagram_wtc                   5
    #define       bGbl_ChipCntl1_l2c_tagram_wtc                3
    #define   MSK32Gbl_ChipCntl1_l2c_tagram_wtc                   0x000000E0

    #define     BA_Gbl_ChipCntl1_l2c_tagram_rtc                0x01A1
    #define     B16Gbl_ChipCntl1_l2c_tagram_rtc                0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_tagram_rtc                   8
    #define   LSb16Gbl_ChipCntl1_l2c_tagram_rtc                   8
    #define       bGbl_ChipCntl1_l2c_tagram_rtc                3
    #define   MSK32Gbl_ChipCntl1_l2c_tagram_rtc                   0x00000700

    #define     BA_Gbl_ChipCntl1_l2c_tzram_wtc                 0x01A1
    #define     B16Gbl_ChipCntl1_l2c_tzram_wtc                 0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_tzram_wtc                    11
    #define   LSb16Gbl_ChipCntl1_l2c_tzram_wtc                    11
    #define       bGbl_ChipCntl1_l2c_tzram_wtc                 3
    #define   MSK32Gbl_ChipCntl1_l2c_tzram_wtc                    0x00003800

    #define     BA_Gbl_ChipCntl1_l2c_tzram_rtc                 0x01A1
    #define     B16Gbl_ChipCntl1_l2c_tzram_rtc                 0x01A0
    #define   LSb32Gbl_ChipCntl1_l2c_tzram_rtc                    14
    #define   LSb16Gbl_ChipCntl1_l2c_tzram_rtc                    14
    #define       bGbl_ChipCntl1_l2c_tzram_rtc                 2
    #define   MSK32Gbl_ChipCntl1_l2c_tzram_rtc                    0x0000C000

    #define     BA_Gbl_ChipCntl1_l2c_validram_wtc              0x01A2
    #define     B16Gbl_ChipCntl1_l2c_validram_wtc              0x01A2
    #define   LSb32Gbl_ChipCntl1_l2c_validram_wtc                 16
    #define   LSb16Gbl_ChipCntl1_l2c_validram_wtc                 0
    #define       bGbl_ChipCntl1_l2c_validram_wtc              3
    #define   MSK32Gbl_ChipCntl1_l2c_validram_wtc                 0x00070000

    #define     BA_Gbl_ChipCntl1_l2c_validram_rtc              0x01A2
    #define     B16Gbl_ChipCntl1_l2c_validram_rtc              0x01A2
    #define   LSb32Gbl_ChipCntl1_l2c_validram_rtc                 19
    #define   LSb16Gbl_ChipCntl1_l2c_validram_rtc                 3
    #define       bGbl_ChipCntl1_l2c_validram_rtc              2
    #define   MSK32Gbl_ChipCntl1_l2c_validram_rtc                 0x00180000

    #define     BA_Gbl_ChipCntl1_mmu_wtc                       0x01A2
    #define     B16Gbl_ChipCntl1_mmu_wtc                       0x01A2
    #define   LSb32Gbl_ChipCntl1_mmu_wtc                          21
    #define   LSb16Gbl_ChipCntl1_mmu_wtc                          5
    #define       bGbl_ChipCntl1_mmu_wtc                       2
    #define   MSK32Gbl_ChipCntl1_mmu_wtc                          0x00600000

    #define     BA_Gbl_ChipCntl1_mmu_rtc                       0x01A2
    #define     B16Gbl_ChipCntl1_mmu_rtc                       0x01A2
    #define   LSb32Gbl_ChipCntl1_mmu_rtc                          23
    #define   LSb16Gbl_ChipCntl1_mmu_rtc                          7
    #define       bGbl_ChipCntl1_mmu_rtc                       2
    #define   MSK32Gbl_ChipCntl1_mmu_rtc                          0x01800000

    #define     BA_Gbl_ChipCntl1_sf_wtc                        0x01A3
    #define     B16Gbl_ChipCntl1_sf_wtc                        0x01A2
    #define   LSb32Gbl_ChipCntl1_sf_wtc                           25
    #define   LSb16Gbl_ChipCntl1_sf_wtc                           9
    #define       bGbl_ChipCntl1_sf_wtc                        2
    #define   MSK32Gbl_ChipCntl1_sf_wtc                           0x06000000

    #define     BA_Gbl_ChipCntl1_sf_rtc                        0x01A3
    #define     B16Gbl_ChipCntl1_sf_rtc                        0x01A2
    #define   LSb32Gbl_ChipCntl1_sf_rtc                           27
    #define   LSb16Gbl_ChipCntl1_sf_rtc                           11
    #define       bGbl_ChipCntl1_sf_rtc                        2
    #define   MSK32Gbl_ChipCntl1_sf_rtc                           0x18000000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_avio31to0                          0x01A4

    #define     BA_Gbl_RWTC_avio31to0_value                    0x01A4
    #define     B16Gbl_RWTC_avio31to0_value                    0x01A4
    #define   LSb32Gbl_RWTC_avio31to0_value                       0
    #define   LSb16Gbl_RWTC_avio31to0_value                       0
    #define       bGbl_RWTC_avio31to0_value                    32
    #define   MSK32Gbl_RWTC_avio31to0_value                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_avio41to32                         0x01A8

    #define     BA_Gbl_RWTC_avio41to32_value                   0x01A8
    #define     B16Gbl_RWTC_avio41to32_value                   0x01A8
    #define   LSb32Gbl_RWTC_avio41to32_value                      0
    #define   LSb16Gbl_RWTC_avio41to32_value                      0
    #define       bGbl_RWTC_avio41to32_value                   10
    #define   MSK32Gbl_RWTC_avio41to32_value                      0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_gfx2D31to0                         0x01AC

    #define     BA_Gbl_RWTC_gfx2D31to0_value                   0x01AC
    #define     B16Gbl_RWTC_gfx2D31to0_value                   0x01AC
    #define   LSb32Gbl_RWTC_gfx2D31to0_value                      0
    #define   LSb16Gbl_RWTC_gfx2D31to0_value                      0
    #define       bGbl_RWTC_gfx2D31to0_value                   32
    #define   MSK32Gbl_RWTC_gfx2D31to0_value                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_gfx2D41to32                        0x01B0

    #define     BA_Gbl_RWTC_gfx2D41to32_value                  0x01B0
    #define     B16Gbl_RWTC_gfx2D41to32_value                  0x01B0
    #define   LSb32Gbl_RWTC_gfx2D41to32_value                     0
    #define   LSb16Gbl_RWTC_gfx2D41to32_value                     0
    #define       bGbl_RWTC_gfx2D41to32_value                  10
    #define   MSK32Gbl_RWTC_gfx2D41to32_value                     0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_gfx3D31to0                         0x01B4

    #define     BA_Gbl_RWTC_gfx3D31to0_value                   0x01B4
    #define     B16Gbl_RWTC_gfx3D31to0_value                   0x01B4
    #define   LSb32Gbl_RWTC_gfx3D31to0_value                      0
    #define   LSb16Gbl_RWTC_gfx3D31to0_value                      0
    #define       bGbl_RWTC_gfx3D31to0_value                   32
    #define   MSK32Gbl_RWTC_gfx3D31to0_value                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_gfx3D41to32                        0x01B8

    #define     BA_Gbl_RWTC_gfx3D41to32_value                  0x01B8
    #define     B16Gbl_RWTC_gfx3D41to32_value                  0x01B8
    #define   LSb32Gbl_RWTC_gfx3D41to32_value                     0
    #define   LSb16Gbl_RWTC_gfx3D41to32_value                     0
    #define       bGbl_RWTC_gfx3D41to32_value                  10
    #define   MSK32Gbl_RWTC_gfx3D41to32_value                     0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_soc31to0                           0x01BC

    #define     BA_Gbl_RWTC_soc31to0_value                     0x01BC
    #define     B16Gbl_RWTC_soc31to0_value                     0x01BC
    #define   LSb32Gbl_RWTC_soc31to0_value                        0
    #define   LSb16Gbl_RWTC_soc31to0_value                        0
    #define       bGbl_RWTC_soc31to0_value                     32
    #define   MSK32Gbl_RWTC_soc31to0_value                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_soc41to32                          0x01C0

    #define     BA_Gbl_RWTC_soc41to32_value                    0x01C0
    #define     B16Gbl_RWTC_soc41to32_value                    0x01C0
    #define   LSb32Gbl_RWTC_soc41to32_value                       0
    #define   LSb16Gbl_RWTC_soc41to32_value                       0
    #define       bGbl_RWTC_soc41to32_value                    10
    #define   MSK32Gbl_RWTC_soc41to32_value                       0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_vPro31to0                          0x01C4

    #define     BA_Gbl_RWTC_vPro31to0_value                    0x01C4
    #define     B16Gbl_RWTC_vPro31to0_value                    0x01C4
    #define   LSb32Gbl_RWTC_vPro31to0_value                       0
    #define   LSb16Gbl_RWTC_vPro31to0_value                       0
    #define       bGbl_RWTC_vPro31to0_value                    32
    #define   MSK32Gbl_RWTC_vPro31to0_value                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_vPro41to32                         0x01C8

    #define     BA_Gbl_RWTC_vPro41to32_value                   0x01C8
    #define     B16Gbl_RWTC_vPro41to32_value                   0x01C8
    #define   LSb32Gbl_RWTC_vPro41to32_value                      0
    #define   LSb16Gbl_RWTC_vPro41to32_value                      0
    #define       bGbl_RWTC_vPro41to32_value                   10
    #define   MSK32Gbl_RWTC_vPro41to32_value                      0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ProductId                               0x01CC

    #define     BA_Gbl_ProductId_Id                            0x01CC
    #define     B16Gbl_ProductId_Id                            0x01CC
    #define   LSb32Gbl_ProductId_Id                               0
    #define   LSb16Gbl_ProductId_Id                               0
    #define       bGbl_ProductId_Id                            32
    #define   MSK32Gbl_ProductId_Id                               0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ProductId_ext                           0x01D0

    #define     BA_Gbl_ProductId_ext_ID_EXT                    0x01D0
    #define     B16Gbl_ProductId_ext_ID_EXT                    0x01D0
    #define   LSb32Gbl_ProductId_ext_ID_EXT                       0
    #define   LSb16Gbl_ProductId_ext_ID_EXT                       0
    #define       bGbl_ProductId_ext_ID_EXT                    8
    #define   MSK32Gbl_ProductId_ext_ID_EXT                       0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGAR                                   0x01D4

    #define     BA_Gbl_FPGAR_FPGAR                             0x01D4
    #define     B16Gbl_FPGAR_FPGAR                             0x01D4
    #define   LSb32Gbl_FPGAR_FPGAR                                0
    #define   LSb16Gbl_FPGAR_FPGAR                                0
    #define       bGbl_FPGAR_FPGAR                             32
    #define   MSK32Gbl_FPGAR_FPGAR                                0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGARW                                  0x01D8

    #define     BA_Gbl_FPGARW_FPGARW                           0x01D8
    #define     B16Gbl_FPGARW_FPGARW                           0x01D8
    #define   LSb32Gbl_FPGARW_FPGARW                              0
    #define   LSb16Gbl_FPGARW_FPGARW                              0
    #define       bGbl_FPGARW_FPGARW                           32
    #define   MSK32Gbl_FPGARW_FPGARW                              0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RingOscCtl                              0x01DC

    #define     BA_Gbl_RingOscCtl_centerInit                   0x01DC
    #define     B16Gbl_RingOscCtl_centerInit                   0x01DC
    #define   LSb32Gbl_RingOscCtl_centerInit                      0
    #define   LSb16Gbl_RingOscCtl_centerInit                      0
    #define       bGbl_RingOscCtl_centerInit                   1
    #define   MSK32Gbl_RingOscCtl_centerInit                      0x00000001
    #define        Gbl_RingOscCtl_centerInit_OFF                            0x0
    #define        Gbl_RingOscCtl_centerInit_ON                             0x1

    #define     BA_Gbl_RingOscCtl_avioTopInit                  0x01DC
    #define     B16Gbl_RingOscCtl_avioTopInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_avioTopInit                     1
    #define   LSb16Gbl_RingOscCtl_avioTopInit                     1
    #define       bGbl_RingOscCtl_avioTopInit                  1
    #define   MSK32Gbl_RingOscCtl_avioTopInit                     0x00000002
    #define        Gbl_RingOscCtl_avioTopInit_OFF                           0x0
    #define        Gbl_RingOscCtl_avioTopInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_avioBotInit                  0x01DC
    #define     B16Gbl_RingOscCtl_avioBotInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_avioBotInit                     2
    #define   LSb16Gbl_RingOscCtl_avioBotInit                     2
    #define       bGbl_RingOscCtl_avioBotInit                  1
    #define   MSK32Gbl_RingOscCtl_avioBotInit                     0x00000004
    #define        Gbl_RingOscCtl_avioBotInit_OFF                           0x0
    #define        Gbl_RingOscCtl_avioBotInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_usbTopInit                   0x01DC
    #define     B16Gbl_RingOscCtl_usbTopInit                   0x01DC
    #define   LSb32Gbl_RingOscCtl_usbTopInit                      3
    #define   LSb16Gbl_RingOscCtl_usbTopInit                      3
    #define       bGbl_RingOscCtl_usbTopInit                   1
    #define   MSK32Gbl_RingOscCtl_usbTopInit                      0x00000008
    #define        Gbl_RingOscCtl_usbTopInit_OFF                            0x0
    #define        Gbl_RingOscCtl_usbTopInit_ON                             0x1

    #define     BA_Gbl_RingOscCtl_cpu1TopInit                  0x01DC
    #define     B16Gbl_RingOscCtl_cpu1TopInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_cpu1TopInit                     4
    #define   LSb16Gbl_RingOscCtl_cpu1TopInit                     4
    #define       bGbl_RingOscCtl_cpu1TopInit                  1
    #define   MSK32Gbl_RingOscCtl_cpu1TopInit                     0x00000010
    #define        Gbl_RingOscCtl_cpu1TopInit_OFF                           0x0
    #define        Gbl_RingOscCtl_cpu1TopInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_cpu0TopInit                  0x01DC
    #define     B16Gbl_RingOscCtl_cpu0TopInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_cpu0TopInit                     5
    #define   LSb16Gbl_RingOscCtl_cpu0TopInit                     5
    #define       bGbl_RingOscCtl_cpu0TopInit                  1
    #define   MSK32Gbl_RingOscCtl_cpu0TopInit                     0x00000020
    #define        Gbl_RingOscCtl_cpu0TopInit_OFF                           0x0
    #define        Gbl_RingOscCtl_cpu0TopInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_cpuBotInit                   0x01DC
    #define     B16Gbl_RingOscCtl_cpuBotInit                   0x01DC
    #define   LSb32Gbl_RingOscCtl_cpuBotInit                      6
    #define   LSb16Gbl_RingOscCtl_cpuBotInit                      6
    #define       bGbl_RingOscCtl_cpuBotInit                   1
    #define   MSK32Gbl_RingOscCtl_cpuBotInit                      0x00000040
    #define        Gbl_RingOscCtl_cpuBotInit_OFF                            0x0
    #define        Gbl_RingOscCtl_cpuBotInit_ON                             0x1

    #define     BA_Gbl_RingOscCtl_topRiteInit                  0x01DC
    #define     B16Gbl_RingOscCtl_topRiteInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_topRiteInit                     7
    #define   LSb16Gbl_RingOscCtl_topRiteInit                     7
    #define       bGbl_RingOscCtl_topRiteInit                  1
    #define   MSK32Gbl_RingOscCtl_topRiteInit                     0x00000080
    #define        Gbl_RingOscCtl_topRiteInit_OFF                           0x0
    #define        Gbl_RingOscCtl_topRiteInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_midRiteInit                  0x01DD
    #define     B16Gbl_RingOscCtl_midRiteInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_midRiteInit                     8
    #define   LSb16Gbl_RingOscCtl_midRiteInit                     8
    #define       bGbl_RingOscCtl_midRiteInit                  1
    #define   MSK32Gbl_RingOscCtl_midRiteInit                     0x00000100
    #define        Gbl_RingOscCtl_midRiteInit_OFF                           0x0
    #define        Gbl_RingOscCtl_midRiteInit_ON                            0x1

    #define     BA_Gbl_RingOscCtl_botRiteInit                  0x01DD
    #define     B16Gbl_RingOscCtl_botRiteInit                  0x01DC
    #define   LSb32Gbl_RingOscCtl_botRiteInit                     9
    #define   LSb16Gbl_RingOscCtl_botRiteInit                     9
    #define       bGbl_RingOscCtl_botRiteInit                  1
    #define   MSK32Gbl_RingOscCtl_botRiteInit                     0x00000200
    #define        Gbl_RingOscCtl_botRiteInit_OFF                           0x0
    #define        Gbl_RingOscCtl_botRiteInit_ON                            0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PLLBypsBootStrapEn                      0x01E0

    #define     BA_Gbl_PLLBypsBootStrapEn_sysPLLBypsEn         0x01E0
    #define     B16Gbl_PLLBypsBootStrapEn_sysPLLBypsEn         0x01E0
    #define   LSb32Gbl_PLLBypsBootStrapEn_sysPLLBypsEn            0
    #define   LSb16Gbl_PLLBypsBootStrapEn_sysPLLBypsEn            0
    #define       bGbl_PLLBypsBootStrapEn_sysPLLBypsEn         1
    #define   MSK32Gbl_PLLBypsBootStrapEn_sysPLLBypsEn            0x00000001
    #define        Gbl_PLLBypsBootStrapEn_sysPLLBypsEn_Disable              0x0
    #define        Gbl_PLLBypsBootStrapEn_sysPLLBypsEn_Enable               0x1

    #define     BA_Gbl_PLLBypsBootStrapEn_memPLLBypsEn         0x01E0
    #define     B16Gbl_PLLBypsBootStrapEn_memPLLBypsEn         0x01E0
    #define   LSb32Gbl_PLLBypsBootStrapEn_memPLLBypsEn            1
    #define   LSb16Gbl_PLLBypsBootStrapEn_memPLLBypsEn            1
    #define       bGbl_PLLBypsBootStrapEn_memPLLBypsEn         1
    #define   MSK32Gbl_PLLBypsBootStrapEn_memPLLBypsEn            0x00000002
    #define        Gbl_PLLBypsBootStrapEn_memPLLBypsEn_Disable              0x0
    #define        Gbl_PLLBypsBootStrapEn_memPLLBypsEn_Enable               0x1

    #define     BA_Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn        0x01E0
    #define     B16Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn        0x01E0
    #define   LSb32Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn           2
    #define   LSb16Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn           2
    #define       bGbl_PLLBypsBootStrapEn_cpu1PLLBypsEn        1
    #define   MSK32Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn           0x00000004
    #define        Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn_Disable              0x0
    #define        Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn_Enable              0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_IO_CALIBRATE_IN                         0x01E4

    #define     BA_Gbl_IO_CALIBRATE_IN_DO                      0x01E4
    #define     B16Gbl_IO_CALIBRATE_IN_DO                      0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_DO                         0
    #define   LSb16Gbl_IO_CALIBRATE_IN_DO                         0
    #define       bGbl_IO_CALIBRATE_IN_DO                      1
    #define   MSK32Gbl_IO_CALIBRATE_IN_DO                         0x00000001
    #define        Gbl_IO_CALIBRATE_IN_DO_NMOS                              0x0
    #define        Gbl_IO_CALIBRATE_IN_DO_PMOS                              0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_CAL_EN                  0x01E4
    #define     B16Gbl_IO_CALIBRATE_IN_CAL_EN                  0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_CAL_EN                     1
    #define   LSb16Gbl_IO_CALIBRATE_IN_CAL_EN                     1
    #define       bGbl_IO_CALIBRATE_IN_CAL_EN                  1
    #define   MSK32Gbl_IO_CALIBRATE_IN_CAL_EN                     0x00000002
    #define        Gbl_IO_CALIBRATE_IN_CAL_EN_DISABLE                       0x0
    #define        Gbl_IO_CALIBRATE_IN_CAL_EN_ENABLE                        0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_ZP_CAL                  0x01E4
    #define     B16Gbl_IO_CALIBRATE_IN_ZP_CAL                  0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_ZP_CAL                     2
    #define   LSb16Gbl_IO_CALIBRATE_IN_ZP_CAL                     2
    #define       bGbl_IO_CALIBRATE_IN_ZP_CAL                  3
    #define   MSK32Gbl_IO_CALIBRATE_IN_ZP_CAL                     0x0000001C

    #define     BA_Gbl_IO_CALIBRATE_IN_ZN_CAL                  0x01E4
    #define     B16Gbl_IO_CALIBRATE_IN_ZN_CAL                  0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_ZN_CAL                     5
    #define   LSb16Gbl_IO_CALIBRATE_IN_ZN_CAL                     5
    #define       bGbl_IO_CALIBRATE_IN_ZN_CAL                  3
    #define   MSK32Gbl_IO_CALIBRATE_IN_ZN_CAL                     0x000000E0

    #define     BA_Gbl_IO_CALIBRATE_IN_RON_ADJ                 0x01E5
    #define     B16Gbl_IO_CALIBRATE_IN_RON_ADJ                 0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_RON_ADJ                    8
    #define   LSb16Gbl_IO_CALIBRATE_IN_RON_ADJ                    8
    #define       bGbl_IO_CALIBRATE_IN_RON_ADJ                 3
    #define   MSK32Gbl_IO_CALIBRATE_IN_RON_ADJ                    0x00000700

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN            0x01E5
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN            0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN               11
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN               11
    #define       bGbl_IO_CALIBRATE_IN_TSI_CAL_N_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN               0x00000800

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN            0x01E5
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN            0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN               12
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN               12
    #define       bGbl_IO_CALIBRATE_IN_TSI_CAL_P_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN               0x00001000

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_ODR                 0x01E5
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_ODR                 0x01E4
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_ODR                    13
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_ODR                    13
    #define       bGbl_IO_CALIBRATE_IN_TSI_ODR                 3
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_ODR                    0x0000E000

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_ODR_EN              0x01E6
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_ODR_EN              0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_ODR_EN                 16
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_ODR_EN                 0
    #define       bGbl_IO_CALIBRATE_IN_TSI_ODR_EN              1
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_ODR_EN                 0x00010000

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_ZN                  0x01E6
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_ZN                  0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_ZN                     17
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_ZN                     1
    #define       bGbl_IO_CALIBRATE_IN_TSI_ZN                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_ZN                     0x001E0000

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_ZP                  0x01E6
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_ZP                  0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_ZP                     21
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_ZP                     5
    #define       bGbl_IO_CALIBRATE_IN_TSI_ZP                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_ZP                     0x01E00000

    #define     BA_Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL          0x01E7
    #define     B16Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL          0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL             25
    #define   LSb16Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL             9
    #define       bGbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL          4
    #define   MSK32Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL             0x1E000000

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN           0x01E7
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN           0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN              29
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN              13
    #define       bGbl_IO_CALIBRATE_IN_NAND_CAL_N_EN           1
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN              0x20000000

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN           0x01E7
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN           0x01E6
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN              30
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN              14
    #define       bGbl_IO_CALIBRATE_IN_NAND_CAL_P_EN           1
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN              0x40000000

    #define     RA_Gbl_IO_CALIBRATE_IN1                        0x01E8

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_ODR                0x01E8
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_ODR                0x01E8
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_ODR                   0
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_ODR                   0
    #define       bGbl_IO_CALIBRATE_IN_NAND_ODR                3
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_ODR                   0x00000007

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_ODR_EN             0x01E8
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_ODR_EN             0x01E8
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_ODR_EN                3
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_ODR_EN                3
    #define       bGbl_IO_CALIBRATE_IN_NAND_ODR_EN             1
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_ODR_EN                0x00000008

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_ZN                 0x01E8
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_ZN                 0x01E8
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_ZN                    4
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_ZN                    4
    #define       bGbl_IO_CALIBRATE_IN_NAND_ZN                 4
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_ZN                    0x000000F0

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_ZP                 0x01E9
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_ZP                 0x01E8
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_ZP                    8
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_ZP                    8
    #define       bGbl_IO_CALIBRATE_IN_NAND_ZP                 4
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_ZP                    0x00000F00

    #define     BA_Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL         0x01E9
    #define     B16Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL         0x01E8
    #define   LSb32Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL            12
    #define   LSb16Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL            12
    #define       bGbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL         4
    #define   MSK32Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL            0x0000F000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN            0x01EA
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN            0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN               16
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN               0
    #define       bGbl_IO_CALIBRATE_IN_SPI_CAL_N_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN               0x00010000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN            0x01EA
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN            0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN               17
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN               1
    #define       bGbl_IO_CALIBRATE_IN_SPI_CAL_P_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN               0x00020000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_ODR                 0x01EA
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_ODR                 0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_ODR                    18
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_ODR                    2
    #define       bGbl_IO_CALIBRATE_IN_SPI_ODR                 3
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_ODR                    0x001C0000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_ODR_EN              0x01EA
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_ODR_EN              0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_ODR_EN                 21
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_ODR_EN                 5
    #define       bGbl_IO_CALIBRATE_IN_SPI_ODR_EN              1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_ODR_EN                 0x00200000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_ZN                  0x01EA
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_ZN                  0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_ZN                     22
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_ZN                     6
    #define       bGbl_IO_CALIBRATE_IN_SPI_ZN                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_ZN                     0x03C00000

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_ZP                  0x01EB
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_ZP                  0x01EA
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_ZP                     26
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_ZP                     10
    #define       bGbl_IO_CALIBRATE_IN_SPI_ZP                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_ZP                     0x3C000000

    #define     RA_Gbl_IO_CALIBRATE_IN2                        0x01EC

    #define     BA_Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL          0x01EC
    #define     B16Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL          0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL             0
    #define   LSb16Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL             0
    #define       bGbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL          4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL             0x0000000F

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN            0x01EC
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN            0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN               4
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN               4
    #define       bGbl_IO_CALIBRATE_IN_SD0_CAL_N_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN               0x00000010

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN            0x01EC
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN            0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN               5
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN               5
    #define       bGbl_IO_CALIBRATE_IN_SD0_CAL_P_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN               0x00000020

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_ODR                 0x01EC
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_ODR                 0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_ODR                    6
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_ODR                    6
    #define       bGbl_IO_CALIBRATE_IN_SD0_ODR                 3
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_ODR                    0x000001C0

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_ODR_EN              0x01ED
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_ODR_EN              0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_ODR_EN                 9
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_ODR_EN                 9
    #define       bGbl_IO_CALIBRATE_IN_SD0_ODR_EN              1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_ODR_EN                 0x00000200

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_ZN                  0x01ED
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_ZN                  0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_ZN                     10
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_ZN                     10
    #define       bGbl_IO_CALIBRATE_IN_SD0_ZN                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_ZN                     0x00003C00

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_ZP                  0x01ED
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_ZP                  0x01EC
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_ZP                     14
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_ZP                     14
    #define       bGbl_IO_CALIBRATE_IN_SD0_ZP                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_ZP                     0x0003C000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL          0x01EE
    #define     B16Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL          0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL             18
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL             2
    #define       bGbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL          4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL             0x003C0000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN            0x01EE
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN            0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN               22
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN               6
    #define       bGbl_IO_CALIBRATE_IN_SD1_CAL_N_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN               0x00400000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN            0x01EE
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN            0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN               23
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN               7
    #define       bGbl_IO_CALIBRATE_IN_SD1_CAL_P_EN            1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN               0x00800000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_ODR                 0x01EF
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_ODR                 0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_ODR                    24
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_ODR                    8
    #define       bGbl_IO_CALIBRATE_IN_SD1_ODR                 3
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_ODR                    0x07000000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_ODR_EN              0x01EF
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_ODR_EN              0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_ODR_EN                 27
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_ODR_EN                 11
    #define       bGbl_IO_CALIBRATE_IN_SD1_ODR_EN              1
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_ODR_EN                 0x08000000

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_ZN                  0x01EF
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_ZN                  0x01EE
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_ZN                     28
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_ZN                     12
    #define       bGbl_IO_CALIBRATE_IN_SD1_ZN                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_ZN                     0xF0000000

    #define     RA_Gbl_IO_CALIBRATE_IN3                        0x01F0

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_ZP                  0x01F0
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_ZP                  0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_ZP                     0
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_ZP                     0
    #define       bGbl_IO_CALIBRATE_IN_SD1_ZP                  4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_ZP                     0x0000000F

    #define     BA_Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL          0x01F0
    #define     B16Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL          0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL             4
    #define   LSb16Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL             4
    #define       bGbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL          4
    #define   MSK32Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL             0x000000F0

    #define     BA_Gbl_IO_CALIBRATE_IN_DVIO_1_DO               0x01F1
    #define     B16Gbl_IO_CALIBRATE_IN_DVIO_1_DO               0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_DVIO_1_DO                  8
    #define   LSb16Gbl_IO_CALIBRATE_IN_DVIO_1_DO                  8
    #define       bGbl_IO_CALIBRATE_IN_DVIO_1_DO               1
    #define   MSK32Gbl_IO_CALIBRATE_IN_DVIO_1_DO                  0x00000100
    #define        Gbl_IO_CALIBRATE_IN_DVIO_1_DO_NMOS                       0x0
    #define        Gbl_IO_CALIBRATE_IN_DVIO_1_DO_PMOS                       0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN           0x01F1
    #define     B16Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN           0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN              9
    #define   LSb16Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN              9
    #define       bGbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN           1
    #define   MSK32Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN              0x00000200
    #define        Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN_DISABLE                0x0
    #define        Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN_ENABLE                 0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL           0x01F1
    #define     B16Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL           0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL              10
    #define   LSb16Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL              10
    #define       bGbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL           3
    #define   MSK32Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL              0x00001C00

    #define     BA_Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL           0x01F1
    #define     B16Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL           0x01F0
    #define   LSb32Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL              13
    #define   LSb16Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL              13
    #define       bGbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL           3
    #define   MSK32Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL              0x0000E000

    #define     BA_Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ          0x01F2
    #define     B16Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ          0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ             16
    #define   LSb16Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ             0
    #define       bGbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ          3
    #define   MSK32Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ             0x00070000

    #define     BA_Gbl_IO_CALIBRATE_IN_I2S_DO                  0x01F2
    #define     B16Gbl_IO_CALIBRATE_IN_I2S_DO                  0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_I2S_DO                     19
    #define   LSb16Gbl_IO_CALIBRATE_IN_I2S_DO                     3
    #define       bGbl_IO_CALIBRATE_IN_I2S_DO                  1
    #define   MSK32Gbl_IO_CALIBRATE_IN_I2S_DO                     0x00080000
    #define        Gbl_IO_CALIBRATE_IN_I2S_DO_NMOS                          0x0
    #define        Gbl_IO_CALIBRATE_IN_I2S_DO_PMOS                          0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_I2S_CAL_EN              0x01F2
    #define     B16Gbl_IO_CALIBRATE_IN_I2S_CAL_EN              0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_I2S_CAL_EN                 20
    #define   LSb16Gbl_IO_CALIBRATE_IN_I2S_CAL_EN                 4
    #define       bGbl_IO_CALIBRATE_IN_I2S_CAL_EN              1
    #define   MSK32Gbl_IO_CALIBRATE_IN_I2S_CAL_EN                 0x00100000
    #define        Gbl_IO_CALIBRATE_IN_I2S_CAL_EN_DISABLE                   0x0
    #define        Gbl_IO_CALIBRATE_IN_I2S_CAL_EN_ENABLE                    0x1

    #define     BA_Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL              0x01F2
    #define     B16Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL              0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL                 21
    #define   LSb16Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL                 5
    #define       bGbl_IO_CALIBRATE_IN_I2S_ZP_CAL              3
    #define   MSK32Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL                 0x00E00000

    #define     BA_Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL              0x01F3
    #define     B16Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL              0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL                 24
    #define   LSb16Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL                 8
    #define       bGbl_IO_CALIBRATE_IN_I2S_ZN_CAL              3
    #define   MSK32Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL                 0x07000000

    #define     BA_Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ             0x01F3
    #define     B16Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ             0x01F2
    #define   LSb32Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ                27
    #define   LSb16Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ                11
    #define       bGbl_IO_CALIBRATE_IN_I2S_RON_ADJ             3
    #define   MSK32Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ                0x38000000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_IO_CALBRATE_OUT                         0x01F4

    #define     BA_Gbl_IO_CALBRATE_OUT_INC                     0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_INC                     0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_INC                        0
    #define   LSb16Gbl_IO_CALBRATE_OUT_INC                        0
    #define       bGbl_IO_CALBRATE_OUT_INC                     1
    #define   MSK32Gbl_IO_CALBRATE_OUT_INC                        0x00000001

    #define     BA_Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC              1
    #define   LSb16Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC              1
    #define       bGbl_IO_CALBRATE_OUT_TSI_CAL_N_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC              0x00000002

    #define     BA_Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC              2
    #define   LSb16Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC              2
    #define       bGbl_IO_CALBRATE_OUT_TSI_CAL_P_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC              0x00000004

    #define     BA_Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC              3
    #define   LSb16Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC              3
    #define       bGbl_IO_CALBRATE_OUT_SD0_CAL_N_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC              0x00000008

    #define     BA_Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC              4
    #define   LSb16Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC              4
    #define       bGbl_IO_CALBRATE_OUT_SD0_CAL_P_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC              0x00000010

    #define     BA_Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC              5
    #define   LSb16Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC              5
    #define       bGbl_IO_CALBRATE_OUT_SD1_CAL_N_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC              0x00000020

    #define     BA_Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC           0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC           0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC              6
    #define   LSb16Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC              6
    #define       bGbl_IO_CALBRATE_OUT_SD1_CAL_P_INC           1
    #define   MSK32Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC              0x00000040

    #define     BA_Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC          0x01F4
    #define     B16Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC          0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC             7
    #define   LSb16Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC             7
    #define       bGbl_IO_CALBRATE_OUT_NAND_CAL_N_INC          1
    #define   MSK32Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC             0x00000080

    #define     BA_Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC          0x01F5
    #define     B16Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC          0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC             8
    #define   LSb16Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC             8
    #define       bGbl_IO_CALBRATE_OUT_NAND_CAL_P_INC          1
    #define   MSK32Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC             0x00000100

    #define     BA_Gbl_IO_CALBRATE_OUT_DVIO_1_INC              0x01F5
    #define     B16Gbl_IO_CALBRATE_OUT_DVIO_1_INC              0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_DVIO_1_INC                 9
    #define   LSb16Gbl_IO_CALBRATE_OUT_DVIO_1_INC                 9
    #define       bGbl_IO_CALBRATE_OUT_DVIO_1_INC              1
    #define   MSK32Gbl_IO_CALBRATE_OUT_DVIO_1_INC                 0x00000200

    #define     BA_Gbl_IO_CALBRATE_OUT_I2S_INC                 0x01F5
    #define     B16Gbl_IO_CALBRATE_OUT_I2S_INC                 0x01F4
    #define   LSb32Gbl_IO_CALBRATE_OUT_I2S_INC                    10
    #define   LSb16Gbl_IO_CALBRATE_OUT_I2S_INC                    10
    #define       bGbl_IO_CALBRATE_OUT_I2S_INC                 1
    #define   MSK32Gbl_IO_CALBRATE_OUT_I2S_INC                    0x00000400
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SECURE_SCAN_EN                          0x01F8

    #define     BA_Gbl_SECURE_SCAN_EN_SET                      0x01F8
    #define     B16Gbl_SECURE_SCAN_EN_SET                      0x01F8
    #define   LSb32Gbl_SECURE_SCAN_EN_SET                         0
    #define   LSb16Gbl_SECURE_SCAN_EN_SET                         0
    #define       bGbl_SECURE_SCAN_EN_SET                      1
    #define   MSK32Gbl_SECURE_SCAN_EN_SET                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_NandWPn                                 0x01FC

    #define     BA_Gbl_NandWPn_Sel                             0x01FC
    #define     B16Gbl_NandWPn_Sel                             0x01FC
    #define   LSb32Gbl_NandWPn_Sel                                0
    #define   LSb16Gbl_NandWPn_Sel                                0
    #define       bGbl_NandWPn_Sel                             1
    #define   MSK32Gbl_NandWPn_Sel                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RingCntCntl                             0x0200

    #define     BA_Gbl_RingCntCntl_centerStart                 0x0200
    #define     B16Gbl_RingCntCntl_centerStart                 0x0200
    #define   LSb32Gbl_RingCntCntl_centerStart                    0
    #define   LSb16Gbl_RingCntCntl_centerStart                    0
    #define       bGbl_RingCntCntl_centerStart                 1
    #define   MSK32Gbl_RingCntCntl_centerStart                    0x00000001

    #define     BA_Gbl_RingCntCntl_centerStop                  0x0200
    #define     B16Gbl_RingCntCntl_centerStop                  0x0200
    #define   LSb32Gbl_RingCntCntl_centerStop                     1
    #define   LSb16Gbl_RingCntCntl_centerStop                     1
    #define       bGbl_RingCntCntl_centerStop                  1
    #define   MSK32Gbl_RingCntCntl_centerStop                     0x00000002

    #define     BA_Gbl_RingCntCntl_avioTopStart                0x0200
    #define     B16Gbl_RingCntCntl_avioTopStart                0x0200
    #define   LSb32Gbl_RingCntCntl_avioTopStart                   2
    #define   LSb16Gbl_RingCntCntl_avioTopStart                   2
    #define       bGbl_RingCntCntl_avioTopStart                1
    #define   MSK32Gbl_RingCntCntl_avioTopStart                   0x00000004

    #define     BA_Gbl_RingCntCntl_avioTopStop                 0x0200
    #define     B16Gbl_RingCntCntl_avioTopStop                 0x0200
    #define   LSb32Gbl_RingCntCntl_avioTopStop                    3
    #define   LSb16Gbl_RingCntCntl_avioTopStop                    3
    #define       bGbl_RingCntCntl_avioTopStop                 1
    #define   MSK32Gbl_RingCntCntl_avioTopStop                    0x00000008

    #define     BA_Gbl_RingCntCntl_avioBotStart                0x0200
    #define     B16Gbl_RingCntCntl_avioBotStart                0x0200
    #define   LSb32Gbl_RingCntCntl_avioBotStart                   4
    #define   LSb16Gbl_RingCntCntl_avioBotStart                   4
    #define       bGbl_RingCntCntl_avioBotStart                1
    #define   MSK32Gbl_RingCntCntl_avioBotStart                   0x00000010

    #define     BA_Gbl_RingCntCntl_avioBotStop                 0x0200
    #define     B16Gbl_RingCntCntl_avioBotStop                 0x0200
    #define   LSb32Gbl_RingCntCntl_avioBotStop                    5
    #define   LSb16Gbl_RingCntCntl_avioBotStop                    5
    #define       bGbl_RingCntCntl_avioBotStop                 1
    #define   MSK32Gbl_RingCntCntl_avioBotStop                    0x00000020

    #define     BA_Gbl_RingCntCntl_usbTopStart                 0x0200
    #define     B16Gbl_RingCntCntl_usbTopStart                 0x0200
    #define   LSb32Gbl_RingCntCntl_usbTopStart                    6
    #define   LSb16Gbl_RingCntCntl_usbTopStart                    6
    #define       bGbl_RingCntCntl_usbTopStart                 1
    #define   MSK32Gbl_RingCntCntl_usbTopStart                    0x00000040

    #define     BA_Gbl_RingCntCntl_usbTopStop                  0x0200
    #define     B16Gbl_RingCntCntl_usbTopStop                  0x0200
    #define   LSb32Gbl_RingCntCntl_usbTopStop                     7
    #define   LSb16Gbl_RingCntCntl_usbTopStop                     7
    #define       bGbl_RingCntCntl_usbTopStop                  1
    #define   MSK32Gbl_RingCntCntl_usbTopStop                     0x00000080

    #define     BA_Gbl_RingCntCntl_cpu1TopStart                0x0201
    #define     B16Gbl_RingCntCntl_cpu1TopStart                0x0200
    #define   LSb32Gbl_RingCntCntl_cpu1TopStart                   8
    #define   LSb16Gbl_RingCntCntl_cpu1TopStart                   8
    #define       bGbl_RingCntCntl_cpu1TopStart                1
    #define   MSK32Gbl_RingCntCntl_cpu1TopStart                   0x00000100

    #define     BA_Gbl_RingCntCntl_cpu1TopStop                 0x0201
    #define     B16Gbl_RingCntCntl_cpu1TopStop                 0x0200
    #define   LSb32Gbl_RingCntCntl_cpu1TopStop                    9
    #define   LSb16Gbl_RingCntCntl_cpu1TopStop                    9
    #define       bGbl_RingCntCntl_cpu1TopStop                 1
    #define   MSK32Gbl_RingCntCntl_cpu1TopStop                    0x00000200

    #define     BA_Gbl_RingCntCntl_cpu0TopStart                0x0201
    #define     B16Gbl_RingCntCntl_cpu0TopStart                0x0200
    #define   LSb32Gbl_RingCntCntl_cpu0TopStart                   10
    #define   LSb16Gbl_RingCntCntl_cpu0TopStart                   10
    #define       bGbl_RingCntCntl_cpu0TopStart                1
    #define   MSK32Gbl_RingCntCntl_cpu0TopStart                   0x00000400

    #define     BA_Gbl_RingCntCntl_cpu0TopStop                 0x0201
    #define     B16Gbl_RingCntCntl_cpu0TopStop                 0x0200
    #define   LSb32Gbl_RingCntCntl_cpu0TopStop                    11
    #define   LSb16Gbl_RingCntCntl_cpu0TopStop                    11
    #define       bGbl_RingCntCntl_cpu0TopStop                 1
    #define   MSK32Gbl_RingCntCntl_cpu0TopStop                    0x00000800

    #define     BA_Gbl_RingCntCntl_cpuBotStart                 0x0201
    #define     B16Gbl_RingCntCntl_cpuBotStart                 0x0200
    #define   LSb32Gbl_RingCntCntl_cpuBotStart                    12
    #define   LSb16Gbl_RingCntCntl_cpuBotStart                    12
    #define       bGbl_RingCntCntl_cpuBotStart                 1
    #define   MSK32Gbl_RingCntCntl_cpuBotStart                    0x00001000

    #define     BA_Gbl_RingCntCntl_cpuBotStop                  0x0201
    #define     B16Gbl_RingCntCntl_cpuBotStop                  0x0200
    #define   LSb32Gbl_RingCntCntl_cpuBotStop                     13
    #define   LSb16Gbl_RingCntCntl_cpuBotStop                     13
    #define       bGbl_RingCntCntl_cpuBotStop                  1
    #define   MSK32Gbl_RingCntCntl_cpuBotStop                     0x00002000

    #define     BA_Gbl_RingCntCntl_topRiteStart                0x0201
    #define     B16Gbl_RingCntCntl_topRiteStart                0x0200
    #define   LSb32Gbl_RingCntCntl_topRiteStart                   14
    #define   LSb16Gbl_RingCntCntl_topRiteStart                   14
    #define       bGbl_RingCntCntl_topRiteStart                1
    #define   MSK32Gbl_RingCntCntl_topRiteStart                   0x00004000

    #define     BA_Gbl_RingCntCntl_topRiteStop                 0x0201
    #define     B16Gbl_RingCntCntl_topRiteStop                 0x0200
    #define   LSb32Gbl_RingCntCntl_topRiteStop                    15
    #define   LSb16Gbl_RingCntCntl_topRiteStop                    15
    #define       bGbl_RingCntCntl_topRiteStop                 1
    #define   MSK32Gbl_RingCntCntl_topRiteStop                    0x00008000

    #define     BA_Gbl_RingCntCntl_midRiteStart                0x0202
    #define     B16Gbl_RingCntCntl_midRiteStart                0x0202
    #define   LSb32Gbl_RingCntCntl_midRiteStart                   16
    #define   LSb16Gbl_RingCntCntl_midRiteStart                   0
    #define       bGbl_RingCntCntl_midRiteStart                1
    #define   MSK32Gbl_RingCntCntl_midRiteStart                   0x00010000

    #define     BA_Gbl_RingCntCntl_midRiteStop                 0x0202
    #define     B16Gbl_RingCntCntl_midRiteStop                 0x0202
    #define   LSb32Gbl_RingCntCntl_midRiteStop                    17
    #define   LSb16Gbl_RingCntCntl_midRiteStop                    1
    #define       bGbl_RingCntCntl_midRiteStop                 1
    #define   MSK32Gbl_RingCntCntl_midRiteStop                    0x00020000

    #define     BA_Gbl_RingCntCntl_botRiteStart                0x0202
    #define     B16Gbl_RingCntCntl_botRiteStart                0x0202
    #define   LSb32Gbl_RingCntCntl_botRiteStart                   18
    #define   LSb16Gbl_RingCntCntl_botRiteStart                   2
    #define       bGbl_RingCntCntl_botRiteStart                1
    #define   MSK32Gbl_RingCntCntl_botRiteStart                   0x00040000

    #define     BA_Gbl_RingCntCntl_botRiteStop                 0x0202
    #define     B16Gbl_RingCntCntl_botRiteStop                 0x0202
    #define   LSb32Gbl_RingCntCntl_botRiteStop                    19
    #define   LSb16Gbl_RingCntCntl_botRiteStop                    3
    #define       bGbl_RingCntCntl_botRiteStop                 1
    #define   MSK32Gbl_RingCntCntl_botRiteStop                    0x00080000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topSvtDro0Cnt                           0x0204
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topLvtDro1Cnt                           0x0208
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topSvtDro2Cnt                           0x020C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topLvtDro3Cnt                           0x0210
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topSvtDro4Cnt                           0x0214
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topLvtDro5Cnt                           0x0218
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioSvtDro0Cnt                          0x021C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioLvtDro1Cnt                          0x0220
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioSvtDro2Cnt                          0x0224
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioLvtDro3Cnt                          0x0228
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DCoreClkCtrl                        0x022C

    #define     BA_Gbl_gfx3DCoreClkCtrl_clkEN                  0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_clkEN                  0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_clkEN                     0
    #define   LSb16Gbl_gfx3DCoreClkCtrl_clkEN                     0
    #define       bGbl_gfx3DCoreClkCtrl_clkEN                  1
    #define   MSK32Gbl_gfx3DCoreClkCtrl_clkEN                     0x00000001
    #define        Gbl_gfx3DCoreClkCtrl_clkEN_enable                        0x1
    #define        Gbl_gfx3DCoreClkCtrl_clkEN_disable                       0x0

    #define     BA_Gbl_gfx3DCoreClkCtrl_ClkPllSel              0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_ClkPllSel              0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_ClkPllSel                 1
    #define   LSb16Gbl_gfx3DCoreClkCtrl_ClkPllSel                 1
    #define       bGbl_gfx3DCoreClkCtrl_ClkPllSel              3
    #define   MSK32Gbl_gfx3DCoreClkCtrl_ClkPllSel                 0x0000000E
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSel_AVPllB4                   0x0
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSel_AVPllB5                   0x1
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSel_AVPllB6                   0x2
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSel_AVPllB7                   0x3
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSel_SYSPll                    0x4

    #define     BA_Gbl_gfx3DCoreClkCtrl_ClkPllSwitch           0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_ClkPllSwitch           0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_ClkPllSwitch              4
    #define   LSb16Gbl_gfx3DCoreClkCtrl_ClkPllSwitch              4
    #define       bGbl_gfx3DCoreClkCtrl_ClkPllSwitch           1
    #define   MSK32Gbl_gfx3DCoreClkCtrl_ClkPllSwitch              0x00000010
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSwitch_SYSPLL                 0x0
    #define        Gbl_gfx3DCoreClkCtrl_ClkPllSwitch_AVPLL                  0x1

    #define     BA_Gbl_gfx3DCoreClkCtrl_ClkSwitch              0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_ClkSwitch              0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_ClkSwitch                 5
    #define   LSb16Gbl_gfx3DCoreClkCtrl_ClkSwitch                 5
    #define       bGbl_gfx3DCoreClkCtrl_ClkSwitch              1
    #define   MSK32Gbl_gfx3DCoreClkCtrl_ClkSwitch                 0x00000020
    #define        Gbl_gfx3DCoreClkCtrl_ClkSwitch_SrcClk                    0x0
    #define        Gbl_gfx3DCoreClkCtrl_ClkSwitch_DivClk                    0x1

    #define     BA_Gbl_gfx3DCoreClkCtrl_ClkD3Switch            0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_ClkD3Switch            0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_ClkD3Switch               6
    #define   LSb16Gbl_gfx3DCoreClkCtrl_ClkD3Switch               6
    #define       bGbl_gfx3DCoreClkCtrl_ClkD3Switch            1
    #define   MSK32Gbl_gfx3DCoreClkCtrl_ClkD3Switch               0x00000040
    #define        Gbl_gfx3DCoreClkCtrl_ClkD3Switch_NonDiv3Clk              0x0
    #define        Gbl_gfx3DCoreClkCtrl_ClkD3Switch_Div3Clk                 0x1

    #define     BA_Gbl_gfx3DCoreClkCtrl_ClkSel                 0x022C
    #define     B16Gbl_gfx3DCoreClkCtrl_ClkSel                 0x022C
    #define   LSb32Gbl_gfx3DCoreClkCtrl_ClkSel                    7
    #define   LSb16Gbl_gfx3DCoreClkCtrl_ClkSel                    7
    #define       bGbl_gfx3DCoreClkCtrl_ClkSel                 3
    #define   MSK32Gbl_gfx3DCoreClkCtrl_ClkSel                    0x00000380
    #define        Gbl_gfx3DCoreClkCtrl_ClkSel_d2                           0x1
    #define        Gbl_gfx3DCoreClkCtrl_ClkSel_d4                           0x2
    #define        Gbl_gfx3DCoreClkCtrl_ClkSel_d6                           0x3
    #define        Gbl_gfx3DCoreClkCtrl_ClkSel_d8                           0x4
    #define        Gbl_gfx3DCoreClkCtrl_ClkSel_d12                          0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DSysClkCtrl                         0x0230

    #define     BA_Gbl_gfx3DSysClkCtrl_clkEN                   0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_clkEN                   0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_clkEN                      0
    #define   LSb16Gbl_gfx3DSysClkCtrl_clkEN                      0
    #define       bGbl_gfx3DSysClkCtrl_clkEN                   1
    #define   MSK32Gbl_gfx3DSysClkCtrl_clkEN                      0x00000001
    #define        Gbl_gfx3DSysClkCtrl_clkEN_enable                         0x1
    #define        Gbl_gfx3DSysClkCtrl_clkEN_disable                        0x0

    #define     BA_Gbl_gfx3DSysClkCtrl_ClkPllSel               0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_ClkPllSel               0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_ClkPllSel                  1
    #define   LSb16Gbl_gfx3DSysClkCtrl_ClkPllSel                  1
    #define       bGbl_gfx3DSysClkCtrl_ClkPllSel               3
    #define   MSK32Gbl_gfx3DSysClkCtrl_ClkPllSel                  0x0000000E
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSel_AVPllB4                    0x0
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSel_AVPllB5                    0x1
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSel_AVPllB6                    0x2
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSel_AVPllB7                    0x3
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSel_SYSPll                     0x4

    #define     BA_Gbl_gfx3DSysClkCtrl_ClkPllSwitch            0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_ClkPllSwitch            0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_ClkPllSwitch               4
    #define   LSb16Gbl_gfx3DSysClkCtrl_ClkPllSwitch               4
    #define       bGbl_gfx3DSysClkCtrl_ClkPllSwitch            1
    #define   MSK32Gbl_gfx3DSysClkCtrl_ClkPllSwitch               0x00000010
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSwitch_SYSPLL                  0x0
    #define        Gbl_gfx3DSysClkCtrl_ClkPllSwitch_AVPLL                   0x1

    #define     BA_Gbl_gfx3DSysClkCtrl_ClkSwitch               0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_ClkSwitch               0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_ClkSwitch                  5
    #define   LSb16Gbl_gfx3DSysClkCtrl_ClkSwitch                  5
    #define       bGbl_gfx3DSysClkCtrl_ClkSwitch               1
    #define   MSK32Gbl_gfx3DSysClkCtrl_ClkSwitch                  0x00000020
    #define        Gbl_gfx3DSysClkCtrl_ClkSwitch_SrcClk                     0x0
    #define        Gbl_gfx3DSysClkCtrl_ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_gfx3DSysClkCtrl_ClkD3Switch             0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_ClkD3Switch             0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_ClkD3Switch                6
    #define   LSb16Gbl_gfx3DSysClkCtrl_ClkD3Switch                6
    #define       bGbl_gfx3DSysClkCtrl_ClkD3Switch             1
    #define   MSK32Gbl_gfx3DSysClkCtrl_ClkD3Switch                0x00000040
    #define        Gbl_gfx3DSysClkCtrl_ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_gfx3DSysClkCtrl_ClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_gfx3DSysClkCtrl_ClkSel                  0x0230
    #define     B16Gbl_gfx3DSysClkCtrl_ClkSel                  0x0230
    #define   LSb32Gbl_gfx3DSysClkCtrl_ClkSel                     7
    #define   LSb16Gbl_gfx3DSysClkCtrl_ClkSel                     7
    #define       bGbl_gfx3DSysClkCtrl_ClkSel                  3
    #define   MSK32Gbl_gfx3DSysClkCtrl_ClkSel                     0x00000380
    #define        Gbl_gfx3DSysClkCtrl_ClkSel_d2                            0x1
    #define        Gbl_gfx3DSysClkCtrl_ClkSel_d4                            0x2
    #define        Gbl_gfx3DSysClkCtrl_ClkSel_d6                            0x3
    #define        Gbl_gfx3DSysClkCtrl_ClkSel_d8                            0x4
    #define        Gbl_gfx3DSysClkCtrl_ClkSel_d12                           0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_arcRefClkCtrl                           0x0234

    #define     BA_Gbl_arcRefClkCtrl_clkEN                     0x0234
    #define     B16Gbl_arcRefClkCtrl_clkEN                     0x0234
    #define   LSb32Gbl_arcRefClkCtrl_clkEN                        0
    #define   LSb16Gbl_arcRefClkCtrl_clkEN                        0
    #define       bGbl_arcRefClkCtrl_clkEN                     1
    #define   MSK32Gbl_arcRefClkCtrl_clkEN                        0x00000001
    #define        Gbl_arcRefClkCtrl_clkEN_enable                           0x1
    #define        Gbl_arcRefClkCtrl_clkEN_disable                          0x0

    #define     BA_Gbl_arcRefClkCtrl_ClkPllSel                 0x0234
    #define     B16Gbl_arcRefClkCtrl_ClkPllSel                 0x0234
    #define   LSb32Gbl_arcRefClkCtrl_ClkPllSel                    1
    #define   LSb16Gbl_arcRefClkCtrl_ClkPllSel                    1
    #define       bGbl_arcRefClkCtrl_ClkPllSel                 3
    #define   MSK32Gbl_arcRefClkCtrl_ClkPllSel                    0x0000000E
    #define        Gbl_arcRefClkCtrl_ClkPllSel_AVPllB4                      0x0
    #define        Gbl_arcRefClkCtrl_ClkPllSel_AVPllB5                      0x1
    #define        Gbl_arcRefClkCtrl_ClkPllSel_AVPllB6                      0x2
    #define        Gbl_arcRefClkCtrl_ClkPllSel_AVPllB7                      0x3
    #define        Gbl_arcRefClkCtrl_ClkPllSel_SYSPll                       0x4

    #define     BA_Gbl_arcRefClkCtrl_ClkPllSwitch              0x0234
    #define     B16Gbl_arcRefClkCtrl_ClkPllSwitch              0x0234
    #define   LSb32Gbl_arcRefClkCtrl_ClkPllSwitch                 4
    #define   LSb16Gbl_arcRefClkCtrl_ClkPllSwitch                 4
    #define       bGbl_arcRefClkCtrl_ClkPllSwitch              1
    #define   MSK32Gbl_arcRefClkCtrl_ClkPllSwitch                 0x00000010
    #define        Gbl_arcRefClkCtrl_ClkPllSwitch_SYSPLL                    0x0
    #define        Gbl_arcRefClkCtrl_ClkPllSwitch_AVPLL                     0x1

    #define     BA_Gbl_arcRefClkCtrl_ClkSwitch                 0x0234
    #define     B16Gbl_arcRefClkCtrl_ClkSwitch                 0x0234
    #define   LSb32Gbl_arcRefClkCtrl_ClkSwitch                    5
    #define   LSb16Gbl_arcRefClkCtrl_ClkSwitch                    5
    #define       bGbl_arcRefClkCtrl_ClkSwitch                 1
    #define   MSK32Gbl_arcRefClkCtrl_ClkSwitch                    0x00000020
    #define        Gbl_arcRefClkCtrl_ClkSwitch_SrcClk                       0x0
    #define        Gbl_arcRefClkCtrl_ClkSwitch_DivClk                       0x1

    #define     BA_Gbl_arcRefClkCtrl_ClkD3Switch               0x0234
    #define     B16Gbl_arcRefClkCtrl_ClkD3Switch               0x0234
    #define   LSb32Gbl_arcRefClkCtrl_ClkD3Switch                  6
    #define   LSb16Gbl_arcRefClkCtrl_ClkD3Switch                  6
    #define       bGbl_arcRefClkCtrl_ClkD3Switch               1
    #define   MSK32Gbl_arcRefClkCtrl_ClkD3Switch                  0x00000040
    #define        Gbl_arcRefClkCtrl_ClkD3Switch_NonDiv3Clk                 0x0
    #define        Gbl_arcRefClkCtrl_ClkD3Switch_Div3Clk                    0x1

    #define     BA_Gbl_arcRefClkCtrl_ClkSel                    0x0234
    #define     B16Gbl_arcRefClkCtrl_ClkSel                    0x0234
    #define   LSb32Gbl_arcRefClkCtrl_ClkSel                       7
    #define   LSb16Gbl_arcRefClkCtrl_ClkSel                       7
    #define       bGbl_arcRefClkCtrl_ClkSel                    3
    #define   MSK32Gbl_arcRefClkCtrl_ClkSel                       0x00000380
    #define        Gbl_arcRefClkCtrl_ClkSel_d2                              0x1
    #define        Gbl_arcRefClkCtrl_ClkSel_d4                              0x2
    #define        Gbl_arcRefClkCtrl_ClkSel_d6                              0x3
    #define        Gbl_arcRefClkCtrl_ClkSel_d8                              0x4
    #define        Gbl_arcRefClkCtrl_ClkSel_d12                             0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vipClkCtrl                              0x0238

    #define     BA_Gbl_vipClkCtrl_clkEN                        0x0238
    #define     B16Gbl_vipClkCtrl_clkEN                        0x0238
    #define   LSb32Gbl_vipClkCtrl_clkEN                           0
    #define   LSb16Gbl_vipClkCtrl_clkEN                           0
    #define       bGbl_vipClkCtrl_clkEN                        1
    #define   MSK32Gbl_vipClkCtrl_clkEN                           0x00000001
    #define        Gbl_vipClkCtrl_clkEN_enable                              0x1
    #define        Gbl_vipClkCtrl_clkEN_disable                             0x0

    #define     BA_Gbl_vipClkCtrl_ClkPllSel                    0x0238
    #define     B16Gbl_vipClkCtrl_ClkPllSel                    0x0238
    #define   LSb32Gbl_vipClkCtrl_ClkPllSel                       1
    #define   LSb16Gbl_vipClkCtrl_ClkPllSel                       1
    #define       bGbl_vipClkCtrl_ClkPllSel                    3
    #define   MSK32Gbl_vipClkCtrl_ClkPllSel                       0x0000000E
    #define        Gbl_vipClkCtrl_ClkPllSel_AVPllB4                         0x0
    #define        Gbl_vipClkCtrl_ClkPllSel_AVPllB5                         0x1
    #define        Gbl_vipClkCtrl_ClkPllSel_AVPllB6                         0x2
    #define        Gbl_vipClkCtrl_ClkPllSel_AVPllB7                         0x3
    #define        Gbl_vipClkCtrl_ClkPllSel_SYSPll                          0x4

    #define     BA_Gbl_vipClkCtrl_ClkPllSwitch                 0x0238
    #define     B16Gbl_vipClkCtrl_ClkPllSwitch                 0x0238
    #define   LSb32Gbl_vipClkCtrl_ClkPllSwitch                    4
    #define   LSb16Gbl_vipClkCtrl_ClkPllSwitch                    4
    #define       bGbl_vipClkCtrl_ClkPllSwitch                 1
    #define   MSK32Gbl_vipClkCtrl_ClkPllSwitch                    0x00000010
    #define        Gbl_vipClkCtrl_ClkPllSwitch_SYSPLL                       0x0
    #define        Gbl_vipClkCtrl_ClkPllSwitch_AVPLL                        0x1

    #define     BA_Gbl_vipClkCtrl_ClkSwitch                    0x0238
    #define     B16Gbl_vipClkCtrl_ClkSwitch                    0x0238
    #define   LSb32Gbl_vipClkCtrl_ClkSwitch                       5
    #define   LSb16Gbl_vipClkCtrl_ClkSwitch                       5
    #define       bGbl_vipClkCtrl_ClkSwitch                    1
    #define   MSK32Gbl_vipClkCtrl_ClkSwitch                       0x00000020
    #define        Gbl_vipClkCtrl_ClkSwitch_SrcClk                          0x0
    #define        Gbl_vipClkCtrl_ClkSwitch_DivClk                          0x1

    #define     BA_Gbl_vipClkCtrl_ClkD3Switch                  0x0238
    #define     B16Gbl_vipClkCtrl_ClkD3Switch                  0x0238
    #define   LSb32Gbl_vipClkCtrl_ClkD3Switch                     6
    #define   LSb16Gbl_vipClkCtrl_ClkD3Switch                     6
    #define       bGbl_vipClkCtrl_ClkD3Switch                  1
    #define   MSK32Gbl_vipClkCtrl_ClkD3Switch                     0x00000040
    #define        Gbl_vipClkCtrl_ClkD3Switch_NonDiv3Clk                    0x0
    #define        Gbl_vipClkCtrl_ClkD3Switch_Div3Clk                       0x1

    #define     BA_Gbl_vipClkCtrl_ClkSel                       0x0238
    #define     B16Gbl_vipClkCtrl_ClkSel                       0x0238
    #define   LSb32Gbl_vipClkCtrl_ClkSel                          7
    #define   LSb16Gbl_vipClkCtrl_ClkSel                          7
    #define       bGbl_vipClkCtrl_ClkSel                       3
    #define   MSK32Gbl_vipClkCtrl_ClkSel                          0x00000380
    #define        Gbl_vipClkCtrl_ClkSel_d2                                 0x1
    #define        Gbl_vipClkCtrl_ClkSel_d4                                 0x2
    #define        Gbl_vipClkCtrl_ClkSel_d6                                 0x3
    #define        Gbl_vipClkCtrl_ClkSel_d8                                 0x4
    #define        Gbl_vipClkCtrl_ClkSel_d12                                0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdioXinClkCtrl                          0x023C

    #define     BA_Gbl_sdioXinClkCtrl_ClkEN                    0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkEN                    0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkEN                       0
    #define   LSb16Gbl_sdioXinClkCtrl_ClkEN                       0
    #define       bGbl_sdioXinClkCtrl_ClkEN                    1
    #define   MSK32Gbl_sdioXinClkCtrl_ClkEN                       0x00000001
    #define        Gbl_sdioXinClkCtrl_ClkEN_enable                          0x1
    #define        Gbl_sdioXinClkCtrl_ClkEN_disable                         0x0

    #define     BA_Gbl_sdioXinClkCtrl_ClkPllSel                0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkPllSel                0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkPllSel                   1
    #define   LSb16Gbl_sdioXinClkCtrl_ClkPllSel                   1
    #define       bGbl_sdioXinClkCtrl_ClkPllSel                3
    #define   MSK32Gbl_sdioXinClkCtrl_ClkPllSel                   0x0000000E
    #define        Gbl_sdioXinClkCtrl_ClkPllSel_AVPllB4                     0x0
    #define        Gbl_sdioXinClkCtrl_ClkPllSel_AVPllB5                     0x1
    #define        Gbl_sdioXinClkCtrl_ClkPllSel_AVPllB6                     0x2
    #define        Gbl_sdioXinClkCtrl_ClkPllSel_AVPllB7                     0x3
    #define        Gbl_sdioXinClkCtrl_ClkPllSel_SYSPll                      0x4

    #define     BA_Gbl_sdioXinClkCtrl_ClkPllSwitch             0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkPllSwitch             0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkPllSwitch                4
    #define   LSb16Gbl_sdioXinClkCtrl_ClkPllSwitch                4
    #define       bGbl_sdioXinClkCtrl_ClkPllSwitch             1
    #define   MSK32Gbl_sdioXinClkCtrl_ClkPllSwitch                0x00000010
    #define        Gbl_sdioXinClkCtrl_ClkPllSwitch_SYSPLL                   0x0
    #define        Gbl_sdioXinClkCtrl_ClkPllSwitch_AVPLL                    0x1

    #define     BA_Gbl_sdioXinClkCtrl_ClkSwitch                0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkSwitch                0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkSwitch                   5
    #define   LSb16Gbl_sdioXinClkCtrl_ClkSwitch                   5
    #define       bGbl_sdioXinClkCtrl_ClkSwitch                1
    #define   MSK32Gbl_sdioXinClkCtrl_ClkSwitch                   0x00000020
    #define        Gbl_sdioXinClkCtrl_ClkSwitch_SrcClk                      0x0
    #define        Gbl_sdioXinClkCtrl_ClkSwitch_DivClk                      0x1

    #define     BA_Gbl_sdioXinClkCtrl_ClkD3Switch              0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkD3Switch              0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkD3Switch                 6
    #define   LSb16Gbl_sdioXinClkCtrl_ClkD3Switch                 6
    #define       bGbl_sdioXinClkCtrl_ClkD3Switch              1
    #define   MSK32Gbl_sdioXinClkCtrl_ClkD3Switch                 0x00000040
    #define        Gbl_sdioXinClkCtrl_ClkD3Switch_NonDiv3Clk                0x0
    #define        Gbl_sdioXinClkCtrl_ClkD3Switch_Div3Clk                   0x1

    #define     BA_Gbl_sdioXinClkCtrl_ClkSel                   0x023C
    #define     B16Gbl_sdioXinClkCtrl_ClkSel                   0x023C
    #define   LSb32Gbl_sdioXinClkCtrl_ClkSel                      7
    #define   LSb16Gbl_sdioXinClkCtrl_ClkSel                      7
    #define       bGbl_sdioXinClkCtrl_ClkSel                   3
    #define   MSK32Gbl_sdioXinClkCtrl_ClkSel                      0x00000380
    #define        Gbl_sdioXinClkCtrl_ClkSel_d2                             0x1
    #define        Gbl_sdioXinClkCtrl_ClkSel_d4                             0x2
    #define        Gbl_sdioXinClkCtrl_ClkSel_d6                             0x3
    #define        Gbl_sdioXinClkCtrl_ClkSel_d8                             0x4
    #define        Gbl_sdioXinClkCtrl_ClkSel_d12                            0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdio1XinClkCtrl                         0x0240

    #define     BA_Gbl_sdio1XinClkCtrl_ClkEN                   0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkEN                   0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkEN                      0
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkEN                      0
    #define       bGbl_sdio1XinClkCtrl_ClkEN                   1
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkEN                      0x00000001
    #define        Gbl_sdio1XinClkCtrl_ClkEN_enable                         0x1
    #define        Gbl_sdio1XinClkCtrl_ClkEN_disable                        0x0

    #define     BA_Gbl_sdio1XinClkCtrl_ClkPllSel               0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkPllSel               0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkPllSel                  1
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkPllSel                  1
    #define       bGbl_sdio1XinClkCtrl_ClkPllSel               3
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkPllSel                  0x0000000E
    #define        Gbl_sdio1XinClkCtrl_ClkPllSel_AVPllB4                    0x0
    #define        Gbl_sdio1XinClkCtrl_ClkPllSel_AVPllB5                    0x1
    #define        Gbl_sdio1XinClkCtrl_ClkPllSel_AVPllB6                    0x2
    #define        Gbl_sdio1XinClkCtrl_ClkPllSel_AVPllB7                    0x3
    #define        Gbl_sdio1XinClkCtrl_ClkPllSel_SYSPll                     0x4

    #define     BA_Gbl_sdio1XinClkCtrl_ClkPllSwitch            0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkPllSwitch            0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkPllSwitch               4
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkPllSwitch               4
    #define       bGbl_sdio1XinClkCtrl_ClkPllSwitch            1
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkPllSwitch               0x00000010
    #define        Gbl_sdio1XinClkCtrl_ClkPllSwitch_SYSPLL                  0x0
    #define        Gbl_sdio1XinClkCtrl_ClkPllSwitch_AVPLL                   0x1

    #define     BA_Gbl_sdio1XinClkCtrl_ClkSwitch               0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkSwitch               0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkSwitch                  5
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkSwitch                  5
    #define       bGbl_sdio1XinClkCtrl_ClkSwitch               1
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkSwitch                  0x00000020
    #define        Gbl_sdio1XinClkCtrl_ClkSwitch_SrcClk                     0x0
    #define        Gbl_sdio1XinClkCtrl_ClkSwitch_DivClk                     0x1

    #define     BA_Gbl_sdio1XinClkCtrl_ClkD3Switch             0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkD3Switch             0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkD3Switch                6
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkD3Switch                6
    #define       bGbl_sdio1XinClkCtrl_ClkD3Switch             1
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkD3Switch                0x00000040
    #define        Gbl_sdio1XinClkCtrl_ClkD3Switch_NonDiv3Clk               0x0
    #define        Gbl_sdio1XinClkCtrl_ClkD3Switch_Div3Clk                  0x1

    #define     BA_Gbl_sdio1XinClkCtrl_ClkSel                  0x0240
    #define     B16Gbl_sdio1XinClkCtrl_ClkSel                  0x0240
    #define   LSb32Gbl_sdio1XinClkCtrl_ClkSel                     7
    #define   LSb16Gbl_sdio1XinClkCtrl_ClkSel                     7
    #define       bGbl_sdio1XinClkCtrl_ClkSel                  3
    #define   MSK32Gbl_sdio1XinClkCtrl_ClkSel                     0x00000380
    #define        Gbl_sdio1XinClkCtrl_ClkSel_d2                            0x1
    #define        Gbl_sdio1XinClkCtrl_ClkSel_d4                            0x2
    #define        Gbl_sdio1XinClkCtrl_ClkSel_d6                            0x3
    #define        Gbl_sdio1XinClkCtrl_ClkSel_d8                            0x4
    #define        Gbl_sdio1XinClkCtrl_ClkSel_d12                           0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DExtraClkCtrl                       0x0244

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkEN                 0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkEN                 0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkEN                    0
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkEN                    0
    #define       bGbl_gfx3DExtraClkCtrl_ClkEN                 1
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkEN                    0x00000001
    #define        Gbl_gfx3DExtraClkCtrl_ClkEN_enable                       0x1
    #define        Gbl_gfx3DExtraClkCtrl_ClkEN_disable                      0x0

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkPllSel             0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkPllSel             0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkPllSel                1
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkPllSel                1
    #define       bGbl_gfx3DExtraClkCtrl_ClkPllSel             3
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkPllSel                0x0000000E
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSel_AVPllB4                  0x0
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSel_AVPllB5                  0x1
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSel_AVPllB6                  0x2
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSel_AVPllB7                  0x3
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSel_SYSPll                   0x4

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkPllSwitch          0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkPllSwitch          0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkPllSwitch             4
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkPllSwitch             4
    #define       bGbl_gfx3DExtraClkCtrl_ClkPllSwitch          1
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkPllSwitch             0x00000010
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSwitch_SYSPLL                0x0
    #define        Gbl_gfx3DExtraClkCtrl_ClkPllSwitch_AVPLL                 0x1

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkSwitch             0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkSwitch             0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkSwitch                5
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkSwitch                5
    #define       bGbl_gfx3DExtraClkCtrl_ClkSwitch             1
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkSwitch                0x00000020
    #define        Gbl_gfx3DExtraClkCtrl_ClkSwitch_SrcClk                   0x0
    #define        Gbl_gfx3DExtraClkCtrl_ClkSwitch_DivClk                   0x1

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkD3Switch           0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkD3Switch           0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkD3Switch              6
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkD3Switch              6
    #define       bGbl_gfx3DExtraClkCtrl_ClkD3Switch           1
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkD3Switch              0x00000040
    #define        Gbl_gfx3DExtraClkCtrl_ClkD3Switch_NonDiv3Clk              0x0
    #define        Gbl_gfx3DExtraClkCtrl_ClkD3Switch_Div3Clk                0x1

    #define     BA_Gbl_gfx3DExtraClkCtrl_ClkSel                0x0244
    #define     B16Gbl_gfx3DExtraClkCtrl_ClkSel                0x0244
    #define   LSb32Gbl_gfx3DExtraClkCtrl_ClkSel                   7
    #define   LSb16Gbl_gfx3DExtraClkCtrl_ClkSel                   7
    #define       bGbl_gfx3DExtraClkCtrl_ClkSel                3
    #define   MSK32Gbl_gfx3DExtraClkCtrl_ClkSel                   0x00000380
    #define        Gbl_gfx3DExtraClkCtrl_ClkSel_d2                          0x1
    #define        Gbl_gfx3DExtraClkCtrl_ClkSel_d4                          0x2
    #define        Gbl_gfx3DExtraClkCtrl_ClkSel_d6                          0x3
    #define        Gbl_gfx3DExtraClkCtrl_ClkSel_d8                          0x4
    #define        Gbl_gfx3DExtraClkCtrl_ClkSel_d12                         0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DReset                              0x0248

    #define     BA_Gbl_gfx3DReset_SyncReset                    0x0248
    #define     B16Gbl_gfx3DReset_SyncReset                    0x0248
    #define   LSb32Gbl_gfx3DReset_SyncReset                       0
    #define   LSb16Gbl_gfx3DReset_SyncReset                       0
    #define       bGbl_gfx3DReset_SyncReset                    1
    #define   MSK32Gbl_gfx3DReset_SyncReset                       0x00000001
    #define        Gbl_gfx3DReset_SyncReset_assert                          0x1
    #define        Gbl_gfx3DReset_SyncReset_deassert                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gc360ClkCtrl                            0x024C

    #define     BA_Gbl_gc360ClkCtrl_ClkEN                      0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkEN                      0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkEN                         0
    #define   LSb16Gbl_gc360ClkCtrl_ClkEN                         0
    #define       bGbl_gc360ClkCtrl_ClkEN                      1
    #define   MSK32Gbl_gc360ClkCtrl_ClkEN                         0x00000001
    #define        Gbl_gc360ClkCtrl_ClkEN_enable                            0x1
    #define        Gbl_gc360ClkCtrl_ClkEN_disable                           0x0

    #define     BA_Gbl_gc360ClkCtrl_ClkPllSel                  0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkPllSel                  0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkPllSel                     1
    #define   LSb16Gbl_gc360ClkCtrl_ClkPllSel                     1
    #define       bGbl_gc360ClkCtrl_ClkPllSel                  3
    #define   MSK32Gbl_gc360ClkCtrl_ClkPllSel                     0x0000000E
    #define        Gbl_gc360ClkCtrl_ClkPllSel_AVPllB4                       0x0
    #define        Gbl_gc360ClkCtrl_ClkPllSel_AVPllB5                       0x1
    #define        Gbl_gc360ClkCtrl_ClkPllSel_AVPllB6                       0x2
    #define        Gbl_gc360ClkCtrl_ClkPllSel_AVPllB7                       0x3
    #define        Gbl_gc360ClkCtrl_ClkPllSel_SYSPll                        0x4

    #define     BA_Gbl_gc360ClkCtrl_ClkPllSwitch               0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkPllSwitch               0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkPllSwitch                  4
    #define   LSb16Gbl_gc360ClkCtrl_ClkPllSwitch                  4
    #define       bGbl_gc360ClkCtrl_ClkPllSwitch               1
    #define   MSK32Gbl_gc360ClkCtrl_ClkPllSwitch                  0x00000010
    #define        Gbl_gc360ClkCtrl_ClkPllSwitch_SYSPLL                     0x0
    #define        Gbl_gc360ClkCtrl_ClkPllSwitch_AVPLL                      0x1

    #define     BA_Gbl_gc360ClkCtrl_ClkSwitch                  0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkSwitch                  0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkSwitch                     5
    #define   LSb16Gbl_gc360ClkCtrl_ClkSwitch                     5
    #define       bGbl_gc360ClkCtrl_ClkSwitch                  1
    #define   MSK32Gbl_gc360ClkCtrl_ClkSwitch                     0x00000020
    #define        Gbl_gc360ClkCtrl_ClkSwitch_SrcClk                        0x0
    #define        Gbl_gc360ClkCtrl_ClkSwitch_DivClk                        0x1

    #define     BA_Gbl_gc360ClkCtrl_ClkD3Switch                0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkD3Switch                0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkD3Switch                   6
    #define   LSb16Gbl_gc360ClkCtrl_ClkD3Switch                   6
    #define       bGbl_gc360ClkCtrl_ClkD3Switch                1
    #define   MSK32Gbl_gc360ClkCtrl_ClkD3Switch                   0x00000040
    #define        Gbl_gc360ClkCtrl_ClkD3Switch_NonDiv3Clk                  0x0
    #define        Gbl_gc360ClkCtrl_ClkD3Switch_Div3Clk                     0x1

    #define     BA_Gbl_gc360ClkCtrl_ClkSel                     0x024C
    #define     B16Gbl_gc360ClkCtrl_ClkSel                     0x024C
    #define   LSb32Gbl_gc360ClkCtrl_ClkSel                        7
    #define   LSb16Gbl_gc360ClkCtrl_ClkSel                        7
    #define       bGbl_gc360ClkCtrl_ClkSel                     3
    #define   MSK32Gbl_gc360ClkCtrl_ClkSel                        0x00000380
    #define        Gbl_gc360ClkCtrl_ClkSel_d2                               0x1
    #define        Gbl_gc360ClkCtrl_ClkSel_d4                               0x2
    #define        Gbl_gc360ClkCtrl_ClkSel_d6                               0x3
    #define        Gbl_gc360ClkCtrl_ClkSel_d8                               0x4
    #define        Gbl_gc360ClkCtrl_ClkSel_d12                              0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdioDllMstRef                           0x0250

    #define     BA_Gbl_sdioDllMstRef_ClkEN                     0x0250
    #define     B16Gbl_sdioDllMstRef_ClkEN                     0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkEN                        0
    #define   LSb16Gbl_sdioDllMstRef_ClkEN                        0
    #define       bGbl_sdioDllMstRef_ClkEN                     1
    #define   MSK32Gbl_sdioDllMstRef_ClkEN                        0x00000001
    #define        Gbl_sdioDllMstRef_ClkEN_enable                           0x1
    #define        Gbl_sdioDllMstRef_ClkEN_disable                          0x0

    #define     BA_Gbl_sdioDllMstRef_ClkPllSel                 0x0250
    #define     B16Gbl_sdioDllMstRef_ClkPllSel                 0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkPllSel                    1
    #define   LSb16Gbl_sdioDllMstRef_ClkPllSel                    1
    #define       bGbl_sdioDllMstRef_ClkPllSel                 3
    #define   MSK32Gbl_sdioDllMstRef_ClkPllSel                    0x0000000E
    #define        Gbl_sdioDllMstRef_ClkPllSel_AVPllB4                      0x0
    #define        Gbl_sdioDllMstRef_ClkPllSel_AVPllB5                      0x1
    #define        Gbl_sdioDllMstRef_ClkPllSel_AVPllB6                      0x2
    #define        Gbl_sdioDllMstRef_ClkPllSel_AVPllB7                      0x3
    #define        Gbl_sdioDllMstRef_ClkPllSel_SYSPll                       0x4

    #define     BA_Gbl_sdioDllMstRef_ClkPllSwitch              0x0250
    #define     B16Gbl_sdioDllMstRef_ClkPllSwitch              0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkPllSwitch                 4
    #define   LSb16Gbl_sdioDllMstRef_ClkPllSwitch                 4
    #define       bGbl_sdioDllMstRef_ClkPllSwitch              1
    #define   MSK32Gbl_sdioDllMstRef_ClkPllSwitch                 0x00000010
    #define        Gbl_sdioDllMstRef_ClkPllSwitch_SYSPLL                    0x0
    #define        Gbl_sdioDllMstRef_ClkPllSwitch_AVPLL                     0x1

    #define     BA_Gbl_sdioDllMstRef_ClkSwitch                 0x0250
    #define     B16Gbl_sdioDllMstRef_ClkSwitch                 0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkSwitch                    5
    #define   LSb16Gbl_sdioDllMstRef_ClkSwitch                    5
    #define       bGbl_sdioDllMstRef_ClkSwitch                 1
    #define   MSK32Gbl_sdioDllMstRef_ClkSwitch                    0x00000020
    #define        Gbl_sdioDllMstRef_ClkSwitch_SrcClk                       0x0
    #define        Gbl_sdioDllMstRef_ClkSwitch_DivClk                       0x1

    #define     BA_Gbl_sdioDllMstRef_ClkD3Switch               0x0250
    #define     B16Gbl_sdioDllMstRef_ClkD3Switch               0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkD3Switch                  6
    #define   LSb16Gbl_sdioDllMstRef_ClkD3Switch                  6
    #define       bGbl_sdioDllMstRef_ClkD3Switch               1
    #define   MSK32Gbl_sdioDllMstRef_ClkD3Switch                  0x00000040
    #define        Gbl_sdioDllMstRef_ClkD3Switch_NonDiv3Clk                 0x0
    #define        Gbl_sdioDllMstRef_ClkD3Switch_Div3Clk                    0x1

    #define     BA_Gbl_sdioDllMstRef_ClkSel                    0x0250
    #define     B16Gbl_sdioDllMstRef_ClkSel                    0x0250
    #define   LSb32Gbl_sdioDllMstRef_ClkSel                       7
    #define   LSb16Gbl_sdioDllMstRef_ClkSel                       7
    #define       bGbl_sdioDllMstRef_ClkSel                    3
    #define   MSK32Gbl_sdioDllMstRef_ClkSel                       0x00000380
    #define        Gbl_sdioDllMstRef_ClkSel_d2                              0x1
    #define        Gbl_sdioDllMstRef_ClkSel_d4                              0x2
    #define        Gbl_sdioDllMstRef_ClkSel_d6                              0x3
    #define        Gbl_sdioDllMstRef_ClkSel_d8                              0x4
    #define        Gbl_sdioDllMstRef_ClkSel_d12                             0x5
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdioDllMstCtrl                          0x0254

    #define     BA_Gbl_sdioDllMstCtrl_PH_SEL1                  0x0254
    #define     B16Gbl_sdioDllMstCtrl_PH_SEL1                  0x0254
    #define   LSb32Gbl_sdioDllMstCtrl_PH_SEL1                     0
    #define   LSb16Gbl_sdioDllMstCtrl_PH_SEL1                     0
    #define       bGbl_sdioDllMstCtrl_PH_SEL1                  5
    #define   MSK32Gbl_sdioDllMstCtrl_PH_SEL1                     0x0000001F

    #define     BA_Gbl_sdioDllMstCtrl_PH_SEL2                  0x0254
    #define     B16Gbl_sdioDllMstCtrl_PH_SEL2                  0x0254
    #define   LSb32Gbl_sdioDllMstCtrl_PH_SEL2                     5
    #define   LSb16Gbl_sdioDllMstCtrl_PH_SEL2                     5
    #define       bGbl_sdioDllMstCtrl_PH_SEL2                  5
    #define   MSK32Gbl_sdioDllMstCtrl_PH_SEL2                     0x000003E0

    #define     BA_Gbl_sdioDllMstCtrl_PH_SEL3                  0x0255
    #define     B16Gbl_sdioDllMstCtrl_PH_SEL3                  0x0254
    #define   LSb32Gbl_sdioDllMstCtrl_PH_SEL3                     10
    #define   LSb16Gbl_sdioDllMstCtrl_PH_SEL3                     10
    #define       bGbl_sdioDllMstCtrl_PH_SEL3                  5
    #define   MSK32Gbl_sdioDllMstCtrl_PH_SEL3                     0x00007C00

    #define     BA_Gbl_sdioDllMstCtrl_PH_SEL4                  0x0255
    #define     B16Gbl_sdioDllMstCtrl_PH_SEL4                  0x0254
    #define   LSb32Gbl_sdioDllMstCtrl_PH_SEL4                     15
    #define   LSb16Gbl_sdioDllMstCtrl_PH_SEL4                     15
    #define       bGbl_sdioDllMstCtrl_PH_SEL4                  5
    #define   MSK32Gbl_sdioDllMstCtrl_PH_SEL4                     0x000F8000

    #define     BA_Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN           0x0256
    #define     B16Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN           0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN              20
    #define   LSb16Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN              4
    #define       bGbl_sdioDllMstCtrl_AUTO_UPDATE_EN           1
    #define   MSK32Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN              0x00100000

    #define     BA_Gbl_sdioDllMstCtrl_UPDATE_EN                0x0256
    #define     B16Gbl_sdioDllMstCtrl_UPDATE_EN                0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_UPDATE_EN                   21
    #define   LSb16Gbl_sdioDllMstCtrl_UPDATE_EN                   5
    #define       bGbl_sdioDllMstCtrl_UPDATE_EN                1
    #define   MSK32Gbl_sdioDllMstCtrl_UPDATE_EN                   0x00200000

    #define     BA_Gbl_sdioDllMstCtrl_RESET                    0x0256
    #define     B16Gbl_sdioDllMstCtrl_RESET                    0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_RESET                       22
    #define   LSb16Gbl_sdioDllMstCtrl_RESET                       6
    #define       bGbl_sdioDllMstCtrl_RESET                    1
    #define   MSK32Gbl_sdioDllMstCtrl_RESET                       0x00400000

    #define     BA_Gbl_sdioDllMstCtrl_GAIN2X                   0x0256
    #define     B16Gbl_sdioDllMstCtrl_GAIN2X                   0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_GAIN2X                      23
    #define   LSb16Gbl_sdioDllMstCtrl_GAIN2X                      7
    #define       bGbl_sdioDllMstCtrl_GAIN2X                   1
    #define   MSK32Gbl_sdioDllMstCtrl_GAIN2X                      0x00800000

    #define     BA_Gbl_sdioDllMstCtrl_TEST_EN                  0x0257
    #define     B16Gbl_sdioDllMstCtrl_TEST_EN                  0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_TEST_EN                     24
    #define   LSb16Gbl_sdioDllMstCtrl_TEST_EN                     8
    #define       bGbl_sdioDllMstCtrl_TEST_EN                  1
    #define   MSK32Gbl_sdioDllMstCtrl_TEST_EN                     0x01000000

    #define     BA_Gbl_sdioDllMstCtrl_BYPASS_EN                0x0257
    #define     B16Gbl_sdioDllMstCtrl_BYPASS_EN                0x0256
    #define   LSb32Gbl_sdioDllMstCtrl_BYPASS_EN                   25
    #define   LSb16Gbl_sdioDllMstCtrl_BYPASS_EN                   9
    #define       bGbl_sdioDllMstCtrl_BYPASS_EN                1
    #define   MSK32Gbl_sdioDllMstCtrl_BYPASS_EN                   0x02000000

    #define     RA_Gbl_sdioDllMstCtrl1                         0x0258

    #define     BA_Gbl_sdioDllMstCtrl_DELAY_TEST               0x0258
    #define     B16Gbl_sdioDllMstCtrl_DELAY_TEST               0x0258
    #define   LSb32Gbl_sdioDllMstCtrl_DELAY_TEST                  0
    #define   LSb16Gbl_sdioDllMstCtrl_DELAY_TEST                  0
    #define       bGbl_sdioDllMstCtrl_DELAY_TEST               9
    #define   MSK32Gbl_sdioDllMstCtrl_DELAY_TEST                  0x000001FF

    #define     BA_Gbl_sdioDllMstCtrl_RESERVE                  0x0259
    #define     B16Gbl_sdioDllMstCtrl_RESERVE                  0x0258
    #define   LSb32Gbl_sdioDllMstCtrl_RESERVE                     9
    #define   LSb16Gbl_sdioDllMstCtrl_RESERVE                     9
    #define       bGbl_sdioDllMstCtrl_RESERVE                  5
    #define   MSK32Gbl_sdioDllMstCtrl_RESERVE                     0x00003E00
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdioDllMstStatus                        0x025C

    #define     BA_Gbl_sdioDllMstStatus_DELAY_CTRL2            0x025C
    #define     B16Gbl_sdioDllMstStatus_DELAY_CTRL2            0x025C
    #define   LSb32Gbl_sdioDllMstStatus_DELAY_CTRL2               0
    #define   LSb16Gbl_sdioDllMstStatus_DELAY_CTRL2               0
    #define       bGbl_sdioDllMstStatus_DELAY_CTRL2            9
    #define   MSK32Gbl_sdioDllMstStatus_DELAY_CTRL2               0x000001FF

    #define     BA_Gbl_sdioDllMstStatus_DELAY_CTRL3            0x025D
    #define     B16Gbl_sdioDllMstStatus_DELAY_CTRL3            0x025C
    #define   LSb32Gbl_sdioDllMstStatus_DELAY_CTRL3               9
    #define   LSb16Gbl_sdioDllMstStatus_DELAY_CTRL3               9
    #define       bGbl_sdioDllMstStatus_DELAY_CTRL3            9
    #define   MSK32Gbl_sdioDllMstStatus_DELAY_CTRL3               0x0003FE00

    #define     BA_Gbl_sdioDllMstStatus_DELAY_CTRL4            0x025E
    #define     B16Gbl_sdioDllMstStatus_DELAY_CTRL4            0x025E
    #define   LSb32Gbl_sdioDllMstStatus_DELAY_CTRL4               18
    #define   LSb16Gbl_sdioDllMstStatus_DELAY_CTRL4               2
    #define       bGbl_sdioDllMstStatus_DELAY_CTRL4            9
    #define   MSK32Gbl_sdioDllMstStatus_DELAY_CTRL4               0x07FC0000

    #define     BA_Gbl_sdioDllMstStatus_PRE_LOCK               0x025F
    #define     B16Gbl_sdioDllMstStatus_PRE_LOCK               0x025E
    #define   LSb32Gbl_sdioDllMstStatus_PRE_LOCK                  27
    #define   LSb16Gbl_sdioDllMstStatus_PRE_LOCK                  11
    #define       bGbl_sdioDllMstStatus_PRE_LOCK               1
    #define   MSK32Gbl_sdioDllMstStatus_PRE_LOCK                  0x08000000

    #define     BA_Gbl_sdioDllMstStatus_DLL_LOCK               0x025F
    #define     B16Gbl_sdioDllMstStatus_DLL_LOCK               0x025E
    #define   LSb32Gbl_sdioDllMstStatus_DLL_LOCK                  28
    #define   LSb16Gbl_sdioDllMstStatus_DLL_LOCK                  12
    #define       bGbl_sdioDllMstStatus_DLL_LOCK               1
    #define   MSK32Gbl_sdioDllMstStatus_DLL_LOCK                  0x10000000

    #define     RA_Gbl_sdioDllMstStatus1                       0x0260

    #define     BA_Gbl_sdioDllMstStatus_DELAY_OUT              0x0260
    #define     B16Gbl_sdioDllMstStatus_DELAY_OUT              0x0260
    #define   LSb32Gbl_sdioDllMstStatus_DELAY_OUT                 0
    #define   LSb16Gbl_sdioDllMstStatus_DELAY_OUT                 0
    #define       bGbl_sdioDllMstStatus_DELAY_OUT              8
    #define   MSK32Gbl_sdioDllMstStatus_DELAY_OUT                 0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sdioPortSel                             0x0264

    #define     BA_Gbl_sdioPortSel_port0                       0x0264
    #define     B16Gbl_sdioPortSel_port0                       0x0264
    #define   LSb32Gbl_sdioPortSel_port0                          0
    #define   LSb16Gbl_sdioPortSel_port0                          0
    #define       bGbl_sdioPortSel_port0                       1
    #define   MSK32Gbl_sdioPortSel_port0                          0x00000001

    #define     BA_Gbl_sdioPortSel_port1                       0x0264
    #define     B16Gbl_sdioPortSel_port1                       0x0264
    #define   LSb32Gbl_sdioPortSel_port1                          1
    #define   LSb16Gbl_sdioPortSel_port1                          1
    #define       bGbl_sdioPortSel_port1                       1
    #define   MSK32Gbl_sdioPortSel_port1                          0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gc360Reset                              0x0268

    #define     BA_Gbl_gc360Reset_SyncReset                    0x0268
    #define     B16Gbl_gc360Reset_SyncReset                    0x0268
    #define   LSb32Gbl_gc360Reset_SyncReset                       0
    #define   LSb16Gbl_gc360Reset_SyncReset                       0
    #define       bGbl_gc360Reset_SyncReset                    1
    #define   MSK32Gbl_gc360Reset_SyncReset                       0x00000001
    #define        Gbl_gc360Reset_SyncReset_assert                          0x1
    #define        Gbl_gc360Reset_SyncReset_deassert                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SpdifRxReset                            0x026C

    #define     BA_Gbl_SpdifRxReset_SyncReset                  0x026C
    #define     B16Gbl_SpdifRxReset_SyncReset                  0x026C
    #define   LSb32Gbl_SpdifRxReset_SyncReset                     0
    #define   LSb16Gbl_SpdifRxReset_SyncReset                     0
    #define       bGbl_SpdifRxReset_SyncReset                  1
    #define   MSK32Gbl_SpdifRxReset_SyncReset                     0x00000001
    #define        Gbl_SpdifRxReset_SyncReset_assert                        0x1
    #define        Gbl_SpdifRxReset_SyncReset_deassert                      0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DDisRamClkGate                      0x0270

    #define     BA_Gbl_gfx3DDisRamClkGate_drcg                 0x0270
    #define     B16Gbl_gfx3DDisRamClkGate_drcg                 0x0270
    #define   LSb32Gbl_gfx3DDisRamClkGate_drcg                    0
    #define   LSb16Gbl_gfx3DDisRamClkGate_drcg                    0
    #define       bGbl_gfx3DDisRamClkGate_drcg                 1
    #define   MSK32Gbl_gfx3DDisRamClkGate_drcg                    0x00000001
    #define        Gbl_gfx3DDisRamClkGate_drcg_drcgActive                   0x1
    #define        Gbl_gfx3DDisRamClkGate_drcg_drcgInactive                 0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DResetStatus                        0x0274

    #define     BA_Gbl_gfx3DResetStatus_SyncReset              0x0274
    #define     B16Gbl_gfx3DResetStatus_SyncReset              0x0274
    #define   LSb32Gbl_gfx3DResetStatus_SyncReset                 0
    #define   LSb16Gbl_gfx3DResetStatus_SyncReset                 0
    #define       bGbl_gfx3DResetStatus_SyncReset              1
    #define   MSK32Gbl_gfx3DResetStatus_SyncReset                 0x00000001
    #define        Gbl_gfx3DResetStatus_SyncReset_assert                    0x1
    #define        Gbl_gfx3DResetStatus_SyncReset_deassert                  0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gc360DisRCG                             0x0278

    #define     BA_Gbl_gc360DisRCG_drcg                        0x0278
    #define     B16Gbl_gc360DisRCG_drcg                        0x0278
    #define   LSb32Gbl_gc360DisRCG_drcg                           0
    #define   LSb16Gbl_gc360DisRCG_drcg                           0
    #define       bGbl_gc360DisRCG_drcg                        1
    #define   MSK32Gbl_gc360DisRCG_drcg                           0x00000001
    #define        Gbl_gc360DisRCG_drcg_drcgActive                          0x1
    #define        Gbl_gc360DisRCG_drcg_drcgInactive                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gc360ResetStatus                        0x027C

    #define     BA_Gbl_gc360ResetStatus_SyncReset              0x027C
    #define     B16Gbl_gc360ResetStatus_SyncReset              0x027C
    #define   LSb32Gbl_gc360ResetStatus_SyncReset                 0
    #define   LSb16Gbl_gc360ResetStatus_SyncReset                 0
    #define       bGbl_gc360ResetStatus_SyncReset              1
    #define   MSK32Gbl_gc360ResetStatus_SyncReset                 0x00000001
    #define        Gbl_gc360ResetStatus_SyncReset_assert                    0x1
    #define        Gbl_gc360ResetStatus_SyncReset_deassert                  0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SpdifRxResetStatus                      0x0280

    #define     BA_Gbl_SpdifRxResetStatus_SyncReset            0x0280
    #define     B16Gbl_SpdifRxResetStatus_SyncReset            0x0280
    #define   LSb32Gbl_SpdifRxResetStatus_SyncReset               0
    #define   LSb16Gbl_SpdifRxResetStatus_SyncReset               0
    #define       bGbl_SpdifRxResetStatus_SyncReset            1
    #define   MSK32Gbl_SpdifRxResetStatus_SyncReset               0x00000001
    #define        Gbl_SpdifRxResetStatus_SyncReset_assert                  0x1
    #define        Gbl_SpdifRxResetStatus_SyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DroEnable                               0x0284

    #define     BA_Gbl_DroEnable_EnDroCounter                  0x0284
    #define     B16Gbl_DroEnable_EnDroCounter                  0x0284
    #define   LSb32Gbl_DroEnable_EnDroCounter                     0
    #define   LSb16Gbl_DroEnable_EnDroCounter                     0
    #define       bGbl_DroEnable_EnDroCounter                  1
    #define   MSK32Gbl_DroEnable_EnDroCounter                     0x00000001
    #define        Gbl_DroEnable_EnDroCounter_assert                        0x1
    #define        Gbl_DroEnable_EnDroCounter_deassert                      0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DroCounter                              0x0288

    #define     BA_Gbl_DroCounter_CountVal                     0x0288
    #define     B16Gbl_DroCounter_CountVal                     0x0288
    #define   LSb32Gbl_DroCounter_CountVal                        0
    #define   LSb16Gbl_DroCounter_CountVal                        0
    #define       bGbl_DroCounter_CountVal                     32
    #define   MSK32Gbl_DroCounter_CountVal                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DroDone                                 0x028C

    #define     BA_Gbl_DroDone_status                          0x028C
    #define     B16Gbl_DroDone_status                          0x028C
    #define   LSb32Gbl_DroDone_status                             0
    #define   LSb16Gbl_DroDone_status                             0
    #define       bGbl_DroDone_status                          1
    #define   MSK32Gbl_DroDone_status                             0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpussSvtDro0Cnt                         0x0290
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpussLvtDro1Cnt                         0x0294
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpussSvtDro2Cnt                         0x0298
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpussLvtDro3Cnt                         0x029C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vMetaSvtDro0Cnt                         0x02A0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vMetaLvtDro1Cnt                         0x02A4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DSvtDro0Cnt                         0x02A8
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DLvtDro1Cnt                         0x02AC
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_INT_ID                                  0x02B0

    #define     BA_Gbl_INT_ID_VALUE                            0x02B0
    #define     B16Gbl_INT_ID_VALUE                            0x02B0
    #define   LSb32Gbl_INT_ID_VALUE                               0
    #define   LSb16Gbl_INT_ID_VALUE                               0
    #define       bGbl_INT_ID_VALUE                            8
    #define   MSK32Gbl_INT_ID_VALUE                               0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_hdmirxFpllRefClk                        0x02B4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_hdmirxTClk                              0x02B8
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_hdmirxMClk                              0x02BC
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gethRgmiiClk                            0x02C0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pcieTestClk                             0x02C4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_stickyResetN                            0x02C8

    #define     BA_Gbl_stickyResetN_gethRgmiiMemRstn           0x02C8
    #define     B16Gbl_stickyResetN_gethRgmiiMemRstn           0x02C8
    #define   LSb32Gbl_stickyResetN_gethRgmiiMemRstn              0
    #define   LSb16Gbl_stickyResetN_gethRgmiiMemRstn              0
    #define       bGbl_stickyResetN_gethRgmiiMemRstn           1
    #define   MSK32Gbl_stickyResetN_gethRgmiiMemRstn              0x00000001
    #define        Gbl_stickyResetN_gethRgmiiMemRstn_asserted               0x0
    #define        Gbl_stickyResetN_gethRgmiiMemRstn_deasserted              0x1

    #define     BA_Gbl_stickyResetN_gethRgmiiRstn              0x02C8
    #define     B16Gbl_stickyResetN_gethRgmiiRstn              0x02C8
    #define   LSb32Gbl_stickyResetN_gethRgmiiRstn                 1
    #define   LSb16Gbl_stickyResetN_gethRgmiiRstn                 1
    #define       bGbl_stickyResetN_gethRgmiiRstn              1
    #define   MSK32Gbl_stickyResetN_gethRgmiiRstn                 0x00000002
    #define        Gbl_stickyResetN_gethRgmiiRstn_asserted                  0x0
    #define        Gbl_stickyResetN_gethRgmiiRstn_deasserted                0x1

    #define     BA_Gbl_stickyResetN_cpuPllRstn                 0x02C8
    #define     B16Gbl_stickyResetN_cpuPllRstn                 0x02C8
    #define   LSb32Gbl_stickyResetN_cpuPllRstn                    2
    #define   LSb16Gbl_stickyResetN_cpuPllRstn                    2
    #define       bGbl_stickyResetN_cpuPllRstn                 1
    #define   MSK32Gbl_stickyResetN_cpuPllRstn                    0x00000004
    #define        Gbl_stickyResetN_cpuPllRstn_asserted                     0x0
    #define        Gbl_stickyResetN_cpuPllRstn_deasserted                   0x1

    #define     BA_Gbl_stickyResetN_memPllRstn                 0x02C8
    #define     B16Gbl_stickyResetN_memPllRstn                 0x02C8
    #define   LSb32Gbl_stickyResetN_memPllRstn                    3
    #define   LSb16Gbl_stickyResetN_memPllRstn                    3
    #define       bGbl_stickyResetN_memPllRstn                 1
    #define   MSK32Gbl_stickyResetN_memPllRstn                    0x00000008
    #define        Gbl_stickyResetN_memPllRstn_asserted                     0x0
    #define        Gbl_stickyResetN_memPllRstn_deasserted                   0x1

    #define     BA_Gbl_stickyResetN_sysPllRstn                 0x02C8
    #define     B16Gbl_stickyResetN_sysPllRstn                 0x02C8
    #define   LSb32Gbl_stickyResetN_sysPllRstn                    4
    #define   LSb16Gbl_stickyResetN_sysPllRstn                    4
    #define       bGbl_stickyResetN_sysPllRstn                 1
    #define   MSK32Gbl_stickyResetN_sysPllRstn                    0x00000010
    #define        Gbl_stickyResetN_sysPllRstn_asserted                     0x0
    #define        Gbl_stickyResetN_sysPllRstn_deasserted                   0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gethRgmii_dll                           0x02CC

    #define     BA_Gbl_gethRgmii_dll_tx_delay                  0x02CC
    #define     B16Gbl_gethRgmii_dll_tx_delay                  0x02CC
    #define   LSb32Gbl_gethRgmii_dll_tx_delay                     0
    #define   LSb16Gbl_gethRgmii_dll_tx_delay                     0
    #define       bGbl_gethRgmii_dll_tx_delay                  9
    #define   MSK32Gbl_gethRgmii_dll_tx_delay                     0x000001FF

    #define     BA_Gbl_gethRgmii_dll_rx_delay                  0x02CD
    #define     B16Gbl_gethRgmii_dll_rx_delay                  0x02CC
    #define   LSb32Gbl_gethRgmii_dll_rx_delay                     9
    #define   LSb16Gbl_gethRgmii_dll_rx_delay                     9
    #define       bGbl_gethRgmii_dll_rx_delay                  9
    #define   MSK32Gbl_gethRgmii_dll_rx_delay                     0x0003FE00
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_funcSel                                 0x02D0

    #define     BA_Gbl_funcSel_pcie_sata_sel                   0x02D0
    #define     B16Gbl_funcSel_pcie_sata_sel                   0x02D0
    #define   LSb32Gbl_funcSel_pcie_sata_sel                      0
    #define   LSb16Gbl_funcSel_pcie_sata_sel                      0
    #define       bGbl_funcSel_pcie_sata_sel                   1
    #define   MSK32Gbl_funcSel_pcie_sata_sel                      0x00000001

    #define     BA_Gbl_funcSel_gmac_eth_sel                    0x02D0
    #define     B16Gbl_funcSel_gmac_eth_sel                    0x02D0
    #define   LSb32Gbl_funcSel_gmac_eth_sel                       1
    #define   LSb16Gbl_funcSel_gmac_eth_sel                       1
    #define       bGbl_funcSel_gmac_eth_sel                    1
    #define   MSK32Gbl_funcSel_gmac_eth_sel                       0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_efuse                                   0x02D4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_chipCntl                                0x0300

    #define     BA_Gbl_chipCntl_pcieDownMap                    0x0300
    #define     B16Gbl_chipCntl_pcieDownMap                    0x0300
    #define   LSb32Gbl_chipCntl_pcieDownMap                       0
    #define   LSb16Gbl_chipCntl_pcieDownMap                       0
    #define       bGbl_chipCntl_pcieDownMap                    1
    #define   MSK32Gbl_chipCntl_pcieDownMap                       0x00000001
    #define        Gbl_chipCntl_pcieDownMap_M512                            0x0
    #define        Gbl_chipCntl_pcieDownMap_M256                            0x1

    #define     BA_Gbl_chipCntl_pcie_rc                        0x0300
    #define     B16Gbl_chipCntl_pcie_rc                        0x0300
    #define   LSb32Gbl_chipCntl_pcie_rc                           1
    #define   LSb16Gbl_chipCntl_pcie_rc                           1
    #define       bGbl_chipCntl_pcie_rc                        1
    #define   MSK32Gbl_chipCntl_pcie_rc                           0x00000002
    #define        Gbl_chipCntl_pcie_rc_END_POINT                           0x0
    #define        Gbl_chipCntl_pcie_rc_ROOT_COMPLEX                        0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrapEn                             0x0304

    #define     BA_Gbl_bootStrapEn_pllPwrDownEn                0x0304
    #define     B16Gbl_bootStrapEn_pllPwrDownEn                0x0304
    #define   LSb32Gbl_bootStrapEn_pllPwrDownEn                   0
    #define   LSb16Gbl_bootStrapEn_pllPwrDownEn                   0
    #define       bGbl_bootStrapEn_pllPwrDownEn                1
    #define   MSK32Gbl_bootStrapEn_pllPwrDownEn                   0x00000001
    #define        Gbl_bootStrapEn_pllPwrDownEn_Disable                     0x0
    #define        Gbl_bootStrapEn_pllPwrDownEn_Enable                      0x1

    #define     BA_Gbl_bootStrapEn_refClk12P5MEn               0x0304
    #define     B16Gbl_bootStrapEn_refClk12P5MEn               0x0304
    #define   LSb32Gbl_bootStrapEn_refClk12P5MEn                  1
    #define   LSb16Gbl_bootStrapEn_refClk12P5MEn                  1
    #define       bGbl_bootStrapEn_refClk12P5MEn               1
    #define   MSK32Gbl_bootStrapEn_refClk12P5MEn                  0x00000002
    #define        Gbl_bootStrapEn_refClk12P5MEn_Disable                    0x0
    #define        Gbl_bootStrapEn_refClk12P5MEn_Enable                     0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_axiClkEn                                0x0308

    #define     BA_Gbl_axiClkEn_avioAxiClkEn                   0x0308
    #define     B16Gbl_axiClkEn_avioAxiClkEn                   0x0308
    #define   LSb32Gbl_axiClkEn_avioAxiClkEn                      0
    #define   LSb16Gbl_axiClkEn_avioAxiClkEn                      0
    #define       bGbl_axiClkEn_avioAxiClkEn                   1
    #define   MSK32Gbl_axiClkEn_avioAxiClkEn                      0x00000001
    #define        Gbl_axiClkEn_avioAxiClkEn_enable                         0x1
    #define        Gbl_axiClkEn_avioAxiClkEn_disable                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ahbClkEn                                0x030C

    #define     BA_Gbl_ahbClkEn_avioAhbClkEn                   0x030C
    #define     B16Gbl_ahbClkEn_avioAhbClkEn                   0x030C
    #define   LSb32Gbl_ahbClkEn_avioAhbClkEn                      0
    #define   LSb16Gbl_ahbClkEn_avioAhbClkEn                      0
    #define       bGbl_ahbClkEn_avioAhbClkEn                   1
    #define   MSK32Gbl_ahbClkEn_avioAhbClkEn                      0x00000001
    #define        Gbl_ahbClkEn_avioAhbClkEn_enable                         0x1
    #define        Gbl_ahbClkEn_avioAhbClkEn_disable                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS0nCntl                           0x8000

    #define     BA_Gbl_SPI1_SS0nCntl_PU_EN                     0x8000
    #define     B16Gbl_SPI1_SS0nCntl_PU_EN                     0x8000
    #define   LSb32Gbl_SPI1_SS0nCntl_PU_EN                        0
    #define   LSb16Gbl_SPI1_SS0nCntl_PU_EN                        0
    #define       bGbl_SPI1_SS0nCntl_PU_EN                     1
    #define   MSK32Gbl_SPI1_SS0nCntl_PU_EN                        0x00000001

    #define     BA_Gbl_SPI1_SS0nCntl_PD_EN                     0x8000
    #define     B16Gbl_SPI1_SS0nCntl_PD_EN                     0x8000
    #define   LSb32Gbl_SPI1_SS0nCntl_PD_EN                        1
    #define   LSb16Gbl_SPI1_SS0nCntl_PD_EN                        1
    #define       bGbl_SPI1_SS0nCntl_PD_EN                     1
    #define   MSK32Gbl_SPI1_SS0nCntl_PD_EN                        0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS1nCntl                           0x8004

    #define     BA_Gbl_SPI1_SS1nCntl_PU_EN                     0x8004
    #define     B16Gbl_SPI1_SS1nCntl_PU_EN                     0x8004
    #define   LSb32Gbl_SPI1_SS1nCntl_PU_EN                        0
    #define   LSb16Gbl_SPI1_SS1nCntl_PU_EN                        0
    #define       bGbl_SPI1_SS1nCntl_PU_EN                     1
    #define   MSK32Gbl_SPI1_SS1nCntl_PU_EN                        0x00000001

    #define     BA_Gbl_SPI1_SS1nCntl_PD_EN                     0x8004
    #define     B16Gbl_SPI1_SS1nCntl_PD_EN                     0x8004
    #define   LSb32Gbl_SPI1_SS1nCntl_PD_EN                        1
    #define   LSb16Gbl_SPI1_SS1nCntl_PD_EN                        1
    #define       bGbl_SPI1_SS1nCntl_PD_EN                     1
    #define   MSK32Gbl_SPI1_SS1nCntl_PD_EN                        0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS2nCntl                           0x8008

    #define     BA_Gbl_SPI1_SS2nCntl_PU_EN                     0x8008
    #define     B16Gbl_SPI1_SS2nCntl_PU_EN                     0x8008
    #define   LSb32Gbl_SPI1_SS2nCntl_PU_EN                        0
    #define   LSb16Gbl_SPI1_SS2nCntl_PU_EN                        0
    #define       bGbl_SPI1_SS2nCntl_PU_EN                     1
    #define   MSK32Gbl_SPI1_SS2nCntl_PU_EN                        0x00000001

    #define     BA_Gbl_SPI1_SS2nCntl_PD_EN                     0x8008
    #define     B16Gbl_SPI1_SS2nCntl_PD_EN                     0x8008
    #define   LSb32Gbl_SPI1_SS2nCntl_PD_EN                        1
    #define   LSb16Gbl_SPI1_SS2nCntl_PD_EN                        1
    #define       bGbl_SPI1_SS2nCntl_PD_EN                     1
    #define   MSK32Gbl_SPI1_SS2nCntl_PD_EN                        0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SCLKCntl                           0x800C

    #define     BA_Gbl_SPI1_SCLKCntl_PU_EN                     0x800C
    #define     B16Gbl_SPI1_SCLKCntl_PU_EN                     0x800C
    #define   LSb32Gbl_SPI1_SCLKCntl_PU_EN                        0
    #define   LSb16Gbl_SPI1_SCLKCntl_PU_EN                        0
    #define       bGbl_SPI1_SCLKCntl_PU_EN                     1
    #define   MSK32Gbl_SPI1_SCLKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_SPI1_SCLKCntl_PD_EN                     0x800C
    #define     B16Gbl_SPI1_SCLKCntl_PD_EN                     0x800C
    #define   LSb32Gbl_SPI1_SCLKCntl_PD_EN                        1
    #define   LSb16Gbl_SPI1_SCLKCntl_PD_EN                        1
    #define       bGbl_SPI1_SCLKCntl_PD_EN                     1
    #define   MSK32Gbl_SPI1_SCLKCntl_PD_EN                        0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDOCntl                            0x8010

    #define     BA_Gbl_SPI1_SDOCntl_PU_EN                      0x8010
    #define     B16Gbl_SPI1_SDOCntl_PU_EN                      0x8010
    #define   LSb32Gbl_SPI1_SDOCntl_PU_EN                         0
    #define   LSb16Gbl_SPI1_SDOCntl_PU_EN                         0
    #define       bGbl_SPI1_SDOCntl_PU_EN                      1
    #define   MSK32Gbl_SPI1_SDOCntl_PU_EN                         0x00000001

    #define     BA_Gbl_SPI1_SDOCntl_PD_EN                      0x8010
    #define     B16Gbl_SPI1_SDOCntl_PD_EN                      0x8010
    #define   LSb32Gbl_SPI1_SDOCntl_PD_EN                         1
    #define   LSb16Gbl_SPI1_SDOCntl_PD_EN                         1
    #define       bGbl_SPI1_SDOCntl_PD_EN                      1
    #define   MSK32Gbl_SPI1_SDOCntl_PD_EN                         0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDICntl                            0x8014

    #define     BA_Gbl_SPI1_SDICntl_PU_EN                      0x8014
    #define     B16Gbl_SPI1_SDICntl_PU_EN                      0x8014
    #define   LSb32Gbl_SPI1_SDICntl_PU_EN                         0
    #define   LSb16Gbl_SPI1_SDICntl_PU_EN                         0
    #define       bGbl_SPI1_SDICntl_PU_EN                      1
    #define   MSK32Gbl_SPI1_SDICntl_PU_EN                         0x00000001

    #define     BA_Gbl_SPI1_SDICntl_PD_EN                      0x8014
    #define     B16Gbl_SPI1_SDICntl_PD_EN                      0x8014
    #define   LSb32Gbl_SPI1_SDICntl_PD_EN                         1
    #define   LSb16Gbl_SPI1_SDICntl_PD_EN                         1
    #define       bGbl_SPI1_SDICntl_PD_EN                      1
    #define   MSK32Gbl_SPI1_SDICntl_PD_EN                         0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_URT0_RXDCntl                            0x8018

    #define     BA_Gbl_URT0_RXDCntl_PU_EN                      0x8018
    #define     B16Gbl_URT0_RXDCntl_PU_EN                      0x8018
    #define   LSb32Gbl_URT0_RXDCntl_PU_EN                         0
    #define   LSb16Gbl_URT0_RXDCntl_PU_EN                         0
    #define       bGbl_URT0_RXDCntl_PU_EN                      1
    #define   MSK32Gbl_URT0_RXDCntl_PU_EN                         0x00000001

    #define     BA_Gbl_URT0_RXDCntl_PD_EN                      0x8018
    #define     B16Gbl_URT0_RXDCntl_PD_EN                      0x8018
    #define   LSb32Gbl_URT0_RXDCntl_PD_EN                         1
    #define   LSb16Gbl_URT0_RXDCntl_PD_EN                         1
    #define       bGbl_URT0_RXDCntl_PD_EN                      1
    #define   MSK32Gbl_URT0_RXDCntl_PD_EN                         0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_URT0_TXDCntl                            0x801C

    #define     BA_Gbl_URT0_TXDCntl_PU_EN                      0x801C
    #define     B16Gbl_URT0_TXDCntl_PU_EN                      0x801C
    #define   LSb32Gbl_URT0_TXDCntl_PU_EN                         0
    #define   LSb16Gbl_URT0_TXDCntl_PU_EN                         0
    #define       bGbl_URT0_TXDCntl_PU_EN                      1
    #define   MSK32Gbl_URT0_TXDCntl_PU_EN                         0x00000001

    #define     BA_Gbl_URT0_TXDCntl_PD_EN                      0x801C
    #define     B16Gbl_URT0_TXDCntl_PD_EN                      0x801C
    #define   LSb32Gbl_URT0_TXDCntl_PD_EN                         1
    #define   LSb16Gbl_URT0_TXDCntl_PD_EN                         1
    #define       bGbl_URT0_TXDCntl_PD_EN                      1
    #define   MSK32Gbl_URT0_TXDCntl_PD_EN                         0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO0Cntl                               0x8020

    #define     BA_Gbl_DVIO0Cntl_PU_EN                         0x8020
    #define     B16Gbl_DVIO0Cntl_PU_EN                         0x8020
    #define   LSb32Gbl_DVIO0Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO0Cntl_PU_EN                            0
    #define       bGbl_DVIO0Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO0Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO0Cntl_PD_EN                         0x8020
    #define     B16Gbl_DVIO0Cntl_PD_EN                         0x8020
    #define   LSb32Gbl_DVIO0Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO0Cntl_PD_EN                            1
    #define       bGbl_DVIO0Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO0Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO0Cntl_SLP_DI                        0x8020
    #define     B16Gbl_DVIO0Cntl_SLP_DI                        0x8020
    #define   LSb32Gbl_DVIO0Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO0Cntl_SLP_DI                           2
    #define       bGbl_DVIO0Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO0Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO1Cntl                               0x8024

    #define     BA_Gbl_DVIO1Cntl_PU_EN                         0x8024
    #define     B16Gbl_DVIO1Cntl_PU_EN                         0x8024
    #define   LSb32Gbl_DVIO1Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO1Cntl_PU_EN                            0
    #define       bGbl_DVIO1Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO1Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO1Cntl_PD_EN                         0x8024
    #define     B16Gbl_DVIO1Cntl_PD_EN                         0x8024
    #define   LSb32Gbl_DVIO1Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO1Cntl_PD_EN                            1
    #define       bGbl_DVIO1Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO1Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO1Cntl_SLP_DI                        0x8024
    #define     B16Gbl_DVIO1Cntl_SLP_DI                        0x8024
    #define   LSb32Gbl_DVIO1Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO1Cntl_SLP_DI                           2
    #define       bGbl_DVIO1Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO1Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO2Cntl                               0x8028

    #define     BA_Gbl_DVIO2Cntl_PU_EN                         0x8028
    #define     B16Gbl_DVIO2Cntl_PU_EN                         0x8028
    #define   LSb32Gbl_DVIO2Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO2Cntl_PU_EN                            0
    #define       bGbl_DVIO2Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO2Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO2Cntl_PD_EN                         0x8028
    #define     B16Gbl_DVIO2Cntl_PD_EN                         0x8028
    #define   LSb32Gbl_DVIO2Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO2Cntl_PD_EN                            1
    #define       bGbl_DVIO2Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO2Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO2Cntl_SLP_DI                        0x8028
    #define     B16Gbl_DVIO2Cntl_SLP_DI                        0x8028
    #define   LSb32Gbl_DVIO2Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO2Cntl_SLP_DI                           2
    #define       bGbl_DVIO2Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO2Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO3Cntl                               0x802C

    #define     BA_Gbl_DVIO3Cntl_PU_EN                         0x802C
    #define     B16Gbl_DVIO3Cntl_PU_EN                         0x802C
    #define   LSb32Gbl_DVIO3Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO3Cntl_PU_EN                            0
    #define       bGbl_DVIO3Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO3Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO3Cntl_PD_EN                         0x802C
    #define     B16Gbl_DVIO3Cntl_PD_EN                         0x802C
    #define   LSb32Gbl_DVIO3Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO3Cntl_PD_EN                            1
    #define       bGbl_DVIO3Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO3Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO3Cntl_SLP_DI                        0x802C
    #define     B16Gbl_DVIO3Cntl_SLP_DI                        0x802C
    #define   LSb32Gbl_DVIO3Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO3Cntl_SLP_DI                           2
    #define       bGbl_DVIO3Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO3Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO4Cntl                               0x8030

    #define     BA_Gbl_DVIO4Cntl_PU_EN                         0x8030
    #define     B16Gbl_DVIO4Cntl_PU_EN                         0x8030
    #define   LSb32Gbl_DVIO4Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO4Cntl_PU_EN                            0
    #define       bGbl_DVIO4Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO4Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO4Cntl_PD_EN                         0x8030
    #define     B16Gbl_DVIO4Cntl_PD_EN                         0x8030
    #define   LSb32Gbl_DVIO4Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO4Cntl_PD_EN                            1
    #define       bGbl_DVIO4Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO4Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO4Cntl_SLP_DI                        0x8030
    #define     B16Gbl_DVIO4Cntl_SLP_DI                        0x8030
    #define   LSb32Gbl_DVIO4Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO4Cntl_SLP_DI                           2
    #define       bGbl_DVIO4Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO4Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO5Cntl                               0x8034

    #define     BA_Gbl_DVIO5Cntl_PU_EN                         0x8034
    #define     B16Gbl_DVIO5Cntl_PU_EN                         0x8034
    #define   LSb32Gbl_DVIO5Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO5Cntl_PU_EN                            0
    #define       bGbl_DVIO5Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO5Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO5Cntl_PD_EN                         0x8034
    #define     B16Gbl_DVIO5Cntl_PD_EN                         0x8034
    #define   LSb32Gbl_DVIO5Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO5Cntl_PD_EN                            1
    #define       bGbl_DVIO5Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO5Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO5Cntl_SLP_DI                        0x8034
    #define     B16Gbl_DVIO5Cntl_SLP_DI                        0x8034
    #define   LSb32Gbl_DVIO5Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO5Cntl_SLP_DI                           2
    #define       bGbl_DVIO5Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO5Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO6Cntl                               0x8038

    #define     BA_Gbl_DVIO6Cntl_PU_EN                         0x8038
    #define     B16Gbl_DVIO6Cntl_PU_EN                         0x8038
    #define   LSb32Gbl_DVIO6Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO6Cntl_PU_EN                            0
    #define       bGbl_DVIO6Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO6Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO6Cntl_PD_EN                         0x8038
    #define     B16Gbl_DVIO6Cntl_PD_EN                         0x8038
    #define   LSb32Gbl_DVIO6Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO6Cntl_PD_EN                            1
    #define       bGbl_DVIO6Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO6Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO6Cntl_SLP_DI                        0x8038
    #define     B16Gbl_DVIO6Cntl_SLP_DI                        0x8038
    #define   LSb32Gbl_DVIO6Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO6Cntl_SLP_DI                           2
    #define       bGbl_DVIO6Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO6Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO7Cntl                               0x803C

    #define     BA_Gbl_DVIO7Cntl_PU_EN                         0x803C
    #define     B16Gbl_DVIO7Cntl_PU_EN                         0x803C
    #define   LSb32Gbl_DVIO7Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO7Cntl_PU_EN                            0
    #define       bGbl_DVIO7Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO7Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO7Cntl_PD_EN                         0x803C
    #define     B16Gbl_DVIO7Cntl_PD_EN                         0x803C
    #define   LSb32Gbl_DVIO7Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO7Cntl_PD_EN                            1
    #define       bGbl_DVIO7Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO7Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO7Cntl_SLP_DI                        0x803C
    #define     B16Gbl_DVIO7Cntl_SLP_DI                        0x803C
    #define   LSb32Gbl_DVIO7Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO7Cntl_SLP_DI                           2
    #define       bGbl_DVIO7Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO7Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO8Cntl                               0x8040

    #define     BA_Gbl_DVIO8Cntl_PU_EN                         0x8040
    #define     B16Gbl_DVIO8Cntl_PU_EN                         0x8040
    #define   LSb32Gbl_DVIO8Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO8Cntl_PU_EN                            0
    #define       bGbl_DVIO8Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO8Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO8Cntl_PD_EN                         0x8040
    #define     B16Gbl_DVIO8Cntl_PD_EN                         0x8040
    #define   LSb32Gbl_DVIO8Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO8Cntl_PD_EN                            1
    #define       bGbl_DVIO8Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO8Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO8Cntl_SLP_DI                        0x8040
    #define     B16Gbl_DVIO8Cntl_SLP_DI                        0x8040
    #define   LSb32Gbl_DVIO8Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO8Cntl_SLP_DI                           2
    #define       bGbl_DVIO8Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO8Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO9Cntl                               0x8044

    #define     BA_Gbl_DVIO9Cntl_PU_EN                         0x8044
    #define     B16Gbl_DVIO9Cntl_PU_EN                         0x8044
    #define   LSb32Gbl_DVIO9Cntl_PU_EN                            0
    #define   LSb16Gbl_DVIO9Cntl_PU_EN                            0
    #define       bGbl_DVIO9Cntl_PU_EN                         1
    #define   MSK32Gbl_DVIO9Cntl_PU_EN                            0x00000001

    #define     BA_Gbl_DVIO9Cntl_PD_EN                         0x8044
    #define     B16Gbl_DVIO9Cntl_PD_EN                         0x8044
    #define   LSb32Gbl_DVIO9Cntl_PD_EN                            1
    #define   LSb16Gbl_DVIO9Cntl_PD_EN                            1
    #define       bGbl_DVIO9Cntl_PD_EN                         1
    #define   MSK32Gbl_DVIO9Cntl_PD_EN                            0x00000002

    #define     BA_Gbl_DVIO9Cntl_SLP_DI                        0x8044
    #define     B16Gbl_DVIO9Cntl_SLP_DI                        0x8044
    #define   LSb32Gbl_DVIO9Cntl_SLP_DI                           2
    #define   LSb16Gbl_DVIO9Cntl_SLP_DI                           2
    #define       bGbl_DVIO9Cntl_SLP_DI                        1
    #define   MSK32Gbl_DVIO9Cntl_SLP_DI                           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO10Cntl                              0x8048

    #define     BA_Gbl_DVIO10Cntl_PU_EN                        0x8048
    #define     B16Gbl_DVIO10Cntl_PU_EN                        0x8048
    #define   LSb32Gbl_DVIO10Cntl_PU_EN                           0
    #define   LSb16Gbl_DVIO10Cntl_PU_EN                           0
    #define       bGbl_DVIO10Cntl_PU_EN                        1
    #define   MSK32Gbl_DVIO10Cntl_PU_EN                           0x00000001

    #define     BA_Gbl_DVIO10Cntl_PD_EN                        0x8048
    #define     B16Gbl_DVIO10Cntl_PD_EN                        0x8048
    #define   LSb32Gbl_DVIO10Cntl_PD_EN                           1
    #define   LSb16Gbl_DVIO10Cntl_PD_EN                           1
    #define       bGbl_DVIO10Cntl_PD_EN                        1
    #define   MSK32Gbl_DVIO10Cntl_PD_EN                           0x00000002

    #define     BA_Gbl_DVIO10Cntl_SLP_DI                       0x8048
    #define     B16Gbl_DVIO10Cntl_SLP_DI                       0x8048
    #define   LSb32Gbl_DVIO10Cntl_SLP_DI                          2
    #define   LSb16Gbl_DVIO10Cntl_SLP_DI                          2
    #define       bGbl_DVIO10Cntl_SLP_DI                       1
    #define   MSK32Gbl_DVIO10Cntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DVIO11Cntl                              0x804C

    #define     BA_Gbl_DVIO11Cntl_PU_EN                        0x804C
    #define     B16Gbl_DVIO11Cntl_PU_EN                        0x804C
    #define   LSb32Gbl_DVIO11Cntl_PU_EN                           0
    #define   LSb16Gbl_DVIO11Cntl_PU_EN                           0
    #define       bGbl_DVIO11Cntl_PU_EN                        1
    #define   MSK32Gbl_DVIO11Cntl_PU_EN                           0x00000001

    #define     BA_Gbl_DVIO11Cntl_PD_EN                        0x804C
    #define     B16Gbl_DVIO11Cntl_PD_EN                        0x804C
    #define   LSb32Gbl_DVIO11Cntl_PD_EN                           1
    #define   LSb16Gbl_DVIO11Cntl_PD_EN                           1
    #define       bGbl_DVIO11Cntl_PD_EN                        1
    #define   MSK32Gbl_DVIO11Cntl_PD_EN                           0x00000002

    #define     BA_Gbl_DVIO11Cntl_SLP_DI                       0x804C
    #define     B16Gbl_DVIO11Cntl_SLP_DI                       0x804C
    #define   LSb32Gbl_DVIO11Cntl_SLP_DI                          2
    #define   LSb16Gbl_DVIO11Cntl_SLP_DI                          2
    #define       bGbl_DVIO11Cntl_SLP_DI                       1
    #define   MSK32Gbl_DVIO11Cntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DV0_CLKCntl                             0x8050

    #define     BA_Gbl_DV0_CLKCntl_PU_EN                       0x8050
    #define     B16Gbl_DV0_CLKCntl_PU_EN                       0x8050
    #define   LSb32Gbl_DV0_CLKCntl_PU_EN                          0
    #define   LSb16Gbl_DV0_CLKCntl_PU_EN                          0
    #define       bGbl_DV0_CLKCntl_PU_EN                       1
    #define   MSK32Gbl_DV0_CLKCntl_PU_EN                          0x00000001

    #define     BA_Gbl_DV0_CLKCntl_PD_EN                       0x8050
    #define     B16Gbl_DV0_CLKCntl_PD_EN                       0x8050
    #define   LSb32Gbl_DV0_CLKCntl_PD_EN                          1
    #define   LSb16Gbl_DV0_CLKCntl_PD_EN                          1
    #define       bGbl_DV0_CLKCntl_PD_EN                       1
    #define   MSK32Gbl_DV0_CLKCntl_PD_EN                          0x00000002

    #define     BA_Gbl_DV0_CLKCntl_SLP_DI                      0x8050
    #define     B16Gbl_DV0_CLKCntl_SLP_DI                      0x8050
    #define   LSb32Gbl_DV0_CLKCntl_SLP_DI                         2
    #define   LSb16Gbl_DV0_CLKCntl_SLP_DI                         2
    #define       bGbl_DV0_CLKCntl_SLP_DI                      1
    #define   MSK32Gbl_DV0_CLKCntl_SLP_DI                         0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DV0_HSCntl                              0x8054

    #define     BA_Gbl_DV0_HSCntl_PU_EN                        0x8054
    #define     B16Gbl_DV0_HSCntl_PU_EN                        0x8054
    #define   LSb32Gbl_DV0_HSCntl_PU_EN                           0
    #define   LSb16Gbl_DV0_HSCntl_PU_EN                           0
    #define       bGbl_DV0_HSCntl_PU_EN                        1
    #define   MSK32Gbl_DV0_HSCntl_PU_EN                           0x00000001

    #define     BA_Gbl_DV0_HSCntl_PD_EN                        0x8054
    #define     B16Gbl_DV0_HSCntl_PD_EN                        0x8054
    #define   LSb32Gbl_DV0_HSCntl_PD_EN                           1
    #define   LSb16Gbl_DV0_HSCntl_PD_EN                           1
    #define       bGbl_DV0_HSCntl_PD_EN                        1
    #define   MSK32Gbl_DV0_HSCntl_PD_EN                           0x00000002

    #define     BA_Gbl_DV0_HSCntl_SLP_DI                       0x8054
    #define     B16Gbl_DV0_HSCntl_SLP_DI                       0x8054
    #define   LSb32Gbl_DV0_HSCntl_SLP_DI                          2
    #define   LSb16Gbl_DV0_HSCntl_SLP_DI                          2
    #define       bGbl_DV0_HSCntl_SLP_DI                       1
    #define   MSK32Gbl_DV0_HSCntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DV0_VSCntl                              0x8058

    #define     BA_Gbl_DV0_VSCntl_PU_EN                        0x8058
    #define     B16Gbl_DV0_VSCntl_PU_EN                        0x8058
    #define   LSb32Gbl_DV0_VSCntl_PU_EN                           0
    #define   LSb16Gbl_DV0_VSCntl_PU_EN                           0
    #define       bGbl_DV0_VSCntl_PU_EN                        1
    #define   MSK32Gbl_DV0_VSCntl_PU_EN                           0x00000001

    #define     BA_Gbl_DV0_VSCntl_PD_EN                        0x8058
    #define     B16Gbl_DV0_VSCntl_PD_EN                        0x8058
    #define   LSb32Gbl_DV0_VSCntl_PD_EN                           1
    #define   LSb16Gbl_DV0_VSCntl_PD_EN                           1
    #define       bGbl_DV0_VSCntl_PD_EN                        1
    #define   MSK32Gbl_DV0_VSCntl_PD_EN                           0x00000002

    #define     BA_Gbl_DV0_VSCntl_SLP_DI                       0x8058
    #define     B16Gbl_DV0_VSCntl_SLP_DI                       0x8058
    #define   LSb32Gbl_DV0_VSCntl_SLP_DI                          2
    #define   LSb16Gbl_DV0_VSCntl_SLP_DI                          2
    #define       bGbl_DV0_VSCntl_SLP_DI                       1
    #define   MSK32Gbl_DV0_VSCntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DV0_FIDCntl                             0x805C

    #define     BA_Gbl_DV0_FIDCntl_PU_EN                       0x805C
    #define     B16Gbl_DV0_FIDCntl_PU_EN                       0x805C
    #define   LSb32Gbl_DV0_FIDCntl_PU_EN                          0
    #define   LSb16Gbl_DV0_FIDCntl_PU_EN                          0
    #define       bGbl_DV0_FIDCntl_PU_EN                       1
    #define   MSK32Gbl_DV0_FIDCntl_PU_EN                          0x00000001

    #define     BA_Gbl_DV0_FIDCntl_PD_EN                       0x805C
    #define     B16Gbl_DV0_FIDCntl_PD_EN                       0x805C
    #define   LSb32Gbl_DV0_FIDCntl_PD_EN                          1
    #define   LSb16Gbl_DV0_FIDCntl_PD_EN                          1
    #define       bGbl_DV0_FIDCntl_PD_EN                       1
    #define   MSK32Gbl_DV0_FIDCntl_PD_EN                          0x00000002

    #define     BA_Gbl_DV0_FIDCntl_SLP_DI                      0x805C
    #define     B16Gbl_DV0_FIDCntl_SLP_DI                      0x805C
    #define   LSb32Gbl_DV0_FIDCntl_SLP_DI                         2
    #define   LSb16Gbl_DV0_FIDCntl_SLP_DI                         2
    #define       bGbl_DV0_FIDCntl_SLP_DI                      1
    #define   MSK32Gbl_DV0_FIDCntl_SLP_DI                         0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_BCLKCntl                           0x8060

    #define     BA_Gbl_I2S0_BCLKCntl_PU_EN                     0x8060
    #define     B16Gbl_I2S0_BCLKCntl_PU_EN                     0x8060
    #define   LSb32Gbl_I2S0_BCLKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S0_BCLKCntl_PU_EN                        0
    #define       bGbl_I2S0_BCLKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S0_BCLKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S0_BCLKCntl_PD_EN                     0x8060
    #define     B16Gbl_I2S0_BCLKCntl_PD_EN                     0x8060
    #define   LSb32Gbl_I2S0_BCLKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S0_BCLKCntl_PD_EN                        1
    #define       bGbl_I2S0_BCLKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S0_BCLKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S0_BCLKCntl_SLP_DI                    0x8060
    #define     B16Gbl_I2S0_BCLKCntl_SLP_DI                    0x8060
    #define   LSb32Gbl_I2S0_BCLKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S0_BCLKCntl_SLP_DI                       2
    #define       bGbl_I2S0_BCLKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S0_BCLKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_LRCKCntl                           0x8064

    #define     BA_Gbl_I2S0_LRCKCntl_PU_EN                     0x8064
    #define     B16Gbl_I2S0_LRCKCntl_PU_EN                     0x8064
    #define   LSb32Gbl_I2S0_LRCKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S0_LRCKCntl_PU_EN                        0
    #define       bGbl_I2S0_LRCKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S0_LRCKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S0_LRCKCntl_PD_EN                     0x8064
    #define     B16Gbl_I2S0_LRCKCntl_PD_EN                     0x8064
    #define   LSb32Gbl_I2S0_LRCKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S0_LRCKCntl_PD_EN                        1
    #define       bGbl_I2S0_LRCKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S0_LRCKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S0_LRCKCntl_SLP_DI                    0x8064
    #define     B16Gbl_I2S0_LRCKCntl_SLP_DI                    0x8064
    #define   LSb32Gbl_I2S0_LRCKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S0_LRCKCntl_SLP_DI                       2
    #define       bGbl_I2S0_LRCKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S0_LRCKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_DO0Cntl                            0x8068

    #define     BA_Gbl_I2S0_DO0Cntl_PU_EN                      0x8068
    #define     B16Gbl_I2S0_DO0Cntl_PU_EN                      0x8068
    #define   LSb32Gbl_I2S0_DO0Cntl_PU_EN                         0
    #define   LSb16Gbl_I2S0_DO0Cntl_PU_EN                         0
    #define       bGbl_I2S0_DO0Cntl_PU_EN                      1
    #define   MSK32Gbl_I2S0_DO0Cntl_PU_EN                         0x00000001

    #define     BA_Gbl_I2S0_DO0Cntl_PD_EN                      0x8068
    #define     B16Gbl_I2S0_DO0Cntl_PD_EN                      0x8068
    #define   LSb32Gbl_I2S0_DO0Cntl_PD_EN                         1
    #define   LSb16Gbl_I2S0_DO0Cntl_PD_EN                         1
    #define       bGbl_I2S0_DO0Cntl_PD_EN                      1
    #define   MSK32Gbl_I2S0_DO0Cntl_PD_EN                         0x00000002

    #define     BA_Gbl_I2S0_DO0Cntl_SLP_DI                     0x8068
    #define     B16Gbl_I2S0_DO0Cntl_SLP_DI                     0x8068
    #define   LSb32Gbl_I2S0_DO0Cntl_SLP_DI                        2
    #define   LSb16Gbl_I2S0_DO0Cntl_SLP_DI                        2
    #define       bGbl_I2S0_DO0Cntl_SLP_DI                     1
    #define   MSK32Gbl_I2S0_DO0Cntl_SLP_DI                        0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_DO1Cntl                            0x806C

    #define     BA_Gbl_I2S0_DO1Cntl_PU_EN                      0x806C
    #define     B16Gbl_I2S0_DO1Cntl_PU_EN                      0x806C
    #define   LSb32Gbl_I2S0_DO1Cntl_PU_EN                         0
    #define   LSb16Gbl_I2S0_DO1Cntl_PU_EN                         0
    #define       bGbl_I2S0_DO1Cntl_PU_EN                      1
    #define   MSK32Gbl_I2S0_DO1Cntl_PU_EN                         0x00000001

    #define     BA_Gbl_I2S0_DO1Cntl_PD_EN                      0x806C
    #define     B16Gbl_I2S0_DO1Cntl_PD_EN                      0x806C
    #define   LSb32Gbl_I2S0_DO1Cntl_PD_EN                         1
    #define   LSb16Gbl_I2S0_DO1Cntl_PD_EN                         1
    #define       bGbl_I2S0_DO1Cntl_PD_EN                      1
    #define   MSK32Gbl_I2S0_DO1Cntl_PD_EN                         0x00000002

    #define     BA_Gbl_I2S0_DO1Cntl_SLP_DI                     0x806C
    #define     B16Gbl_I2S0_DO1Cntl_SLP_DI                     0x806C
    #define   LSb32Gbl_I2S0_DO1Cntl_SLP_DI                        2
    #define   LSb16Gbl_I2S0_DO1Cntl_SLP_DI                        2
    #define       bGbl_I2S0_DO1Cntl_SLP_DI                     1
    #define   MSK32Gbl_I2S0_DO1Cntl_SLP_DI                        0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_DO2Cntl                            0x8070

    #define     BA_Gbl_I2S0_DO2Cntl_PU_EN                      0x8070
    #define     B16Gbl_I2S0_DO2Cntl_PU_EN                      0x8070
    #define   LSb32Gbl_I2S0_DO2Cntl_PU_EN                         0
    #define   LSb16Gbl_I2S0_DO2Cntl_PU_EN                         0
    #define       bGbl_I2S0_DO2Cntl_PU_EN                      1
    #define   MSK32Gbl_I2S0_DO2Cntl_PU_EN                         0x00000001

    #define     BA_Gbl_I2S0_DO2Cntl_PD_EN                      0x8070
    #define     B16Gbl_I2S0_DO2Cntl_PD_EN                      0x8070
    #define   LSb32Gbl_I2S0_DO2Cntl_PD_EN                         1
    #define   LSb16Gbl_I2S0_DO2Cntl_PD_EN                         1
    #define       bGbl_I2S0_DO2Cntl_PD_EN                      1
    #define   MSK32Gbl_I2S0_DO2Cntl_PD_EN                         0x00000002

    #define     BA_Gbl_I2S0_DO2Cntl_SLP_DI                     0x8070
    #define     B16Gbl_I2S0_DO2Cntl_SLP_DI                     0x8070
    #define   LSb32Gbl_I2S0_DO2Cntl_SLP_DI                        2
    #define   LSb16Gbl_I2S0_DO2Cntl_SLP_DI                        2
    #define       bGbl_I2S0_DO2Cntl_SLP_DI                     1
    #define   MSK32Gbl_I2S0_DO2Cntl_SLP_DI                        0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S0_DO3Cntl                            0x8074

    #define     BA_Gbl_I2S0_DO3Cntl_PU_EN                      0x8074
    #define     B16Gbl_I2S0_DO3Cntl_PU_EN                      0x8074
    #define   LSb32Gbl_I2S0_DO3Cntl_PU_EN                         0
    #define   LSb16Gbl_I2S0_DO3Cntl_PU_EN                         0
    #define       bGbl_I2S0_DO3Cntl_PU_EN                      1
    #define   MSK32Gbl_I2S0_DO3Cntl_PU_EN                         0x00000001

    #define     BA_Gbl_I2S0_DO3Cntl_PD_EN                      0x8074
    #define     B16Gbl_I2S0_DO3Cntl_PD_EN                      0x8074
    #define   LSb32Gbl_I2S0_DO3Cntl_PD_EN                         1
    #define   LSb16Gbl_I2S0_DO3Cntl_PD_EN                         1
    #define       bGbl_I2S0_DO3Cntl_PD_EN                      1
    #define   MSK32Gbl_I2S0_DO3Cntl_PD_EN                         0x00000002

    #define     BA_Gbl_I2S0_DO3Cntl_SLP_DI                     0x8074
    #define     B16Gbl_I2S0_DO3Cntl_SLP_DI                     0x8074
    #define   LSb32Gbl_I2S0_DO3Cntl_SLP_DI                        2
    #define   LSb16Gbl_I2S0_DO3Cntl_SLP_DI                        2
    #define       bGbl_I2S0_DO3Cntl_SLP_DI                     1
    #define   MSK32Gbl_I2S0_DO3Cntl_SLP_DI                        0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPDIFICntl                              0x8078

    #define     BA_Gbl_SPDIFICntl_PU_EN                        0x8078
    #define     B16Gbl_SPDIFICntl_PU_EN                        0x8078
    #define   LSb32Gbl_SPDIFICntl_PU_EN                           0
    #define   LSb16Gbl_SPDIFICntl_PU_EN                           0
    #define       bGbl_SPDIFICntl_PU_EN                        1
    #define   MSK32Gbl_SPDIFICntl_PU_EN                           0x00000001

    #define     BA_Gbl_SPDIFICntl_PD_EN                        0x8078
    #define     B16Gbl_SPDIFICntl_PD_EN                        0x8078
    #define   LSb32Gbl_SPDIFICntl_PD_EN                           1
    #define   LSb16Gbl_SPDIFICntl_PD_EN                           1
    #define       bGbl_SPDIFICntl_PD_EN                        1
    #define   MSK32Gbl_SPDIFICntl_PD_EN                           0x00000002

    #define     BA_Gbl_SPDIFICntl_SLP_DI                       0x8078
    #define     B16Gbl_SPDIFICntl_SLP_DI                       0x8078
    #define   LSb32Gbl_SPDIFICntl_SLP_DI                          2
    #define   LSb16Gbl_SPDIFICntl_SLP_DI                          2
    #define       bGbl_SPDIFICntl_SLP_DI                       1
    #define   MSK32Gbl_SPDIFICntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_LRCKCntl                           0x807C

    #define     BA_Gbl_I2S1_LRCKCntl_PU_EN                     0x807C
    #define     B16Gbl_I2S1_LRCKCntl_PU_EN                     0x807C
    #define   LSb32Gbl_I2S1_LRCKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S1_LRCKCntl_PU_EN                        0
    #define       bGbl_I2S1_LRCKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S1_LRCKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S1_LRCKCntl_PD_EN                     0x807C
    #define     B16Gbl_I2S1_LRCKCntl_PD_EN                     0x807C
    #define   LSb32Gbl_I2S1_LRCKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S1_LRCKCntl_PD_EN                        1
    #define       bGbl_I2S1_LRCKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S1_LRCKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S1_LRCKCntl_SLP_DI                    0x807C
    #define     B16Gbl_I2S1_LRCKCntl_SLP_DI                    0x807C
    #define   LSb32Gbl_I2S1_LRCKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S1_LRCKCntl_SLP_DI                       2
    #define       bGbl_I2S1_LRCKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S1_LRCKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_BCLKCntl                           0x8080

    #define     BA_Gbl_I2S1_BCLKCntl_PU_EN                     0x8080
    #define     B16Gbl_I2S1_BCLKCntl_PU_EN                     0x8080
    #define   LSb32Gbl_I2S1_BCLKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S1_BCLKCntl_PU_EN                        0
    #define       bGbl_I2S1_BCLKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S1_BCLKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S1_BCLKCntl_PD_EN                     0x8080
    #define     B16Gbl_I2S1_BCLKCntl_PD_EN                     0x8080
    #define   LSb32Gbl_I2S1_BCLKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S1_BCLKCntl_PD_EN                        1
    #define       bGbl_I2S1_BCLKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S1_BCLKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S1_BCLKCntl_SLP_DI                    0x8080
    #define     B16Gbl_I2S1_BCLKCntl_SLP_DI                    0x8080
    #define   LSb32Gbl_I2S1_BCLKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S1_BCLKCntl_SLP_DI                       2
    #define       bGbl_I2S1_BCLKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S1_BCLKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DOCntl                             0x8084

    #define     BA_Gbl_I2S1_DOCntl_PU_EN                       0x8084
    #define     B16Gbl_I2S1_DOCntl_PU_EN                       0x8084
    #define   LSb32Gbl_I2S1_DOCntl_PU_EN                          0
    #define   LSb16Gbl_I2S1_DOCntl_PU_EN                          0
    #define       bGbl_I2S1_DOCntl_PU_EN                       1
    #define   MSK32Gbl_I2S1_DOCntl_PU_EN                          0x00000001

    #define     BA_Gbl_I2S1_DOCntl_PD_EN                       0x8084
    #define     B16Gbl_I2S1_DOCntl_PD_EN                       0x8084
    #define   LSb32Gbl_I2S1_DOCntl_PD_EN                          1
    #define   LSb16Gbl_I2S1_DOCntl_PD_EN                          1
    #define       bGbl_I2S1_DOCntl_PD_EN                       1
    #define   MSK32Gbl_I2S1_DOCntl_PD_EN                          0x00000002

    #define     BA_Gbl_I2S1_DOCntl_SLP_DI                      0x8084
    #define     B16Gbl_I2S1_DOCntl_SLP_DI                      0x8084
    #define   LSb32Gbl_I2S1_DOCntl_SLP_DI                         2
    #define   LSb16Gbl_I2S1_DOCntl_SLP_DI                         2
    #define       bGbl_I2S1_DOCntl_SLP_DI                      1
    #define   MSK32Gbl_I2S1_DOCntl_SLP_DI                         0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_LRCKCntl                           0x8088

    #define     BA_Gbl_I2S2_LRCKCntl_PU_EN                     0x8088
    #define     B16Gbl_I2S2_LRCKCntl_PU_EN                     0x8088
    #define   LSb32Gbl_I2S2_LRCKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S2_LRCKCntl_PU_EN                        0
    #define       bGbl_I2S2_LRCKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S2_LRCKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S2_LRCKCntl_PD_EN                     0x8088
    #define     B16Gbl_I2S2_LRCKCntl_PD_EN                     0x8088
    #define   LSb32Gbl_I2S2_LRCKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S2_LRCKCntl_PD_EN                        1
    #define       bGbl_I2S2_LRCKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S2_LRCKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S2_LRCKCntl_SLP_DI                    0x8088
    #define     B16Gbl_I2S2_LRCKCntl_SLP_DI                    0x8088
    #define   LSb32Gbl_I2S2_LRCKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S2_LRCKCntl_SLP_DI                       2
    #define       bGbl_I2S2_LRCKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S2_LRCKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_BCLKCntl                           0x808C

    #define     BA_Gbl_I2S2_BCLKCntl_PU_EN                     0x808C
    #define     B16Gbl_I2S2_BCLKCntl_PU_EN                     0x808C
    #define   LSb32Gbl_I2S2_BCLKCntl_PU_EN                        0
    #define   LSb16Gbl_I2S2_BCLKCntl_PU_EN                        0
    #define       bGbl_I2S2_BCLKCntl_PU_EN                     1
    #define   MSK32Gbl_I2S2_BCLKCntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S2_BCLKCntl_PD_EN                     0x808C
    #define     B16Gbl_I2S2_BCLKCntl_PD_EN                     0x808C
    #define   LSb32Gbl_I2S2_BCLKCntl_PD_EN                        1
    #define   LSb16Gbl_I2S2_BCLKCntl_PD_EN                        1
    #define       bGbl_I2S2_BCLKCntl_PD_EN                     1
    #define   MSK32Gbl_I2S2_BCLKCntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S2_BCLKCntl_SLP_DI                    0x808C
    #define     B16Gbl_I2S2_BCLKCntl_SLP_DI                    0x808C
    #define   LSb32Gbl_I2S2_BCLKCntl_SLP_DI                       2
    #define   LSb16Gbl_I2S2_BCLKCntl_SLP_DI                       2
    #define       bGbl_I2S2_BCLKCntl_SLP_DI                    1
    #define   MSK32Gbl_I2S2_BCLKCntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DI_0Cntl                           0x8090

    #define     BA_Gbl_I2S2_DI_0Cntl_PU_EN                     0x8090
    #define     B16Gbl_I2S2_DI_0Cntl_PU_EN                     0x8090
    #define   LSb32Gbl_I2S2_DI_0Cntl_PU_EN                        0
    #define   LSb16Gbl_I2S2_DI_0Cntl_PU_EN                        0
    #define       bGbl_I2S2_DI_0Cntl_PU_EN                     1
    #define   MSK32Gbl_I2S2_DI_0Cntl_PU_EN                        0x00000001

    #define     BA_Gbl_I2S2_DI_0Cntl_PD_EN                     0x8090
    #define     B16Gbl_I2S2_DI_0Cntl_PD_EN                     0x8090
    #define   LSb32Gbl_I2S2_DI_0Cntl_PD_EN                        1
    #define   LSb16Gbl_I2S2_DI_0Cntl_PD_EN                        1
    #define       bGbl_I2S2_DI_0Cntl_PD_EN                     1
    #define   MSK32Gbl_I2S2_DI_0Cntl_PD_EN                        0x00000002

    #define     BA_Gbl_I2S2_DI_0Cntl_SLP_DI                    0x8090
    #define     B16Gbl_I2S2_DI_0Cntl_SLP_DI                    0x8090
    #define   LSb32Gbl_I2S2_DI_0Cntl_SLP_DI                       2
    #define   LSb16Gbl_I2S2_DI_0Cntl_SLP_DI                       2
    #define       bGbl_I2S2_DI_0Cntl_SLP_DI                    1
    #define   MSK32Gbl_I2S2_DI_0Cntl_SLP_DI                       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPDIFOCntl                              0x8094

    #define     BA_Gbl_SPDIFOCntl_PU_EN                        0x8094
    #define     B16Gbl_SPDIFOCntl_PU_EN                        0x8094
    #define   LSb32Gbl_SPDIFOCntl_PU_EN                           0
    #define   LSb16Gbl_SPDIFOCntl_PU_EN                           0
    #define       bGbl_SPDIFOCntl_PU_EN                        1
    #define   MSK32Gbl_SPDIFOCntl_PU_EN                           0x00000001

    #define     BA_Gbl_SPDIFOCntl_PD_EN                        0x8094
    #define     B16Gbl_SPDIFOCntl_PD_EN                        0x8094
    #define   LSb32Gbl_SPDIFOCntl_PD_EN                           1
    #define   LSb16Gbl_SPDIFOCntl_PD_EN                           1
    #define       bGbl_SPDIFOCntl_PD_EN                        1
    #define   MSK32Gbl_SPDIFOCntl_PD_EN                           0x00000002

    #define     BA_Gbl_SPDIFOCntl_SLP_DI                       0x8094
    #define     B16Gbl_SPDIFOCntl_SLP_DI                       0x8094
    #define   LSb32Gbl_SPDIFOCntl_SLP_DI                          2
    #define   LSb16Gbl_SPDIFOCntl_SLP_DI                          2
    #define       bGbl_SPDIFOCntl_SLP_DI                       1
    #define   MSK32Gbl_SPDIFOCntl_SLP_DI                          0x00000004
    ///////////////////////////////////////////////////////////

    typedef struct SIE_Gbl {
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pinMux_gp0(r32)                         _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMux_gp0(r32,v)                       _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_pinMux_gp0(r16)                         _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMux_gp0(r16,v)                       _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_pinMux_gp1(r32)                         _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMux_gp1(r32,v)                       _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_pinMux_gp1(r16)                         _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMux_gp1(r16,v)                       _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_pinMux_gp2(r32)                         _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMux_gp2(r32,v)                       _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_pinMux_gp2(r16)                         _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMux_gp2(r16,v)                       _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_pinMux_gp3(r32)                         _BFGET_(r32,11, 9)
    #define   SET32Gbl_pinMux_gp3(r32,v)                       _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pinMux_gp3(r16)                         _BFGET_(r16,11, 9)
    #define   SET16Gbl_pinMux_gp3(r16,v)                       _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pinMux_gp4(r32)                         _BFGET_(r32,14,12)
    #define   SET32Gbl_pinMux_gp4(r32,v)                       _BFSET_(r32,14,12,v)
    #define   GET16Gbl_pinMux_gp4(r16)                         _BFGET_(r16,14,12)
    #define   SET16Gbl_pinMux_gp4(r16,v)                       _BFSET_(r16,14,12,v)

    #define   GET32Gbl_pinMux_gp5(r32)                         _BFGET_(r32,17,15)
    #define   SET32Gbl_pinMux_gp5(r32,v)                       _BFSET_(r32,17,15,v)

    #define   GET32Gbl_pinMux_gp6(r32)                         _BFGET_(r32,20,18)
    #define   SET32Gbl_pinMux_gp6(r32,v)                       _BFSET_(r32,20,18,v)
    #define   GET16Gbl_pinMux_gp6(r16)                         _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMux_gp6(r16,v)                       _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_pinMux_gp7(r32)                         _BFGET_(r32,23,21)
    #define   SET32Gbl_pinMux_gp7(r32,v)                       _BFSET_(r32,23,21,v)
    #define   GET16Gbl_pinMux_gp7(r16)                         _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMux_gp7(r16,v)                       _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_pinMux_gp8(r32)                         _BFGET_(r32,26,24)
    #define   SET32Gbl_pinMux_gp8(r32,v)                       _BFSET_(r32,26,24,v)
    #define   GET16Gbl_pinMux_gp8(r16)                         _BFGET_(r16,10, 8)
    #define   SET16Gbl_pinMux_gp8(r16,v)                       _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_pinMux_gp9(r32)                         _BFGET_(r32,29,27)
    #define   SET32Gbl_pinMux_gp9(r32,v)                       _BFSET_(r32,29,27,v)
    #define   GET16Gbl_pinMux_gp9(r16)                         _BFGET_(r16,13,11)
    #define   SET16Gbl_pinMux_gp9(r16,v)                       _BFSET_(r16,13,11,v)

    #define   GET32Gbl_pinMux_gp10(r32)                        _BFGET_(r32,31,30)
    #define   SET32Gbl_pinMux_gp10(r32,v)                      _BFSET_(r32,31,30,v)
    #define   GET16Gbl_pinMux_gp10(r16)                        _BFGET_(r16,15,14)
    #define   SET16Gbl_pinMux_gp10(r16,v)                      _BFSET_(r16,15,14,v)

    #define     w32Gbl_pinMux                                  {\
            UNSG32 upinMux_gp0                                 :  3;\
            UNSG32 upinMux_gp1                                 :  3;\
            UNSG32 upinMux_gp2                                 :  3;\
            UNSG32 upinMux_gp3                                 :  3;\
            UNSG32 upinMux_gp4                                 :  3;\
            UNSG32 upinMux_gp5                                 :  3;\
            UNSG32 upinMux_gp6                                 :  3;\
            UNSG32 upinMux_gp7                                 :  3;\
            UNSG32 upinMux_gp8                                 :  3;\
            UNSG32 upinMux_gp9                                 :  3;\
            UNSG32 upinMux_gp10                                :  2;\
          }
    union { UNSG32 u32Gbl_pinMux;
            struct w32Gbl_pinMux;
          };
    #define   GET32Gbl_pinMux_gp11(r32)                        _BFGET_(r32, 1, 0)
    #define   SET32Gbl_pinMux_gp11(r32,v)                      _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_pinMux_gp11(r16)                        _BFGET_(r16, 1, 0)
    #define   SET16Gbl_pinMux_gp11(r16,v)                      _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_pinMux_gp12(r32)                        _BFGET_(r32, 4, 2)
    #define   SET32Gbl_pinMux_gp12(r32,v)                      _BFSET_(r32, 4, 2,v)
    #define   GET16Gbl_pinMux_gp12(r16)                        _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMux_gp12(r16,v)                      _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_pinMux_gp13(r32)                        _BFGET_(r32, 7, 5)
    #define   SET32Gbl_pinMux_gp13(r32,v)                      _BFSET_(r32, 7, 5,v)
    #define   GET16Gbl_pinMux_gp13(r16)                        _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMux_gp13(r16,v)                      _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_pinMux_gp14(r32)                        _BFGET_(r32, 8, 8)
    #define   SET32Gbl_pinMux_gp14(r32,v)                      _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_pinMux_gp14(r16)                        _BFGET_(r16, 8, 8)
    #define   SET16Gbl_pinMux_gp14(r16,v)                      _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_pinMux_gp15(r32)                        _BFGET_(r32,11, 9)
    #define   SET32Gbl_pinMux_gp15(r32,v)                      _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pinMux_gp15(r16)                        _BFGET_(r16,11, 9)
    #define   SET16Gbl_pinMux_gp15(r16,v)                      _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pinMux_gp16(r32)                        _BFGET_(r32,14,12)
    #define   SET32Gbl_pinMux_gp16(r32,v)                      _BFSET_(r32,14,12,v)
    #define   GET16Gbl_pinMux_gp16(r16)                        _BFGET_(r16,14,12)
    #define   SET16Gbl_pinMux_gp16(r16,v)                      _BFSET_(r16,14,12,v)

    #define   GET32Gbl_pinMux_gp17(r32)                        _BFGET_(r32,17,15)
    #define   SET32Gbl_pinMux_gp17(r32,v)                      _BFSET_(r32,17,15,v)

    #define   GET32Gbl_pinMux_gp18(r32)                        _BFGET_(r32,19,18)
    #define   SET32Gbl_pinMux_gp18(r32,v)                      _BFSET_(r32,19,18,v)
    #define   GET16Gbl_pinMux_gp18(r16)                        _BFGET_(r16, 3, 2)
    #define   SET16Gbl_pinMux_gp18(r16,v)                      _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_pinMux_gp19(r32)                        _BFGET_(r32,21,20)
    #define   SET32Gbl_pinMux_gp19(r32,v)                      _BFSET_(r32,21,20,v)
    #define   GET16Gbl_pinMux_gp19(r16)                        _BFGET_(r16, 5, 4)
    #define   SET16Gbl_pinMux_gp19(r16,v)                      _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_pinMux_gp20(r32)                        _BFGET_(r32,23,22)
    #define   SET32Gbl_pinMux_gp20(r32,v)                      _BFSET_(r32,23,22,v)
    #define   GET16Gbl_pinMux_gp20(r16)                        _BFGET_(r16, 7, 6)
    #define   SET16Gbl_pinMux_gp20(r16,v)                      _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_pinMux_gp21(r32)                        _BFGET_(r32,26,24)
    #define   SET32Gbl_pinMux_gp21(r32,v)                      _BFSET_(r32,26,24,v)
    #define   GET16Gbl_pinMux_gp21(r16)                        _BFGET_(r16,10, 8)
    #define   SET16Gbl_pinMux_gp21(r16,v)                      _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_pinMux_gp22(r32)                        _BFGET_(r32,29,27)
    #define   SET32Gbl_pinMux_gp22(r32,v)                      _BFSET_(r32,29,27,v)
    #define   GET16Gbl_pinMux_gp22(r16)                        _BFGET_(r16,13,11)
    #define   SET16Gbl_pinMux_gp22(r16,v)                      _BFSET_(r16,13,11,v)

    #define     w32Gbl_pinMux1                                 {\
            UNSG32 upinMux_gp11                                :  2;\
            UNSG32 upinMux_gp12                                :  3;\
            UNSG32 upinMux_gp13                                :  3;\
            UNSG32 upinMux_gp14                                :  1;\
            UNSG32 upinMux_gp15                                :  3;\
            UNSG32 upinMux_gp16                                :  3;\
            UNSG32 upinMux_gp17                                :  3;\
            UNSG32 upinMux_gp18                                :  2;\
            UNSG32 upinMux_gp19                                :  2;\
            UNSG32 upinMux_gp20                                :  2;\
            UNSG32 upinMux_gp21                                :  3;\
            UNSG32 upinMux_gp22                                :  3;\
            UNSG32 RSVDx4_b30                                  :  2;\
          }
    union { UNSG32 u32Gbl_pinMux1;
            struct w32Gbl_pinMux1;
          };
    #define   GET32Gbl_pinMux_gp23(r32)                        _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMux_gp23(r32,v)                      _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_pinMux_gp23(r16)                        _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMux_gp23(r16,v)                      _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_pinMux_gp24(r32)                        _BFGET_(r32, 4, 3)
    #define   SET32Gbl_pinMux_gp24(r32,v)                      _BFSET_(r32, 4, 3,v)
    #define   GET16Gbl_pinMux_gp24(r16)                        _BFGET_(r16, 4, 3)
    #define   SET16Gbl_pinMux_gp24(r16,v)                      _BFSET_(r16, 4, 3,v)

    #define   GET32Gbl_pinMux_gp25(r32)                        _BFGET_(r32, 6, 5)
    #define   SET32Gbl_pinMux_gp25(r32,v)                      _BFSET_(r32, 6, 5,v)
    #define   GET16Gbl_pinMux_gp25(r16)                        _BFGET_(r16, 6, 5)
    #define   SET16Gbl_pinMux_gp25(r16,v)                      _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_pinMux_gp26(r32)                        _BFGET_(r32, 7, 7)
    #define   SET32Gbl_pinMux_gp26(r32,v)                      _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_pinMux_gp26(r16)                        _BFGET_(r16, 7, 7)
    #define   SET16Gbl_pinMux_gp26(r16,v)                      _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_pinMux_gp27(r32)                        _BFGET_(r32, 9, 8)
    #define   SET32Gbl_pinMux_gp27(r32,v)                      _BFSET_(r32, 9, 8,v)
    #define   GET16Gbl_pinMux_gp27(r16)                        _BFGET_(r16, 9, 8)
    #define   SET16Gbl_pinMux_gp27(r16,v)                      _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_pinMux_gp28(r32)                        _BFGET_(r32,12,10)
    #define   SET32Gbl_pinMux_gp28(r32,v)                      _BFSET_(r32,12,10,v)
    #define   GET16Gbl_pinMux_gp28(r16)                        _BFGET_(r16,12,10)
    #define   SET16Gbl_pinMux_gp28(r16,v)                      _BFSET_(r16,12,10,v)

    #define   GET32Gbl_pinMux_gp29(r32)                        _BFGET_(r32,15,13)
    #define   SET32Gbl_pinMux_gp29(r32,v)                      _BFSET_(r32,15,13,v)
    #define   GET16Gbl_pinMux_gp29(r16)                        _BFGET_(r16,15,13)
    #define   SET16Gbl_pinMux_gp29(r16,v)                      _BFSET_(r16,15,13,v)

    #define     w32Gbl_pinMux2                                 {\
            UNSG32 upinMux_gp23                                :  3;\
            UNSG32 upinMux_gp24                                :  2;\
            UNSG32 upinMux_gp25                                :  2;\
            UNSG32 upinMux_gp26                                :  1;\
            UNSG32 upinMux_gp27                                :  2;\
            UNSG32 upinMux_gp28                                :  3;\
            UNSG32 upinMux_gp29                                :  3;\
            UNSG32 RSVDx8_b16                                  : 16;\
          }
    union { UNSG32 u32Gbl_pinMux2;
            struct w32Gbl_pinMux2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrap_softwareStrap(r32)            _BFGET_(r32, 6, 0)
    #define   SET32Gbl_bootStrap_softwareStrap(r32,v)          _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_bootStrap_softwareStrap(r16)            _BFGET_(r16, 6, 0)
    #define   SET16Gbl_bootStrap_softwareStrap(r16,v)          _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_bootStrap_bootSrc(r32)                  _BFGET_(r32, 8, 7)
    #define   SET32Gbl_bootStrap_bootSrc(r32,v)                _BFSET_(r32, 8, 7,v)
    #define   GET16Gbl_bootStrap_bootSrc(r16)                  _BFGET_(r16, 8, 7)
    #define   SET16Gbl_bootStrap_bootSrc(r16,v)                _BFSET_(r16, 8, 7,v)

    #define   GET32Gbl_bootStrap_sysPllByps(r32)               _BFGET_(r32, 9, 9)
    #define   SET32Gbl_bootStrap_sysPllByps(r32,v)             _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_bootStrap_sysPllByps(r16)               _BFGET_(r16, 9, 9)
    #define   SET16Gbl_bootStrap_sysPllByps(r16,v)             _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_bootStrap_memPllByps(r32)               _BFGET_(r32,10,10)
    #define   SET32Gbl_bootStrap_memPllByps(r32,v)             _BFSET_(r32,10,10,v)
    #define   GET16Gbl_bootStrap_memPllByps(r16)               _BFGET_(r16,10,10)
    #define   SET16Gbl_bootStrap_memPllByps(r16,v)             _BFSET_(r16,10,10,v)

    #define   GET32Gbl_bootStrap_cpuPllByps(r32)               _BFGET_(r32,11,11)
    #define   SET32Gbl_bootStrap_cpuPllByps(r32,v)             _BFSET_(r32,11,11,v)
    #define   GET16Gbl_bootStrap_cpuPllByps(r16)               _BFGET_(r16,11,11)
    #define   SET16Gbl_bootStrap_cpuPllByps(r16,v)             _BFSET_(r16,11,11,v)

    #define   GET32Gbl_bootStrap_pllPwrDown(r32)               _BFGET_(r32,12,12)
    #define   SET32Gbl_bootStrap_pllPwrDown(r32,v)             _BFSET_(r32,12,12,v)
    #define   GET16Gbl_bootStrap_pllPwrDown(r16)               _BFGET_(r16,12,12)
    #define   SET16Gbl_bootStrap_pllPwrDown(r16,v)             _BFSET_(r16,12,12,v)

    #define   GET32Gbl_bootStrap_refClk12P5M(r32)              _BFGET_(r32,13,13)
    #define   SET32Gbl_bootStrap_refClk12P5M(r32,v)            _BFSET_(r32,13,13,v)
    #define   GET16Gbl_bootStrap_refClk12P5M(r16)              _BFGET_(r16,13,13)
    #define   SET16Gbl_bootStrap_refClk12P5M(r16,v)            _BFSET_(r16,13,13,v)

    #define   GET32Gbl_bootStrap_socJtagFromSM(r32)            _BFGET_(r32,14,14)
    #define   SET32Gbl_bootStrap_socJtagFromSM(r32,v)          _BFSET_(r32,14,14,v)
    #define   GET16Gbl_bootStrap_socJtagFromSM(r16)            _BFGET_(r16,14,14)
    #define   SET16Gbl_bootStrap_socJtagFromSM(r16,v)          _BFSET_(r16,14,14,v)

    #define   GET32Gbl_bootStrap_nandV18Enable(r32)            _BFGET_(r32,15,15)
    #define   SET32Gbl_bootStrap_nandV18Enable(r32,v)          _BFSET_(r32,15,15,v)
    #define   GET16Gbl_bootStrap_nandV18Enable(r16)            _BFGET_(r16,15,15)
    #define   SET16Gbl_bootStrap_nandV18Enable(r16,v)          _BFSET_(r16,15,15,v)

    #define   GET32Gbl_bootStrap_spi1V18Enable(r32)            _BFGET_(r32,16,16)
    #define   SET32Gbl_bootStrap_spi1V18Enable(r32,v)          _BFSET_(r32,16,16,v)
    #define   GET16Gbl_bootStrap_spi1V18Enable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrap_spi1V18Enable(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_bootStrap_nandV25Enable(r32)            _BFGET_(r32,17,17)
    #define   SET32Gbl_bootStrap_nandV25Enable(r32,v)          _BFSET_(r32,17,17,v)
    #define   GET16Gbl_bootStrap_nandV25Enable(r16)            _BFGET_(r16, 1, 1)
    #define   SET16Gbl_bootStrap_nandV25Enable(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_bootStrap_spi1V25Enable(r32)            _BFGET_(r32,18,18)
    #define   SET32Gbl_bootStrap_spi1V25Enable(r32,v)          _BFSET_(r32,18,18,v)
    #define   GET16Gbl_bootStrap_spi1V25Enable(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_bootStrap_spi1V25Enable(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_bootStrap_ENG_EN(r32)                   _BFGET_(r32,19,19)
    #define   SET32Gbl_bootStrap_ENG_EN(r32,v)                 _BFSET_(r32,19,19,v)
    #define   GET16Gbl_bootStrap_ENG_EN(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_bootStrap_ENG_EN(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_bootStrap                               {\
            UNSG32 ubootStrap_softwareStrap                    :  7;\
            UNSG32 ubootStrap_bootSrc                          :  2;\
            UNSG32 ubootStrap_sysPllByps                       :  1;\
            UNSG32 ubootStrap_memPllByps                       :  1;\
            UNSG32 ubootStrap_cpuPllByps                       :  1;\
            UNSG32 ubootStrap_pllPwrDown                       :  1;\
            UNSG32 ubootStrap_refClk12P5M                      :  1;\
            UNSG32 ubootStrap_socJtagFromSM                    :  1;\
            UNSG32 ubootStrap_nandV18Enable                    :  1;\
            UNSG32 ubootStrap_spi1V18Enable                    :  1;\
            UNSG32 ubootStrap_nandV25Enable                    :  1;\
            UNSG32 ubootStrap_spi1V25Enable                    :  1;\
            UNSG32 ubootStrap_ENG_EN                           :  1;\
            UNSG32 RSVDxC_b20                                  : 12;\
          }
    union { UNSG32 u32Gbl_bootStrap;
            struct w32Gbl_bootStrap;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_anaGrpCtl_anaGrpPu(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_anaGrpCtl_anaGrpPu(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpPu(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_anaGrpCtl_anaGrpPu(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpBgSel(r32)              _BFGET_(r32, 2, 1)
    #define   SET32Gbl_anaGrpCtl_anaGrpBgSel(r32,v)            _BFSET_(r32, 2, 1,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpBgSel(r16)              _BFGET_(r16, 2, 1)
    #define   SET16Gbl_anaGrpCtl_anaGrpBgSel(r16,v)            _BFSET_(r16, 2, 1,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpPuXtl(r32)              _BFGET_(r32, 3, 3)
    #define   SET32Gbl_anaGrpCtl_anaGrpPuXtl(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpPuXtl(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_anaGrpCtl_anaGrpPuXtl(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpGainX2(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_anaGrpCtl_anaGrpGainX2(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpGainX2(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_anaGrpCtl_anaGrpGainX2(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv1(r32)      _BFGET_(r32, 6, 5)
    #define   SET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv1(r32,v)    _BFSET_(r32, 6, 5,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv1(r16)      _BFGET_(r16, 6, 5)
    #define   SET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv1(r16,v)    _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv2(r32)      _BFGET_(r32, 8, 7)
    #define   SET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv2(r32,v)    _BFSET_(r32, 8, 7,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv2(r16)      _BFGET_(r16, 8, 7)
    #define   SET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv2(r16,v)    _BFSET_(r16, 8, 7,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv3(r32)      _BFGET_(r32,10, 9)
    #define   SET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv3(r32,v)    _BFSET_(r32,10, 9,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv3(r16)      _BFGET_(r16,10, 9)
    #define   SET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv3(r16,v)    _BFSET_(r16,10, 9,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv4(r32)      _BFGET_(r32,12,11)
    #define   SET32Gbl_anaGrpCtl_anaGrpSelClkDigDiv4(r32,v)    _BFSET_(r32,12,11,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv4(r16)      _BFGET_(r16,12,11)
    #define   SET16Gbl_anaGrpCtl_anaGrpSelClkDigDiv4(r16,v)    _BFSET_(r16,12,11,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpPuOsc(r32)              _BFGET_(r32,13,13)
    #define   SET32Gbl_anaGrpCtl_anaGrpPuOsc(r32,v)            _BFSET_(r32,13,13,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpPuOsc(r16)              _BFGET_(r16,13,13)
    #define   SET16Gbl_anaGrpCtl_anaGrpPuOsc(r16,v)            _BFSET_(r16,13,13,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpSpeedOsc(r32)           _BFGET_(r32,15,14)
    #define   SET32Gbl_anaGrpCtl_anaGrpSpeedOsc(r32,v)         _BFSET_(r32,15,14,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpSpeedOsc(r16)           _BFGET_(r16,15,14)
    #define   SET16Gbl_anaGrpCtl_anaGrpSpeedOsc(r16,v)         _BFSET_(r16,15,14,v)

    #define   GET32Gbl_anaGrpCtl_anaGrpTestAna(r32)            _BFGET_(r32,19,16)
    #define   SET32Gbl_anaGrpCtl_anaGrpTestAna(r32,v)          _BFSET_(r32,19,16,v)
    #define   GET16Gbl_anaGrpCtl_anaGrpTestAna(r16)            _BFGET_(r16, 3, 0)
    #define   SET16Gbl_anaGrpCtl_anaGrpTestAna(r16,v)          _BFSET_(r16, 3, 0,v)

    #define     w32Gbl_anaGrpCtl                               {\
            UNSG32 uanaGrpCtl_anaGrpPu                         :  1;\
            UNSG32 uanaGrpCtl_anaGrpBgSel                      :  2;\
            UNSG32 uanaGrpCtl_anaGrpPuXtl                      :  1;\
            UNSG32 uanaGrpCtl_anaGrpGainX2                     :  1;\
            UNSG32 uanaGrpCtl_anaGrpSelClkDigDiv1              :  2;\
            UNSG32 uanaGrpCtl_anaGrpSelClkDigDiv2              :  2;\
            UNSG32 uanaGrpCtl_anaGrpSelClkDigDiv3              :  2;\
            UNSG32 uanaGrpCtl_anaGrpSelClkDigDiv4              :  2;\
            UNSG32 uanaGrpCtl_anaGrpPuOsc                      :  1;\
            UNSG32 uanaGrpCtl_anaGrpSpeedOsc                   :  2;\
            UNSG32 uanaGrpCtl_anaGrpTestAna                    :  4;\
            UNSG32 RSVDx10_b20                                 : 12;\
          }
    union { UNSG32 u32Gbl_anaGrpCtl;
            struct w32Gbl_anaGrpCtl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sysPllCtl_sysPllPu(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_sysPllCtl_sysPllPu(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_sysPllCtl_sysPllPu(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sysPllCtl_sysPllPu(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllRfDiv(r32)              _BFGET_(r32, 5, 1)
    #define   SET32Gbl_sysPllCtl_sysPllRfDiv(r32,v)            _BFSET_(r32, 5, 1,v)
    #define   GET16Gbl_sysPllCtl_sysPllRfDiv(r16)              _BFGET_(r16, 5, 1)
    #define   SET16Gbl_sysPllCtl_sysPllRfDiv(r16,v)            _BFSET_(r16, 5, 1,v)

    #define   GET32Gbl_sysPllCtl_sysPllFbDiv(r32)              _BFGET_(r32,14, 6)
    #define   SET32Gbl_sysPllCtl_sysPllFbDiv(r32,v)            _BFSET_(r32,14, 6,v)
    #define   GET16Gbl_sysPllCtl_sysPllFbDiv(r16)              _BFGET_(r16,14, 6)
    #define   SET16Gbl_sysPllCtl_sysPllFbDiv(r16,v)            _BFSET_(r16,14, 6,v)

    #define   GET32Gbl_sysPllCtl_sysPllVddm(r32)               _BFGET_(r32,16,15)
    #define   SET32Gbl_sysPllCtl_sysPllVddm(r32,v)             _BFSET_(r32,16,15,v)

    #define   GET32Gbl_sysPllCtl_sysPllVddl(r32)               _BFGET_(r32,20,17)
    #define   SET32Gbl_sysPllCtl_sysPllVddl(r32,v)             _BFSET_(r32,20,17,v)
    #define   GET16Gbl_sysPllCtl_sysPllVddl(r16)               _BFGET_(r16, 4, 1)
    #define   SET16Gbl_sysPllCtl_sysPllVddl(r16,v)             _BFSET_(r16, 4, 1,v)

    #define   GET32Gbl_sysPllCtl_sysPllVregIVRef(r32)          _BFGET_(r32,22,21)
    #define   SET32Gbl_sysPllCtl_sysPllVregIVRef(r32,v)        _BFSET_(r32,22,21,v)
    #define   GET16Gbl_sysPllCtl_sysPllVregIVRef(r16)          _BFGET_(r16, 6, 5)
    #define   SET16Gbl_sysPllCtl_sysPllVregIVRef(r16,v)        _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_sysPllCtl_sysPllIcp(r32)                _BFGET_(r32,25,23)
    #define   SET32Gbl_sysPllCtl_sysPllIcp(r32,v)              _BFSET_(r32,25,23,v)
    #define   GET16Gbl_sysPllCtl_sysPllIcp(r16)                _BFGET_(r16, 9, 7)
    #define   SET16Gbl_sysPllCtl_sysPllIcp(r16,v)              _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_sysPllCtl_sysPllKvco(r32)               _BFGET_(r32,29,26)
    #define   SET32Gbl_sysPllCtl_sysPllKvco(r32,v)             _BFSET_(r32,29,26,v)
    #define   GET16Gbl_sysPllCtl_sysPllKvco(r16)               _BFGET_(r16,13,10)
    #define   SET16Gbl_sysPllCtl_sysPllKvco(r16,v)             _BFSET_(r16,13,10,v)

    #define   GET32Gbl_sysPllCtl_sysPllCtune(r32)              _BFGET_(r32,31,30)
    #define   SET32Gbl_sysPllCtl_sysPllCtune(r32,v)            _BFSET_(r32,31,30,v)
    #define   GET16Gbl_sysPllCtl_sysPllCtune(r16)              _BFGET_(r16,15,14)
    #define   SET16Gbl_sysPllCtl_sysPllCtune(r16,v)            _BFSET_(r16,15,14,v)

    #define     w32Gbl_sysPllCtl                               {\
            UNSG32 usysPllCtl_sysPllPu                         :  1;\
            UNSG32 usysPllCtl_sysPllRfDiv                      :  5;\
            UNSG32 usysPllCtl_sysPllFbDiv                      :  9;\
            UNSG32 usysPllCtl_sysPllVddm                       :  2;\
            UNSG32 usysPllCtl_sysPllVddl                       :  4;\
            UNSG32 usysPllCtl_sysPllVregIVRef                  :  2;\
            UNSG32 usysPllCtl_sysPllIcp                        :  3;\
            UNSG32 usysPllCtl_sysPllKvco                       :  4;\
            UNSG32 usysPllCtl_sysPllCtune                      :  2;\
          }
    union { UNSG32 u32Gbl_sysPllCtl;
            struct w32Gbl_sysPllCtl;
          };
    #define   GET32Gbl_sysPllCtl_sysPllVcoRng(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_sysPllCtl_sysPllVcoRng(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_sysPllCtl_sysPllVcoRng(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_sysPllCtl_sysPllVcoRng(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllVcoDivSelDiff(r32)      _BFGET_(r32, 6, 3)
    #define   SET32Gbl_sysPllCtl_sysPllVcoDivSelDiff(r32,v)    _BFSET_(r32, 6, 3,v)
    #define   GET16Gbl_sysPllCtl_sysPllVcoDivSelDiff(r16)      _BFGET_(r16, 6, 3)
    #define   SET16Gbl_sysPllCtl_sysPllVcoDivSelDiff(r16,v)    _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_sysPllCtl_sysPllVcoDivSelSe(r32)        _BFGET_(r32,10, 7)
    #define   SET32Gbl_sysPllCtl_sysPllVcoDivSelSe(r32,v)      _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_sysPllCtl_sysPllVcoDivSelSe(r16)        _BFGET_(r16,10, 7)
    #define   SET16Gbl_sysPllCtl_sysPllVcoDivSelSe(r16,v)      _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_sysPllCtl_sysPllDiffClkEn(r32)          _BFGET_(r32,11,11)
    #define   SET32Gbl_sysPllCtl_sysPllDiffClkEn(r32,v)        _BFSET_(r32,11,11,v)
    #define   GET16Gbl_sysPllCtl_sysPllDiffClkEn(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_sysPllCtl_sysPllDiffClkEn(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_sysPllCtl_sysPllSelVcoDiff(r32)         _BFGET_(r32,12,12)
    #define   SET32Gbl_sysPllCtl_sysPllSelVcoDiff(r32,v)       _BFSET_(r32,12,12,v)
    #define   GET16Gbl_sysPllCtl_sysPllSelVcoDiff(r16)         _BFGET_(r16,12,12)
    #define   SET16Gbl_sysPllCtl_sysPllSelVcoDiff(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32Gbl_sysPllCtl_sysPllSelVcoClkSe(r32)        _BFGET_(r32,13,13)
    #define   SET32Gbl_sysPllCtl_sysPllSelVcoClkSe(r32,v)      _BFSET_(r32,13,13,v)
    #define   GET16Gbl_sysPllCtl_sysPllSelVcoClkSe(r16)        _BFGET_(r16,13,13)
    #define   SET16Gbl_sysPllCtl_sysPllSelVcoClkSe(r16,v)      _BFSET_(r16,13,13,v)

    #define   GET32Gbl_sysPllCtl_sysPllBypassFbDiv(r32)        _BFGET_(r32,14,14)
    #define   SET32Gbl_sysPllCtl_sysPllBypassFbDiv(r32,v)      _BFSET_(r32,14,14,v)
    #define   GET16Gbl_sysPllCtl_sysPllBypassFbDiv(r16)        _BFGET_(r16,14,14)
    #define   SET16Gbl_sysPllCtl_sysPllBypassFbDiv(r16,v)      _BFSET_(r16,14,14,v)

    #define   GET32Gbl_sysPllCtl_sysPllBypassEn(r32)           _BFGET_(r32,15,15)
    #define   SET32Gbl_sysPllCtl_sysPllBypassEn(r32,v)         _BFSET_(r32,15,15,v)
    #define   GET16Gbl_sysPllCtl_sysPllBypassEn(r16)           _BFGET_(r16,15,15)
    #define   SET16Gbl_sysPllCtl_sysPllBypassEn(r16,v)         _BFSET_(r16,15,15,v)

    #define   GET32Gbl_sysPllCtl_sysPllGateClkCtrl(r32)        _BFGET_(r32,16,16)
    #define   SET32Gbl_sysPllCtl_sysPllGateClkCtrl(r32,v)      _BFSET_(r32,16,16,v)
    #define   GET16Gbl_sysPllCtl_sysPllGateClkCtrl(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sysPllCtl_sysPllGateClkCtrl(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllLineUpEn(r32)           _BFGET_(r32,17,17)
    #define   SET32Gbl_sysPllCtl_sysPllLineUpEn(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16Gbl_sysPllCtl_sysPllLineUpEn(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_sysPllCtl_sysPllLineUpEn(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_sysPllCtl_sysPllIntpi(r32)              _BFGET_(r32,21,18)
    #define   SET32Gbl_sysPllCtl_sysPllIntpi(r32,v)            _BFSET_(r32,21,18,v)
    #define   GET16Gbl_sysPllCtl_sysPllIntpi(r16)              _BFGET_(r16, 5, 2)
    #define   SET16Gbl_sysPllCtl_sysPllIntpi(r16,v)            _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_sysPllCtl_sysPllPiEn(r32)               _BFGET_(r32,22,22)
    #define   SET32Gbl_sysPllCtl_sysPllPiEn(r32,v)             _BFSET_(r32,22,22,v)
    #define   GET16Gbl_sysPllCtl_sysPllPiEn(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_sysPllCtl_sysPllPiEn(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_sysPllCtl_sysPllSscClkEn(r32)           _BFGET_(r32,23,23)
    #define   SET32Gbl_sysPllCtl_sysPllSscClkEn(r32,v)         _BFSET_(r32,23,23,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscClkEn(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_sysPllCtl_sysPllSscClkEn(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_sysPllCtl_sysPllClkDetEn(r32)           _BFGET_(r32,24,24)
    #define   SET32Gbl_sysPllCtl_sysPllClkDetEn(r32,v)         _BFSET_(r32,24,24,v)
    #define   GET16Gbl_sysPllCtl_sysPllClkDetEn(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_sysPllCtl_sysPllClkDetEn(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_sysPllCtl_sysPllFreqOffsetEn(r32)       _BFGET_(r32,25,25)
    #define   SET32Gbl_sysPllCtl_sysPllFreqOffsetEn(r32,v)     _BFSET_(r32,25,25,v)
    #define   GET16Gbl_sysPllCtl_sysPllFreqOffsetEn(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Gbl_sysPllCtl_sysPllFreqOffsetEn(r16,v)     _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_sysPllCtl1                              {\
            UNSG32 usysPllCtl_sysPllVcoRng                     :  3;\
            UNSG32 usysPllCtl_sysPllVcoDivSelDiff              :  4;\
            UNSG32 usysPllCtl_sysPllVcoDivSelSe                :  4;\
            UNSG32 usysPllCtl_sysPllDiffClkEn                  :  1;\
            UNSG32 usysPllCtl_sysPllSelVcoDiff                 :  1;\
            UNSG32 usysPllCtl_sysPllSelVcoClkSe                :  1;\
            UNSG32 usysPllCtl_sysPllBypassFbDiv                :  1;\
            UNSG32 usysPllCtl_sysPllBypassEn                   :  1;\
            UNSG32 usysPllCtl_sysPllGateClkCtrl                :  1;\
            UNSG32 usysPllCtl_sysPllLineUpEn                   :  1;\
            UNSG32 usysPllCtl_sysPllIntpi                      :  4;\
            UNSG32 usysPllCtl_sysPllPiEn                       :  1;\
            UNSG32 usysPllCtl_sysPllSscClkEn                   :  1;\
            UNSG32 usysPllCtl_sysPllClkDetEn                   :  1;\
            UNSG32 usysPllCtl_sysPllFreqOffsetEn               :  1;\
            UNSG32 RSVDx18_b26                                 :  6;\
          }
    union { UNSG32 u32Gbl_sysPllCtl1;
            struct w32Gbl_sysPllCtl1;
          };
    #define   GET32Gbl_sysPllCtl_sysPllFreqOffset(r32)         _BFGET_(r32,16, 0)
    #define   SET32Gbl_sysPllCtl_sysPllFreqOffset(r32,v)       _BFSET_(r32,16, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllFreqOffsetModeSel(r32)  _BFGET_(r32,17,17)
    #define   SET32Gbl_sysPllCtl_sysPllFreqOffsetModeSel(r32,v) _BFSET_(r32,17,17,v)
    #define   GET16Gbl_sysPllCtl_sysPllFreqOffsetModeSel(r16)  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_sysPllCtl_sysPllFreqOffsetModeSel(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_sysPllCtl_sysPllFreqOffsetValid(r32)    _BFGET_(r32,18,18)
    #define   SET32Gbl_sysPllCtl_sysPllFreqOffsetValid(r32,v)  _BFSET_(r32,18,18,v)
    #define   GET16Gbl_sysPllCtl_sysPllFreqOffsetValid(r16)    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_sysPllCtl_sysPllFreqOffsetValid(r16,v)  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_sysPllCtl_sysPllSscEn(r32)              _BFGET_(r32,19,19)
    #define   SET32Gbl_sysPllCtl_sysPllSscEn(r32,v)            _BFSET_(r32,19,19,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscEn(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_sysPllCtl_sysPllSscEn(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_sysPllCtl_sysPllSscmode(r32)            _BFGET_(r32,20,20)
    #define   SET32Gbl_sysPllCtl_sysPllSscmode(r32,v)          _BFSET_(r32,20,20,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscmode(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sysPllCtl_sysPllSscmode(r16,v)          _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_sysPllCtl2                              {\
            UNSG32 usysPllCtl_sysPllFreqOffset                 : 17;\
            UNSG32 usysPllCtl_sysPllFreqOffsetModeSel          :  1;\
            UNSG32 usysPllCtl_sysPllFreqOffsetValid            :  1;\
            UNSG32 usysPllCtl_sysPllSscEn                      :  1;\
            UNSG32 usysPllCtl_sysPllSscmode                    :  1;\
            UNSG32 RSVDx1C_b21                                 : 11;\
          }
    union { UNSG32 u32Gbl_sysPllCtl2;
            struct w32Gbl_sysPllCtl2;
          };
    #define   GET32Gbl_sysPllCtl_sysPllSscFdiv(r32)            _BFGET_(r32,15, 0)
    #define   SET32Gbl_sysPllCtl_sysPllSscFdiv(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscFdiv(r16)            _BFGET_(r16,15, 0)
    #define   SET16Gbl_sysPllCtl_sysPllSscFdiv(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllSscRnge(r32)            _BFGET_(r32,26,16)
    #define   SET32Gbl_sysPllCtl_sysPllSscRnge(r32,v)          _BFSET_(r32,26,16,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscRnge(r16)            _BFGET_(r16,10, 0)
    #define   SET16Gbl_sysPllCtl_sysPllSscRnge(r16,v)          _BFSET_(r16,10, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllSscResetExt(r32)        _BFGET_(r32,27,27)
    #define   SET32Gbl_sysPllCtl_sysPllSscResetExt(r32,v)      _BFSET_(r32,27,27,v)
    #define   GET16Gbl_sysPllCtl_sysPllSscResetExt(r16)        _BFGET_(r16,11,11)
    #define   SET16Gbl_sysPllCtl_sysPllSscResetExt(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32Gbl_sysPllCtl_sysPllTestMon(r32)            _BFGET_(r32,31,28)
    #define   SET32Gbl_sysPllCtl_sysPllTestMon(r32,v)          _BFSET_(r32,31,28,v)
    #define   GET16Gbl_sysPllCtl_sysPllTestMon(r16)            _BFGET_(r16,15,12)
    #define   SET16Gbl_sysPllCtl_sysPllTestMon(r16,v)          _BFSET_(r16,15,12,v)

    #define     w32Gbl_sysPllCtl3                              {\
            UNSG32 usysPllCtl_sysPllSscFdiv                    : 16;\
            UNSG32 usysPllCtl_sysPllSscRnge                    : 11;\
            UNSG32 usysPllCtl_sysPllSscResetExt                :  1;\
            UNSG32 usysPllCtl_sysPllTestMon                    :  4;\
          }
    union { UNSG32 u32Gbl_sysPllCtl3;
            struct w32Gbl_sysPllCtl3;
          };
    #define   GET32Gbl_sysPllCtl_sysPllRsvdIn(r32)             _BFGET_(r32, 3, 0)
    #define   SET32Gbl_sysPllCtl_sysPllRsvdIn(r32,v)           _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_sysPllCtl_sysPllRsvdIn(r16)             _BFGET_(r16, 3, 0)
    #define   SET16Gbl_sysPllCtl_sysPllRsvdIn(r16,v)           _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_sysPllCtl_sysPllExtRst(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_sysPllCtl_sysPllExtRst(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_sysPllCtl_sysPllExtRst(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sysPllCtl_sysPllExtRst(r16,v)           _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_sysPllCtl4                              {\
            UNSG32 usysPllCtl_sysPllRsvdIn                     :  4;\
            UNSG32 usysPllCtl_sysPllExtRst                     :  1;\
            UNSG32 RSVDx24_b5                                  : 27;\
          }
    union { UNSG32 u32Gbl_sysPllCtl4;
            struct w32Gbl_sysPllCtl4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_memPllCtl_memPllPu(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_memPllCtl_memPllPu(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_memPllCtl_memPllPu(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_memPllCtl_memPllPu(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_memPllCtl_memPllRfDiv(r32)              _BFGET_(r32, 5, 1)
    #define   SET32Gbl_memPllCtl_memPllRfDiv(r32,v)            _BFSET_(r32, 5, 1,v)
    #define   GET16Gbl_memPllCtl_memPllRfDiv(r16)              _BFGET_(r16, 5, 1)
    #define   SET16Gbl_memPllCtl_memPllRfDiv(r16,v)            _BFSET_(r16, 5, 1,v)

    #define   GET32Gbl_memPllCtl_memPllFbDiv(r32)              _BFGET_(r32,14, 6)
    #define   SET32Gbl_memPllCtl_memPllFbDiv(r32,v)            _BFSET_(r32,14, 6,v)
    #define   GET16Gbl_memPllCtl_memPllFbDiv(r16)              _BFGET_(r16,14, 6)
    #define   SET16Gbl_memPllCtl_memPllFbDiv(r16,v)            _BFSET_(r16,14, 6,v)

    #define   GET32Gbl_memPllCtl_memPllVddm(r32)               _BFGET_(r32,16,15)
    #define   SET32Gbl_memPllCtl_memPllVddm(r32,v)             _BFSET_(r32,16,15,v)

    #define   GET32Gbl_memPllCtl_memPllVddl(r32)               _BFGET_(r32,20,17)
    #define   SET32Gbl_memPllCtl_memPllVddl(r32,v)             _BFSET_(r32,20,17,v)
    #define   GET16Gbl_memPllCtl_memPllVddl(r16)               _BFGET_(r16, 4, 1)
    #define   SET16Gbl_memPllCtl_memPllVddl(r16,v)             _BFSET_(r16, 4, 1,v)

    #define   GET32Gbl_memPllCtl_memPllVregIVRef(r32)          _BFGET_(r32,22,21)
    #define   SET32Gbl_memPllCtl_memPllVregIVRef(r32,v)        _BFSET_(r32,22,21,v)
    #define   GET16Gbl_memPllCtl_memPllVregIVRef(r16)          _BFGET_(r16, 6, 5)
    #define   SET16Gbl_memPllCtl_memPllVregIVRef(r16,v)        _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_memPllCtl_memPllIcp(r32)                _BFGET_(r32,25,23)
    #define   SET32Gbl_memPllCtl_memPllIcp(r32,v)              _BFSET_(r32,25,23,v)
    #define   GET16Gbl_memPllCtl_memPllIcp(r16)                _BFGET_(r16, 9, 7)
    #define   SET16Gbl_memPllCtl_memPllIcp(r16,v)              _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_memPllCtl_memPllKvco(r32)               _BFGET_(r32,29,26)
    #define   SET32Gbl_memPllCtl_memPllKvco(r32,v)             _BFSET_(r32,29,26,v)
    #define   GET16Gbl_memPllCtl_memPllKvco(r16)               _BFGET_(r16,13,10)
    #define   SET16Gbl_memPllCtl_memPllKvco(r16,v)             _BFSET_(r16,13,10,v)

    #define   GET32Gbl_memPllCtl_memPllCtune(r32)              _BFGET_(r32,31,30)
    #define   SET32Gbl_memPllCtl_memPllCtune(r32,v)            _BFSET_(r32,31,30,v)
    #define   GET16Gbl_memPllCtl_memPllCtune(r16)              _BFGET_(r16,15,14)
    #define   SET16Gbl_memPllCtl_memPllCtune(r16,v)            _BFSET_(r16,15,14,v)

    #define     w32Gbl_memPllCtl                               {\
            UNSG32 umemPllCtl_memPllPu                         :  1;\
            UNSG32 umemPllCtl_memPllRfDiv                      :  5;\
            UNSG32 umemPllCtl_memPllFbDiv                      :  9;\
            UNSG32 umemPllCtl_memPllVddm                       :  2;\
            UNSG32 umemPllCtl_memPllVddl                       :  4;\
            UNSG32 umemPllCtl_memPllVregIVRef                  :  2;\
            UNSG32 umemPllCtl_memPllIcp                        :  3;\
            UNSG32 umemPllCtl_memPllKvco                       :  4;\
            UNSG32 umemPllCtl_memPllCtune                      :  2;\
          }
    union { UNSG32 u32Gbl_memPllCtl;
            struct w32Gbl_memPllCtl;
          };
    #define   GET32Gbl_memPllCtl_memPllVcoRng(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_memPllCtl_memPllVcoRng(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_memPllCtl_memPllVcoRng(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_memPllCtl_memPllVcoRng(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_memPllCtl_memPllVcoDivSelDiff(r32)      _BFGET_(r32, 6, 3)
    #define   SET32Gbl_memPllCtl_memPllVcoDivSelDiff(r32,v)    _BFSET_(r32, 6, 3,v)
    #define   GET16Gbl_memPllCtl_memPllVcoDivSelDiff(r16)      _BFGET_(r16, 6, 3)
    #define   SET16Gbl_memPllCtl_memPllVcoDivSelDiff(r16,v)    _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_memPllCtl_memPllVcoDivSelSe(r32)        _BFGET_(r32,10, 7)
    #define   SET32Gbl_memPllCtl_memPllVcoDivSelSe(r32,v)      _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_memPllCtl_memPllVcoDivSelSe(r16)        _BFGET_(r16,10, 7)
    #define   SET16Gbl_memPllCtl_memPllVcoDivSelSe(r16,v)      _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_memPllCtl_memPllDiffClkEn(r32)          _BFGET_(r32,11,11)
    #define   SET32Gbl_memPllCtl_memPllDiffClkEn(r32,v)        _BFSET_(r32,11,11,v)
    #define   GET16Gbl_memPllCtl_memPllDiffClkEn(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_memPllCtl_memPllDiffClkEn(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_memPllCtl_memPllSelVcoDiff(r32)         _BFGET_(r32,12,12)
    #define   SET32Gbl_memPllCtl_memPllSelVcoDiff(r32,v)       _BFSET_(r32,12,12,v)
    #define   GET16Gbl_memPllCtl_memPllSelVcoDiff(r16)         _BFGET_(r16,12,12)
    #define   SET16Gbl_memPllCtl_memPllSelVcoDiff(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32Gbl_memPllCtl_memPllSelVcoClkSe(r32)        _BFGET_(r32,13,13)
    #define   SET32Gbl_memPllCtl_memPllSelVcoClkSe(r32,v)      _BFSET_(r32,13,13,v)
    #define   GET16Gbl_memPllCtl_memPllSelVcoClkSe(r16)        _BFGET_(r16,13,13)
    #define   SET16Gbl_memPllCtl_memPllSelVcoClkSe(r16,v)      _BFSET_(r16,13,13,v)

    #define   GET32Gbl_memPllCtl_memPllBypassFbDiv(r32)        _BFGET_(r32,14,14)
    #define   SET32Gbl_memPllCtl_memPllBypassFbDiv(r32,v)      _BFSET_(r32,14,14,v)
    #define   GET16Gbl_memPllCtl_memPllBypassFbDiv(r16)        _BFGET_(r16,14,14)
    #define   SET16Gbl_memPllCtl_memPllBypassFbDiv(r16,v)      _BFSET_(r16,14,14,v)

    #define   GET32Gbl_memPllCtl_memPllBypassEn(r32)           _BFGET_(r32,15,15)
    #define   SET32Gbl_memPllCtl_memPllBypassEn(r32,v)         _BFSET_(r32,15,15,v)
    #define   GET16Gbl_memPllCtl_memPllBypassEn(r16)           _BFGET_(r16,15,15)
    #define   SET16Gbl_memPllCtl_memPllBypassEn(r16,v)         _BFSET_(r16,15,15,v)

    #define   GET32Gbl_memPllCtl_memPllGateClkCtrl(r32)        _BFGET_(r32,16,16)
    #define   SET32Gbl_memPllCtl_memPllGateClkCtrl(r32,v)      _BFSET_(r32,16,16,v)
    #define   GET16Gbl_memPllCtl_memPllGateClkCtrl(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_memPllCtl_memPllGateClkCtrl(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_memPllCtl_memPllLineUpEn(r32)           _BFGET_(r32,17,17)
    #define   SET32Gbl_memPllCtl_memPllLineUpEn(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16Gbl_memPllCtl_memPllLineUpEn(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_memPllCtl_memPllLineUpEn(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_memPllCtl_memPllIntpi(r32)              _BFGET_(r32,21,18)
    #define   SET32Gbl_memPllCtl_memPllIntpi(r32,v)            _BFSET_(r32,21,18,v)
    #define   GET16Gbl_memPllCtl_memPllIntpi(r16)              _BFGET_(r16, 5, 2)
    #define   SET16Gbl_memPllCtl_memPllIntpi(r16,v)            _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_memPllCtl_memPllPiEn(r32)               _BFGET_(r32,22,22)
    #define   SET32Gbl_memPllCtl_memPllPiEn(r32,v)             _BFSET_(r32,22,22,v)
    #define   GET16Gbl_memPllCtl_memPllPiEn(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_memPllCtl_memPllPiEn(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_memPllCtl_memPllSscClkEn(r32)           _BFGET_(r32,23,23)
    #define   SET32Gbl_memPllCtl_memPllSscClkEn(r32,v)         _BFSET_(r32,23,23,v)
    #define   GET16Gbl_memPllCtl_memPllSscClkEn(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_memPllCtl_memPllSscClkEn(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_memPllCtl_memPllClkDetEn(r32)           _BFGET_(r32,24,24)
    #define   SET32Gbl_memPllCtl_memPllClkDetEn(r32,v)         _BFSET_(r32,24,24,v)
    #define   GET16Gbl_memPllCtl_memPllClkDetEn(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_memPllCtl_memPllClkDetEn(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_memPllCtl_memPllFreqOffsetEn(r32)       _BFGET_(r32,25,25)
    #define   SET32Gbl_memPllCtl_memPllFreqOffsetEn(r32,v)     _BFSET_(r32,25,25,v)
    #define   GET16Gbl_memPllCtl_memPllFreqOffsetEn(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Gbl_memPllCtl_memPllFreqOffsetEn(r16,v)     _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_memPllCtl1                              {\
            UNSG32 umemPllCtl_memPllVcoRng                     :  3;\
            UNSG32 umemPllCtl_memPllVcoDivSelDiff              :  4;\
            UNSG32 umemPllCtl_memPllVcoDivSelSe                :  4;\
            UNSG32 umemPllCtl_memPllDiffClkEn                  :  1;\
            UNSG32 umemPllCtl_memPllSelVcoDiff                 :  1;\
            UNSG32 umemPllCtl_memPllSelVcoClkSe                :  1;\
            UNSG32 umemPllCtl_memPllBypassFbDiv                :  1;\
            UNSG32 umemPllCtl_memPllBypassEn                   :  1;\
            UNSG32 umemPllCtl_memPllGateClkCtrl                :  1;\
            UNSG32 umemPllCtl_memPllLineUpEn                   :  1;\
            UNSG32 umemPllCtl_memPllIntpi                      :  4;\
            UNSG32 umemPllCtl_memPllPiEn                       :  1;\
            UNSG32 umemPllCtl_memPllSscClkEn                   :  1;\
            UNSG32 umemPllCtl_memPllClkDetEn                   :  1;\
            UNSG32 umemPllCtl_memPllFreqOffsetEn               :  1;\
            UNSG32 RSVDx2C_b26                                 :  6;\
          }
    union { UNSG32 u32Gbl_memPllCtl1;
            struct w32Gbl_memPllCtl1;
          };
    #define   GET32Gbl_memPllCtl_memPllFreqOffset(r32)         _BFGET_(r32,16, 0)
    #define   SET32Gbl_memPllCtl_memPllFreqOffset(r32,v)       _BFSET_(r32,16, 0,v)

    #define   GET32Gbl_memPllCtl_memPllFreqOffsetModeSel(r32)  _BFGET_(r32,17,17)
    #define   SET32Gbl_memPllCtl_memPllFreqOffsetModeSel(r32,v) _BFSET_(r32,17,17,v)
    #define   GET16Gbl_memPllCtl_memPllFreqOffsetModeSel(r16)  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_memPllCtl_memPllFreqOffsetModeSel(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_memPllCtl_memPllFreqOffsetValid(r32)    _BFGET_(r32,18,18)
    #define   SET32Gbl_memPllCtl_memPllFreqOffsetValid(r32,v)  _BFSET_(r32,18,18,v)
    #define   GET16Gbl_memPllCtl_memPllFreqOffsetValid(r16)    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_memPllCtl_memPllFreqOffsetValid(r16,v)  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_memPllCtl_memPllSscEn(r32)              _BFGET_(r32,19,19)
    #define   SET32Gbl_memPllCtl_memPllSscEn(r32,v)            _BFSET_(r32,19,19,v)
    #define   GET16Gbl_memPllCtl_memPllSscEn(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_memPllCtl_memPllSscEn(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_memPllCtl_memPllSscmode(r32)            _BFGET_(r32,20,20)
    #define   SET32Gbl_memPllCtl_memPllSscmode(r32,v)          _BFSET_(r32,20,20,v)
    #define   GET16Gbl_memPllCtl_memPllSscmode(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_memPllCtl_memPllSscmode(r16,v)          _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_memPllCtl2                              {\
            UNSG32 umemPllCtl_memPllFreqOffset                 : 17;\
            UNSG32 umemPllCtl_memPllFreqOffsetModeSel          :  1;\
            UNSG32 umemPllCtl_memPllFreqOffsetValid            :  1;\
            UNSG32 umemPllCtl_memPllSscEn                      :  1;\
            UNSG32 umemPllCtl_memPllSscmode                    :  1;\
            UNSG32 RSVDx30_b21                                 : 11;\
          }
    union { UNSG32 u32Gbl_memPllCtl2;
            struct w32Gbl_memPllCtl2;
          };
    #define   GET32Gbl_memPllCtl_memPllSscFdiv(r32)            _BFGET_(r32,15, 0)
    #define   SET32Gbl_memPllCtl_memPllSscFdiv(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_memPllCtl_memPllSscFdiv(r16)            _BFGET_(r16,15, 0)
    #define   SET16Gbl_memPllCtl_memPllSscFdiv(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32Gbl_memPllCtl_memPllSscRnge(r32)            _BFGET_(r32,26,16)
    #define   SET32Gbl_memPllCtl_memPllSscRnge(r32,v)          _BFSET_(r32,26,16,v)
    #define   GET16Gbl_memPllCtl_memPllSscRnge(r16)            _BFGET_(r16,10, 0)
    #define   SET16Gbl_memPllCtl_memPllSscRnge(r16,v)          _BFSET_(r16,10, 0,v)

    #define   GET32Gbl_memPllCtl_memPllSscResetExt(r32)        _BFGET_(r32,27,27)
    #define   SET32Gbl_memPllCtl_memPllSscResetExt(r32,v)      _BFSET_(r32,27,27,v)
    #define   GET16Gbl_memPllCtl_memPllSscResetExt(r16)        _BFGET_(r16,11,11)
    #define   SET16Gbl_memPllCtl_memPllSscResetExt(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32Gbl_memPllCtl_memPllTestMon(r32)            _BFGET_(r32,31,28)
    #define   SET32Gbl_memPllCtl_memPllTestMon(r32,v)          _BFSET_(r32,31,28,v)
    #define   GET16Gbl_memPllCtl_memPllTestMon(r16)            _BFGET_(r16,15,12)
    #define   SET16Gbl_memPllCtl_memPllTestMon(r16,v)          _BFSET_(r16,15,12,v)

    #define     w32Gbl_memPllCtl3                              {\
            UNSG32 umemPllCtl_memPllSscFdiv                    : 16;\
            UNSG32 umemPllCtl_memPllSscRnge                    : 11;\
            UNSG32 umemPllCtl_memPllSscResetExt                :  1;\
            UNSG32 umemPllCtl_memPllTestMon                    :  4;\
          }
    union { UNSG32 u32Gbl_memPllCtl3;
            struct w32Gbl_memPllCtl3;
          };
    #define   GET32Gbl_memPllCtl_memPllRsvdIn(r32)             _BFGET_(r32, 3, 0)
    #define   SET32Gbl_memPllCtl_memPllRsvdIn(r32,v)           _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_memPllCtl_memPllRsvdIn(r16)             _BFGET_(r16, 3, 0)
    #define   SET16Gbl_memPllCtl_memPllRsvdIn(r16,v)           _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_memPllCtl_memPllExtRst(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_memPllCtl_memPllExtRst(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_memPllCtl_memPllExtRst(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_memPllCtl_memPllExtRst(r16,v)           _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_memPllCtl4                              {\
            UNSG32 umemPllCtl_memPllRsvdIn                     :  4;\
            UNSG32 umemPllCtl_memPllExtRst                     :  1;\
            UNSG32 RSVDx38_b5                                  : 27;\
          }
    union { UNSG32 u32Gbl_memPllCtl4;
            struct w32Gbl_memPllCtl4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_cpuPllCtl_cpuPllPu(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_cpuPllCtl_cpuPllPu(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllPu(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllPu(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllRfDiv(r32)              _BFGET_(r32, 5, 1)
    #define   SET32Gbl_cpuPllCtl_cpuPllRfDiv(r32,v)            _BFSET_(r32, 5, 1,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllRfDiv(r16)              _BFGET_(r16, 5, 1)
    #define   SET16Gbl_cpuPllCtl_cpuPllRfDiv(r16,v)            _BFSET_(r16, 5, 1,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllFbDiv(r32)              _BFGET_(r32,14, 6)
    #define   SET32Gbl_cpuPllCtl_cpuPllFbDiv(r32,v)            _BFSET_(r32,14, 6,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllFbDiv(r16)              _BFGET_(r16,14, 6)
    #define   SET16Gbl_cpuPllCtl_cpuPllFbDiv(r16,v)            _BFSET_(r16,14, 6,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllVddm(r32)               _BFGET_(r32,16,15)
    #define   SET32Gbl_cpuPllCtl_cpuPllVddm(r32,v)             _BFSET_(r32,16,15,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllVddl(r32)               _BFGET_(r32,20,17)
    #define   SET32Gbl_cpuPllCtl_cpuPllVddl(r32,v)             _BFSET_(r32,20,17,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllVddl(r16)               _BFGET_(r16, 4, 1)
    #define   SET16Gbl_cpuPllCtl_cpuPllVddl(r16,v)             _BFSET_(r16, 4, 1,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllVregIVRef(r32)          _BFGET_(r32,22,21)
    #define   SET32Gbl_cpuPllCtl_cpuPllVregIVRef(r32,v)        _BFSET_(r32,22,21,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllVregIVRef(r16)          _BFGET_(r16, 6, 5)
    #define   SET16Gbl_cpuPllCtl_cpuPllVregIVRef(r16,v)        _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllIcp(r32)                _BFGET_(r32,25,23)
    #define   SET32Gbl_cpuPllCtl_cpuPllIcp(r32,v)              _BFSET_(r32,25,23,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllIcp(r16)                _BFGET_(r16, 9, 7)
    #define   SET16Gbl_cpuPllCtl_cpuPllIcp(r16,v)              _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllKvco(r32)               _BFGET_(r32,29,26)
    #define   SET32Gbl_cpuPllCtl_cpuPllKvco(r32,v)             _BFSET_(r32,29,26,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllKvco(r16)               _BFGET_(r16,13,10)
    #define   SET16Gbl_cpuPllCtl_cpuPllKvco(r16,v)             _BFSET_(r16,13,10,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllCtune(r32)              _BFGET_(r32,31,30)
    #define   SET32Gbl_cpuPllCtl_cpuPllCtune(r32,v)            _BFSET_(r32,31,30,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllCtune(r16)              _BFGET_(r16,15,14)
    #define   SET16Gbl_cpuPllCtl_cpuPllCtune(r16,v)            _BFSET_(r16,15,14,v)

    #define     w32Gbl_cpuPllCtl                               {\
            UNSG32 ucpuPllCtl_cpuPllPu                         :  1;\
            UNSG32 ucpuPllCtl_cpuPllRfDiv                      :  5;\
            UNSG32 ucpuPllCtl_cpuPllFbDiv                      :  9;\
            UNSG32 ucpuPllCtl_cpuPllVddm                       :  2;\
            UNSG32 ucpuPllCtl_cpuPllVddl                       :  4;\
            UNSG32 ucpuPllCtl_cpuPllVregIVRef                  :  2;\
            UNSG32 ucpuPllCtl_cpuPllIcp                        :  3;\
            UNSG32 ucpuPllCtl_cpuPllKvco                       :  4;\
            UNSG32 ucpuPllCtl_cpuPllCtune                      :  2;\
          }
    union { UNSG32 u32Gbl_cpuPllCtl;
            struct w32Gbl_cpuPllCtl;
          };
    #define   GET32Gbl_cpuPllCtl_cpuPllVcoRng(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_cpuPllCtl_cpuPllVcoRng(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllVcoRng(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllVcoRng(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllVcoDivSelDiff(r32)      _BFGET_(r32, 6, 3)
    #define   SET32Gbl_cpuPllCtl_cpuPllVcoDivSelDiff(r32,v)    _BFSET_(r32, 6, 3,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllVcoDivSelDiff(r16)      _BFGET_(r16, 6, 3)
    #define   SET16Gbl_cpuPllCtl_cpuPllVcoDivSelDiff(r16,v)    _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllVcoDivSelSe(r32)        _BFGET_(r32,10, 7)
    #define   SET32Gbl_cpuPllCtl_cpuPllVcoDivSelSe(r32,v)      _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllVcoDivSelSe(r16)        _BFGET_(r16,10, 7)
    #define   SET16Gbl_cpuPllCtl_cpuPllVcoDivSelSe(r16,v)      _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllDiffClkEn(r32)          _BFGET_(r32,11,11)
    #define   SET32Gbl_cpuPllCtl_cpuPllDiffClkEn(r32,v)        _BFSET_(r32,11,11,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllDiffClkEn(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_cpuPllCtl_cpuPllDiffClkEn(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSelVcoDiff(r32)         _BFGET_(r32,12,12)
    #define   SET32Gbl_cpuPllCtl_cpuPllSelVcoDiff(r32,v)       _BFSET_(r32,12,12,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSelVcoDiff(r16)         _BFGET_(r16,12,12)
    #define   SET16Gbl_cpuPllCtl_cpuPllSelVcoDiff(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSelVcoClkSe(r32)        _BFGET_(r32,13,13)
    #define   SET32Gbl_cpuPllCtl_cpuPllSelVcoClkSe(r32,v)      _BFSET_(r32,13,13,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSelVcoClkSe(r16)        _BFGET_(r16,13,13)
    #define   SET16Gbl_cpuPllCtl_cpuPllSelVcoClkSe(r16,v)      _BFSET_(r16,13,13,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllBypassFbDiv(r32)        _BFGET_(r32,14,14)
    #define   SET32Gbl_cpuPllCtl_cpuPllBypassFbDiv(r32,v)      _BFSET_(r32,14,14,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllBypassFbDiv(r16)        _BFGET_(r16,14,14)
    #define   SET16Gbl_cpuPllCtl_cpuPllBypassFbDiv(r16,v)      _BFSET_(r16,14,14,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllBypassEn(r32)           _BFGET_(r32,15,15)
    #define   SET32Gbl_cpuPllCtl_cpuPllBypassEn(r32,v)         _BFSET_(r32,15,15,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllBypassEn(r16)           _BFGET_(r16,15,15)
    #define   SET16Gbl_cpuPllCtl_cpuPllBypassEn(r16,v)         _BFSET_(r16,15,15,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllGateClkCtrl(r32)        _BFGET_(r32,16,16)
    #define   SET32Gbl_cpuPllCtl_cpuPllGateClkCtrl(r32,v)      _BFSET_(r32,16,16,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllGateClkCtrl(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllGateClkCtrl(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllLineUpEn(r32)           _BFGET_(r32,17,17)
    #define   SET32Gbl_cpuPllCtl_cpuPllLineUpEn(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllLineUpEn(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_cpuPllCtl_cpuPllLineUpEn(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllIntpi(r32)              _BFGET_(r32,21,18)
    #define   SET32Gbl_cpuPllCtl_cpuPllIntpi(r32,v)            _BFSET_(r32,21,18,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllIntpi(r16)              _BFGET_(r16, 5, 2)
    #define   SET16Gbl_cpuPllCtl_cpuPllIntpi(r16,v)            _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllPiEn(r32)               _BFGET_(r32,22,22)
    #define   SET32Gbl_cpuPllCtl_cpuPllPiEn(r32,v)             _BFSET_(r32,22,22,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllPiEn(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_cpuPllCtl_cpuPllPiEn(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSscClkEn(r32)           _BFGET_(r32,23,23)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscClkEn(r32,v)         _BFSET_(r32,23,23,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscClkEn(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscClkEn(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllClkDetEn(r32)           _BFGET_(r32,24,24)
    #define   SET32Gbl_cpuPllCtl_cpuPllClkDetEn(r32,v)         _BFSET_(r32,24,24,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllClkDetEn(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_cpuPllCtl_cpuPllClkDetEn(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllFreqOffsetEn(r32)       _BFGET_(r32,25,25)
    #define   SET32Gbl_cpuPllCtl_cpuPllFreqOffsetEn(r32,v)     _BFSET_(r32,25,25,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllFreqOffsetEn(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Gbl_cpuPllCtl_cpuPllFreqOffsetEn(r16,v)     _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_cpuPllCtl1                              {\
            UNSG32 ucpuPllCtl_cpuPllVcoRng                     :  3;\
            UNSG32 ucpuPllCtl_cpuPllVcoDivSelDiff              :  4;\
            UNSG32 ucpuPllCtl_cpuPllVcoDivSelSe                :  4;\
            UNSG32 ucpuPllCtl_cpuPllDiffClkEn                  :  1;\
            UNSG32 ucpuPllCtl_cpuPllSelVcoDiff                 :  1;\
            UNSG32 ucpuPllCtl_cpuPllSelVcoClkSe                :  1;\
            UNSG32 ucpuPllCtl_cpuPllBypassFbDiv                :  1;\
            UNSG32 ucpuPllCtl_cpuPllBypassEn                   :  1;\
            UNSG32 ucpuPllCtl_cpuPllGateClkCtrl                :  1;\
            UNSG32 ucpuPllCtl_cpuPllLineUpEn                   :  1;\
            UNSG32 ucpuPllCtl_cpuPllIntpi                      :  4;\
            UNSG32 ucpuPllCtl_cpuPllPiEn                       :  1;\
            UNSG32 ucpuPllCtl_cpuPllSscClkEn                   :  1;\
            UNSG32 ucpuPllCtl_cpuPllClkDetEn                   :  1;\
            UNSG32 ucpuPllCtl_cpuPllFreqOffsetEn               :  1;\
            UNSG32 RSVDx40_b26                                 :  6;\
          }
    union { UNSG32 u32Gbl_cpuPllCtl1;
            struct w32Gbl_cpuPllCtl1;
          };
    #define   GET32Gbl_cpuPllCtl_cpuPllFreqOffset(r32)         _BFGET_(r32,16, 0)
    #define   SET32Gbl_cpuPllCtl_cpuPllFreqOffset(r32,v)       _BFSET_(r32,16, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel(r32)  _BFGET_(r32,17,17)
    #define   SET32Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel(r32,v) _BFSET_(r32,17,17,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel(r16)  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_cpuPllCtl_cpuPllFreqOffsetModeSel(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllFreqOffsetValid(r32)    _BFGET_(r32,18,18)
    #define   SET32Gbl_cpuPllCtl_cpuPllFreqOffsetValid(r32,v)  _BFSET_(r32,18,18,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllFreqOffsetValid(r16)    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_cpuPllCtl_cpuPllFreqOffsetValid(r16,v)  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSscEn(r32)              _BFGET_(r32,19,19)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscEn(r32,v)            _BFSET_(r32,19,19,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscEn(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscEn(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSscmode(r32)            _BFGET_(r32,20,20)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscmode(r32,v)          _BFSET_(r32,20,20,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscmode(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscmode(r16,v)          _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_cpuPllCtl2                              {\
            UNSG32 ucpuPllCtl_cpuPllFreqOffset                 : 17;\
            UNSG32 ucpuPllCtl_cpuPllFreqOffsetModeSel          :  1;\
            UNSG32 ucpuPllCtl_cpuPllFreqOffsetValid            :  1;\
            UNSG32 ucpuPllCtl_cpuPllSscEn                      :  1;\
            UNSG32 ucpuPllCtl_cpuPllSscmode                    :  1;\
            UNSG32 RSVDx44_b21                                 : 11;\
          }
    union { UNSG32 u32Gbl_cpuPllCtl2;
            struct w32Gbl_cpuPllCtl2;
          };
    #define   GET32Gbl_cpuPllCtl_cpuPllSscFdiv(r32)            _BFGET_(r32,15, 0)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscFdiv(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscFdiv(r16)            _BFGET_(r16,15, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscFdiv(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSscRnge(r32)            _BFGET_(r32,26,16)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscRnge(r32,v)          _BFSET_(r32,26,16,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscRnge(r16)            _BFGET_(r16,10, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscRnge(r16,v)          _BFSET_(r16,10, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllSscResetExt(r32)        _BFGET_(r32,27,27)
    #define   SET32Gbl_cpuPllCtl_cpuPllSscResetExt(r32,v)      _BFSET_(r32,27,27,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllSscResetExt(r16)        _BFGET_(r16,11,11)
    #define   SET16Gbl_cpuPllCtl_cpuPllSscResetExt(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllTestMon(r32)            _BFGET_(r32,31,28)
    #define   SET32Gbl_cpuPllCtl_cpuPllTestMon(r32,v)          _BFSET_(r32,31,28,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllTestMon(r16)            _BFGET_(r16,15,12)
    #define   SET16Gbl_cpuPllCtl_cpuPllTestMon(r16,v)          _BFSET_(r16,15,12,v)

    #define     w32Gbl_cpuPllCtl3                              {\
            UNSG32 ucpuPllCtl_cpuPllSscFdiv                    : 16;\
            UNSG32 ucpuPllCtl_cpuPllSscRnge                    : 11;\
            UNSG32 ucpuPllCtl_cpuPllSscResetExt                :  1;\
            UNSG32 ucpuPllCtl_cpuPllTestMon                    :  4;\
          }
    union { UNSG32 u32Gbl_cpuPllCtl3;
            struct w32Gbl_cpuPllCtl3;
          };
    #define   GET32Gbl_cpuPllCtl_cpuPllRsvdIn(r32)             _BFGET_(r32, 3, 0)
    #define   SET32Gbl_cpuPllCtl_cpuPllRsvdIn(r32,v)           _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllRsvdIn(r16)             _BFGET_(r16, 3, 0)
    #define   SET16Gbl_cpuPllCtl_cpuPllRsvdIn(r16,v)           _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_cpuPllCtl_cpuPllExtRst(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_cpuPllCtl_cpuPllExtRst(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_cpuPllCtl_cpuPllExtRst(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_cpuPllCtl_cpuPllExtRst(r16,v)           _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_cpuPllCtl4                              {\
            UNSG32 ucpuPllCtl_cpuPllRsvdIn                     :  4;\
            UNSG32 ucpuPllCtl_cpuPllExtRst                     :  1;\
            UNSG32 RSVDx4C_b5                                  : 27;\
          }
    union { UNSG32 u32Gbl_cpuPllCtl4;
            struct w32Gbl_cpuPllCtl4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avPllCtl_avPllResetPll_A(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_avPllCtl_avPllResetPll_A(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_avPllCtl_avPllResetPll_A(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_avPllCtl_avPllResetPll_A(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_avPllCtl_avPllPu_A(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_avPllCtl_avPllPu_A(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_avPllCtl_avPllPu_A(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_avPllCtl_avPllPu_A(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_avPllCtl_avPllIntpi_A(r32)              _BFGET_(r32, 5, 2)
    #define   SET32Gbl_avPllCtl_avPllIntpi_A(r32,v)            _BFSET_(r32, 5, 2,v)
    #define   GET16Gbl_avPllCtl_avPllIntpi_A(r16)              _BFGET_(r16, 5, 2)
    #define   SET16Gbl_avPllCtl_avPllIntpi_A(r16,v)            _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_avPllCtl_avPllVddr1p45V_A(r32)          _BFGET_(r32, 7, 6)
    #define   SET32Gbl_avPllCtl_avPllVddr1p45V_A(r32,v)        _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_avPllCtl_avPllVddr1p45V_A(r16)          _BFGET_(r16, 7, 6)
    #define   SET16Gbl_avPllCtl_avPllVddr1p45V_A(r16,v)        _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_avPllCtl_avPllVddr0p9V_A(r32)           _BFGET_(r32,11, 8)
    #define   SET32Gbl_avPllCtl_avPllVddr0p9V_A(r32,v)         _BFSET_(r32,11, 8,v)
    #define   GET16Gbl_avPllCtl_avPllVddr0p9V_A(r16)           _BFGET_(r16,11, 8)
    #define   SET16Gbl_avPllCtl_avPllVddr0p9V_A(r16,v)         _BFSET_(r16,11, 8,v)

    #define   GET32Gbl_avPllCtl_avPllVthVcoCal_A(r32)          _BFGET_(r32,13,12)
    #define   SET32Gbl_avPllCtl_avPllVthVcoCal_A(r32,v)        _BFSET_(r32,13,12,v)
    #define   GET16Gbl_avPllCtl_avPllVthVcoCal_A(r16)          _BFGET_(r16,13,12)
    #define   SET16Gbl_avPllCtl_avPllVthVcoCal_A(r16,v)        _BFSET_(r16,13,12,v)

    #define   GET32Gbl_avPllCtl_avPllKvcoExt_A(r32)            _BFGET_(r32,16,14)
    #define   SET32Gbl_avPllCtl_avPllKvcoExt_A(r32,v)          _BFSET_(r32,16,14,v)

    #define   GET32Gbl_avPllCtl_avPllKvcoExtEn_A(r32)          _BFGET_(r32,17,17)
    #define   SET32Gbl_avPllCtl_avPllKvcoExtEn_A(r32,v)        _BFSET_(r32,17,17,v)
    #define   GET16Gbl_avPllCtl_avPllKvcoExtEn_A(r16)          _BFGET_(r16, 1, 1)
    #define   SET16Gbl_avPllCtl_avPllKvcoExtEn_A(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_avPllCtl_avPllV2iExt_A(r32)             _BFGET_(r32,21,18)
    #define   SET32Gbl_avPllCtl_avPllV2iExt_A(r32,v)           _BFSET_(r32,21,18,v)
    #define   GET16Gbl_avPllCtl_avPllV2iExt_A(r16)             _BFGET_(r16, 5, 2)
    #define   SET16Gbl_avPllCtl_avPllV2iExt_A(r16,v)           _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_avPllCtl_avPllV2iExtEn_A(r32)           _BFGET_(r32,22,22)
    #define   SET32Gbl_avPllCtl_avPllV2iExtEn_A(r32,v)         _BFSET_(r32,22,22,v)
    #define   GET16Gbl_avPllCtl_avPllV2iExtEn_A(r16)           _BFGET_(r16, 6, 6)
    #define   SET16Gbl_avPllCtl_avPllV2iExtEn_A(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_avPllCtl_avPllSpeed_A(r32)              _BFGET_(r32,25,23)
    #define   SET32Gbl_avPllCtl_avPllSpeed_A(r32,v)            _BFSET_(r32,25,23,v)
    #define   GET16Gbl_avPllCtl_avPllSpeed_A(r16)              _BFGET_(r16, 9, 7)
    #define   SET16Gbl_avPllCtl_avPllSpeed_A(r16,v)            _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_avPllCtl_avPllClkDetEn_A(r32)           _BFGET_(r32,26,26)
    #define   SET32Gbl_avPllCtl_avPllClkDetEn_A(r32,v)         _BFSET_(r32,26,26,v)
    #define   GET16Gbl_avPllCtl_avPllClkDetEn_A(r16)           _BFGET_(r16,10,10)
    #define   SET16Gbl_avPllCtl_avPllClkDetEn_A(r16,v)         _BFSET_(r16,10,10,v)

    #define     w32Gbl_avPllCtl                                {\
            UNSG32 uavPllCtl_avPllResetPll_A                   :  1;\
            UNSG32 uavPllCtl_avPllPu_A                         :  1;\
            UNSG32 uavPllCtl_avPllIntpi_A                      :  4;\
            UNSG32 uavPllCtl_avPllVddr1p45V_A                  :  2;\
            UNSG32 uavPllCtl_avPllVddr0p9V_A                   :  4;\
            UNSG32 uavPllCtl_avPllVthVcoCal_A                  :  2;\
            UNSG32 uavPllCtl_avPllKvcoExt_A                    :  3;\
            UNSG32 uavPllCtl_avPllKvcoExtEn_A                  :  1;\
            UNSG32 uavPllCtl_avPllV2iExt_A                     :  4;\
            UNSG32 uavPllCtl_avPllV2iExtEn_A                   :  1;\
            UNSG32 uavPllCtl_avPllSpeed_A                      :  3;\
            UNSG32 uavPllCtl_avPllClkDetEn_A                   :  1;\
            UNSG32 RSVDx50_b27                                 :  5;\
          }
    union { UNSG32 u32Gbl_avPllCtl;
            struct w32Gbl_avPllCtl;
          };
    #define   GET32Gbl_avPllCtl_avPllRefDiv_A(r32)             _BFGET_(r32, 5, 0)
    #define   SET32Gbl_avPllCtl_avPllRefDiv_A(r32,v)           _BFSET_(r32, 5, 0,v)
    #define   GET16Gbl_avPllCtl_avPllRefDiv_A(r16)             _BFGET_(r16, 5, 0)
    #define   SET16Gbl_avPllCtl_avPllRefDiv_A(r16,v)           _BFSET_(r16, 5, 0,v)

    #define   GET32Gbl_avPllCtl_avPllFbDiv_A(r32)              _BFGET_(r32,13, 6)
    #define   SET32Gbl_avPllCtl_avPllFbDiv_A(r32,v)            _BFSET_(r32,13, 6,v)
    #define   GET16Gbl_avPllCtl_avPllFbDiv_A(r16)              _BFGET_(r16,13, 6)
    #define   SET16Gbl_avPllCtl_avPllFbDiv_A(r16,v)            _BFSET_(r16,13, 6,v)

    #define   GET32Gbl_avPllCtl_avPllIcp_A(r32)                _BFGET_(r32,17,14)
    #define   SET32Gbl_avPllCtl_avPllIcp_A(r32,v)              _BFSET_(r32,17,14,v)

    #define   GET32Gbl_avPllCtl_avPllLoadCap_A(r32)            _BFGET_(r32,18,18)
    #define   SET32Gbl_avPllCtl_avPllLoadCap_A(r32,v)          _BFSET_(r32,18,18,v)
    #define   GET16Gbl_avPllCtl_avPllLoadCap_A(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_avPllCtl_avPllLoadCap_A(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_avPllCtl_avPllPllCaliStart_A(r32)       _BFGET_(r32,19,19)
    #define   SET32Gbl_avPllCtl_avPllPllCaliStart_A(r32,v)     _BFSET_(r32,19,19,v)
    #define   GET16Gbl_avPllCtl_avPllPllCaliStart_A(r16)       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_avPllCtl_avPllPllCaliStart_A(r16,v)     _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_avPllCtl1                               {\
            UNSG32 uavPllCtl_avPllRefDiv_A                     :  6;\
            UNSG32 uavPllCtl_avPllFbDiv_A                      :  8;\
            UNSG32 uavPllCtl_avPllIcp_A                        :  4;\
            UNSG32 uavPllCtl_avPllLoadCap_A                    :  1;\
            UNSG32 uavPllCtl_avPllPllCaliStart_A               :  1;\
            UNSG32 RSVDx54_b20                                 : 12;\
          }
    union { UNSG32 u32Gbl_avPllCtl1;
            struct w32Gbl_avPllCtl1;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC1_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC1_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl2                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC1_A               : 19;\
            UNSG32 RSVDx58_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl2;
            struct w32Gbl_avPllCtl2;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC2_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC2_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl3                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC2_A               : 19;\
            UNSG32 RSVDx5C_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl3;
            struct w32Gbl_avPllCtl3;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC3_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC3_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl4                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC3_A               : 19;\
            UNSG32 RSVDx60_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl4;
            struct w32Gbl_avPllCtl4;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC4_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC4_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl5                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC4_A               : 19;\
            UNSG32 RSVDx64_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl5;
            struct w32Gbl_avPllCtl5;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC5_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC5_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl6                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC5_A               : 19;\
            UNSG32 RSVDx68_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl6;
            struct w32Gbl_avPllCtl6;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC6_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC6_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl7                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC6_A               : 19;\
            UNSG32 RSVDx6C_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl7;
            struct w32Gbl_avPllCtl7;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC7_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC7_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl8                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC7_A               : 19;\
            UNSG32 RSVDx70_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl8;
            struct w32Gbl_avPllCtl8;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC8_A(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC8_A(r32,v)     _BFSET_(r32,18, 0,v)

    #define   GET32Gbl_avPllCtl_avPllFreqOffsetReadyC_A(r32)   _BFGET_(r32,26,19)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetReadyC_A(r32,v) _BFSET_(r32,26,19,v)
    #define   GET16Gbl_avPllCtl_avPllFreqOffsetReadyC_A(r16)   _BFGET_(r16,10, 3)
    #define   SET16Gbl_avPllCtl_avPllFreqOffsetReadyC_A(r16,v) _BFSET_(r16,10, 3,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC1_A(r32)          _BFGET_(r32,28,27)
    #define   SET32Gbl_avPllCtl_avPllReserveC1_A(r32,v)        _BFSET_(r32,28,27,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC1_A(r16)          _BFGET_(r16,12,11)
    #define   SET16Gbl_avPllCtl_avPllReserveC1_A(r16,v)        _BFSET_(r16,12,11,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC2_A(r32)          _BFGET_(r32,30,29)
    #define   SET32Gbl_avPllCtl_avPllReserveC2_A(r32,v)        _BFSET_(r32,30,29,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC2_A(r16)          _BFGET_(r16,14,13)
    #define   SET16Gbl_avPllCtl_avPllReserveC2_A(r16,v)        _BFSET_(r16,14,13,v)

    #define     w32Gbl_avPllCtl9                               {\
            UNSG32 uavPllCtl_avPllFreqOffsetC8_A               : 19;\
            UNSG32 uavPllCtl_avPllFreqOffsetReadyC_A           :  8;\
            UNSG32 uavPllCtl_avPllReserveC1_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC2_A                  :  2;\
            UNSG32 RSVDx74_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl9;
            struct w32Gbl_avPllCtl9;
          };
    #define   GET32Gbl_avPllCtl_avPllReserveC3_A(r32)          _BFGET_(r32, 1, 0)
    #define   SET32Gbl_avPllCtl_avPllReserveC3_A(r32,v)        _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC3_A(r16)          _BFGET_(r16, 1, 0)
    #define   SET16Gbl_avPllCtl_avPllReserveC3_A(r16,v)        _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC4_A(r32)          _BFGET_(r32, 3, 2)
    #define   SET32Gbl_avPllCtl_avPllReserveC4_A(r32,v)        _BFSET_(r32, 3, 2,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC4_A(r16)          _BFGET_(r16, 3, 2)
    #define   SET16Gbl_avPllCtl_avPllReserveC4_A(r16,v)        _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC5_A(r32)          _BFGET_(r32, 5, 4)
    #define   SET32Gbl_avPllCtl_avPllReserveC5_A(r32,v)        _BFSET_(r32, 5, 4,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC5_A(r16)          _BFGET_(r16, 5, 4)
    #define   SET16Gbl_avPllCtl_avPllReserveC5_A(r16,v)        _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC6_A(r32)          _BFGET_(r32, 7, 6)
    #define   SET32Gbl_avPllCtl_avPllReserveC6_A(r32,v)        _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC6_A(r16)          _BFGET_(r16, 7, 6)
    #define   SET16Gbl_avPllCtl_avPllReserveC6_A(r16,v)        _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC7_A(r32)          _BFGET_(r32, 9, 8)
    #define   SET32Gbl_avPllCtl_avPllReserveC7_A(r32,v)        _BFSET_(r32, 9, 8,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC7_A(r16)          _BFGET_(r16, 9, 8)
    #define   SET16Gbl_avPllCtl_avPllReserveC7_A(r16,v)        _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC8_A(r32)          _BFGET_(r32,11,10)
    #define   SET32Gbl_avPllCtl_avPllReserveC8_A(r32,v)        _BFSET_(r32,11,10,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC8_A(r16)          _BFGET_(r16,11,10)
    #define   SET16Gbl_avPllCtl_avPllReserveC8_A(r16,v)        _BFSET_(r16,11,10,v)

    #define   GET32Gbl_avPllCtl_avPllEnLpC_A(r32)              _BFGET_(r32,19,12)
    #define   SET32Gbl_avPllCtl_avPllEnLpC_A(r32,v)            _BFSET_(r32,19,12,v)

    #define   GET32Gbl_avPllCtl_avPllPuC_A(r32)                _BFGET_(r32,26,20)
    #define   SET32Gbl_avPllCtl_avPllPuC_A(r32,v)              _BFSET_(r32,26,20,v)
    #define   GET16Gbl_avPllCtl_avPllPuC_A(r16)                _BFGET_(r16,10, 4)
    #define   SET16Gbl_avPllCtl_avPllPuC_A(r16,v)              _BFSET_(r16,10, 4,v)

    #define     w32Gbl_avPllCtl10                              {\
            UNSG32 uavPllCtl_avPllReserveC3_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC4_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC5_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC6_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC7_A                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC8_A                  :  2;\
            UNSG32 uavPllCtl_avPllEnLpC_A                      :  8;\
            UNSG32 uavPllCtl_avPllPuC_A                        :  7;\
            UNSG32 RSVDx78_b27                                 :  5;\
          }
    union { UNSG32 u32Gbl_avPllCtl10;
            struct w32Gbl_avPllCtl10;
          };
    #define   GET32Gbl_avPllCtl_avPllResetC_A(r32)             _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllResetC_A(r32,v)           _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllResetC_A(r16)             _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllResetC_A(r16,v)           _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC1_A(r32)          _BFGET_(r32, 9, 7)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC1_A(r32,v)        _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC1_A(r16)          _BFGET_(r16, 9, 7)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC1_A(r16,v)        _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC2_A(r32)          _BFGET_(r32,12,10)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC2_A(r32,v)        _BFSET_(r32,12,10,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC2_A(r16)          _BFGET_(r16,12,10)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC2_A(r16,v)        _BFSET_(r16,12,10,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC3_A(r32)          _BFGET_(r32,15,13)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC3_A(r32,v)        _BFSET_(r32,15,13,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC3_A(r16)          _BFGET_(r16,15,13)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC3_A(r16,v)        _BFSET_(r16,15,13,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC4_A(r32)          _BFGET_(r32,18,16)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC4_A(r32,v)        _BFSET_(r32,18,16,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC4_A(r16)          _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC4_A(r16,v)        _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC5_A(r32)          _BFGET_(r32,21,19)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC5_A(r32,v)        _BFSET_(r32,21,19,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC5_A(r16)          _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC5_A(r16,v)        _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC6_A(r32)          _BFGET_(r32,24,22)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC6_A(r32,v)        _BFSET_(r32,24,22,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC6_A(r16)          _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC6_A(r16,v)        _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC7_A(r32)          _BFGET_(r32,27,25)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC7_A(r32,v)        _BFSET_(r32,27,25,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC7_A(r16)          _BFGET_(r16,11, 9)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC7_A(r16,v)        _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C1_A(r32)           _BFGET_(r32,30,28)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C1_A(r32,v)         _BFSET_(r32,30,28,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C1_A(r16)           _BFGET_(r16,14,12)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C1_A(r16,v)         _BFSET_(r16,14,12,v)

    #define     w32Gbl_avPllCtl11                              {\
            UNSG32 uavPllCtl_avPllResetC_A                     :  7;\
            UNSG32 uavPllCtl_avPllDivHdmiC1_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC2_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC3_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC4_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC5_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC6_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC7_A                  :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C1_A                   :  3;\
            UNSG32 RSVDx7C_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl11;
            struct w32Gbl_avPllCtl11;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv1C2_A(r32)           _BFGET_(r32, 2, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C2_A(r32,v)         _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C2_A(r16)           _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C2_A(r16,v)         _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C3_A(r32)           _BFGET_(r32, 5, 3)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C3_A(r32,v)         _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C3_A(r16)           _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C3_A(r16,v)         _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C4_A(r32)           _BFGET_(r32, 8, 6)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C4_A(r32,v)         _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C4_A(r16)           _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C4_A(r16,v)         _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C5_A(r32)           _BFGET_(r32,11, 9)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C5_A(r32,v)         _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C5_A(r16)           _BFGET_(r16,11, 9)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C5_A(r16,v)         _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C6_A(r32)           _BFGET_(r32,14,12)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C6_A(r32,v)         _BFSET_(r32,14,12,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C6_A(r16)           _BFGET_(r16,14,12)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C6_A(r16,v)         _BFSET_(r16,14,12,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C7_A(r32)           _BFGET_(r32,17,15)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C7_A(r32,v)         _BFSET_(r32,17,15,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C1_A(r32)           _BFGET_(r32,24,18)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C1_A(r32,v)         _BFSET_(r32,24,18,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C1_A(r16)           _BFGET_(r16, 8, 2)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C1_A(r16,v)         _BFSET_(r16, 8, 2,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C2_A(r32)           _BFGET_(r32,31,25)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C2_A(r32,v)         _BFSET_(r32,31,25,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C2_A(r16)           _BFGET_(r16,15, 9)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C2_A(r16,v)         _BFSET_(r16,15, 9,v)

    #define     w32Gbl_avPllCtl12                              {\
            UNSG32 uavPllCtl_avPllDivAv1C2_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C3_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C4_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C5_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C6_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C7_A                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv2C1_A                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C2_A                   :  7;\
          }
    union { UNSG32 u32Gbl_avPllCtl12;
            struct w32Gbl_avPllCtl12;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv2C3_A(r32)           _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C3_A(r32,v)         _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C3_A(r16)           _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C3_A(r16,v)         _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C4_A(r32)           _BFGET_(r32,13, 7)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C4_A(r32,v)         _BFSET_(r32,13, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C4_A(r16)           _BFGET_(r16,13, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C4_A(r16,v)         _BFSET_(r16,13, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C5_A(r32)           _BFGET_(r32,20,14)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C5_A(r32,v)         _BFSET_(r32,20,14,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C6_A(r32)           _BFGET_(r32,27,21)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C6_A(r32,v)         _BFSET_(r32,27,21,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C6_A(r16)           _BFGET_(r16,11, 5)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C6_A(r16,v)         _BFSET_(r16,11, 5,v)

    #define     w32Gbl_avPllCtl13                              {\
            UNSG32 uavPllCtl_avPllDivAv2C3_A                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C4_A                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C5_A                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C6_A                   :  7;\
            UNSG32 RSVDx84_b28                                 :  4;\
          }
    union { UNSG32 u32Gbl_avPllCtl13;
            struct w32Gbl_avPllCtl13;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv2C7_A(r32)           _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C7_A(r32,v)         _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C7_A(r16)           _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C7_A(r16,v)         _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C1_A(r32)           _BFGET_(r32,10, 7)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C1_A(r32,v)         _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C1_A(r16)           _BFGET_(r16,10, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C1_A(r16,v)         _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C2_A(r32)           _BFGET_(r32,14,11)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C2_A(r32,v)         _BFSET_(r32,14,11,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C2_A(r16)           _BFGET_(r16,14,11)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C2_A(r16,v)         _BFSET_(r16,14,11,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C3_A(r32)           _BFGET_(r32,18,15)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C3_A(r32,v)         _BFSET_(r32,18,15,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C4_A(r32)           _BFGET_(r32,22,19)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C4_A(r32,v)         _BFSET_(r32,22,19,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C4_A(r16)           _BFGET_(r16, 6, 3)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C4_A(r16,v)         _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C5_A(r32)           _BFGET_(r32,26,23)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C5_A(r32,v)         _BFSET_(r32,26,23,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C5_A(r16)           _BFGET_(r16,10, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C5_A(r16,v)         _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C6_A(r32)           _BFGET_(r32,30,27)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C6_A(r32,v)         _BFSET_(r32,30,27,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C6_A(r16)           _BFGET_(r16,14,11)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C6_A(r16,v)         _BFSET_(r16,14,11,v)

    #define     w32Gbl_avPllCtl14                              {\
            UNSG32 uavPllCtl_avPllDivAv2C7_A                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv3C1_A                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C2_A                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C3_A                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C4_A                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C5_A                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C6_A                   :  4;\
            UNSG32 RSVDx88_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl14;
            struct w32Gbl_avPllCtl14;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv3C7_A(r32)           _BFGET_(r32, 3, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C7_A(r32,v)         _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C7_A(r16)           _BFGET_(r16, 3, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C7_A(r16,v)         _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_avPllCtl_avPllPSync1C1_A(r32)           _BFGET_(r32,20, 4)
    #define   SET32Gbl_avPllCtl_avPllPSync1C1_A(r32,v)         _BFSET_(r32,20, 4,v)

    #define     w32Gbl_avPllCtl15                              {\
            UNSG32 uavPllCtl_avPllDivAv3C7_A                   :  4;\
            UNSG32 uavPllCtl_avPllPSync1C1_A                   : 17;\
            UNSG32 RSVDx8C_b21                                 : 11;\
          }
    union { UNSG32 u32Gbl_avPllCtl15;
            struct w32Gbl_avPllCtl15;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C2_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C2_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl16                              {\
            UNSG32 uavPllCtl_avPllPSync1C2_A                   : 17;\
            UNSG32 RSVDx90_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl16;
            struct w32Gbl_avPllCtl16;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C3_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C3_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl17                              {\
            UNSG32 uavPllCtl_avPllPSync1C3_A                   : 17;\
            UNSG32 RSVDx94_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl17;
            struct w32Gbl_avPllCtl17;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C4_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C4_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl18                              {\
            UNSG32 uavPllCtl_avPllPSync1C4_A                   : 17;\
            UNSG32 RSVDx98_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl18;
            struct w32Gbl_avPllCtl18;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C5_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C5_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl19                              {\
            UNSG32 uavPllCtl_avPllPSync1C5_A                   : 17;\
            UNSG32 RSVDx9C_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl19;
            struct w32Gbl_avPllCtl19;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C6_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C6_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl20                              {\
            UNSG32 uavPllCtl_avPllPSync1C6_A                   : 17;\
            UNSG32 RSVDxA0_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl20;
            struct w32Gbl_avPllCtl20;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C7_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C7_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl21                              {\
            UNSG32 uavPllCtl_avPllPSync1C7_A                   : 17;\
            UNSG32 RSVDxA4_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl21;
            struct w32Gbl_avPllCtl21;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C8_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C8_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl22                              {\
            UNSG32 uavPllCtl_avPllPSync1C8_A                   : 17;\
            UNSG32 RSVDxA8_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl22;
            struct w32Gbl_avPllCtl22;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C1_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C1_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl23                              {\
            UNSG32 uavPllCtl_avPllPSync2C1_A                   : 17;\
            UNSG32 RSVDxAC_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl23;
            struct w32Gbl_avPllCtl23;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C2_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C2_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl24                              {\
            UNSG32 uavPllCtl_avPllPSync2C2_A                   : 17;\
            UNSG32 RSVDxB0_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl24;
            struct w32Gbl_avPllCtl24;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C3_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C3_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl25                              {\
            UNSG32 uavPllCtl_avPllPSync2C3_A                   : 17;\
            UNSG32 RSVDxB4_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl25;
            struct w32Gbl_avPllCtl25;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C4_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C4_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl26                              {\
            UNSG32 uavPllCtl_avPllPSync2C4_A                   : 17;\
            UNSG32 RSVDxB8_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl26;
            struct w32Gbl_avPllCtl26;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C5_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C5_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl27                              {\
            UNSG32 uavPllCtl_avPllPSync2C5_A                   : 17;\
            UNSG32 RSVDxBC_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl27;
            struct w32Gbl_avPllCtl27;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C6_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C6_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl28                              {\
            UNSG32 uavPllCtl_avPllPSync2C6_A                   : 17;\
            UNSG32 RSVDxC0_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl28;
            struct w32Gbl_avPllCtl28;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C7_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C7_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl29                              {\
            UNSG32 uavPllCtl_avPllPSync2C7_A                   : 17;\
            UNSG32 RSVDxC4_b17                                 : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl29;
            struct w32Gbl_avPllCtl29;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C8_A(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C8_A(r32,v)         _BFSET_(r32,16, 0,v)

    #define   GET32Gbl_avPllCtl_avPllEnDpllC_A(r32)            _BFGET_(r32,24,17)
    #define   SET32Gbl_avPllCtl_avPllEnDpllC_A(r32,v)          _BFSET_(r32,24,17,v)
    #define   GET16Gbl_avPllCtl_avPllEnDpllC_A(r16)            _BFGET_(r16, 8, 1)
    #define   SET16Gbl_avPllCtl_avPllEnDpllC_A(r16,v)          _BFSET_(r16, 8, 1,v)

    #define   GET32Gbl_avPllCtl_avPllMasterSlaveB_A(r32)       _BFGET_(r32,25,25)
    #define   SET32Gbl_avPllCtl_avPllMasterSlaveB_A(r32,v)     _BFSET_(r32,25,25,v)
    #define   GET16Gbl_avPllCtl_avPllMasterSlaveB_A(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Gbl_avPllCtl_avPllMasterSlaveB_A(r16,v)     _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_avPllCtl_avPllTestAna_A(r32)            _BFGET_(r32,31,26)
    #define   SET32Gbl_avPllCtl_avPllTestAna_A(r32,v)          _BFSET_(r32,31,26,v)
    #define   GET16Gbl_avPllCtl_avPllTestAna_A(r16)            _BFGET_(r16,15,10)
    #define   SET16Gbl_avPllCtl_avPllTestAna_A(r16,v)          _BFSET_(r16,15,10,v)

    #define     w32Gbl_avPllCtl30                              {\
            UNSG32 uavPllCtl_avPllPSync2C8_A                   : 17;\
            UNSG32 uavPllCtl_avPllEnDpllC_A                    :  8;\
            UNSG32 uavPllCtl_avPllMasterSlaveB_A               :  1;\
            UNSG32 uavPllCtl_avPllTestAna_A                    :  6;\
          }
    union { UNSG32 u32Gbl_avPllCtl30;
            struct w32Gbl_avPllCtl30;
          };
    #define   GET32Gbl_avPllCtl_avPllReservePll_A(r32)         _BFGET_(r32, 3, 0)
    #define   SET32Gbl_avPllCtl_avPllReservePll_A(r32,v)       _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_avPllCtl_avPllReservePll_A(r16)         _BFGET_(r16, 3, 0)
    #define   SET16Gbl_avPllCtl_avPllReservePll_A(r16,v)       _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_avPllCtl_avPllResetPll_B(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_avPllCtl_avPllResetPll_B(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_avPllCtl_avPllResetPll_B(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_avPllCtl_avPllResetPll_B(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_avPllCtl_avPllPu_B(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_avPllCtl_avPllPu_B(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_avPllCtl_avPllPu_B(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_avPllCtl_avPllPu_B(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_avPllCtl_avPllIntpi_B(r32)              _BFGET_(r32, 9, 6)
    #define   SET32Gbl_avPllCtl_avPllIntpi_B(r32,v)            _BFSET_(r32, 9, 6,v)
    #define   GET16Gbl_avPllCtl_avPllIntpi_B(r16)              _BFGET_(r16, 9, 6)
    #define   SET16Gbl_avPllCtl_avPllIntpi_B(r16,v)            _BFSET_(r16, 9, 6,v)

    #define   GET32Gbl_avPllCtl_avPllVddr1p45V_B(r32)          _BFGET_(r32,11,10)
    #define   SET32Gbl_avPllCtl_avPllVddr1p45V_B(r32,v)        _BFSET_(r32,11,10,v)
    #define   GET16Gbl_avPllCtl_avPllVddr1p45V_B(r16)          _BFGET_(r16,11,10)
    #define   SET16Gbl_avPllCtl_avPllVddr1p45V_B(r16,v)        _BFSET_(r16,11,10,v)

    #define   GET32Gbl_avPllCtl_avPllVddr0p9V_B(r32)           _BFGET_(r32,15,12)
    #define   SET32Gbl_avPllCtl_avPllVddr0p9V_B(r32,v)         _BFSET_(r32,15,12,v)
    #define   GET16Gbl_avPllCtl_avPllVddr0p9V_B(r16)           _BFGET_(r16,15,12)
    #define   SET16Gbl_avPllCtl_avPllVddr0p9V_B(r16,v)         _BFSET_(r16,15,12,v)

    #define   GET32Gbl_avPllCtl_avPllVthVcoCal_B(r32)          _BFGET_(r32,17,16)
    #define   SET32Gbl_avPllCtl_avPllVthVcoCal_B(r32,v)        _BFSET_(r32,17,16,v)
    #define   GET16Gbl_avPllCtl_avPllVthVcoCal_B(r16)          _BFGET_(r16, 1, 0)
    #define   SET16Gbl_avPllCtl_avPllVthVcoCal_B(r16,v)        _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_avPllCtl_avPllKvcoExt_B(r32)            _BFGET_(r32,20,18)
    #define   SET32Gbl_avPllCtl_avPllKvcoExt_B(r32,v)          _BFSET_(r32,20,18,v)
    #define   GET16Gbl_avPllCtl_avPllKvcoExt_B(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_avPllCtl_avPllKvcoExt_B(r16,v)          _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_avPllCtl_avPllKvcoExtEn_B(r32)          _BFGET_(r32,21,21)
    #define   SET32Gbl_avPllCtl_avPllKvcoExtEn_B(r32,v)        _BFSET_(r32,21,21,v)
    #define   GET16Gbl_avPllCtl_avPllKvcoExtEn_B(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_avPllCtl_avPllKvcoExtEn_B(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_avPllCtl_avPllV2iExt_B(r32)             _BFGET_(r32,25,22)
    #define   SET32Gbl_avPllCtl_avPllV2iExt_B(r32,v)           _BFSET_(r32,25,22,v)
    #define   GET16Gbl_avPllCtl_avPllV2iExt_B(r16)             _BFGET_(r16, 9, 6)
    #define   SET16Gbl_avPllCtl_avPllV2iExt_B(r16,v)           _BFSET_(r16, 9, 6,v)

    #define   GET32Gbl_avPllCtl_avPllV2iExtEn_B(r32)           _BFGET_(r32,26,26)
    #define   SET32Gbl_avPllCtl_avPllV2iExtEn_B(r32,v)         _BFSET_(r32,26,26,v)
    #define   GET16Gbl_avPllCtl_avPllV2iExtEn_B(r16)           _BFGET_(r16,10,10)
    #define   SET16Gbl_avPllCtl_avPllV2iExtEn_B(r16,v)         _BFSET_(r16,10,10,v)

    #define   GET32Gbl_avPllCtl_avPllSpeed_B(r32)              _BFGET_(r32,29,27)
    #define   SET32Gbl_avPllCtl_avPllSpeed_B(r32,v)            _BFSET_(r32,29,27,v)
    #define   GET16Gbl_avPllCtl_avPllSpeed_B(r16)              _BFGET_(r16,13,11)
    #define   SET16Gbl_avPllCtl_avPllSpeed_B(r16,v)            _BFSET_(r16,13,11,v)

    #define   GET32Gbl_avPllCtl_avPllClkDetEn_B(r32)           _BFGET_(r32,30,30)
    #define   SET32Gbl_avPllCtl_avPllClkDetEn_B(r32,v)         _BFSET_(r32,30,30,v)
    #define   GET16Gbl_avPllCtl_avPllClkDetEn_B(r16)           _BFGET_(r16,14,14)
    #define   SET16Gbl_avPllCtl_avPllClkDetEn_B(r16,v)         _BFSET_(r16,14,14,v)

    #define     w32Gbl_avPllCtl31                              {\
            UNSG32 uavPllCtl_avPllReservePll_A                 :  4;\
            UNSG32 uavPllCtl_avPllResetPll_B                   :  1;\
            UNSG32 uavPllCtl_avPllPu_B                         :  1;\
            UNSG32 uavPllCtl_avPllIntpi_B                      :  4;\
            UNSG32 uavPllCtl_avPllVddr1p45V_B                  :  2;\
            UNSG32 uavPllCtl_avPllVddr0p9V_B                   :  4;\
            UNSG32 uavPllCtl_avPllVthVcoCal_B                  :  2;\
            UNSG32 uavPllCtl_avPllKvcoExt_B                    :  3;\
            UNSG32 uavPllCtl_avPllKvcoExtEn_B                  :  1;\
            UNSG32 uavPllCtl_avPllV2iExt_B                     :  4;\
            UNSG32 uavPllCtl_avPllV2iExtEn_B                   :  1;\
            UNSG32 uavPllCtl_avPllSpeed_B                      :  3;\
            UNSG32 uavPllCtl_avPllClkDetEn_B                   :  1;\
            UNSG32 RSVDxCC_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl31;
            struct w32Gbl_avPllCtl31;
          };
    #define   GET32Gbl_avPllCtl_avPllRefDiv_B(r32)             _BFGET_(r32, 5, 0)
    #define   SET32Gbl_avPllCtl_avPllRefDiv_B(r32,v)           _BFSET_(r32, 5, 0,v)
    #define   GET16Gbl_avPllCtl_avPllRefDiv_B(r16)             _BFGET_(r16, 5, 0)
    #define   SET16Gbl_avPllCtl_avPllRefDiv_B(r16,v)           _BFSET_(r16, 5, 0,v)

    #define   GET32Gbl_avPllCtl_avPllFbDiv_B(r32)              _BFGET_(r32,13, 6)
    #define   SET32Gbl_avPllCtl_avPllFbDiv_B(r32,v)            _BFSET_(r32,13, 6,v)
    #define   GET16Gbl_avPllCtl_avPllFbDiv_B(r16)              _BFGET_(r16,13, 6)
    #define   SET16Gbl_avPllCtl_avPllFbDiv_B(r16,v)            _BFSET_(r16,13, 6,v)

    #define   GET32Gbl_avPllCtl_avPllIcp_B(r32)                _BFGET_(r32,17,14)
    #define   SET32Gbl_avPllCtl_avPllIcp_B(r32,v)              _BFSET_(r32,17,14,v)

    #define   GET32Gbl_avPllCtl_avPllLoadCap_B(r32)            _BFGET_(r32,18,18)
    #define   SET32Gbl_avPllCtl_avPllLoadCap_B(r32,v)          _BFSET_(r32,18,18,v)
    #define   GET16Gbl_avPllCtl_avPllLoadCap_B(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_avPllCtl_avPllLoadCap_B(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_avPllCtl_avPllPllCaliStart_B(r32)       _BFGET_(r32,19,19)
    #define   SET32Gbl_avPllCtl_avPllPllCaliStart_B(r32,v)     _BFSET_(r32,19,19,v)
    #define   GET16Gbl_avPllCtl_avPllPllCaliStart_B(r16)       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_avPllCtl_avPllPllCaliStart_B(r16,v)     _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_avPllCtl32                              {\
            UNSG32 uavPllCtl_avPllRefDiv_B                     :  6;\
            UNSG32 uavPllCtl_avPllFbDiv_B                      :  8;\
            UNSG32 uavPllCtl_avPllIcp_B                        :  4;\
            UNSG32 uavPllCtl_avPllLoadCap_B                    :  1;\
            UNSG32 uavPllCtl_avPllPllCaliStart_B               :  1;\
            UNSG32 RSVDxD0_b20                                 : 12;\
          }
    union { UNSG32 u32Gbl_avPllCtl32;
            struct w32Gbl_avPllCtl32;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC1_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC1_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl33                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC1_B               : 19;\
            UNSG32 RSVDxD4_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl33;
            struct w32Gbl_avPllCtl33;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC2_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC2_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl34                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC2_B               : 19;\
            UNSG32 RSVDxD8_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl34;
            struct w32Gbl_avPllCtl34;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC3_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC3_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl35                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC3_B               : 19;\
            UNSG32 RSVDxDC_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl35;
            struct w32Gbl_avPllCtl35;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC4_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC4_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl36                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC4_B               : 19;\
            UNSG32 RSVDxE0_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl36;
            struct w32Gbl_avPllCtl36;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC5_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC5_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl37                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC5_B               : 19;\
            UNSG32 RSVDxE4_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl37;
            struct w32Gbl_avPllCtl37;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC6_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC6_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl38                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC6_B               : 19;\
            UNSG32 RSVDxE8_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl38;
            struct w32Gbl_avPllCtl38;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC7_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC7_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define     w32Gbl_avPllCtl39                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC7_B               : 19;\
            UNSG32 RSVDxEC_b19                                 : 13;\
          }
    union { UNSG32 u32Gbl_avPllCtl39;
            struct w32Gbl_avPllCtl39;
          };
    #define   GET32Gbl_avPllCtl_avPllFreqOffsetC8_B(r32)       _BFGET_(r32,18, 0)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetC8_B(r32,v)     _BFSET_(r32,18, 0,v)

    #define   GET32Gbl_avPllCtl_avPllFreqOffsetReadyC_B(r32)   _BFGET_(r32,26,19)
    #define   SET32Gbl_avPllCtl_avPllFreqOffsetReadyC_B(r32,v) _BFSET_(r32,26,19,v)
    #define   GET16Gbl_avPllCtl_avPllFreqOffsetReadyC_B(r16)   _BFGET_(r16,10, 3)
    #define   SET16Gbl_avPllCtl_avPllFreqOffsetReadyC_B(r16,v) _BFSET_(r16,10, 3,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC1_B(r32)          _BFGET_(r32,28,27)
    #define   SET32Gbl_avPllCtl_avPllReserveC1_B(r32,v)        _BFSET_(r32,28,27,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC1_B(r16)          _BFGET_(r16,12,11)
    #define   SET16Gbl_avPllCtl_avPllReserveC1_B(r16,v)        _BFSET_(r16,12,11,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC2_B(r32)          _BFGET_(r32,30,29)
    #define   SET32Gbl_avPllCtl_avPllReserveC2_B(r32,v)        _BFSET_(r32,30,29,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC2_B(r16)          _BFGET_(r16,14,13)
    #define   SET16Gbl_avPllCtl_avPllReserveC2_B(r16,v)        _BFSET_(r16,14,13,v)

    #define     w32Gbl_avPllCtl40                              {\
            UNSG32 uavPllCtl_avPllFreqOffsetC8_B               : 19;\
            UNSG32 uavPllCtl_avPllFreqOffsetReadyC_B           :  8;\
            UNSG32 uavPllCtl_avPllReserveC1_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC2_B                  :  2;\
            UNSG32 RSVDxF0_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl40;
            struct w32Gbl_avPllCtl40;
          };
    #define   GET32Gbl_avPllCtl_avPllReserveC3_B(r32)          _BFGET_(r32, 1, 0)
    #define   SET32Gbl_avPllCtl_avPllReserveC3_B(r32,v)        _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC3_B(r16)          _BFGET_(r16, 1, 0)
    #define   SET16Gbl_avPllCtl_avPllReserveC3_B(r16,v)        _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC4_B(r32)          _BFGET_(r32, 3, 2)
    #define   SET32Gbl_avPllCtl_avPllReserveC4_B(r32,v)        _BFSET_(r32, 3, 2,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC4_B(r16)          _BFGET_(r16, 3, 2)
    #define   SET16Gbl_avPllCtl_avPllReserveC4_B(r16,v)        _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC5_B(r32)          _BFGET_(r32, 5, 4)
    #define   SET32Gbl_avPllCtl_avPllReserveC5_B(r32,v)        _BFSET_(r32, 5, 4,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC5_B(r16)          _BFGET_(r16, 5, 4)
    #define   SET16Gbl_avPllCtl_avPllReserveC5_B(r16,v)        _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC6_B(r32)          _BFGET_(r32, 7, 6)
    #define   SET32Gbl_avPllCtl_avPllReserveC6_B(r32,v)        _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC6_B(r16)          _BFGET_(r16, 7, 6)
    #define   SET16Gbl_avPllCtl_avPllReserveC6_B(r16,v)        _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC7_B(r32)          _BFGET_(r32, 9, 8)
    #define   SET32Gbl_avPllCtl_avPllReserveC7_B(r32,v)        _BFSET_(r32, 9, 8,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC7_B(r16)          _BFGET_(r16, 9, 8)
    #define   SET16Gbl_avPllCtl_avPllReserveC7_B(r16,v)        _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_avPllCtl_avPllReserveC8_B(r32)          _BFGET_(r32,11,10)
    #define   SET32Gbl_avPllCtl_avPllReserveC8_B(r32,v)        _BFSET_(r32,11,10,v)
    #define   GET16Gbl_avPllCtl_avPllReserveC8_B(r16)          _BFGET_(r16,11,10)
    #define   SET16Gbl_avPllCtl_avPllReserveC8_B(r16,v)        _BFSET_(r16,11,10,v)

    #define   GET32Gbl_avPllCtl_avPllEnLpC_B(r32)              _BFGET_(r32,19,12)
    #define   SET32Gbl_avPllCtl_avPllEnLpC_B(r32,v)            _BFSET_(r32,19,12,v)

    #define   GET32Gbl_avPllCtl_avPllPuC_B(r32)                _BFGET_(r32,26,20)
    #define   SET32Gbl_avPllCtl_avPllPuC_B(r32,v)              _BFSET_(r32,26,20,v)
    #define   GET16Gbl_avPllCtl_avPllPuC_B(r16)                _BFGET_(r16,10, 4)
    #define   SET16Gbl_avPllCtl_avPllPuC_B(r16,v)              _BFSET_(r16,10, 4,v)

    #define     w32Gbl_avPllCtl41                              {\
            UNSG32 uavPllCtl_avPllReserveC3_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC4_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC5_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC6_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC7_B                  :  2;\
            UNSG32 uavPllCtl_avPllReserveC8_B                  :  2;\
            UNSG32 uavPllCtl_avPllEnLpC_B                      :  8;\
            UNSG32 uavPllCtl_avPllPuC_B                        :  7;\
            UNSG32 RSVDxF4_b27                                 :  5;\
          }
    union { UNSG32 u32Gbl_avPllCtl41;
            struct w32Gbl_avPllCtl41;
          };
    #define   GET32Gbl_avPllCtl_avPllResetC_B(r32)             _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllResetC_B(r32,v)           _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllResetC_B(r16)             _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllResetC_B(r16,v)           _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC1_B(r32)          _BFGET_(r32, 9, 7)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC1_B(r32,v)        _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC1_B(r16)          _BFGET_(r16, 9, 7)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC1_B(r16,v)        _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC2_B(r32)          _BFGET_(r32,12,10)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC2_B(r32,v)        _BFSET_(r32,12,10,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC2_B(r16)          _BFGET_(r16,12,10)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC2_B(r16,v)        _BFSET_(r16,12,10,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC3_B(r32)          _BFGET_(r32,15,13)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC3_B(r32,v)        _BFSET_(r32,15,13,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC3_B(r16)          _BFGET_(r16,15,13)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC3_B(r16,v)        _BFSET_(r16,15,13,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC4_B(r32)          _BFGET_(r32,18,16)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC4_B(r32,v)        _BFSET_(r32,18,16,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC4_B(r16)          _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC4_B(r16,v)        _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC5_B(r32)          _BFGET_(r32,21,19)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC5_B(r32,v)        _BFSET_(r32,21,19,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC5_B(r16)          _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC5_B(r16,v)        _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC6_B(r32)          _BFGET_(r32,24,22)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC6_B(r32,v)        _BFSET_(r32,24,22,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC6_B(r16)          _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC6_B(r16,v)        _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avPllCtl_avPllDivHdmiC7_B(r32)          _BFGET_(r32,27,25)
    #define   SET32Gbl_avPllCtl_avPllDivHdmiC7_B(r32,v)        _BFSET_(r32,27,25,v)
    #define   GET16Gbl_avPllCtl_avPllDivHdmiC7_B(r16)          _BFGET_(r16,11, 9)
    #define   SET16Gbl_avPllCtl_avPllDivHdmiC7_B(r16,v)        _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C1_B(r32)           _BFGET_(r32,30,28)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C1_B(r32,v)         _BFSET_(r32,30,28,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C1_B(r16)           _BFGET_(r16,14,12)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C1_B(r16,v)         _BFSET_(r16,14,12,v)

    #define     w32Gbl_avPllCtl42                              {\
            UNSG32 uavPllCtl_avPllResetC_B                     :  7;\
            UNSG32 uavPllCtl_avPllDivHdmiC1_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC2_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC3_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC4_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC5_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC6_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivHdmiC7_B                  :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C1_B                   :  3;\
            UNSG32 RSVDxF8_b31                                 :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl42;
            struct w32Gbl_avPllCtl42;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv1C2_B(r32)           _BFGET_(r32, 2, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C2_B(r32,v)         _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C2_B(r16)           _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C2_B(r16,v)         _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C3_B(r32)           _BFGET_(r32, 5, 3)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C3_B(r32,v)         _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C3_B(r16)           _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C3_B(r16,v)         _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C4_B(r32)           _BFGET_(r32, 8, 6)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C4_B(r32,v)         _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C4_B(r16)           _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C4_B(r16,v)         _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C5_B(r32)           _BFGET_(r32,11, 9)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C5_B(r32,v)         _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C5_B(r16)           _BFGET_(r16,11, 9)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C5_B(r16,v)         _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C6_B(r32)           _BFGET_(r32,14,12)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C6_B(r32,v)         _BFSET_(r32,14,12,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv1C6_B(r16)           _BFGET_(r16,14,12)
    #define   SET16Gbl_avPllCtl_avPllDivAv1C6_B(r16,v)         _BFSET_(r16,14,12,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv1C7_B(r32)           _BFGET_(r32,17,15)
    #define   SET32Gbl_avPllCtl_avPllDivAv1C7_B(r32,v)         _BFSET_(r32,17,15,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C1_B(r32)           _BFGET_(r32,24,18)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C1_B(r32,v)         _BFSET_(r32,24,18,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C1_B(r16)           _BFGET_(r16, 8, 2)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C1_B(r16,v)         _BFSET_(r16, 8, 2,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C2_B(r32)           _BFGET_(r32,31,25)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C2_B(r32,v)         _BFSET_(r32,31,25,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C2_B(r16)           _BFGET_(r16,15, 9)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C2_B(r16,v)         _BFSET_(r16,15, 9,v)

    #define     w32Gbl_avPllCtl43                              {\
            UNSG32 uavPllCtl_avPllDivAv1C2_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C3_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C4_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C5_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C6_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv1C7_B                   :  3;\
            UNSG32 uavPllCtl_avPllDivAv2C1_B                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C2_B                   :  7;\
          }
    union { UNSG32 u32Gbl_avPllCtl43;
            struct w32Gbl_avPllCtl43;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv2C3_B(r32)           _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C3_B(r32,v)         _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C3_B(r16)           _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C3_B(r16,v)         _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C4_B(r32)           _BFGET_(r32,13, 7)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C4_B(r32,v)         _BFSET_(r32,13, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C4_B(r16)           _BFGET_(r16,13, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C4_B(r16,v)         _BFSET_(r16,13, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C5_B(r32)           _BFGET_(r32,20,14)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C5_B(r32,v)         _BFSET_(r32,20,14,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv2C6_B(r32)           _BFGET_(r32,27,21)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C6_B(r32,v)         _BFSET_(r32,27,21,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C6_B(r16)           _BFGET_(r16,11, 5)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C6_B(r16,v)         _BFSET_(r16,11, 5,v)

    #define     w32Gbl_avPllCtl44                              {\
            UNSG32 uavPllCtl_avPllDivAv2C3_B                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C4_B                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C5_B                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv2C6_B                   :  7;\
            UNSG32 RSVDx100_b28                                :  4;\
          }
    union { UNSG32 u32Gbl_avPllCtl44;
            struct w32Gbl_avPllCtl44;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv2C7_B(r32)           _BFGET_(r32, 6, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv2C7_B(r32,v)         _BFSET_(r32, 6, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv2C7_B(r16)           _BFGET_(r16, 6, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv2C7_B(r16,v)         _BFSET_(r16, 6, 0,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C1_B(r32)           _BFGET_(r32,10, 7)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C1_B(r32,v)         _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C1_B(r16)           _BFGET_(r16,10, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C1_B(r16,v)         _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C2_B(r32)           _BFGET_(r32,14,11)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C2_B(r32,v)         _BFSET_(r32,14,11,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C2_B(r16)           _BFGET_(r16,14,11)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C2_B(r16,v)         _BFSET_(r16,14,11,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C3_B(r32)           _BFGET_(r32,18,15)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C3_B(r32,v)         _BFSET_(r32,18,15,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C4_B(r32)           _BFGET_(r32,22,19)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C4_B(r32,v)         _BFSET_(r32,22,19,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C4_B(r16)           _BFGET_(r16, 6, 3)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C4_B(r16,v)         _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C5_B(r32)           _BFGET_(r32,26,23)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C5_B(r32,v)         _BFSET_(r32,26,23,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C5_B(r16)           _BFGET_(r16,10, 7)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C5_B(r16,v)         _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_avPllCtl_avPllDivAv3C6_B(r32)           _BFGET_(r32,30,27)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C6_B(r32,v)         _BFSET_(r32,30,27,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C6_B(r16)           _BFGET_(r16,14,11)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C6_B(r16,v)         _BFSET_(r16,14,11,v)

    #define     w32Gbl_avPllCtl45                              {\
            UNSG32 uavPllCtl_avPllDivAv2C7_B                   :  7;\
            UNSG32 uavPllCtl_avPllDivAv3C1_B                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C2_B                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C3_B                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C4_B                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C5_B                   :  4;\
            UNSG32 uavPllCtl_avPllDivAv3C6_B                   :  4;\
            UNSG32 RSVDx104_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_avPllCtl45;
            struct w32Gbl_avPllCtl45;
          };
    #define   GET32Gbl_avPllCtl_avPllDivAv3C7_B(r32)           _BFGET_(r32, 3, 0)
    #define   SET32Gbl_avPllCtl_avPllDivAv3C7_B(r32,v)         _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_avPllCtl_avPllDivAv3C7_B(r16)           _BFGET_(r16, 3, 0)
    #define   SET16Gbl_avPllCtl_avPllDivAv3C7_B(r16,v)         _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_avPllCtl_avPllPSync1C1_B(r32)           _BFGET_(r32,20, 4)
    #define   SET32Gbl_avPllCtl_avPllPSync1C1_B(r32,v)         _BFSET_(r32,20, 4,v)

    #define     w32Gbl_avPllCtl46                              {\
            UNSG32 uavPllCtl_avPllDivAv3C7_B                   :  4;\
            UNSG32 uavPllCtl_avPllPSync1C1_B                   : 17;\
            UNSG32 RSVDx108_b21                                : 11;\
          }
    union { UNSG32 u32Gbl_avPllCtl46;
            struct w32Gbl_avPllCtl46;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C2_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C2_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl47                              {\
            UNSG32 uavPllCtl_avPllPSync1C2_B                   : 17;\
            UNSG32 RSVDx10C_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl47;
            struct w32Gbl_avPllCtl47;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C3_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C3_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl48                              {\
            UNSG32 uavPllCtl_avPllPSync1C3_B                   : 17;\
            UNSG32 RSVDx110_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl48;
            struct w32Gbl_avPllCtl48;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C4_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C4_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl49                              {\
            UNSG32 uavPllCtl_avPllPSync1C4_B                   : 17;\
            UNSG32 RSVDx114_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl49;
            struct w32Gbl_avPllCtl49;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C5_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C5_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl50                              {\
            UNSG32 uavPllCtl_avPllPSync1C5_B                   : 17;\
            UNSG32 RSVDx118_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl50;
            struct w32Gbl_avPllCtl50;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C6_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C6_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl51                              {\
            UNSG32 uavPllCtl_avPllPSync1C6_B                   : 17;\
            UNSG32 RSVDx11C_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl51;
            struct w32Gbl_avPllCtl51;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C7_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C7_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl52                              {\
            UNSG32 uavPllCtl_avPllPSync1C7_B                   : 17;\
            UNSG32 RSVDx120_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl52;
            struct w32Gbl_avPllCtl52;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync1C8_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync1C8_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl53                              {\
            UNSG32 uavPllCtl_avPllPSync1C8_B                   : 17;\
            UNSG32 RSVDx124_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl53;
            struct w32Gbl_avPllCtl53;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C1_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C1_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl54                              {\
            UNSG32 uavPllCtl_avPllPSync2C1_B                   : 17;\
            UNSG32 RSVDx128_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl54;
            struct w32Gbl_avPllCtl54;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C2_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C2_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl55                              {\
            UNSG32 uavPllCtl_avPllPSync2C2_B                   : 17;\
            UNSG32 RSVDx12C_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl55;
            struct w32Gbl_avPllCtl55;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C3_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C3_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl56                              {\
            UNSG32 uavPllCtl_avPllPSync2C3_B                   : 17;\
            UNSG32 RSVDx130_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl56;
            struct w32Gbl_avPllCtl56;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C4_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C4_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl57                              {\
            UNSG32 uavPllCtl_avPllPSync2C4_B                   : 17;\
            UNSG32 RSVDx134_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl57;
            struct w32Gbl_avPllCtl57;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C5_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C5_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl58                              {\
            UNSG32 uavPllCtl_avPllPSync2C5_B                   : 17;\
            UNSG32 RSVDx138_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl58;
            struct w32Gbl_avPllCtl58;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C6_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C6_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl59                              {\
            UNSG32 uavPllCtl_avPllPSync2C6_B                   : 17;\
            UNSG32 RSVDx13C_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl59;
            struct w32Gbl_avPllCtl59;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C7_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C7_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define     w32Gbl_avPllCtl60                              {\
            UNSG32 uavPllCtl_avPllPSync2C7_B                   : 17;\
            UNSG32 RSVDx140_b17                                : 15;\
          }
    union { UNSG32 u32Gbl_avPllCtl60;
            struct w32Gbl_avPllCtl60;
          };
    #define   GET32Gbl_avPllCtl_avPllPSync2C8_B(r32)           _BFGET_(r32,16, 0)
    #define   SET32Gbl_avPllCtl_avPllPSync2C8_B(r32,v)         _BFSET_(r32,16, 0,v)

    #define   GET32Gbl_avPllCtl_avPllEnDpllC_B(r32)            _BFGET_(r32,24,17)
    #define   SET32Gbl_avPllCtl_avPllEnDpllC_B(r32,v)          _BFSET_(r32,24,17,v)
    #define   GET16Gbl_avPllCtl_avPllEnDpllC_B(r16)            _BFGET_(r16, 8, 1)
    #define   SET16Gbl_avPllCtl_avPllEnDpllC_B(r16,v)          _BFSET_(r16, 8, 1,v)

    #define   GET32Gbl_avPllCtl_avPllMasterSlaveB_B(r32)       _BFGET_(r32,25,25)
    #define   SET32Gbl_avPllCtl_avPllMasterSlaveB_B(r32,v)     _BFSET_(r32,25,25,v)
    #define   GET16Gbl_avPllCtl_avPllMasterSlaveB_B(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Gbl_avPllCtl_avPllMasterSlaveB_B(r16,v)     _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_avPllCtl_avPllTestAna_B(r32)            _BFGET_(r32,31,26)
    #define   SET32Gbl_avPllCtl_avPllTestAna_B(r32,v)          _BFSET_(r32,31,26,v)
    #define   GET16Gbl_avPllCtl_avPllTestAna_B(r16)            _BFGET_(r16,15,10)
    #define   SET16Gbl_avPllCtl_avPllTestAna_B(r16,v)          _BFSET_(r16,15,10,v)

    #define     w32Gbl_avPllCtl61                              {\
            UNSG32 uavPllCtl_avPllPSync2C8_B                   : 17;\
            UNSG32 uavPllCtl_avPllEnDpllC_B                    :  8;\
            UNSG32 uavPllCtl_avPllMasterSlaveB_B               :  1;\
            UNSG32 uavPllCtl_avPllTestAna_B                    :  6;\
          }
    union { UNSG32 u32Gbl_avPllCtl61;
            struct w32Gbl_avPllCtl61;
          };
    #define   GET32Gbl_avPllCtl_avPllReservePll_B(r32)         _BFGET_(r32, 3, 0)
    #define   SET32Gbl_avPllCtl_avPllReservePll_B(r32,v)       _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_avPllCtl_avPllReservePll_B(r16)         _BFGET_(r16, 3, 0)
    #define   SET16Gbl_avPllCtl_avPllReservePll_B(r16,v)       _BFSET_(r16, 3, 0,v)

    #define     w32Gbl_avPllCtl62                              {\
            UNSG32 uavPllCtl_avPllReservePll_B                 :  4;\
            UNSG32 RSVDx148_b4                                 : 28;\
          }
    union { UNSG32 u32Gbl_avPllCtl62;
            struct w32Gbl_avPllCtl62;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pllStatus_sysPllLock(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_pllStatus_sysPllLock(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_pllStatus_sysPllLock(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_pllStatus_sysPllLock(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_pllStatus_memPllLock(r32)               _BFGET_(r32, 1, 1)
    #define   SET32Gbl_pllStatus_memPllLock(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_pllStatus_memPllLock(r16)               _BFGET_(r16, 1, 1)
    #define   SET16Gbl_pllStatus_memPllLock(r16,v)             _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_pllStatus_cpu1PllLock(r32)              _BFGET_(r32, 2, 2)
    #define   SET32Gbl_pllStatus_cpu1PllLock(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_pllStatus_cpu1PllLock(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_pllStatus_cpu1PllLock(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_pllStatus_avPllALock(r32)               _BFGET_(r32, 3, 3)
    #define   SET32Gbl_pllStatus_avPllALock(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_pllStatus_avPllALock(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_pllStatus_avPllALock(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_pllStatus_avPllAKvcoOut(r32)            _BFGET_(r32, 6, 4)
    #define   SET32Gbl_pllStatus_avPllAKvcoOut(r32,v)          _BFSET_(r32, 6, 4,v)
    #define   GET16Gbl_pllStatus_avPllAKvcoOut(r16)            _BFGET_(r16, 6, 4)
    #define   SET16Gbl_pllStatus_avPllAKvcoOut(r16,v)          _BFSET_(r16, 6, 4,v)

    #define   GET32Gbl_pllStatus_avPllACaliDone(r32)           _BFGET_(r32, 7, 7)
    #define   SET32Gbl_pllStatus_avPllACaliDone(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_pllStatus_avPllACaliDone(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_pllStatus_avPllACaliDone(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_pllStatus_avPllBLock(r32)               _BFGET_(r32, 8, 8)
    #define   SET32Gbl_pllStatus_avPllBLock(r32,v)             _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_pllStatus_avPllBLock(r16)               _BFGET_(r16, 8, 8)
    #define   SET16Gbl_pllStatus_avPllBLock(r16,v)             _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_pllStatus_avPllBKvcoOut(r32)            _BFGET_(r32,11, 9)
    #define   SET32Gbl_pllStatus_avPllBKvcoOut(r32,v)          _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pllStatus_avPllBKvcoOut(r16)            _BFGET_(r16,11, 9)
    #define   SET16Gbl_pllStatus_avPllBKvcoOut(r16,v)          _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pllStatus_avPllBCaliDone(r32)           _BFGET_(r32,12,12)
    #define   SET32Gbl_pllStatus_avPllBCaliDone(r32,v)         _BFSET_(r32,12,12,v)
    #define   GET16Gbl_pllStatus_avPllBCaliDone(r16)           _BFGET_(r16,12,12)
    #define   SET16Gbl_pllStatus_avPllBCaliDone(r16,v)         _BFSET_(r16,12,12,v)

    #define   GET32Gbl_pllStatus_cpuPllResOut(r32)             _BFGET_(r32,16,13)
    #define   SET32Gbl_pllStatus_cpuPllResOut(r32,v)           _BFSET_(r32,16,13,v)

    #define   GET32Gbl_pllStatus_memPllResOut(r32)             _BFGET_(r32,20,17)
    #define   SET32Gbl_pllStatus_memPllResOut(r32,v)           _BFSET_(r32,20,17,v)
    #define   GET16Gbl_pllStatus_memPllResOut(r16)             _BFGET_(r16, 4, 1)
    #define   SET16Gbl_pllStatus_memPllResOut(r16,v)           _BFSET_(r16, 4, 1,v)

    #define   GET32Gbl_pllStatus_sysPllResOut(r32)             _BFGET_(r32,24,21)
    #define   SET32Gbl_pllStatus_sysPllResOut(r32,v)           _BFSET_(r32,24,21,v)
    #define   GET16Gbl_pllStatus_sysPllResOut(r16)             _BFGET_(r16, 8, 5)
    #define   SET16Gbl_pllStatus_sysPllResOut(r16,v)           _BFSET_(r16, 8, 5,v)

    #define     w32Gbl_pllStatus                               {\
            UNSG32 upllStatus_sysPllLock                       :  1;\
            UNSG32 upllStatus_memPllLock                       :  1;\
            UNSG32 upllStatus_cpu1PllLock                      :  1;\
            UNSG32 upllStatus_avPllALock                       :  1;\
            UNSG32 upllStatus_avPllAKvcoOut                    :  3;\
            UNSG32 upllStatus_avPllACaliDone                   :  1;\
            UNSG32 upllStatus_avPllBLock                       :  1;\
            UNSG32 upllStatus_avPllBKvcoOut                    :  3;\
            UNSG32 upllStatus_avPllBCaliDone                   :  1;\
            UNSG32 upllStatus_cpuPllResOut                     :  4;\
            UNSG32 upllStatus_memPllResOut                     :  4;\
            UNSG32 upllStatus_sysPllResOut                     :  4;\
            UNSG32 RSVDx14C_b25                                :  7;\
          }
    union { UNSG32 u32Gbl_pllStatus;
            struct w32Gbl_pllStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_clkEnable_sysClkEn(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_clkEnable_sysClkEn(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_clkEnable_sysClkEn(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_clkEnable_sysClkEn(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_clkEnable_cfgClkEn(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_clkEnable_cfgClkEn(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_clkEnable_cfgClkEn(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_clkEnable_cfgClkEn(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_clkEnable_pCubeClkEn(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_clkEnable_pCubeClkEn(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_clkEnable_pCubeClkEn(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_clkEnable_pCubeClkEn(r16,v)             _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_clkEnable_vScopeClkEn(r32)              _BFGET_(r32, 3, 3)
    #define   SET32Gbl_clkEnable_vScopeClkEn(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_clkEnable_vScopeClkEn(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_clkEnable_vScopeClkEn(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_clkEnable_gfxClkEn(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_clkEnable_gfxClkEn(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_clkEnable_gfxClkEn(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_clkEnable_gfxClkEn(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_clkEnable_zspClkEn(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_clkEnable_zspClkEn(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_clkEnable_zspClkEn(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_clkEnable_zspClkEn(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_clkEnable_perifClkEn(r32)               _BFGET_(r32, 6, 6)
    #define   SET32Gbl_clkEnable_perifClkEn(r32,v)             _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_clkEnable_perifClkEn(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_clkEnable_perifClkEn(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_clkEnable_gethCoreClkEn(r32)            _BFGET_(r32, 7, 7)
    #define   SET32Gbl_clkEnable_gethCoreClkEn(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_clkEnable_gethCoreClkEn(r16)            _BFGET_(r16, 7, 7)
    #define   SET16Gbl_clkEnable_gethCoreClkEn(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_clkEnable_geth1CoreClkEn(r32)           _BFGET_(r32, 8, 8)
    #define   SET32Gbl_clkEnable_geth1CoreClkEn(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_clkEnable_geth1CoreClkEn(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_clkEnable_geth1CoreClkEn(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_clkEnable_sataCoreClkEn(r32)            _BFGET_(r32, 9, 9)
    #define   SET32Gbl_clkEnable_sataCoreClkEn(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_clkEnable_sataCoreClkEn(r16)            _BFGET_(r16, 9, 9)
    #define   SET16Gbl_clkEnable_sataCoreClkEn(r16,v)          _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_clkEnable_ahbApbCoreClkEn(r32)          _BFGET_(r32,10,10)
    #define   SET32Gbl_clkEnable_ahbApbCoreClkEn(r32,v)        _BFSET_(r32,10,10,v)
    #define   GET16Gbl_clkEnable_ahbApbCoreClkEn(r16)          _BFGET_(r16,10,10)
    #define   SET16Gbl_clkEnable_ahbApbCoreClkEn(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32Gbl_clkEnable_usb0CoreClkEn(r32)            _BFGET_(r32,11,11)
    #define   SET32Gbl_clkEnable_usb0CoreClkEn(r32,v)          _BFSET_(r32,11,11,v)
    #define   GET16Gbl_clkEnable_usb0CoreClkEn(r16)            _BFGET_(r16,11,11)
    #define   SET16Gbl_clkEnable_usb0CoreClkEn(r16,v)          _BFSET_(r16,11,11,v)

    #define   GET32Gbl_clkEnable_usb1CoreClkEn(r32)            _BFGET_(r32,12,12)
    #define   SET32Gbl_clkEnable_usb1CoreClkEn(r32,v)          _BFSET_(r32,12,12,v)
    #define   GET16Gbl_clkEnable_usb1CoreClkEn(r16)            _BFGET_(r16,12,12)
    #define   SET16Gbl_clkEnable_usb1CoreClkEn(r16,v)          _BFSET_(r16,12,12,v)

    #define   GET32Gbl_clkEnable_pBridgeCoreClkEn(r32)         _BFGET_(r32,13,13)
    #define   SET32Gbl_clkEnable_pBridgeCoreClkEn(r32,v)       _BFSET_(r32,13,13,v)
    #define   GET16Gbl_clkEnable_pBridgeCoreClkEn(r16)         _BFGET_(r16,13,13)
    #define   SET16Gbl_clkEnable_pBridgeCoreClkEn(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32Gbl_clkEnable_sdioCoreClkEn(r32)            _BFGET_(r32,14,14)
    #define   SET32Gbl_clkEnable_sdioCoreClkEn(r32,v)          _BFSET_(r32,14,14,v)
    #define   GET16Gbl_clkEnable_sdioCoreClkEn(r16)            _BFGET_(r16,14,14)
    #define   SET16Gbl_clkEnable_sdioCoreClkEn(r16,v)          _BFSET_(r16,14,14,v)

    #define   GET32Gbl_clkEnable_sdio1CoreClkEn(r32)           _BFGET_(r32,15,15)
    #define   SET32Gbl_clkEnable_sdio1CoreClkEn(r32,v)         _BFSET_(r32,15,15,v)
    #define   GET16Gbl_clkEnable_sdio1CoreClkEn(r16)           _BFGET_(r16,15,15)
    #define   SET16Gbl_clkEnable_sdio1CoreClkEn(r16,v)         _BFSET_(r16,15,15,v)

    #define   GET32Gbl_clkEnable_drmFigoClkEn(r32)             _BFGET_(r32,16,16)
    #define   SET32Gbl_clkEnable_drmFigoClkEn(r32,v)           _BFSET_(r32,16,16,v)
    #define   GET16Gbl_clkEnable_drmFigoClkEn(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_clkEnable_drmFigoClkEn(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_clkEnable_nfcCoreClkEn(r32)             _BFGET_(r32,17,17)
    #define   SET32Gbl_clkEnable_nfcCoreClkEn(r32,v)           _BFSET_(r32,17,17,v)
    #define   GET16Gbl_clkEnable_nfcCoreClkEn(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_clkEnable_nfcCoreClkEn(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_clkEnable_nfcEccClkEn(r32)              _BFGET_(r32,18,18)
    #define   SET32Gbl_clkEnable_nfcEccClkEn(r32,v)            _BFSET_(r32,18,18,v)
    #define   GET16Gbl_clkEnable_nfcEccClkEn(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_clkEnable_nfcEccClkEn(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_clkEnable_smemcCoreClkEn(r32)           _BFGET_(r32,19,19)
    #define   SET32Gbl_clkEnable_smemcCoreClkEn(r32,v)         _BFSET_(r32,19,19,v)
    #define   GET16Gbl_clkEnable_smemcCoreClkEn(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_clkEnable_smemcCoreClkEn(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_clkEnable_appClkEn(r32)                 _BFGET_(r32,20,20)
    #define   SET32Gbl_clkEnable_appClkEn(r32,v)               _BFSET_(r32,20,20,v)
    #define   GET16Gbl_clkEnable_appClkEn(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_clkEnable_appClkEn(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_clkEnable_vppSysClkEn(r32)              _BFGET_(r32,21,21)
    #define   SET32Gbl_clkEnable_vppSysClkEn(r32,v)            _BFSET_(r32,21,21,v)
    #define   GET16Gbl_clkEnable_vppSysClkEn(r16)              _BFGET_(r16, 5, 5)
    #define   SET16Gbl_clkEnable_vppSysClkEn(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_clkEnable_audio0ClkEn(r32)              _BFGET_(r32,22,22)
    #define   SET32Gbl_clkEnable_audio0ClkEn(r32,v)            _BFSET_(r32,22,22,v)
    #define   GET16Gbl_clkEnable_audio0ClkEn(r16)              _BFGET_(r16, 6, 6)
    #define   SET16Gbl_clkEnable_audio0ClkEn(r16,v)            _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_clkEnable_audio1ClkEn(r32)              _BFGET_(r32,23,23)
    #define   SET32Gbl_clkEnable_audio1ClkEn(r32,v)            _BFSET_(r32,23,23,v)
    #define   GET16Gbl_clkEnable_audio1ClkEn(r16)              _BFGET_(r16, 7, 7)
    #define   SET16Gbl_clkEnable_audio1ClkEn(r16,v)            _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_clkEnable_audio2ClkEn(r32)              _BFGET_(r32,24,24)
    #define   SET32Gbl_clkEnable_audio2ClkEn(r32,v)            _BFSET_(r32,24,24,v)
    #define   GET16Gbl_clkEnable_audio2ClkEn(r16)              _BFGET_(r16, 8, 8)
    #define   SET16Gbl_clkEnable_audio2ClkEn(r16,v)            _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_clkEnable_audio3ClkEn(r32)              _BFGET_(r32,25,25)
    #define   SET32Gbl_clkEnable_audio3ClkEn(r32,v)            _BFSET_(r32,25,25,v)
    #define   GET16Gbl_clkEnable_audio3ClkEn(r16)              _BFGET_(r16, 9, 9)
    #define   SET16Gbl_clkEnable_audio3ClkEn(r16,v)            _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_clkEnable_audioHdClkEn(r32)             _BFGET_(r32,26,26)
    #define   SET32Gbl_clkEnable_audioHdClkEn(r32,v)           _BFSET_(r32,26,26,v)
    #define   GET16Gbl_clkEnable_audioHdClkEn(r16)             _BFGET_(r16,10,10)
    #define   SET16Gbl_clkEnable_audioHdClkEn(r16,v)           _BFSET_(r16,10,10,v)

    #define   GET32Gbl_clkEnable_video0ClkEn(r32)              _BFGET_(r32,27,27)
    #define   SET32Gbl_clkEnable_video0ClkEn(r32,v)            _BFSET_(r32,27,27,v)
    #define   GET16Gbl_clkEnable_video0ClkEn(r16)              _BFGET_(r16,11,11)
    #define   SET16Gbl_clkEnable_video0ClkEn(r16,v)            _BFSET_(r16,11,11,v)

    #define   GET32Gbl_clkEnable_video1ClkEn(r32)              _BFGET_(r32,28,28)
    #define   SET32Gbl_clkEnable_video1ClkEn(r32,v)            _BFSET_(r32,28,28,v)
    #define   GET16Gbl_clkEnable_video1ClkEn(r16)              _BFGET_(r16,12,12)
    #define   SET16Gbl_clkEnable_video1ClkEn(r16,v)            _BFSET_(r16,12,12,v)

    #define   GET32Gbl_clkEnable_video2ClkEn(r32)              _BFGET_(r32,29,29)
    #define   SET32Gbl_clkEnable_video2ClkEn(r32,v)            _BFSET_(r32,29,29,v)
    #define   GET16Gbl_clkEnable_video2ClkEn(r16)              _BFGET_(r16,13,13)
    #define   SET16Gbl_clkEnable_video2ClkEn(r16,v)            _BFSET_(r16,13,13,v)

    #define   GET32Gbl_clkEnable_PEX_mx_refclk_off(r32)        _BFGET_(r32,30,30)
    #define   SET32Gbl_clkEnable_PEX_mx_refclk_off(r32,v)      _BFSET_(r32,30,30,v)
    #define   GET16Gbl_clkEnable_PEX_mx_refclk_off(r16)        _BFGET_(r16,14,14)
    #define   SET16Gbl_clkEnable_PEX_mx_refclk_off(r16,v)      _BFSET_(r16,14,14,v)

    #define     w32Gbl_clkEnable                               {\
            UNSG32 uclkEnable_sysClkEn                         :  1;\
            UNSG32 uclkEnable_cfgClkEn                         :  1;\
            UNSG32 uclkEnable_pCubeClkEn                       :  1;\
            UNSG32 uclkEnable_vScopeClkEn                      :  1;\
            UNSG32 uclkEnable_gfxClkEn                         :  1;\
            UNSG32 uclkEnable_zspClkEn                         :  1;\
            UNSG32 uclkEnable_perifClkEn                       :  1;\
            UNSG32 uclkEnable_gethCoreClkEn                    :  1;\
            UNSG32 uclkEnable_geth1CoreClkEn                   :  1;\
            UNSG32 uclkEnable_sataCoreClkEn                    :  1;\
            UNSG32 uclkEnable_ahbApbCoreClkEn                  :  1;\
            UNSG32 uclkEnable_usb0CoreClkEn                    :  1;\
            UNSG32 uclkEnable_usb1CoreClkEn                    :  1;\
            UNSG32 uclkEnable_pBridgeCoreClkEn                 :  1;\
            UNSG32 uclkEnable_sdioCoreClkEn                    :  1;\
            UNSG32 uclkEnable_sdio1CoreClkEn                   :  1;\
            UNSG32 uclkEnable_drmFigoClkEn                     :  1;\
            UNSG32 uclkEnable_nfcCoreClkEn                     :  1;\
            UNSG32 uclkEnable_nfcEccClkEn                      :  1;\
            UNSG32 uclkEnable_smemcCoreClkEn                   :  1;\
            UNSG32 uclkEnable_appClkEn                         :  1;\
            UNSG32 uclkEnable_vppSysClkEn                      :  1;\
            UNSG32 uclkEnable_audio0ClkEn                      :  1;\
            UNSG32 uclkEnable_audio1ClkEn                      :  1;\
            UNSG32 uclkEnable_audio2ClkEn                      :  1;\
            UNSG32 uclkEnable_audio3ClkEn                      :  1;\
            UNSG32 uclkEnable_audioHdClkEn                     :  1;\
            UNSG32 uclkEnable_video0ClkEn                      :  1;\
            UNSG32 uclkEnable_video1ClkEn                      :  1;\
            UNSG32 uclkEnable_video2ClkEn                      :  1;\
            UNSG32 uclkEnable_PEX_mx_refclk_off                :  1;\
            UNSG32 RSVDx150_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_clkEnable;
            struct w32Gbl_clkEnable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_clkSelect_sysClkPllSel(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_clkSelect_sysClkPllSel(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_clkSelect_sysClkPllSel(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_clkSelect_sysClkPllSel(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_clkSelect_sysClkSel(r32)                _BFGET_(r32, 5, 3)
    #define   SET32Gbl_clkSelect_sysClkSel(r32,v)              _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_clkSelect_sysClkSel(r16)                _BFGET_(r16, 5, 3)
    #define   SET16Gbl_clkSelect_sysClkSel(r16,v)              _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_clkSelect_cpu0ClkPllSel(r32)            _BFGET_(r32, 8, 6)
    #define   SET32Gbl_clkSelect_cpu0ClkPllSel(r32,v)          _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_clkSelect_cpu0ClkPllSel(r16)            _BFGET_(r16, 8, 6)
    #define   SET16Gbl_clkSelect_cpu0ClkPllSel(r16,v)          _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_clkSelect_cpu0ClkSel(r32)               _BFGET_(r32,11, 9)
    #define   SET32Gbl_clkSelect_cpu0ClkSel(r32,v)             _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_clkSelect_cpu0ClkSel(r16)               _BFGET_(r16,11, 9)
    #define   SET16Gbl_clkSelect_cpu0ClkSel(r16,v)             _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_clkSelect_cpu1ClkPllSel(r32)            _BFGET_(r32,13,12)
    #define   SET32Gbl_clkSelect_cpu1ClkPllSel(r32,v)          _BFSET_(r32,13,12,v)
    #define   GET16Gbl_clkSelect_cpu1ClkPllSel(r16)            _BFGET_(r16,13,12)
    #define   SET16Gbl_clkSelect_cpu1ClkPllSel(r16,v)          _BFSET_(r16,13,12,v)

    #define   GET32Gbl_clkSelect_cpu1ClkSel(r32)               _BFGET_(r32,16,14)
    #define   SET32Gbl_clkSelect_cpu1ClkSel(r32,v)             _BFSET_(r32,16,14,v)

    #define   GET32Gbl_clkSelect_drmFigoClkPllSel(r32)         _BFGET_(r32,19,17)
    #define   SET32Gbl_clkSelect_drmFigoClkPllSel(r32,v)       _BFSET_(r32,19,17,v)
    #define   GET16Gbl_clkSelect_drmFigoClkPllSel(r16)         _BFGET_(r16, 3, 1)
    #define   SET16Gbl_clkSelect_drmFigoClkPllSel(r16,v)       _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_clkSelect_drmFigoClkSel(r32)            _BFGET_(r32,22,20)
    #define   SET32Gbl_clkSelect_drmFigoClkSel(r32,v)          _BFSET_(r32,22,20,v)
    #define   GET16Gbl_clkSelect_drmFigoClkSel(r16)            _BFGET_(r16, 6, 4)
    #define   SET16Gbl_clkSelect_drmFigoClkSel(r16,v)          _BFSET_(r16, 6, 4,v)

    #define   GET32Gbl_clkSelect_cfgClkPllSel(r32)             _BFGET_(r32,25,23)
    #define   SET32Gbl_clkSelect_cfgClkPllSel(r32,v)           _BFSET_(r32,25,23,v)
    #define   GET16Gbl_clkSelect_cfgClkPllSel(r16)             _BFGET_(r16, 9, 7)
    #define   SET16Gbl_clkSelect_cfgClkPllSel(r16,v)           _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_clkSelect_cfgClkSel(r32)                _BFGET_(r32,28,26)
    #define   SET32Gbl_clkSelect_cfgClkSel(r32,v)              _BFSET_(r32,28,26,v)
    #define   GET16Gbl_clkSelect_cfgClkSel(r16)                _BFGET_(r16,12,10)
    #define   SET16Gbl_clkSelect_cfgClkSel(r16,v)              _BFSET_(r16,12,10,v)

    #define   GET32Gbl_clkSelect_gfxClkPllSel(r32)             _BFGET_(r32,31,29)
    #define   SET32Gbl_clkSelect_gfxClkPllSel(r32,v)           _BFSET_(r32,31,29,v)
    #define   GET16Gbl_clkSelect_gfxClkPllSel(r16)             _BFGET_(r16,15,13)
    #define   SET16Gbl_clkSelect_gfxClkPllSel(r16,v)           _BFSET_(r16,15,13,v)

    #define     w32Gbl_clkSelect                               {\
            UNSG32 uclkSelect_sysClkPllSel                     :  3;\
            UNSG32 uclkSelect_sysClkSel                        :  3;\
            UNSG32 uclkSelect_cpu0ClkPllSel                    :  3;\
            UNSG32 uclkSelect_cpu0ClkSel                       :  3;\
            UNSG32 uclkSelect_cpu1ClkPllSel                    :  2;\
            UNSG32 uclkSelect_cpu1ClkSel                       :  3;\
            UNSG32 uclkSelect_drmFigoClkPllSel                 :  3;\
            UNSG32 uclkSelect_drmFigoClkSel                    :  3;\
            UNSG32 uclkSelect_cfgClkPllSel                     :  3;\
            UNSG32 uclkSelect_cfgClkSel                        :  3;\
            UNSG32 uclkSelect_gfxClkPllSel                     :  3;\
          }
    union { UNSG32 u32Gbl_clkSelect;
            struct w32Gbl_clkSelect;
          };
    #define   GET32Gbl_clkSelect_gfxClkSel(r32)                _BFGET_(r32, 2, 0)
    #define   SET32Gbl_clkSelect_gfxClkSel(r32,v)              _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_clkSelect_gfxClkSel(r16)                _BFGET_(r16, 2, 0)
    #define   SET16Gbl_clkSelect_gfxClkSel(r16,v)              _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_clkSelect_zspClkPllSel(r32)             _BFGET_(r32, 5, 3)
    #define   SET32Gbl_clkSelect_zspClkPllSel(r32,v)           _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_clkSelect_zspClkPllSel(r16)             _BFGET_(r16, 5, 3)
    #define   SET16Gbl_clkSelect_zspClkPllSel(r16,v)           _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_clkSelect_zspClkSel(r32)                _BFGET_(r32, 8, 6)
    #define   SET32Gbl_clkSelect_zspClkSel(r32,v)              _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_clkSelect_zspClkSel(r16)                _BFGET_(r16, 8, 6)
    #define   SET16Gbl_clkSelect_zspClkSel(r16,v)              _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_clkSelect_perifClkPllSel(r32)           _BFGET_(r32,11, 9)
    #define   SET32Gbl_clkSelect_perifClkPllSel(r32,v)         _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_clkSelect_perifClkPllSel(r16)           _BFGET_(r16,11, 9)
    #define   SET16Gbl_clkSelect_perifClkPllSel(r16,v)         _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_clkSelect_perifClkSel(r32)              _BFGET_(r32,14,12)
    #define   SET32Gbl_clkSelect_perifClkSel(r32,v)            _BFSET_(r32,14,12,v)
    #define   GET16Gbl_clkSelect_perifClkSel(r16)              _BFGET_(r16,14,12)
    #define   SET16Gbl_clkSelect_perifClkSel(r16,v)            _BFSET_(r16,14,12,v)

    #define   GET32Gbl_clkSelect_pCubeClkPllSel(r32)           _BFGET_(r32,17,15)
    #define   SET32Gbl_clkSelect_pCubeClkPllSel(r32,v)         _BFSET_(r32,17,15,v)

    #define   GET32Gbl_clkSelect_pCubeClkSel(r32)              _BFGET_(r32,20,18)
    #define   SET32Gbl_clkSelect_pCubeClkSel(r32,v)            _BFSET_(r32,20,18,v)
    #define   GET16Gbl_clkSelect_pCubeClkSel(r16)              _BFGET_(r16, 4, 2)
    #define   SET16Gbl_clkSelect_pCubeClkSel(r16,v)            _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_clkSelect_vScopeClkPllSel(r32)          _BFGET_(r32,23,21)
    #define   SET32Gbl_clkSelect_vScopeClkPllSel(r32,v)        _BFSET_(r32,23,21,v)
    #define   GET16Gbl_clkSelect_vScopeClkPllSel(r16)          _BFGET_(r16, 7, 5)
    #define   SET16Gbl_clkSelect_vScopeClkPllSel(r16,v)        _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_clkSelect_vScopeClkSel(r32)             _BFGET_(r32,26,24)
    #define   SET32Gbl_clkSelect_vScopeClkSel(r32,v)           _BFSET_(r32,26,24,v)
    #define   GET16Gbl_clkSelect_vScopeClkSel(r16)             _BFGET_(r16,10, 8)
    #define   SET16Gbl_clkSelect_vScopeClkSel(r16,v)           _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_clkSelect_nfcEccClkPllSel(r32)          _BFGET_(r32,29,27)
    #define   SET32Gbl_clkSelect_nfcEccClkPllSel(r32,v)        _BFSET_(r32,29,27,v)
    #define   GET16Gbl_clkSelect_nfcEccClkPllSel(r16)          _BFGET_(r16,13,11)
    #define   SET16Gbl_clkSelect_nfcEccClkPllSel(r16,v)        _BFSET_(r16,13,11,v)

    #define     w32Gbl_clkSelect1                              {\
            UNSG32 uclkSelect_gfxClkSel                        :  3;\
            UNSG32 uclkSelect_zspClkPllSel                     :  3;\
            UNSG32 uclkSelect_zspClkSel                        :  3;\
            UNSG32 uclkSelect_perifClkPllSel                   :  3;\
            UNSG32 uclkSelect_perifClkSel                      :  3;\
            UNSG32 uclkSelect_pCubeClkPllSel                   :  3;\
            UNSG32 uclkSelect_pCubeClkSel                      :  3;\
            UNSG32 uclkSelect_vScopeClkPllSel                  :  3;\
            UNSG32 uclkSelect_vScopeClkSel                     :  3;\
            UNSG32 uclkSelect_nfcEccClkPllSel                  :  3;\
            UNSG32 RSVDx158_b30                                :  2;\
          }
    union { UNSG32 u32Gbl_clkSelect1;
            struct w32Gbl_clkSelect1;
          };
    #define   GET32Gbl_clkSelect_nfcEccClkSel(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_clkSelect_nfcEccClkSel(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_clkSelect_nfcEccClkSel(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_clkSelect_nfcEccClkSel(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_clkSelect_vppSysClkPllSel(r32)          _BFGET_(r32, 5, 3)
    #define   SET32Gbl_clkSelect_vppSysClkPllSel(r32,v)        _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_clkSelect_vppSysClkPllSel(r16)          _BFGET_(r16, 5, 3)
    #define   SET16Gbl_clkSelect_vppSysClkPllSel(r16,v)        _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_clkSelect_vppSysClkSel(r32)             _BFGET_(r32, 8, 6)
    #define   SET32Gbl_clkSelect_vppSysClkSel(r32,v)           _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_clkSelect_vppSysClkSel(r16)             _BFGET_(r16, 8, 6)
    #define   SET16Gbl_clkSelect_vppSysClkSel(r16,v)           _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_clkSelect_appClkPllSel(r32)             _BFGET_(r32,11, 9)
    #define   SET32Gbl_clkSelect_appClkPllSel(r32,v)           _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_clkSelect_appClkPllSel(r16)             _BFGET_(r16,11, 9)
    #define   SET16Gbl_clkSelect_appClkPllSel(r16,v)           _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_clkSelect_appClkSel(r32)                _BFGET_(r32,14,12)
    #define   SET32Gbl_clkSelect_appClkSel(r32,v)              _BFSET_(r32,14,12,v)
    #define   GET16Gbl_clkSelect_appClkSel(r16)                _BFGET_(r16,14,12)
    #define   SET16Gbl_clkSelect_appClkSel(r16,v)              _BFSET_(r16,14,12,v)

    #define   GET32Gbl_clkSelect_audioFastExtClkSel(r32)       _BFGET_(r32,15,15)
    #define   SET32Gbl_clkSelect_audioFastExtClkSel(r32,v)     _BFSET_(r32,15,15,v)
    #define   GET16Gbl_clkSelect_audioFastExtClkSel(r16)       _BFGET_(r16,15,15)
    #define   SET16Gbl_clkSelect_audioFastExtClkSel(r16,v)     _BFSET_(r16,15,15,v)

    #define   GET32Gbl_clkSelect_audioFastClkSel(r32)          _BFGET_(r32,16,16)
    #define   SET32Gbl_clkSelect_audioFastClkSel(r32,v)        _BFSET_(r32,16,16,v)
    #define   GET16Gbl_clkSelect_audioFastClkSel(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_clkSelect_audioFastClkSel(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_clkSelect_audio0ClkSel(r32)             _BFGET_(r32,19,17)
    #define   SET32Gbl_clkSelect_audio0ClkSel(r32,v)           _BFSET_(r32,19,17,v)
    #define   GET16Gbl_clkSelect_audio0ClkSel(r16)             _BFGET_(r16, 3, 1)
    #define   SET16Gbl_clkSelect_audio0ClkSel(r16,v)           _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_clkSelect_audio2ClkSel(r32)             _BFGET_(r32,22,20)
    #define   SET32Gbl_clkSelect_audio2ClkSel(r32,v)           _BFSET_(r32,22,20,v)
    #define   GET16Gbl_clkSelect_audio2ClkSel(r16)             _BFGET_(r16, 6, 4)
    #define   SET16Gbl_clkSelect_audio2ClkSel(r16,v)           _BFSET_(r16, 6, 4,v)

    #define   GET32Gbl_clkSelect_audio3ClkSel(r32)             _BFGET_(r32,25,23)
    #define   SET32Gbl_clkSelect_audio3ClkSel(r32,v)           _BFSET_(r32,25,23,v)
    #define   GET16Gbl_clkSelect_audio3ClkSel(r16)             _BFGET_(r16, 9, 7)
    #define   SET16Gbl_clkSelect_audio3ClkSel(r16,v)           _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_clkSelect_audioHdExtClkSel(r32)         _BFGET_(r32,26,26)
    #define   SET32Gbl_clkSelect_audioHdExtClkSel(r32,v)       _BFSET_(r32,26,26,v)
    #define   GET16Gbl_clkSelect_audioHdExtClkSel(r16)         _BFGET_(r16,10,10)
    #define   SET16Gbl_clkSelect_audioHdExtClkSel(r16,v)       _BFSET_(r16,10,10,v)

    #define   GET32Gbl_clkSelect_audioHdClkSel(r32)            _BFGET_(r32,27,27)
    #define   SET32Gbl_clkSelect_audioHdClkSel(r32,v)          _BFSET_(r32,27,27,v)
    #define   GET16Gbl_clkSelect_audioHdClkSel(r16)            _BFGET_(r16,11,11)
    #define   SET16Gbl_clkSelect_audioHdClkSel(r16,v)          _BFSET_(r16,11,11,v)

    #define   GET32Gbl_clkSelect_audio1ExtClkSel(r32)          _BFGET_(r32,28,28)
    #define   SET32Gbl_clkSelect_audio1ExtClkSel(r32,v)        _BFSET_(r32,28,28,v)
    #define   GET16Gbl_clkSelect_audio1ExtClkSel(r16)          _BFGET_(r16,12,12)
    #define   SET16Gbl_clkSelect_audio1ExtClkSel(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32Gbl_clkSelect_audio1ClkPllSel(r32)          _BFGET_(r32,29,29)
    #define   SET32Gbl_clkSelect_audio1ClkPllSel(r32,v)        _BFSET_(r32,29,29,v)
    #define   GET16Gbl_clkSelect_audio1ClkPllSel(r16)          _BFGET_(r16,13,13)
    #define   SET16Gbl_clkSelect_audio1ClkPllSel(r16,v)        _BFSET_(r16,13,13,v)

    #define   GET32Gbl_clkSelect_audio1SrcClkSel(r32)          _BFGET_(r32,30,30)
    #define   SET32Gbl_clkSelect_audio1SrcClkSel(r32,v)        _BFSET_(r32,30,30,v)
    #define   GET16Gbl_clkSelect_audio1SrcClkSel(r16)          _BFGET_(r16,14,14)
    #define   SET16Gbl_clkSelect_audio1SrcClkSel(r16,v)        _BFSET_(r16,14,14,v)

    #define     w32Gbl_clkSelect2                              {\
            UNSG32 uclkSelect_nfcEccClkSel                     :  3;\
            UNSG32 uclkSelect_vppSysClkPllSel                  :  3;\
            UNSG32 uclkSelect_vppSysClkSel                     :  3;\
            UNSG32 uclkSelect_appClkPllSel                     :  3;\
            UNSG32 uclkSelect_appClkSel                        :  3;\
            UNSG32 uclkSelect_audioFastExtClkSel               :  1;\
            UNSG32 uclkSelect_audioFastClkSel                  :  1;\
            UNSG32 uclkSelect_audio0ClkSel                     :  3;\
            UNSG32 uclkSelect_audio2ClkSel                     :  3;\
            UNSG32 uclkSelect_audio3ClkSel                     :  3;\
            UNSG32 uclkSelect_audioHdExtClkSel                 :  1;\
            UNSG32 uclkSelect_audioHdClkSel                    :  1;\
            UNSG32 uclkSelect_audio1ExtClkSel                  :  1;\
            UNSG32 uclkSelect_audio1ClkPllSel                  :  1;\
            UNSG32 uclkSelect_audio1SrcClkSel                  :  1;\
            UNSG32 RSVDx15C_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_clkSelect2;
            struct w32Gbl_clkSelect2;
          };
    #define   GET32Gbl_clkSelect_audio1ClkSel(r32)             _BFGET_(r32, 2, 0)
    #define   SET32Gbl_clkSelect_audio1ClkSel(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_clkSelect_audio1ClkSel(r16)             _BFGET_(r16, 2, 0)
    #define   SET16Gbl_clkSelect_audio1ClkSel(r16,v)           _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_clkSelect_video0ExtClkSel(r32)          _BFGET_(r32, 3, 3)
    #define   SET32Gbl_clkSelect_video0ExtClkSel(r32,v)        _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_clkSelect_video0ExtClkSel(r16)          _BFGET_(r16, 3, 3)
    #define   SET16Gbl_clkSelect_video0ExtClkSel(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_clkSelect_video0ClkSel(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_clkSelect_video0ClkSel(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_clkSelect_video0ClkSel(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_clkSelect_video0ClkSel(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_clkSelect_video1ExtClkSel(r32)          _BFGET_(r32, 5, 5)
    #define   SET32Gbl_clkSelect_video1ExtClkSel(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_clkSelect_video1ExtClkSel(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_clkSelect_video1ExtClkSel(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_clkSelect_video1ClkSel(r32)             _BFGET_(r32, 6, 6)
    #define   SET32Gbl_clkSelect_video1ClkSel(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_clkSelect_video1ClkSel(r16)             _BFGET_(r16, 6, 6)
    #define   SET16Gbl_clkSelect_video1ClkSel(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_clkSelect_video1ClkPllSel(r32)          _BFGET_(r32, 7, 7)
    #define   SET32Gbl_clkSelect_video1ClkPllSel(r32,v)        _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_clkSelect_video1ClkPllSel(r16)          _BFGET_(r16, 7, 7)
    #define   SET16Gbl_clkSelect_video1ClkPllSel(r16,v)        _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_clkSelect_video2ExtClkSel(r32)          _BFGET_(r32, 8, 8)
    #define   SET32Gbl_clkSelect_video2ExtClkSel(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_clkSelect_video2ExtClkSel(r16)          _BFGET_(r16, 8, 8)
    #define   SET16Gbl_clkSelect_video2ExtClkSel(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_clkSelect_video2ClkSel(r32)             _BFGET_(r32, 9, 9)
    #define   SET32Gbl_clkSelect_video2ClkSel(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_clkSelect_video2ClkSel(r16)             _BFGET_(r16, 9, 9)
    #define   SET16Gbl_clkSelect_video2ClkSel(r16,v)           _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_clkSelect_video2ClkPllSel(r32)          _BFGET_(r32,10,10)
    #define   SET32Gbl_clkSelect_video2ClkPllSel(r32,v)        _BFSET_(r32,10,10,v)
    #define   GET16Gbl_clkSelect_video2ClkPllSel(r16)          _BFGET_(r16,10,10)
    #define   SET16Gbl_clkSelect_video2ClkPllSel(r16,v)        _BFSET_(r16,10,10,v)

    #define     w32Gbl_clkSelect3                              {\
            UNSG32 uclkSelect_audio1ClkSel                     :  3;\
            UNSG32 uclkSelect_video0ExtClkSel                  :  1;\
            UNSG32 uclkSelect_video0ClkSel                     :  1;\
            UNSG32 uclkSelect_video1ExtClkSel                  :  1;\
            UNSG32 uclkSelect_video1ClkSel                     :  1;\
            UNSG32 uclkSelect_video1ClkPllSel                  :  1;\
            UNSG32 uclkSelect_video2ExtClkSel                  :  1;\
            UNSG32 uclkSelect_video2ClkSel                     :  1;\
            UNSG32 uclkSelect_video2ClkPllSel                  :  1;\
            UNSG32 RSVDx160_b11                                : 21;\
          }
    union { UNSG32 u32Gbl_clkSelect3;
            struct w32Gbl_clkSelect3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ClkSwitch_sysPLLSWBypass(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ClkSwitch_sysPLLSWBypass(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ClkSwitch_sysPLLSWBypass(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_sysPLLSWBypass(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ClkSwitch_memPLLSWBypass(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ClkSwitch_memPLLSWBypass(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ClkSwitch_memPLLSWBypass(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_memPLLSWBypass(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ClkSwitch_cpu1PLLSWBypass(r32)          _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ClkSwitch_cpu1PLLSWBypass(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ClkSwitch_cpu1PLLSWBypass(r16)          _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ClkSwitch_cpu1PLLSWBypass(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ClkSwitch_sysClkPllSwitch(r32)          _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ClkSwitch_sysClkPllSwitch(r32,v)        _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ClkSwitch_sysClkPllSwitch(r16)          _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ClkSwitch_sysClkPllSwitch(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ClkSwitch_sysClkSwitch(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ClkSwitch_sysClkSwitch(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ClkSwitch_sysClkSwitch(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ClkSwitch_sysClkSwitch(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ClkSwitch_sysClkD3Switch(r32)           _BFGET_(r32, 5, 5)
    #define   SET32Gbl_ClkSwitch_sysClkD3Switch(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_ClkSwitch_sysClkD3Switch(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ClkSwitch_sysClkD3Switch(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ClkSwitch_cpu0ClkPllSwitch(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_ClkSwitch_cpu0ClkPllSwitch(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_ClkSwitch_cpu0ClkPllSwitch(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ClkSwitch_cpu0ClkPllSwitch(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ClkSwitch_cpu0ClkSwitch(r32)            _BFGET_(r32, 7, 7)
    #define   SET32Gbl_ClkSwitch_cpu0ClkSwitch(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_ClkSwitch_cpu0ClkSwitch(r16)            _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ClkSwitch_cpu0ClkSwitch(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ClkSwitch_cpu0ClkD3Switch(r32)          _BFGET_(r32, 8, 8)
    #define   SET32Gbl_ClkSwitch_cpu0ClkD3Switch(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_ClkSwitch_cpu0ClkD3Switch(r16)          _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ClkSwitch_cpu0ClkD3Switch(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ClkSwitch_cpu1ClkPllSwitch(r32)         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_ClkSwitch_cpu1ClkPllSwitch(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_ClkSwitch_cpu1ClkPllSwitch(r16)         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ClkSwitch_cpu1ClkPllSwitch(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ClkSwitch_cpu1ClkSwitch(r32)            _BFGET_(r32,10,10)
    #define   SET32Gbl_ClkSwitch_cpu1ClkSwitch(r32,v)          _BFSET_(r32,10,10,v)
    #define   GET16Gbl_ClkSwitch_cpu1ClkSwitch(r16)            _BFGET_(r16,10,10)
    #define   SET16Gbl_ClkSwitch_cpu1ClkSwitch(r16,v)          _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ClkSwitch_cpu1ClkD3Switch(r32)          _BFGET_(r32,11,11)
    #define   SET32Gbl_ClkSwitch_cpu1ClkD3Switch(r32,v)        _BFSET_(r32,11,11,v)
    #define   GET16Gbl_ClkSwitch_cpu1ClkD3Switch(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_ClkSwitch_cpu1ClkD3Switch(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ClkSwitch_drmFigoClkPllSwitch(r32)      _BFGET_(r32,12,12)
    #define   SET32Gbl_ClkSwitch_drmFigoClkPllSwitch(r32,v)    _BFSET_(r32,12,12,v)
    #define   GET16Gbl_ClkSwitch_drmFigoClkPllSwitch(r16)      _BFGET_(r16,12,12)
    #define   SET16Gbl_ClkSwitch_drmFigoClkPllSwitch(r16,v)    _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ClkSwitch_drmFigoClkSwitch(r32)         _BFGET_(r32,13,13)
    #define   SET32Gbl_ClkSwitch_drmFigoClkSwitch(r32,v)       _BFSET_(r32,13,13,v)
    #define   GET16Gbl_ClkSwitch_drmFigoClkSwitch(r16)         _BFGET_(r16,13,13)
    #define   SET16Gbl_ClkSwitch_drmFigoClkSwitch(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ClkSwitch_drmFigoClkD3Switch(r32)       _BFGET_(r32,14,14)
    #define   SET32Gbl_ClkSwitch_drmFigoClkD3Switch(r32,v)     _BFSET_(r32,14,14,v)
    #define   GET16Gbl_ClkSwitch_drmFigoClkD3Switch(r16)       _BFGET_(r16,14,14)
    #define   SET16Gbl_ClkSwitch_drmFigoClkD3Switch(r16,v)     _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ClkSwitch_cfgClkPllSwitch(r32)          _BFGET_(r32,15,15)
    #define   SET32Gbl_ClkSwitch_cfgClkPllSwitch(r32,v)        _BFSET_(r32,15,15,v)
    #define   GET16Gbl_ClkSwitch_cfgClkPllSwitch(r16)          _BFGET_(r16,15,15)
    #define   SET16Gbl_ClkSwitch_cfgClkPllSwitch(r16,v)        _BFSET_(r16,15,15,v)

    #define   GET32Gbl_ClkSwitch_cfgClkSwitch(r32)             _BFGET_(r32,16,16)
    #define   SET32Gbl_ClkSwitch_cfgClkSwitch(r32,v)           _BFSET_(r32,16,16,v)
    #define   GET16Gbl_ClkSwitch_cfgClkSwitch(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_cfgClkSwitch(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ClkSwitch_cfgClkD3Switch(r32)           _BFGET_(r32,17,17)
    #define   SET32Gbl_ClkSwitch_cfgClkD3Switch(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16Gbl_ClkSwitch_cfgClkD3Switch(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_cfgClkD3Switch(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ClkSwitch_gfxClkPllSwitch(r32)          _BFGET_(r32,18,18)
    #define   SET32Gbl_ClkSwitch_gfxClkPllSwitch(r32,v)        _BFSET_(r32,18,18,v)
    #define   GET16Gbl_ClkSwitch_gfxClkPllSwitch(r16)          _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ClkSwitch_gfxClkPllSwitch(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ClkSwitch_gfxClkSwitch(r32)             _BFGET_(r32,19,19)
    #define   SET32Gbl_ClkSwitch_gfxClkSwitch(r32,v)           _BFSET_(r32,19,19,v)
    #define   GET16Gbl_ClkSwitch_gfxClkSwitch(r16)             _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ClkSwitch_gfxClkSwitch(r16,v)           _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ClkSwitch_gfxClkD3Switch(r32)           _BFGET_(r32,20,20)
    #define   SET32Gbl_ClkSwitch_gfxClkD3Switch(r32,v)         _BFSET_(r32,20,20,v)
    #define   GET16Gbl_ClkSwitch_gfxClkD3Switch(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ClkSwitch_gfxClkD3Switch(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ClkSwitch_zspClkPllSwitch(r32)          _BFGET_(r32,21,21)
    #define   SET32Gbl_ClkSwitch_zspClkPllSwitch(r32,v)        _BFSET_(r32,21,21,v)
    #define   GET16Gbl_ClkSwitch_zspClkPllSwitch(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ClkSwitch_zspClkPllSwitch(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ClkSwitch_zspClkSwitch(r32)             _BFGET_(r32,22,22)
    #define   SET32Gbl_ClkSwitch_zspClkSwitch(r32,v)           _BFSET_(r32,22,22,v)
    #define   GET16Gbl_ClkSwitch_zspClkSwitch(r16)             _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ClkSwitch_zspClkSwitch(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ClkSwitch_zspClkD3Switch(r32)           _BFGET_(r32,23,23)
    #define   SET32Gbl_ClkSwitch_zspClkD3Switch(r32,v)         _BFSET_(r32,23,23,v)
    #define   GET16Gbl_ClkSwitch_zspClkD3Switch(r16)           _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ClkSwitch_zspClkD3Switch(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ClkSwitch_perifClkPllSwitch(r32)        _BFGET_(r32,24,24)
    #define   SET32Gbl_ClkSwitch_perifClkPllSwitch(r32,v)      _BFSET_(r32,24,24,v)
    #define   GET16Gbl_ClkSwitch_perifClkPllSwitch(r16)        _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ClkSwitch_perifClkPllSwitch(r16,v)      _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ClkSwitch_perifClkSwitch(r32)           _BFGET_(r32,25,25)
    #define   SET32Gbl_ClkSwitch_perifClkSwitch(r32,v)         _BFSET_(r32,25,25,v)
    #define   GET16Gbl_ClkSwitch_perifClkSwitch(r16)           _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ClkSwitch_perifClkSwitch(r16,v)         _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ClkSwitch_perifClkD3Switch(r32)         _BFGET_(r32,26,26)
    #define   SET32Gbl_ClkSwitch_perifClkD3Switch(r32,v)       _BFSET_(r32,26,26,v)
    #define   GET16Gbl_ClkSwitch_perifClkD3Switch(r16)         _BFGET_(r16,10,10)
    #define   SET16Gbl_ClkSwitch_perifClkD3Switch(r16,v)       _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ClkSwitch_pCubeClkPllSwitch(r32)        _BFGET_(r32,27,27)
    #define   SET32Gbl_ClkSwitch_pCubeClkPllSwitch(r32,v)      _BFSET_(r32,27,27,v)
    #define   GET16Gbl_ClkSwitch_pCubeClkPllSwitch(r16)        _BFGET_(r16,11,11)
    #define   SET16Gbl_ClkSwitch_pCubeClkPllSwitch(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ClkSwitch_pCubeClkSwitch(r32)           _BFGET_(r32,28,28)
    #define   SET32Gbl_ClkSwitch_pCubeClkSwitch(r32,v)         _BFSET_(r32,28,28,v)
    #define   GET16Gbl_ClkSwitch_pCubeClkSwitch(r16)           _BFGET_(r16,12,12)
    #define   SET16Gbl_ClkSwitch_pCubeClkSwitch(r16,v)         _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ClkSwitch_pCubeClkD3Switch(r32)         _BFGET_(r32,29,29)
    #define   SET32Gbl_ClkSwitch_pCubeClkD3Switch(r32,v)       _BFSET_(r32,29,29,v)
    #define   GET16Gbl_ClkSwitch_pCubeClkD3Switch(r16)         _BFGET_(r16,13,13)
    #define   SET16Gbl_ClkSwitch_pCubeClkD3Switch(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ClkSwitch_vScopeClkPllSwitch(r32)       _BFGET_(r32,30,30)
    #define   SET32Gbl_ClkSwitch_vScopeClkPllSwitch(r32,v)     _BFSET_(r32,30,30,v)
    #define   GET16Gbl_ClkSwitch_vScopeClkPllSwitch(r16)       _BFGET_(r16,14,14)
    #define   SET16Gbl_ClkSwitch_vScopeClkPllSwitch(r16,v)     _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ClkSwitch_vScopeClkSwitch(r32)          _BFGET_(r32,31,31)
    #define   SET32Gbl_ClkSwitch_vScopeClkSwitch(r32,v)        _BFSET_(r32,31,31,v)
    #define   GET16Gbl_ClkSwitch_vScopeClkSwitch(r16)          _BFGET_(r16,15,15)
    #define   SET16Gbl_ClkSwitch_vScopeClkSwitch(r16,v)        _BFSET_(r16,15,15,v)

    #define     w32Gbl_ClkSwitch                               {\
            UNSG32 uClkSwitch_sysPLLSWBypass                   :  1;\
            UNSG32 uClkSwitch_memPLLSWBypass                   :  1;\
            UNSG32 uClkSwitch_cpu1PLLSWBypass                  :  1;\
            UNSG32 uClkSwitch_sysClkPllSwitch                  :  1;\
            UNSG32 uClkSwitch_sysClkSwitch                     :  1;\
            UNSG32 uClkSwitch_sysClkD3Switch                   :  1;\
            UNSG32 uClkSwitch_cpu0ClkPllSwitch                 :  1;\
            UNSG32 uClkSwitch_cpu0ClkSwitch                    :  1;\
            UNSG32 uClkSwitch_cpu0ClkD3Switch                  :  1;\
            UNSG32 uClkSwitch_cpu1ClkPllSwitch                 :  1;\
            UNSG32 uClkSwitch_cpu1ClkSwitch                    :  1;\
            UNSG32 uClkSwitch_cpu1ClkD3Switch                  :  1;\
            UNSG32 uClkSwitch_drmFigoClkPllSwitch              :  1;\
            UNSG32 uClkSwitch_drmFigoClkSwitch                 :  1;\
            UNSG32 uClkSwitch_drmFigoClkD3Switch               :  1;\
            UNSG32 uClkSwitch_cfgClkPllSwitch                  :  1;\
            UNSG32 uClkSwitch_cfgClkSwitch                     :  1;\
            UNSG32 uClkSwitch_cfgClkD3Switch                   :  1;\
            UNSG32 uClkSwitch_gfxClkPllSwitch                  :  1;\
            UNSG32 uClkSwitch_gfxClkSwitch                     :  1;\
            UNSG32 uClkSwitch_gfxClkD3Switch                   :  1;\
            UNSG32 uClkSwitch_zspClkPllSwitch                  :  1;\
            UNSG32 uClkSwitch_zspClkSwitch                     :  1;\
            UNSG32 uClkSwitch_zspClkD3Switch                   :  1;\
            UNSG32 uClkSwitch_perifClkPllSwitch                :  1;\
            UNSG32 uClkSwitch_perifClkSwitch                   :  1;\
            UNSG32 uClkSwitch_perifClkD3Switch                 :  1;\
            UNSG32 uClkSwitch_pCubeClkPllSwitch                :  1;\
            UNSG32 uClkSwitch_pCubeClkSwitch                   :  1;\
            UNSG32 uClkSwitch_pCubeClkD3Switch                 :  1;\
            UNSG32 uClkSwitch_vScopeClkPllSwitch               :  1;\
            UNSG32 uClkSwitch_vScopeClkSwitch                  :  1;\
          }
    union { UNSG32 u32Gbl_ClkSwitch;
            struct w32Gbl_ClkSwitch;
          };
    #define   GET32Gbl_ClkSwitch_vScopeClkD3Switch(r32)        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ClkSwitch_vScopeClkD3Switch(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ClkSwitch_vScopeClkD3Switch(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_vScopeClkD3Switch(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ClkSwitch_nfcEccClkPllSwitch(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ClkSwitch_nfcEccClkPllSwitch(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ClkSwitch_nfcEccClkPllSwitch(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_nfcEccClkPllSwitch(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ClkSwitch_nfcEccClkSwitch(r32)          _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ClkSwitch_nfcEccClkSwitch(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ClkSwitch_nfcEccClkSwitch(r16)          _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ClkSwitch_nfcEccClkSwitch(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ClkSwitch_nfcEccClkD3Switch(r32)        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ClkSwitch_nfcEccClkD3Switch(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ClkSwitch_nfcEccClkD3Switch(r16)        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ClkSwitch_nfcEccClkD3Switch(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ClkSwitch_vppSysClkPllSwitch(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ClkSwitch_vppSysClkPllSwitch(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ClkSwitch_vppSysClkPllSwitch(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ClkSwitch_vppSysClkPllSwitch(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ClkSwitch_vppSysClkSwitch(r32)          _BFGET_(r32, 5, 5)
    #define   SET32Gbl_ClkSwitch_vppSysClkSwitch(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_ClkSwitch_vppSysClkSwitch(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ClkSwitch_vppSysClkSwitch(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ClkSwitch_vppSysClkD3Switch(r32)        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_ClkSwitch_vppSysClkD3Switch(r32,v)      _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_ClkSwitch_vppSysClkD3Switch(r16)        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ClkSwitch_vppSysClkD3Switch(r16,v)      _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ClkSwitch_appClkPllSwitch(r32)          _BFGET_(r32, 7, 7)
    #define   SET32Gbl_ClkSwitch_appClkPllSwitch(r32,v)        _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_ClkSwitch_appClkPllSwitch(r16)          _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ClkSwitch_appClkPllSwitch(r16,v)        _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ClkSwitch_appClkSwitch(r32)             _BFGET_(r32, 8, 8)
    #define   SET32Gbl_ClkSwitch_appClkSwitch(r32,v)           _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_ClkSwitch_appClkSwitch(r16)             _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ClkSwitch_appClkSwitch(r16,v)           _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ClkSwitch_appClkD3Switch(r32)           _BFGET_(r32, 9, 9)
    #define   SET32Gbl_ClkSwitch_appClkD3Switch(r32,v)         _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_ClkSwitch_appClkD3Switch(r16)           _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ClkSwitch_appClkD3Switch(r16,v)         _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ClkSwitch_audio0ClkSwitch(r32)          _BFGET_(r32,10,10)
    #define   SET32Gbl_ClkSwitch_audio0ClkSwitch(r32,v)        _BFSET_(r32,10,10,v)
    #define   GET16Gbl_ClkSwitch_audio0ClkSwitch(r16)          _BFGET_(r16,10,10)
    #define   SET16Gbl_ClkSwitch_audio0ClkSwitch(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ClkSwitch_audio0ClkD3Switch(r32)        _BFGET_(r32,11,11)
    #define   SET32Gbl_ClkSwitch_audio0ClkD3Switch(r32,v)      _BFSET_(r32,11,11,v)
    #define   GET16Gbl_ClkSwitch_audio0ClkD3Switch(r16)        _BFGET_(r16,11,11)
    #define   SET16Gbl_ClkSwitch_audio0ClkD3Switch(r16,v)      _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ClkSwitch_audio1ClkSwitch(r32)          _BFGET_(r32,12,12)
    #define   SET32Gbl_ClkSwitch_audio1ClkSwitch(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16Gbl_ClkSwitch_audio1ClkSwitch(r16)          _BFGET_(r16,12,12)
    #define   SET16Gbl_ClkSwitch_audio1ClkSwitch(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ClkSwitch_audio1ClkD3Switch(r32)        _BFGET_(r32,13,13)
    #define   SET32Gbl_ClkSwitch_audio1ClkD3Switch(r32,v)      _BFSET_(r32,13,13,v)
    #define   GET16Gbl_ClkSwitch_audio1ClkD3Switch(r16)        _BFGET_(r16,13,13)
    #define   SET16Gbl_ClkSwitch_audio1ClkD3Switch(r16,v)      _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ClkSwitch_audio2ClkSwitch(r32)          _BFGET_(r32,14,14)
    #define   SET32Gbl_ClkSwitch_audio2ClkSwitch(r32,v)        _BFSET_(r32,14,14,v)
    #define   GET16Gbl_ClkSwitch_audio2ClkSwitch(r16)          _BFGET_(r16,14,14)
    #define   SET16Gbl_ClkSwitch_audio2ClkSwitch(r16,v)        _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ClkSwitch_audio2ClkD3Switch(r32)        _BFGET_(r32,15,15)
    #define   SET32Gbl_ClkSwitch_audio2ClkD3Switch(r32,v)      _BFSET_(r32,15,15,v)
    #define   GET16Gbl_ClkSwitch_audio2ClkD3Switch(r16)        _BFGET_(r16,15,15)
    #define   SET16Gbl_ClkSwitch_audio2ClkD3Switch(r16,v)      _BFSET_(r16,15,15,v)

    #define   GET32Gbl_ClkSwitch_audio3ClkSwitch(r32)          _BFGET_(r32,16,16)
    #define   SET32Gbl_ClkSwitch_audio3ClkSwitch(r32,v)        _BFSET_(r32,16,16,v)
    #define   GET16Gbl_ClkSwitch_audio3ClkSwitch(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_audio3ClkSwitch(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ClkSwitch_audio3ClkD3Switch(r32)        _BFGET_(r32,17,17)
    #define   SET32Gbl_ClkSwitch_audio3ClkD3Switch(r32,v)      _BFSET_(r32,17,17,v)
    #define   GET16Gbl_ClkSwitch_audio3ClkD3Switch(r16)        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_audio3ClkD3Switch(r16,v)      _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_ClkSwitch1                              {\
            UNSG32 uClkSwitch_vScopeClkD3Switch                :  1;\
            UNSG32 uClkSwitch_nfcEccClkPllSwitch               :  1;\
            UNSG32 uClkSwitch_nfcEccClkSwitch                  :  1;\
            UNSG32 uClkSwitch_nfcEccClkD3Switch                :  1;\
            UNSG32 uClkSwitch_vppSysClkPllSwitch               :  1;\
            UNSG32 uClkSwitch_vppSysClkSwitch                  :  1;\
            UNSG32 uClkSwitch_vppSysClkD3Switch                :  1;\
            UNSG32 uClkSwitch_appClkPllSwitch                  :  1;\
            UNSG32 uClkSwitch_appClkSwitch                     :  1;\
            UNSG32 uClkSwitch_appClkD3Switch                   :  1;\
            UNSG32 uClkSwitch_audio0ClkSwitch                  :  1;\
            UNSG32 uClkSwitch_audio0ClkD3Switch                :  1;\
            UNSG32 uClkSwitch_audio1ClkSwitch                  :  1;\
            UNSG32 uClkSwitch_audio1ClkD3Switch                :  1;\
            UNSG32 uClkSwitch_audio2ClkSwitch                  :  1;\
            UNSG32 uClkSwitch_audio2ClkD3Switch                :  1;\
            UNSG32 uClkSwitch_audio3ClkSwitch                  :  1;\
            UNSG32 uClkSwitch_audio3ClkD3Switch                :  1;\
            UNSG32 RSVDx168_b18                                : 14;\
          }
    union { UNSG32 u32Gbl_ClkSwitch1;
            struct w32Gbl_ClkSwitch1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PadSelect_GBL_PDB(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PadSelect_GBL_PDB(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_PadSelect_GBL_PDB(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PadSelect_GBL_PDB(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_PadSelect_NAND_PDB(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PadSelect_NAND_PDB(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_PadSelect_NAND_PDB(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PadSelect_NAND_PDB(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_PadSelect_SD0_PDB(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PadSelect_SD0_PDB(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_PadSelect_SD0_PDB(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PadSelect_SD0_PDB(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_PadSelect_SD1_PDB(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_PadSelect_SD1_PDB(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_PadSelect_SD1_PDB(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PadSelect_SD1_PDB(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_PadSelect_SPI_PDB(r32)                  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_PadSelect_SPI_PDB(r32,v)                _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_PadSelect_SPI_PDB(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PadSelect_SPI_PDB(r16,v)                _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_PadSelect_CLK0_V18EN(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_PadSelect_CLK0_V18EN(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_PadSelect_CLK0_V18EN(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PadSelect_CLK0_V18EN(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_PadSelect_DVIO0_V18EN(r32)              _BFGET_(r32, 6, 6)
    #define   SET32Gbl_PadSelect_DVIO0_V18EN(r32,v)            _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_PadSelect_DVIO0_V18EN(r16)              _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PadSelect_DVIO0_V18EN(r16,v)            _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_PadSelect_GBL_V18EN(r32)                _BFGET_(r32, 7, 7)
    #define   SET32Gbl_PadSelect_GBL_V18EN(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_PadSelect_GBL_V18EN(r16)                _BFGET_(r16, 7, 7)
    #define   SET16Gbl_PadSelect_GBL_V18EN(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_PadSelect_SPI0_V18EN(r32)               _BFGET_(r32, 8, 8)
    #define   SET32Gbl_PadSelect_SPI0_V18EN(r32,v)             _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_PadSelect_SPI0_V18EN(r16)               _BFGET_(r16, 8, 8)
    #define   SET16Gbl_PadSelect_SPI0_V18EN(r16,v)             _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_PadSelect_SD0_V18EN(r32)                _BFGET_(r32, 9, 9)
    #define   SET32Gbl_PadSelect_SD0_V18EN(r32,v)              _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_PadSelect_SD0_V18EN(r16)                _BFGET_(r16, 9, 9)
    #define   SET16Gbl_PadSelect_SD0_V18EN(r16,v)              _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_PadSelect_SD10_V18EN(r32)               _BFGET_(r32,10,10)
    #define   SET32Gbl_PadSelect_SD10_V18EN(r32,v)             _BFSET_(r32,10,10,v)
    #define   GET16Gbl_PadSelect_SD10_V18EN(r16)               _BFGET_(r16,10,10)
    #define   SET16Gbl_PadSelect_SD10_V18EN(r16,v)             _BFSET_(r16,10,10,v)

    #define   GET32Gbl_PadSelect_CLK0_V25EN(r32)               _BFGET_(r32,11,11)
    #define   SET32Gbl_PadSelect_CLK0_V25EN(r32,v)             _BFSET_(r32,11,11,v)
    #define   GET16Gbl_PadSelect_CLK0_V25EN(r16)               _BFGET_(r16,11,11)
    #define   SET16Gbl_PadSelect_CLK0_V25EN(r16,v)             _BFSET_(r16,11,11,v)

    #define   GET32Gbl_PadSelect_DVIO0_V25EN(r32)              _BFGET_(r32,12,12)
    #define   SET32Gbl_PadSelect_DVIO0_V25EN(r32,v)            _BFSET_(r32,12,12,v)
    #define   GET16Gbl_PadSelect_DVIO0_V25EN(r16)              _BFGET_(r16,12,12)
    #define   SET16Gbl_PadSelect_DVIO0_V25EN(r16,v)            _BFSET_(r16,12,12,v)

    #define   GET32Gbl_PadSelect_TS0_V25EN(r32)                _BFGET_(r32,13,13)
    #define   SET32Gbl_PadSelect_TS0_V25EN(r32,v)              _BFSET_(r32,13,13,v)
    #define   GET16Gbl_PadSelect_TS0_V25EN(r16)                _BFGET_(r16,13,13)
    #define   SET16Gbl_PadSelect_TS0_V25EN(r16,v)              _BFSET_(r16,13,13,v)

    #define   GET32Gbl_PadSelect_SPI0_V25EN(r32)               _BFGET_(r32,14,14)
    #define   SET32Gbl_PadSelect_SPI0_V25EN(r32,v)             _BFSET_(r32,14,14,v)
    #define   GET16Gbl_PadSelect_SPI0_V25EN(r16)               _BFGET_(r16,14,14)
    #define   SET16Gbl_PadSelect_SPI0_V25EN(r16,v)             _BFSET_(r16,14,14,v)

    #define   GET32Gbl_PadSelect_U6_V25EN(r32)                 _BFGET_(r32,15,15)
    #define   SET32Gbl_PadSelect_U6_V25EN(r32,v)               _BFSET_(r32,15,15,v)
    #define   GET16Gbl_PadSelect_U6_V25EN(r16)                 _BFGET_(r16,15,15)
    #define   SET16Gbl_PadSelect_U6_V25EN(r16,v)               _BFSET_(r16,15,15,v)

    #define   GET32Gbl_PadSelect_U7_V25EN(r32)                 _BFGET_(r32,16,16)
    #define   SET32Gbl_PadSelect_U7_V25EN(r32,v)               _BFSET_(r32,16,16,v)
    #define   GET16Gbl_PadSelect_U7_V25EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PadSelect_U7_V25EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_PadSelect_U8_V25EN(r32)                 _BFGET_(r32,17,17)
    #define   SET32Gbl_PadSelect_U8_V25EN(r32,v)               _BFSET_(r32,17,17,v)
    #define   GET16Gbl_PadSelect_U8_V25EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PadSelect_U8_V25EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_PadSelect_W14_V25EN(r32)                _BFGET_(r32,18,18)
    #define   SET32Gbl_PadSelect_W14_V25EN(r32,v)              _BFSET_(r32,18,18,v)
    #define   GET16Gbl_PadSelect_W14_V25EN(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PadSelect_W14_V25EN(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_PadSelect_DVU0_V25EN(r32)               _BFGET_(r32,19,19)
    #define   SET32Gbl_PadSelect_DVU0_V25EN(r32,v)             _BFSET_(r32,19,19,v)
    #define   GET16Gbl_PadSelect_DVU0_V25EN(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_PadSelect_DVU0_V25EN(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_PadSelect_GBL_V25EN(r32)                _BFGET_(r32,20,20)
    #define   SET32Gbl_PadSelect_GBL_V25EN(r32,v)              _BFSET_(r32,20,20,v)
    #define   GET16Gbl_PadSelect_GBL_V25EN(r16)                _BFGET_(r16, 4, 4)
    #define   SET16Gbl_PadSelect_GBL_V25EN(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_PadSelect_SD0_V25EN(r32)                _BFGET_(r32,21,21)
    #define   SET32Gbl_PadSelect_SD0_V25EN(r32,v)              _BFSET_(r32,21,21,v)
    #define   GET16Gbl_PadSelect_SD0_V25EN(r16)                _BFGET_(r16, 5, 5)
    #define   SET16Gbl_PadSelect_SD0_V25EN(r16,v)              _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_PadSelect_DVIO_OEN(r32)                 _BFGET_(r32,22,22)
    #define   SET32Gbl_PadSelect_DVIO_OEN(r32,v)               _BFSET_(r32,22,22,v)
    #define   GET16Gbl_PadSelect_DVIO_OEN(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_PadSelect_DVIO_OEN(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_PadSelect_CLK0_ZN(r32)                  _BFGET_(r32,25,23)
    #define   SET32Gbl_PadSelect_CLK0_ZN(r32,v)                _BFSET_(r32,25,23,v)
    #define   GET16Gbl_PadSelect_CLK0_ZN(r16)                  _BFGET_(r16, 9, 7)
    #define   SET16Gbl_PadSelect_CLK0_ZN(r16,v)                _BFSET_(r16, 9, 7,v)

    #define   GET32Gbl_PadSelect_CLK0_ZP(r32)                  _BFGET_(r32,28,26)
    #define   SET32Gbl_PadSelect_CLK0_ZP(r32,v)                _BFSET_(r32,28,26,v)
    #define   GET16Gbl_PadSelect_CLK0_ZP(r16)                  _BFGET_(r16,12,10)
    #define   SET16Gbl_PadSelect_CLK0_ZP(r16,v)                _BFSET_(r16,12,10,v)

    #define   GET32Gbl_PadSelect_DVIO0_ZN(r32)                 _BFGET_(r32,31,29)
    #define   SET32Gbl_PadSelect_DVIO0_ZN(r32,v)               _BFSET_(r32,31,29,v)
    #define   GET16Gbl_PadSelect_DVIO0_ZN(r16)                 _BFGET_(r16,15,13)
    #define   SET16Gbl_PadSelect_DVIO0_ZN(r16,v)               _BFSET_(r16,15,13,v)

    #define     w32Gbl_PadSelect                               {\
            UNSG32 uPadSelect_GBL_PDB                          :  1;\
            UNSG32 uPadSelect_NAND_PDB                         :  1;\
            UNSG32 uPadSelect_SD0_PDB                          :  1;\
            UNSG32 uPadSelect_SD1_PDB                          :  1;\
            UNSG32 uPadSelect_SPI_PDB                          :  1;\
            UNSG32 uPadSelect_CLK0_V18EN                       :  1;\
            UNSG32 uPadSelect_DVIO0_V18EN                      :  1;\
            UNSG32 uPadSelect_GBL_V18EN                        :  1;\
            UNSG32 uPadSelect_SPI0_V18EN                       :  1;\
            UNSG32 uPadSelect_SD0_V18EN                        :  1;\
            UNSG32 uPadSelect_SD10_V18EN                       :  1;\
            UNSG32 uPadSelect_CLK0_V25EN                       :  1;\
            UNSG32 uPadSelect_DVIO0_V25EN                      :  1;\
            UNSG32 uPadSelect_TS0_V25EN                        :  1;\
            UNSG32 uPadSelect_SPI0_V25EN                       :  1;\
            UNSG32 uPadSelect_U6_V25EN                         :  1;\
            UNSG32 uPadSelect_U7_V25EN                         :  1;\
            UNSG32 uPadSelect_U8_V25EN                         :  1;\
            UNSG32 uPadSelect_W14_V25EN                        :  1;\
            UNSG32 uPadSelect_DVU0_V25EN                       :  1;\
            UNSG32 uPadSelect_GBL_V25EN                        :  1;\
            UNSG32 uPadSelect_SD0_V25EN                        :  1;\
            UNSG32 uPadSelect_DVIO_OEN                         :  1;\
            UNSG32 uPadSelect_CLK0_ZN                          :  3;\
            UNSG32 uPadSelect_CLK0_ZP                          :  3;\
            UNSG32 uPadSelect_DVIO0_ZN                         :  3;\
          }
    union { UNSG32 u32Gbl_PadSelect;
            struct w32Gbl_PadSelect;
          };
    #define   GET32Gbl_PadSelect_DVIO0_ZP(r32)                 _BFGET_(r32, 2, 0)
    #define   SET32Gbl_PadSelect_DVIO0_ZP(r32,v)               _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_PadSelect_DVIO0_ZP(r16)                 _BFGET_(r16, 2, 0)
    #define   SET16Gbl_PadSelect_DVIO0_ZP(r16,v)               _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_PadSelect_ND0_ZN(r32)                   _BFGET_(r32, 6, 3)
    #define   SET32Gbl_PadSelect_ND0_ZN(r32,v)                 _BFSET_(r32, 6, 3,v)
    #define   GET16Gbl_PadSelect_ND0_ZN(r16)                   _BFGET_(r16, 6, 3)
    #define   SET16Gbl_PadSelect_ND0_ZN(r16,v)                 _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_PadSelect_ND0_ZP(r32)                   _BFGET_(r32,10, 7)
    #define   SET32Gbl_PadSelect_ND0_ZP(r32,v)                 _BFSET_(r32,10, 7,v)
    #define   GET16Gbl_PadSelect_ND0_ZP(r16)                   _BFGET_(r16,10, 7)
    #define   SET16Gbl_PadSelect_ND0_ZP(r16,v)                 _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_PadSelect_GBL_ZN(r32)                   _BFGET_(r32,14,11)
    #define   SET32Gbl_PadSelect_GBL_ZN(r32,v)                 _BFSET_(r32,14,11,v)
    #define   GET16Gbl_PadSelect_GBL_ZN(r16)                   _BFGET_(r16,14,11)
    #define   SET16Gbl_PadSelect_GBL_ZN(r16,v)                 _BFSET_(r16,14,11,v)

    #define   GET32Gbl_PadSelect_GBL_ZP(r32)                   _BFGET_(r32,18,15)
    #define   SET32Gbl_PadSelect_GBL_ZP(r32,v)                 _BFSET_(r32,18,15,v)

    #define   GET32Gbl_PadSelect_SPI0_ZN(r32)                  _BFGET_(r32,22,19)
    #define   SET32Gbl_PadSelect_SPI0_ZN(r32,v)                _BFSET_(r32,22,19,v)
    #define   GET16Gbl_PadSelect_SPI0_ZN(r16)                  _BFGET_(r16, 6, 3)
    #define   SET16Gbl_PadSelect_SPI0_ZN(r16,v)                _BFSET_(r16, 6, 3,v)

    #define   GET32Gbl_PadSelect_SPI0_ZP(r32)                  _BFGET_(r32,26,23)
    #define   SET32Gbl_PadSelect_SPI0_ZP(r32,v)                _BFSET_(r32,26,23,v)
    #define   GET16Gbl_PadSelect_SPI0_ZP(r16)                  _BFGET_(r16,10, 7)
    #define   SET16Gbl_PadSelect_SPI0_ZP(r16,v)                _BFSET_(r16,10, 7,v)

    #define   GET32Gbl_PadSelect_SD0_ZN(r32)                   _BFGET_(r32,30,27)
    #define   SET32Gbl_PadSelect_SD0_ZN(r32,v)                 _BFSET_(r32,30,27,v)
    #define   GET16Gbl_PadSelect_SD0_ZN(r16)                   _BFGET_(r16,14,11)
    #define   SET16Gbl_PadSelect_SD0_ZN(r16,v)                 _BFSET_(r16,14,11,v)

    #define     w32Gbl_PadSelect1                              {\
            UNSG32 uPadSelect_DVIO0_ZP                         :  3;\
            UNSG32 uPadSelect_ND0_ZN                           :  4;\
            UNSG32 uPadSelect_ND0_ZP                           :  4;\
            UNSG32 uPadSelect_GBL_ZN                           :  4;\
            UNSG32 uPadSelect_GBL_ZP                           :  4;\
            UNSG32 uPadSelect_SPI0_ZN                          :  4;\
            UNSG32 uPadSelect_SPI0_ZP                          :  4;\
            UNSG32 uPadSelect_SD0_ZN                           :  4;\
            UNSG32 RSVDx170_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_PadSelect1;
            struct w32Gbl_PadSelect1;
          };
    #define   GET32Gbl_PadSelect_SD0_ZP(r32)                   _BFGET_(r32, 3, 0)
    #define   SET32Gbl_PadSelect_SD0_ZP(r32,v)                 _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_PadSelect_SD0_ZP(r16)                   _BFGET_(r16, 3, 0)
    #define   SET16Gbl_PadSelect_SD0_ZP(r16,v)                 _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_PadSelect_SD10_ZN(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32Gbl_PadSelect_SD10_ZN(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16Gbl_PadSelect_SD10_ZN(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16Gbl_PadSelect_SD10_ZN(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32Gbl_PadSelect_SD10_ZP(r32)                  _BFGET_(r32,11, 8)
    #define   SET32Gbl_PadSelect_SD10_ZP(r32,v)                _BFSET_(r32,11, 8,v)
    #define   GET16Gbl_PadSelect_SD10_ZP(r16)                  _BFGET_(r16,11, 8)
    #define   SET16Gbl_PadSelect_SD10_ZP(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32Gbl_PadSelect_DVIO_1_V18EN(r32)             _BFGET_(r32,12,12)
    #define   SET32Gbl_PadSelect_DVIO_1_V18EN(r32,v)           _BFSET_(r32,12,12,v)
    #define   GET16Gbl_PadSelect_DVIO_1_V18EN(r16)             _BFGET_(r16,12,12)
    #define   SET16Gbl_PadSelect_DVIO_1_V18EN(r16,v)           _BFSET_(r16,12,12,v)

    #define   GET32Gbl_PadSelect_I2S_V18EN(r32)                _BFGET_(r32,13,13)
    #define   SET32Gbl_PadSelect_I2S_V18EN(r32,v)              _BFSET_(r32,13,13,v)
    #define   GET16Gbl_PadSelect_I2S_V18EN(r16)                _BFGET_(r16,13,13)
    #define   SET16Gbl_PadSelect_I2S_V18EN(r16,v)              _BFSET_(r16,13,13,v)

    #define   GET32Gbl_PadSelect_DVIO_1_V25EN(r32)             _BFGET_(r32,14,14)
    #define   SET32Gbl_PadSelect_DVIO_1_V25EN(r32,v)           _BFSET_(r32,14,14,v)
    #define   GET16Gbl_PadSelect_DVIO_1_V25EN(r16)             _BFGET_(r16,14,14)
    #define   SET16Gbl_PadSelect_DVIO_1_V25EN(r16,v)           _BFSET_(r16,14,14,v)

    #define   GET32Gbl_PadSelect_I2S_V25EN(r32)                _BFGET_(r32,15,15)
    #define   SET32Gbl_PadSelect_I2S_V25EN(r32,v)              _BFSET_(r32,15,15,v)
    #define   GET16Gbl_PadSelect_I2S_V25EN(r16)                _BFGET_(r16,15,15)
    #define   SET16Gbl_PadSelect_I2S_V25EN(r16,v)              _BFSET_(r16,15,15,v)

    #define   GET32Gbl_PadSelect_DVIO_1_ZN(r32)                _BFGET_(r32,18,16)
    #define   SET32Gbl_PadSelect_DVIO_1_ZN(r32,v)              _BFSET_(r32,18,16,v)
    #define   GET16Gbl_PadSelect_DVIO_1_ZN(r16)                _BFGET_(r16, 2, 0)
    #define   SET16Gbl_PadSelect_DVIO_1_ZN(r16,v)              _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_PadSelect_DVIO_1_ZP(r32)                _BFGET_(r32,21,19)
    #define   SET32Gbl_PadSelect_DVIO_1_ZP(r32,v)              _BFSET_(r32,21,19,v)
    #define   GET16Gbl_PadSelect_DVIO_1_ZP(r16)                _BFGET_(r16, 5, 3)
    #define   SET16Gbl_PadSelect_DVIO_1_ZP(r16,v)              _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_PadSelect_I2S_ZN(r32)                   _BFGET_(r32,24,22)
    #define   SET32Gbl_PadSelect_I2S_ZN(r32,v)                 _BFSET_(r32,24,22,v)
    #define   GET16Gbl_PadSelect_I2S_ZN(r16)                   _BFGET_(r16, 8, 6)
    #define   SET16Gbl_PadSelect_I2S_ZN(r16,v)                 _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_PadSelect_I2S_ZP(r32)                   _BFGET_(r32,27,25)
    #define   SET32Gbl_PadSelect_I2S_ZP(r32,v)                 _BFSET_(r32,27,25,v)
    #define   GET16Gbl_PadSelect_I2S_ZP(r16)                   _BFGET_(r16,11, 9)
    #define   SET16Gbl_PadSelect_I2S_ZP(r16,v)                 _BFSET_(r16,11, 9,v)

    #define     w32Gbl_PadSelect2                              {\
            UNSG32 uPadSelect_SD0_ZP                           :  4;\
            UNSG32 uPadSelect_SD10_ZN                          :  4;\
            UNSG32 uPadSelect_SD10_ZP                          :  4;\
            UNSG32 uPadSelect_DVIO_1_V18EN                     :  1;\
            UNSG32 uPadSelect_I2S_V18EN                        :  1;\
            UNSG32 uPadSelect_DVIO_1_V25EN                     :  1;\
            UNSG32 uPadSelect_I2S_V25EN                        :  1;\
            UNSG32 uPadSelect_DVIO_1_ZN                        :  3;\
            UNSG32 uPadSelect_DVIO_1_ZP                        :  3;\
            UNSG32 uPadSelect_I2S_ZN                           :  3;\
            UNSG32 uPadSelect_I2S_ZP                           :  3;\
            UNSG32 RSVDx174_b28                                :  4;\
          }
    union { UNSG32 u32Gbl_PadSelect2;
            struct w32Gbl_PadSelect2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetTrigger_chipReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetTrigger_chipReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ResetTrigger_chipReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetTrigger_chipReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetTrigger_audio0ClkReset(r32)        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetTrigger_audio0ClkReset(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ResetTrigger_audio0ClkReset(r16)        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetTrigger_audio0ClkReset(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ResetTrigger_audio1ClkReset(r32)        _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ResetTrigger_audio1ClkReset(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ResetTrigger_audio1ClkReset(r16)        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ResetTrigger_audio1ClkReset(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ResetTrigger_audio2ClkReset(r32)        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ResetTrigger_audio2ClkReset(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ResetTrigger_audio2ClkReset(r16)        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ResetTrigger_audio2ClkReset(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ResetTrigger_audio3ClkReset(r32)        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ResetTrigger_audio3ClkReset(r32,v)      _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ResetTrigger_audio3ClkReset(r16)        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ResetTrigger_audio3ClkReset(r16,v)      _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ResetTrigger_audioHdClkReset(r32)       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_ResetTrigger_audioHdClkReset(r32,v)     _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_ResetTrigger_audioHdClkReset(r16)       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ResetTrigger_audioHdClkReset(r16,v)     _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ResetTrigger_sysPllSyncReset(r32)       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_ResetTrigger_sysPllSyncReset(r32,v)     _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_ResetTrigger_sysPllSyncReset(r16)       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ResetTrigger_sysPllSyncReset(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ResetTrigger_memPllSyncReset(r32)       _BFGET_(r32, 7, 7)
    #define   SET32Gbl_ResetTrigger_memPllSyncReset(r32,v)     _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_ResetTrigger_memPllSyncReset(r16)       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ResetTrigger_memPllSyncReset(r16,v)     _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ResetTrigger_cpu1PllSyncReset(r32)      _BFGET_(r32, 8, 8)
    #define   SET32Gbl_ResetTrigger_cpu1PllSyncReset(r32,v)    _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_ResetTrigger_cpu1PllSyncReset(r16)      _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ResetTrigger_cpu1PllSyncReset(r16,v)    _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ResetTrigger_cpu0SyncReset(r32)         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_ResetTrigger_cpu0SyncReset(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_ResetTrigger_cpu0SyncReset(r16)         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ResetTrigger_cpu0SyncReset(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ResetTrigger_cpu1SyncReset(r32)         _BFGET_(r32,10,10)
    #define   SET32Gbl_ResetTrigger_cpu1SyncReset(r32,v)       _BFSET_(r32,10,10,v)
    #define   GET16Gbl_ResetTrigger_cpu1SyncReset(r16)         _BFGET_(r16,10,10)
    #define   SET16Gbl_ResetTrigger_cpu1SyncReset(r16,v)       _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ResetTrigger_socDdrSyncReset(r32)       _BFGET_(r32,11,11)
    #define   SET32Gbl_ResetTrigger_socDdrSyncReset(r32,v)     _BFSET_(r32,11,11,v)
    #define   GET16Gbl_ResetTrigger_socDdrSyncReset(r16)       _BFGET_(r16,11,11)
    #define   SET16Gbl_ResetTrigger_socDdrSyncReset(r16,v)     _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ResetTrigger_gfxSyncReset(r32)          _BFGET_(r32,12,12)
    #define   SET32Gbl_ResetTrigger_gfxSyncReset(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16Gbl_ResetTrigger_gfxSyncReset(r16)          _BFGET_(r16,12,12)
    #define   SET16Gbl_ResetTrigger_gfxSyncReset(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ResetTrigger_zspSyncReset(r32)          _BFGET_(r32,13,13)
    #define   SET32Gbl_ResetTrigger_zspSyncReset(r32,v)        _BFSET_(r32,13,13,v)
    #define   GET16Gbl_ResetTrigger_zspSyncReset(r16)          _BFGET_(r16,13,13)
    #define   SET16Gbl_ResetTrigger_zspSyncReset(r16,v)        _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ResetTrigger_avioSyncReset(r32)         _BFGET_(r32,14,14)
    #define   SET32Gbl_ResetTrigger_avioSyncReset(r32,v)       _BFSET_(r32,14,14,v)
    #define   GET16Gbl_ResetTrigger_avioSyncReset(r16)         _BFGET_(r16,14,14)
    #define   SET16Gbl_ResetTrigger_avioSyncReset(r16,v)       _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ResetTrigger_perifSyncReset(r32)        _BFGET_(r32,15,15)
    #define   SET32Gbl_ResetTrigger_perifSyncReset(r32,v)      _BFSET_(r32,15,15,v)
    #define   GET16Gbl_ResetTrigger_perifSyncReset(r16)        _BFGET_(r16,15,15)
    #define   SET16Gbl_ResetTrigger_perifSyncReset(r16,v)      _BFSET_(r16,15,15,v)

    #define   GET32Gbl_ResetTrigger_gethSyncReset(r32)         _BFGET_(r32,16,16)
    #define   SET32Gbl_ResetTrigger_gethSyncReset(r32,v)       _BFSET_(r32,16,16,v)
    #define   GET16Gbl_ResetTrigger_gethSyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetTrigger_gethSyncReset(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetTrigger_sataSyncReset(r32)         _BFGET_(r32,17,17)
    #define   SET32Gbl_ResetTrigger_sataSyncReset(r32,v)       _BFSET_(r32,17,17,v)
    #define   GET16Gbl_ResetTrigger_sataSyncReset(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetTrigger_sataSyncReset(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ResetTrigger_geth1SyncReset(r32)        _BFGET_(r32,18,18)
    #define   SET32Gbl_ResetTrigger_geth1SyncReset(r32,v)      _BFSET_(r32,18,18,v)
    #define   GET16Gbl_ResetTrigger_geth1SyncReset(r16)        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ResetTrigger_geth1SyncReset(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ResetTrigger_ahbApbSyncReset(r32)       _BFGET_(r32,19,19)
    #define   SET32Gbl_ResetTrigger_ahbApbSyncReset(r32,v)     _BFSET_(r32,19,19,v)
    #define   GET16Gbl_ResetTrigger_ahbApbSyncReset(r16)       _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ResetTrigger_ahbApbSyncReset(r16,v)     _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ResetTrigger_nanfSyncReset(r32)         _BFGET_(r32,20,20)
    #define   SET32Gbl_ResetTrigger_nanfSyncReset(r32,v)       _BFSET_(r32,20,20,v)
    #define   GET16Gbl_ResetTrigger_nanfSyncReset(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ResetTrigger_nanfSyncReset(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ResetTrigger_smemcSyncReset(r32)        _BFGET_(r32,21,21)
    #define   SET32Gbl_ResetTrigger_smemcSyncReset(r32,v)      _BFSET_(r32,21,21,v)
    #define   GET16Gbl_ResetTrigger_smemcSyncReset(r16)        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ResetTrigger_smemcSyncReset(r16,v)      _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ResetTrigger_drmSyncReset(r32)          _BFGET_(r32,22,22)
    #define   SET32Gbl_ResetTrigger_drmSyncReset(r32,v)        _BFSET_(r32,22,22,v)
    #define   GET16Gbl_ResetTrigger_drmSyncReset(r16)          _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ResetTrigger_drmSyncReset(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ResetTrigger_usb0SyncReset(r32)         _BFGET_(r32,23,23)
    #define   SET32Gbl_ResetTrigger_usb0SyncReset(r32,v)       _BFSET_(r32,23,23,v)
    #define   GET16Gbl_ResetTrigger_usb0SyncReset(r16)         _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ResetTrigger_usb0SyncReset(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ResetTrigger_usb1SyncReset(r32)         _BFGET_(r32,24,24)
    #define   SET32Gbl_ResetTrigger_usb1SyncReset(r32,v)       _BFSET_(r32,24,24,v)
    #define   GET16Gbl_ResetTrigger_usb1SyncReset(r16)         _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ResetTrigger_usb1SyncReset(r16,v)       _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ResetTrigger_pBridgeSyncReset(r32)      _BFGET_(r32,25,25)
    #define   SET32Gbl_ResetTrigger_pBridgeSyncReset(r32,v)    _BFSET_(r32,25,25,v)
    #define   GET16Gbl_ResetTrigger_pBridgeSyncReset(r16)      _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ResetTrigger_pBridgeSyncReset(r16,v)    _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ResetTrigger_vppSyncReset(r32)          _BFGET_(r32,26,26)
    #define   SET32Gbl_ResetTrigger_vppSyncReset(r32,v)        _BFSET_(r32,26,26,v)
    #define   GET16Gbl_ResetTrigger_vppSyncReset(r16)          _BFGET_(r16,10,10)
    #define   SET16Gbl_ResetTrigger_vppSyncReset(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ResetTrigger_vipSyncReset(r32)          _BFGET_(r32,27,27)
    #define   SET32Gbl_ResetTrigger_vipSyncReset(r32,v)        _BFSET_(r32,27,27,v)
    #define   GET16Gbl_ResetTrigger_vipSyncReset(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_ResetTrigger_vipSyncReset(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ResetTrigger_appSyncReset(r32)          _BFGET_(r32,28,28)
    #define   SET32Gbl_ResetTrigger_appSyncReset(r32,v)        _BFSET_(r32,28,28,v)
    #define   GET16Gbl_ResetTrigger_appSyncReset(r16)          _BFGET_(r16,12,12)
    #define   SET16Gbl_ResetTrigger_appSyncReset(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ResetTrigger_sdioSyncReset(r32)         _BFGET_(r32,29,29)
    #define   SET32Gbl_ResetTrigger_sdioSyncReset(r32,v)       _BFSET_(r32,29,29,v)
    #define   GET16Gbl_ResetTrigger_sdioSyncReset(r16)         _BFGET_(r16,13,13)
    #define   SET16Gbl_ResetTrigger_sdioSyncReset(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ResetTrigger_sdio1SyncReset(r32)        _BFGET_(r32,30,30)
    #define   SET32Gbl_ResetTrigger_sdio1SyncReset(r32,v)      _BFSET_(r32,30,30,v)
    #define   GET16Gbl_ResetTrigger_sdio1SyncReset(r16)        _BFGET_(r16,14,14)
    #define   SET16Gbl_ResetTrigger_sdio1SyncReset(r16,v)      _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ResetTrigger_hdmirxSyncReset(r32)       _BFGET_(r32,31,31)
    #define   SET32Gbl_ResetTrigger_hdmirxSyncReset(r32,v)     _BFSET_(r32,31,31,v)
    #define   GET16Gbl_ResetTrigger_hdmirxSyncReset(r16)       _BFGET_(r16,15,15)
    #define   SET16Gbl_ResetTrigger_hdmirxSyncReset(r16,v)     _BFSET_(r16,15,15,v)

    #define     w32Gbl_ResetTrigger                            {\
            UNSG32 uResetTrigger_chipReset                     :  1;\
            UNSG32 uResetTrigger_audio0ClkReset                :  1;\
            UNSG32 uResetTrigger_audio1ClkReset                :  1;\
            UNSG32 uResetTrigger_audio2ClkReset                :  1;\
            UNSG32 uResetTrigger_audio3ClkReset                :  1;\
            UNSG32 uResetTrigger_audioHdClkReset               :  1;\
            UNSG32 uResetTrigger_sysPllSyncReset               :  1;\
            UNSG32 uResetTrigger_memPllSyncReset               :  1;\
            UNSG32 uResetTrigger_cpu1PllSyncReset              :  1;\
            UNSG32 uResetTrigger_cpu0SyncReset                 :  1;\
            UNSG32 uResetTrigger_cpu1SyncReset                 :  1;\
            UNSG32 uResetTrigger_socDdrSyncReset               :  1;\
            UNSG32 uResetTrigger_gfxSyncReset                  :  1;\
            UNSG32 uResetTrigger_zspSyncReset                  :  1;\
            UNSG32 uResetTrigger_avioSyncReset                 :  1;\
            UNSG32 uResetTrigger_perifSyncReset                :  1;\
            UNSG32 uResetTrigger_gethSyncReset                 :  1;\
            UNSG32 uResetTrigger_sataSyncReset                 :  1;\
            UNSG32 uResetTrigger_geth1SyncReset                :  1;\
            UNSG32 uResetTrigger_ahbApbSyncReset               :  1;\
            UNSG32 uResetTrigger_nanfSyncReset                 :  1;\
            UNSG32 uResetTrigger_smemcSyncReset                :  1;\
            UNSG32 uResetTrigger_drmSyncReset                  :  1;\
            UNSG32 uResetTrigger_usb0SyncReset                 :  1;\
            UNSG32 uResetTrigger_usb1SyncReset                 :  1;\
            UNSG32 uResetTrigger_pBridgeSyncReset              :  1;\
            UNSG32 uResetTrigger_vppSyncReset                  :  1;\
            UNSG32 uResetTrigger_vipSyncReset                  :  1;\
            UNSG32 uResetTrigger_appSyncReset                  :  1;\
            UNSG32 uResetTrigger_sdioSyncReset                 :  1;\
            UNSG32 uResetTrigger_sdio1SyncReset                :  1;\
            UNSG32 uResetTrigger_hdmirxSyncReset               :  1;\
          }
    union { UNSG32 u32Gbl_ResetTrigger;
            struct w32Gbl_ResetTrigger;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetStatus_ChipResetStatus(r32)        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetStatus_ChipResetStatus(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ResetStatus_ChipResetStatus(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetStatus_ChipResetStatus(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetStatus_wd0Status(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetStatus_wd0Status(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ResetStatus_wd0Status(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetStatus_wd0Status(r16,v)            _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ResetStatus_wd1Status(r32)              _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ResetStatus_wd1Status(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ResetStatus_wd1Status(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ResetStatus_wd1Status(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ResetStatus_wd2Status(r32)              _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ResetStatus_wd2Status(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ResetStatus_wd2Status(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ResetStatus_wd2Status(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ResetStatus_audio0ClkResetStatus(r32)   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ResetStatus_audio0ClkResetStatus(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ResetStatus_audio0ClkResetStatus(r16)   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ResetStatus_audio0ClkResetStatus(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ResetStatus_audio1ClkResetStatus(r32)   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_ResetStatus_audio1ClkResetStatus(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_ResetStatus_audio1ClkResetStatus(r16)   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ResetStatus_audio1ClkResetStatus(r16,v) _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ResetStatus_audio2ClkResetStatus(r32)   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_ResetStatus_audio2ClkResetStatus(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_ResetStatus_audio2ClkResetStatus(r16)   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ResetStatus_audio2ClkResetStatus(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ResetStatus_audio3ClkResetStatus(r32)   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_ResetStatus_audio3ClkResetStatus(r32,v) _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_ResetStatus_audio3ClkResetStatus(r16)   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ResetStatus_audio3ClkResetStatus(r16,v) _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ResetStatus_audioHdClkResetStatus(r32)  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_ResetStatus_audioHdClkResetStatus(r32,v) _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_ResetStatus_audioHdClkResetStatus(r16)  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ResetStatus_audioHdClkResetStatus(r16,v) _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ResetStatus_sysPllSyncResetStatus(r32)  _BFGET_(r32, 9, 9)
    #define   SET32Gbl_ResetStatus_sysPllSyncResetStatus(r32,v) _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_ResetStatus_sysPllSyncResetStatus(r16)  _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ResetStatus_sysPllSyncResetStatus(r16,v) _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ResetStatus_memPllSyncResetStatus(r32)  _BFGET_(r32,10,10)
    #define   SET32Gbl_ResetStatus_memPllSyncResetStatus(r32,v) _BFSET_(r32,10,10,v)
    #define   GET16Gbl_ResetStatus_memPllSyncResetStatus(r16)  _BFGET_(r16,10,10)
    #define   SET16Gbl_ResetStatus_memPllSyncResetStatus(r16,v) _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ResetStatus_cpu1PllSyncResetStatus(r32) _BFGET_(r32,11,11)
    #define   SET32Gbl_ResetStatus_cpu1PllSyncResetStatus(r32,v) _BFSET_(r32,11,11,v)
    #define   GET16Gbl_ResetStatus_cpu1PllSyncResetStatus(r16) _BFGET_(r16,11,11)
    #define   SET16Gbl_ResetStatus_cpu1PllSyncResetStatus(r16,v) _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ResetStatus_avPllASyncResetStatus(r32)  _BFGET_(r32,12,12)
    #define   SET32Gbl_ResetStatus_avPllASyncResetStatus(r32,v) _BFSET_(r32,12,12,v)
    #define   GET16Gbl_ResetStatus_avPllASyncResetStatus(r16)  _BFGET_(r16,12,12)
    #define   SET16Gbl_ResetStatus_avPllASyncResetStatus(r16,v) _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ResetStatus_avPllBSyncResetStatus(r32)  _BFGET_(r32,13,13)
    #define   SET32Gbl_ResetStatus_avPllBSyncResetStatus(r32,v) _BFSET_(r32,13,13,v)
    #define   GET16Gbl_ResetStatus_avPllBSyncResetStatus(r16)  _BFGET_(r16,13,13)
    #define   SET16Gbl_ResetStatus_avPllBSyncResetStatus(r16,v) _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ResetStatus_cpu0SyncResetStatus(r32)    _BFGET_(r32,14,14)
    #define   SET32Gbl_ResetStatus_cpu0SyncResetStatus(r32,v)  _BFSET_(r32,14,14,v)
    #define   GET16Gbl_ResetStatus_cpu0SyncResetStatus(r16)    _BFGET_(r16,14,14)
    #define   SET16Gbl_ResetStatus_cpu0SyncResetStatus(r16,v)  _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ResetStatus_cpu1SyncResetStatus(r32)    _BFGET_(r32,15,15)
    #define   SET32Gbl_ResetStatus_cpu1SyncResetStatus(r32,v)  _BFSET_(r32,15,15,v)
    #define   GET16Gbl_ResetStatus_cpu1SyncResetStatus(r16)    _BFGET_(r16,15,15)
    #define   SET16Gbl_ResetStatus_cpu1SyncResetStatus(r16,v)  _BFSET_(r16,15,15,v)

    #define   GET32Gbl_ResetStatus_socDdrSyncResetStatus(r32)  _BFGET_(r32,16,16)
    #define   SET32Gbl_ResetStatus_socDdrSyncResetStatus(r32,v) _BFSET_(r32,16,16,v)
    #define   GET16Gbl_ResetStatus_socDdrSyncResetStatus(r16)  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetStatus_socDdrSyncResetStatus(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetStatus_gfxSyncResetStatus(r32)     _BFGET_(r32,17,17)
    #define   SET32Gbl_ResetStatus_gfxSyncResetStatus(r32,v)   _BFSET_(r32,17,17,v)
    #define   GET16Gbl_ResetStatus_gfxSyncResetStatus(r16)     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetStatus_gfxSyncResetStatus(r16,v)   _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ResetStatus_zspSyncResetStatus(r32)     _BFGET_(r32,18,18)
    #define   SET32Gbl_ResetStatus_zspSyncResetStatus(r32,v)   _BFSET_(r32,18,18,v)
    #define   GET16Gbl_ResetStatus_zspSyncResetStatus(r16)     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ResetStatus_zspSyncResetStatus(r16,v)   _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ResetStatus_avioSyncResetStatus(r32)    _BFGET_(r32,19,19)
    #define   SET32Gbl_ResetStatus_avioSyncResetStatus(r32,v)  _BFSET_(r32,19,19,v)
    #define   GET16Gbl_ResetStatus_avioSyncResetStatus(r16)    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ResetStatus_avioSyncResetStatus(r16,v)  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ResetStatus_perifSyncResetStatus(r32)   _BFGET_(r32,20,20)
    #define   SET32Gbl_ResetStatus_perifSyncResetStatus(r32,v) _BFSET_(r32,20,20,v)
    #define   GET16Gbl_ResetStatus_perifSyncResetStatus(r16)   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ResetStatus_perifSyncResetStatus(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ResetStatus_gethSyncResetStatus(r32)    _BFGET_(r32,21,21)
    #define   SET32Gbl_ResetStatus_gethSyncResetStatus(r32,v)  _BFSET_(r32,21,21,v)
    #define   GET16Gbl_ResetStatus_gethSyncResetStatus(r16)    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ResetStatus_gethSyncResetStatus(r16,v)  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ResetStatus_geth1SyncResetStatus(r32)   _BFGET_(r32,22,22)
    #define   SET32Gbl_ResetStatus_geth1SyncResetStatus(r32,v) _BFSET_(r32,22,22,v)
    #define   GET16Gbl_ResetStatus_geth1SyncResetStatus(r16)   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ResetStatus_geth1SyncResetStatus(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_ResetStatus_sataSyncResetStatus(r32)    _BFGET_(r32,23,23)
    #define   SET32Gbl_ResetStatus_sataSyncResetStatus(r32,v)  _BFSET_(r32,23,23,v)
    #define   GET16Gbl_ResetStatus_sataSyncResetStatus(r16)    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_ResetStatus_sataSyncResetStatus(r16,v)  _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_ResetStatus_ahbApbSyncResetStatus(r32)  _BFGET_(r32,24,24)
    #define   SET32Gbl_ResetStatus_ahbApbSyncResetStatus(r32,v) _BFSET_(r32,24,24,v)
    #define   GET16Gbl_ResetStatus_ahbApbSyncResetStatus(r16)  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ResetStatus_ahbApbSyncResetStatus(r16,v) _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ResetStatus_nanfSyncResetStatus(r32)    _BFGET_(r32,25,25)
    #define   SET32Gbl_ResetStatus_nanfSyncResetStatus(r32,v)  _BFSET_(r32,25,25,v)
    #define   GET16Gbl_ResetStatus_nanfSyncResetStatus(r16)    _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ResetStatus_nanfSyncResetStatus(r16,v)  _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ResetStatus_smemcSyncResetStatus(r32)   _BFGET_(r32,26,26)
    #define   SET32Gbl_ResetStatus_smemcSyncResetStatus(r32,v) _BFSET_(r32,26,26,v)
    #define   GET16Gbl_ResetStatus_smemcSyncResetStatus(r16)   _BFGET_(r16,10,10)
    #define   SET16Gbl_ResetStatus_smemcSyncResetStatus(r16,v) _BFSET_(r16,10,10,v)

    #define   GET32Gbl_ResetStatus_drmSyncResetStatus(r32)     _BFGET_(r32,27,27)
    #define   SET32Gbl_ResetStatus_drmSyncResetStatus(r32,v)   _BFSET_(r32,27,27,v)
    #define   GET16Gbl_ResetStatus_drmSyncResetStatus(r16)     _BFGET_(r16,11,11)
    #define   SET16Gbl_ResetStatus_drmSyncResetStatus(r16,v)   _BFSET_(r16,11,11,v)

    #define   GET32Gbl_ResetStatus_usb0SyncResetStatus(r32)    _BFGET_(r32,28,28)
    #define   SET32Gbl_ResetStatus_usb0SyncResetStatus(r32,v)  _BFSET_(r32,28,28,v)
    #define   GET16Gbl_ResetStatus_usb0SyncResetStatus(r16)    _BFGET_(r16,12,12)
    #define   SET16Gbl_ResetStatus_usb0SyncResetStatus(r16,v)  _BFSET_(r16,12,12,v)

    #define   GET32Gbl_ResetStatus_usb1SyncResetStatus(r32)    _BFGET_(r32,29,29)
    #define   SET32Gbl_ResetStatus_usb1SyncResetStatus(r32,v)  _BFSET_(r32,29,29,v)
    #define   GET16Gbl_ResetStatus_usb1SyncResetStatus(r16)    _BFGET_(r16,13,13)
    #define   SET16Gbl_ResetStatus_usb1SyncResetStatus(r16,v)  _BFSET_(r16,13,13,v)

    #define   GET32Gbl_ResetStatus_pBridgeSyncResetStatus(r32) _BFGET_(r32,30,30)
    #define   SET32Gbl_ResetStatus_pBridgeSyncResetStatus(r32,v) _BFSET_(r32,30,30,v)
    #define   GET16Gbl_ResetStatus_pBridgeSyncResetStatus(r16) _BFGET_(r16,14,14)
    #define   SET16Gbl_ResetStatus_pBridgeSyncResetStatus(r16,v) _BFSET_(r16,14,14,v)

    #define   GET32Gbl_ResetStatus_vppSyncResetStatus(r32)     _BFGET_(r32,31,31)
    #define   SET32Gbl_ResetStatus_vppSyncResetStatus(r32,v)   _BFSET_(r32,31,31,v)
    #define   GET16Gbl_ResetStatus_vppSyncResetStatus(r16)     _BFGET_(r16,15,15)
    #define   SET16Gbl_ResetStatus_vppSyncResetStatus(r16,v)   _BFSET_(r16,15,15,v)

    #define     w32Gbl_ResetStatus                             {\
            UNSG32 uResetStatus_ChipResetStatus                :  1;\
            UNSG32 uResetStatus_wd0Status                      :  1;\
            UNSG32 uResetStatus_wd1Status                      :  1;\
            UNSG32 uResetStatus_wd2Status                      :  1;\
            UNSG32 uResetStatus_audio0ClkResetStatus           :  1;\
            UNSG32 uResetStatus_audio1ClkResetStatus           :  1;\
            UNSG32 uResetStatus_audio2ClkResetStatus           :  1;\
            UNSG32 uResetStatus_audio3ClkResetStatus           :  1;\
            UNSG32 uResetStatus_audioHdClkResetStatus          :  1;\
            UNSG32 uResetStatus_sysPllSyncResetStatus          :  1;\
            UNSG32 uResetStatus_memPllSyncResetStatus          :  1;\
            UNSG32 uResetStatus_cpu1PllSyncResetStatus         :  1;\
            UNSG32 uResetStatus_avPllASyncResetStatus          :  1;\
            UNSG32 uResetStatus_avPllBSyncResetStatus          :  1;\
            UNSG32 uResetStatus_cpu0SyncResetStatus            :  1;\
            UNSG32 uResetStatus_cpu1SyncResetStatus            :  1;\
            UNSG32 uResetStatus_socDdrSyncResetStatus          :  1;\
            UNSG32 uResetStatus_gfxSyncResetStatus             :  1;\
            UNSG32 uResetStatus_zspSyncResetStatus             :  1;\
            UNSG32 uResetStatus_avioSyncResetStatus            :  1;\
            UNSG32 uResetStatus_perifSyncResetStatus           :  1;\
            UNSG32 uResetStatus_gethSyncResetStatus            :  1;\
            UNSG32 uResetStatus_geth1SyncResetStatus           :  1;\
            UNSG32 uResetStatus_sataSyncResetStatus            :  1;\
            UNSG32 uResetStatus_ahbApbSyncResetStatus          :  1;\
            UNSG32 uResetStatus_nanfSyncResetStatus            :  1;\
            UNSG32 uResetStatus_smemcSyncResetStatus           :  1;\
            UNSG32 uResetStatus_drmSyncResetStatus             :  1;\
            UNSG32 uResetStatus_usb0SyncResetStatus            :  1;\
            UNSG32 uResetStatus_usb1SyncResetStatus            :  1;\
            UNSG32 uResetStatus_pBridgeSyncResetStatus         :  1;\
            UNSG32 uResetStatus_vppSyncResetStatus             :  1;\
          }
    union { UNSG32 u32Gbl_ResetStatus;
            struct w32Gbl_ResetStatus;
          };
    #define   GET32Gbl_ResetStatus_vipSyncResetStatus(r32)     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetStatus_vipSyncResetStatus(r32,v)   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ResetStatus_vipSyncResetStatus(r16)     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetStatus_vipSyncResetStatus(r16,v)   _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetStatus_appSyncResetStatus(r32)     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetStatus_appSyncResetStatus(r32,v)   _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ResetStatus_appSyncResetStatus(r16)     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetStatus_appSyncResetStatus(r16,v)   _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ResetStatus_sdioSyncResetStatus(r32)    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ResetStatus_sdioSyncResetStatus(r32,v)  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ResetStatus_sdioSyncResetStatus(r16)    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ResetStatus_sdioSyncResetStatus(r16,v)  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ResetStatus_sdio1SyncResetStatus(r32)   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ResetStatus_sdio1SyncResetStatus(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ResetStatus_sdio1SyncResetStatus(r16)   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ResetStatus_sdio1SyncResetStatus(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ResetStatus_hdmirxSyncResetStatus(r32)  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ResetStatus_hdmirxSyncResetStatus(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ResetStatus_hdmirxSyncResetStatus(r16)  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ResetStatus_hdmirxSyncResetStatus(r16,v) _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_ResetStatus1                            {\
            UNSG32 uResetStatus_vipSyncResetStatus             :  1;\
            UNSG32 uResetStatus_appSyncResetStatus             :  1;\
            UNSG32 uResetStatus_sdioSyncResetStatus            :  1;\
            UNSG32 uResetStatus_sdio1SyncResetStatus           :  1;\
            UNSG32 uResetStatus_hdmirxSyncResetStatus          :  1;\
            UNSG32 RSVDx180_b5                                 : 27;\
          }
    union { UNSG32 u32Gbl_ResetStatus1;
            struct w32Gbl_ResetStatus1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic0_swReg0(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic0_swReg0(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic0                             {\
            UNSG32 usw_generic0_swReg0                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic0;
            struct w32Gbl_sw_generic0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic1_swReg1(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic1_swReg1(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic1                             {\
            UNSG32 usw_generic1_swReg1                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic1;
            struct w32Gbl_sw_generic1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic2_swReg2(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic2_swReg2(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic2                             {\
            UNSG32 usw_generic2_swReg2                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic2;
            struct w32Gbl_sw_generic2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic3_swReg3(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic3_swReg3(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic3                             {\
            UNSG32 usw_generic3_swReg3                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic3;
            struct w32Gbl_sw_generic3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ChipCntl0_dCacheCfgCPU0(r32)            _BFGET_(r32, 1, 0)
    #define   SET32Gbl_ChipCntl0_dCacheCfgCPU0(r32,v)          _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_ChipCntl0_dCacheCfgCPU0(r16)            _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl0_dCacheCfgCPU0(r16,v)          _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl0_iCacheCfgCPU0(r32)            _BFGET_(r32, 3, 2)
    #define   SET32Gbl_ChipCntl0_iCacheCfgCPU0(r32,v)          _BFSET_(r32, 3, 2,v)
    #define   GET16Gbl_ChipCntl0_iCacheCfgCPU0(r16)            _BFGET_(r16, 3, 2)
    #define   SET16Gbl_ChipCntl0_iCacheCfgCPU0(r16,v)          _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_ChipCntl0_dCacheCfgCPU1(r32)            _BFGET_(r32, 5, 4)
    #define   SET32Gbl_ChipCntl0_dCacheCfgCPU1(r32,v)          _BFSET_(r32, 5, 4,v)
    #define   GET16Gbl_ChipCntl0_dCacheCfgCPU1(r16)            _BFGET_(r16, 5, 4)
    #define   SET16Gbl_ChipCntl0_dCacheCfgCPU1(r16,v)          _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_ChipCntl0_iCacheCfgCPU1(r32)            _BFGET_(r32, 7, 6)
    #define   SET32Gbl_ChipCntl0_iCacheCfgCPU1(r32,v)          _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_ChipCntl0_iCacheCfgCPU1(r16)            _BFGET_(r16, 7, 6)
    #define   SET16Gbl_ChipCntl0_iCacheCfgCPU1(r16,v)          _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_ChipCntl0_cg_bpass0Cpu0(r32)            _BFGET_(r32, 8, 8)
    #define   SET32Gbl_ChipCntl0_cg_bpass0Cpu0(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_ChipCntl0_cg_bpass0Cpu0(r16)            _BFGET_(r16, 8, 8)
    #define   SET16Gbl_ChipCntl0_cg_bpass0Cpu0(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_ChipCntl0_cg_bpass0Cpu1(r32)            _BFGET_(r32, 9, 9)
    #define   SET32Gbl_ChipCntl0_cg_bpass0Cpu1(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_ChipCntl0_cg_bpass0Cpu1(r16)            _BFGET_(r16, 9, 9)
    #define   SET16Gbl_ChipCntl0_cg_bpass0Cpu1(r16,v)          _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_ChipCntl0_wfiJtagClkEn(r32)             _BFGET_(r32,10,10)
    #define   SET32Gbl_ChipCntl0_wfiJtagClkEn(r32,v)           _BFSET_(r32,10,10,v)
    #define   GET16Gbl_ChipCntl0_wfiJtagClkEn(r16)             _BFGET_(r16,10,10)
    #define   SET16Gbl_ChipCntl0_wfiJtagClkEn(r16,v)           _BFSET_(r16,10,10,v)

    #define     w32Gbl_ChipCntl0                               {\
            UNSG32 uChipCntl0_dCacheCfgCPU0                    :  2;\
            UNSG32 uChipCntl0_iCacheCfgCPU0                    :  2;\
            UNSG32 uChipCntl0_dCacheCfgCPU1                    :  2;\
            UNSG32 uChipCntl0_iCacheCfgCPU1                    :  2;\
            UNSG32 uChipCntl0_cg_bpass0Cpu0                    :  1;\
            UNSG32 uChipCntl0_cg_bpass0Cpu1                    :  1;\
            UNSG32 uChipCntl0_wfiJtagClkEn                     :  1;\
            UNSG32 RSVDx194_b11                                : 21;\
          }
    union { UNSG32 u32Gbl_ChipCntl0;
            struct w32Gbl_ChipCntl0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ChipCntl1_bpm_wtc(r32)                  _BFGET_(r32, 1, 0)
    #define   SET32Gbl_ChipCntl1_bpm_wtc(r32,v)                _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_ChipCntl1_bpm_wtc(r16)                  _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl1_bpm_wtc(r16,v)                _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl1_bpm_rtc(r32)                  _BFGET_(r32, 3, 2)
    #define   SET32Gbl_ChipCntl1_bpm_rtc(r32,v)                _BFSET_(r32, 3, 2,v)
    #define   GET16Gbl_ChipCntl1_bpm_rtc(r16)                  _BFGET_(r16, 3, 2)
    #define   SET16Gbl_ChipCntl1_bpm_rtc(r16,v)                _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_ChipCntl1_icl0data_wtc(r32)             _BFGET_(r32, 5, 4)
    #define   SET32Gbl_ChipCntl1_icl0data_wtc(r32,v)           _BFSET_(r32, 5, 4,v)
    #define   GET16Gbl_ChipCntl1_icl0data_wtc(r16)             _BFGET_(r16, 5, 4)
    #define   SET16Gbl_ChipCntl1_icl0data_wtc(r16,v)           _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_ChipCntl1_icl0data_rtc(r32)             _BFGET_(r32, 7, 6)
    #define   SET32Gbl_ChipCntl1_icl0data_rtc(r32,v)           _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_ChipCntl1_icl0data_rtc(r16)             _BFGET_(r16, 7, 6)
    #define   SET16Gbl_ChipCntl1_icl0data_rtc(r16,v)           _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_ChipCntl1_icl0tag_wtc(r32)              _BFGET_(r32, 9, 8)
    #define   SET32Gbl_ChipCntl1_icl0tag_wtc(r32,v)            _BFSET_(r32, 9, 8,v)
    #define   GET16Gbl_ChipCntl1_icl0tag_wtc(r16)              _BFGET_(r16, 9, 8)
    #define   SET16Gbl_ChipCntl1_icl0tag_wtc(r16,v)            _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_ChipCntl1_icl0tag_rtc(r32)              _BFGET_(r32,11,10)
    #define   SET32Gbl_ChipCntl1_icl0tag_rtc(r32,v)            _BFSET_(r32,11,10,v)
    #define   GET16Gbl_ChipCntl1_icl0tag_rtc(r16)              _BFGET_(r16,11,10)
    #define   SET16Gbl_ChipCntl1_icl0tag_rtc(r16,v)            _BFSET_(r16,11,10,v)

    #define   GET32Gbl_ChipCntl1_icl1data_wtc(r32)             _BFGET_(r32,13,12)
    #define   SET32Gbl_ChipCntl1_icl1data_wtc(r32,v)           _BFSET_(r32,13,12,v)
    #define   GET16Gbl_ChipCntl1_icl1data_wtc(r16)             _BFGET_(r16,13,12)
    #define   SET16Gbl_ChipCntl1_icl1data_wtc(r16,v)           _BFSET_(r16,13,12,v)

    #define   GET32Gbl_ChipCntl1_icl1data_rtc(r32)             _BFGET_(r32,15,14)
    #define   SET32Gbl_ChipCntl1_icl1data_rtc(r32,v)           _BFSET_(r32,15,14,v)
    #define   GET16Gbl_ChipCntl1_icl1data_rtc(r16)             _BFGET_(r16,15,14)
    #define   SET16Gbl_ChipCntl1_icl1data_rtc(r16,v)           _BFSET_(r16,15,14,v)

    #define   GET32Gbl_ChipCntl1_icl1tag_wtc(r32)              _BFGET_(r32,17,16)
    #define   SET32Gbl_ChipCntl1_icl1tag_wtc(r32,v)            _BFSET_(r32,17,16,v)
    #define   GET16Gbl_ChipCntl1_icl1tag_wtc(r16)              _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl1_icl1tag_wtc(r16,v)            _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl1_icl1tag_rtc(r32)              _BFGET_(r32,19,18)
    #define   SET32Gbl_ChipCntl1_icl1tag_rtc(r32,v)            _BFSET_(r32,19,18,v)
    #define   GET16Gbl_ChipCntl1_icl1tag_rtc(r16)              _BFGET_(r16, 3, 2)
    #define   SET16Gbl_ChipCntl1_icl1tag_rtc(r16,v)            _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_ChipCntl1_dcl1data_wtc(r32)             _BFGET_(r32,21,20)
    #define   SET32Gbl_ChipCntl1_dcl1data_wtc(r32,v)           _BFSET_(r32,21,20,v)
    #define   GET16Gbl_ChipCntl1_dcl1data_wtc(r16)             _BFGET_(r16, 5, 4)
    #define   SET16Gbl_ChipCntl1_dcl1data_wtc(r16,v)           _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_ChipCntl1_dcl1data_rtc(r32)             _BFGET_(r32,23,22)
    #define   SET32Gbl_ChipCntl1_dcl1data_rtc(r32,v)           _BFSET_(r32,23,22,v)
    #define   GET16Gbl_ChipCntl1_dcl1data_rtc(r16)             _BFGET_(r16, 7, 6)
    #define   SET16Gbl_ChipCntl1_dcl1data_rtc(r16,v)           _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_ChipCntl1_dcl1tag_wtc(r32)              _BFGET_(r32,25,24)
    #define   SET32Gbl_ChipCntl1_dcl1tag_wtc(r32,v)            _BFSET_(r32,25,24,v)
    #define   GET16Gbl_ChipCntl1_dcl1tag_wtc(r16)              _BFGET_(r16, 9, 8)
    #define   SET16Gbl_ChipCntl1_dcl1tag_wtc(r16,v)            _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_ChipCntl1_dcl1tag_rtc(r32)              _BFGET_(r32,27,26)
    #define   SET32Gbl_ChipCntl1_dcl1tag_rtc(r32,v)            _BFSET_(r32,27,26,v)
    #define   GET16Gbl_ChipCntl1_dcl1tag_rtc(r16)              _BFGET_(r16,11,10)
    #define   SET16Gbl_ChipCntl1_dcl1tag_rtc(r16,v)            _BFSET_(r16,11,10,v)

    #define   GET32Gbl_ChipCntl1_dcl1state_wtc(r32)            _BFGET_(r32,29,28)
    #define   SET32Gbl_ChipCntl1_dcl1state_wtc(r32,v)          _BFSET_(r32,29,28,v)
    #define   GET16Gbl_ChipCntl1_dcl1state_wtc(r16)            _BFGET_(r16,13,12)
    #define   SET16Gbl_ChipCntl1_dcl1state_wtc(r16,v)          _BFSET_(r16,13,12,v)

    #define   GET32Gbl_ChipCntl1_dcl1state_rtc(r32)            _BFGET_(r32,31,30)
    #define   SET32Gbl_ChipCntl1_dcl1state_rtc(r32,v)          _BFSET_(r32,31,30,v)
    #define   GET16Gbl_ChipCntl1_dcl1state_rtc(r16)            _BFGET_(r16,15,14)
    #define   SET16Gbl_ChipCntl1_dcl1state_rtc(r16,v)          _BFSET_(r16,15,14,v)

    #define     w32Gbl_ChipCntl1                               {\
            UNSG32 uChipCntl1_bpm_wtc                          :  2;\
            UNSG32 uChipCntl1_bpm_rtc                          :  2;\
            UNSG32 uChipCntl1_icl0data_wtc                     :  2;\
            UNSG32 uChipCntl1_icl0data_rtc                     :  2;\
            UNSG32 uChipCntl1_icl0tag_wtc                      :  2;\
            UNSG32 uChipCntl1_icl0tag_rtc                      :  2;\
            UNSG32 uChipCntl1_icl1data_wtc                     :  2;\
            UNSG32 uChipCntl1_icl1data_rtc                     :  2;\
            UNSG32 uChipCntl1_icl1tag_wtc                      :  2;\
            UNSG32 uChipCntl1_icl1tag_rtc                      :  2;\
            UNSG32 uChipCntl1_dcl1data_wtc                     :  2;\
            UNSG32 uChipCntl1_dcl1data_rtc                     :  2;\
            UNSG32 uChipCntl1_dcl1tag_wtc                      :  2;\
            UNSG32 uChipCntl1_dcl1tag_rtc                      :  2;\
            UNSG32 uChipCntl1_dcl1state_wtc                    :  2;\
            UNSG32 uChipCntl1_dcl1state_rtc                    :  2;\
          }
    union { UNSG32 u32Gbl_ChipCntl1;
            struct w32Gbl_ChipCntl1;
          };
    #define   GET32Gbl_ChipCntl1_dcl1attr_wtc(r32)             _BFGET_(r32, 1, 0)
    #define   SET32Gbl_ChipCntl1_dcl1attr_wtc(r32,v)           _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_ChipCntl1_dcl1attr_wtc(r16)             _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl1_dcl1attr_wtc(r16,v)           _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl1_dcl1attr_rtc(r32)             _BFGET_(r32, 3, 2)
    #define   SET32Gbl_ChipCntl1_dcl1attr_rtc(r32,v)           _BFSET_(r32, 3, 2,v)
    #define   GET16Gbl_ChipCntl1_dcl1attr_rtc(r16)             _BFGET_(r16, 3, 2)
    #define   SET16Gbl_ChipCntl1_dcl1attr_rtc(r16,v)           _BFSET_(r16, 3, 2,v)

    #define   GET32Gbl_ChipCntl1_dcl1fifo_wtc(r32)             _BFGET_(r32, 5, 4)
    #define   SET32Gbl_ChipCntl1_dcl1fifo_wtc(r32,v)           _BFSET_(r32, 5, 4,v)
    #define   GET16Gbl_ChipCntl1_dcl1fifo_wtc(r16)             _BFGET_(r16, 5, 4)
    #define   SET16Gbl_ChipCntl1_dcl1fifo_wtc(r16,v)           _BFSET_(r16, 5, 4,v)

    #define   GET32Gbl_ChipCntl1_dcl1fifo_rtc(r32)             _BFGET_(r32, 7, 6)
    #define   SET32Gbl_ChipCntl1_dcl1fifo_rtc(r32,v)           _BFSET_(r32, 7, 6,v)
    #define   GET16Gbl_ChipCntl1_dcl1fifo_rtc(r16)             _BFGET_(r16, 7, 6)
    #define   SET16Gbl_ChipCntl1_dcl1fifo_rtc(r16,v)           _BFSET_(r16, 7, 6,v)

    #define   GET32Gbl_ChipCntl1_dcl0data_wtc(r32)             _BFGET_(r32, 9, 8)
    #define   SET32Gbl_ChipCntl1_dcl0data_wtc(r32,v)           _BFSET_(r32, 9, 8,v)
    #define   GET16Gbl_ChipCntl1_dcl0data_wtc(r16)             _BFGET_(r16, 9, 8)
    #define   SET16Gbl_ChipCntl1_dcl0data_wtc(r16,v)           _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_ChipCntl1_dcl0data_rtc(r32)             _BFGET_(r32,11,10)
    #define   SET32Gbl_ChipCntl1_dcl0data_rtc(r32,v)           _BFSET_(r32,11,10,v)
    #define   GET16Gbl_ChipCntl1_dcl0data_rtc(r16)             _BFGET_(r16,11,10)
    #define   SET16Gbl_ChipCntl1_dcl0data_rtc(r16,v)           _BFSET_(r16,11,10,v)

    #define   GET32Gbl_ChipCntl1_dcl0tag_wtc(r32)              _BFGET_(r32,13,12)
    #define   SET32Gbl_ChipCntl1_dcl0tag_wtc(r32,v)            _BFSET_(r32,13,12,v)
    #define   GET16Gbl_ChipCntl1_dcl0tag_wtc(r16)              _BFGET_(r16,13,12)
    #define   SET16Gbl_ChipCntl1_dcl0tag_wtc(r16,v)            _BFSET_(r16,13,12,v)

    #define   GET32Gbl_ChipCntl1_dcl0tag_rtc(r32)              _BFGET_(r32,15,14)
    #define   SET32Gbl_ChipCntl1_dcl0tag_rtc(r32,v)            _BFSET_(r32,15,14,v)
    #define   GET16Gbl_ChipCntl1_dcl0tag_rtc(r16)              _BFGET_(r16,15,14)
    #define   SET16Gbl_ChipCntl1_dcl0tag_rtc(r16,v)            _BFSET_(r16,15,14,v)

    #define   GET32Gbl_ChipCntl1_l2c_dataram_wtc(r32)          _BFGET_(r32,17,16)
    #define   SET32Gbl_ChipCntl1_l2c_dataram_wtc(r32,v)        _BFSET_(r32,17,16,v)
    #define   GET16Gbl_ChipCntl1_l2c_dataram_wtc(r16)          _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl1_l2c_dataram_wtc(r16,v)        _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl1_l2c_dataram_rtc(r32)          _BFGET_(r32,20,18)
    #define   SET32Gbl_ChipCntl1_l2c_dataram_rtc(r32,v)        _BFSET_(r32,20,18,v)
    #define   GET16Gbl_ChipCntl1_l2c_dataram_rtc(r16)          _BFGET_(r16, 4, 2)
    #define   SET16Gbl_ChipCntl1_l2c_dataram_rtc(r16,v)        _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_ChipCntl1_l2c_dirtyram_wtc(r32)         _BFGET_(r32,23,21)
    #define   SET32Gbl_ChipCntl1_l2c_dirtyram_wtc(r32,v)       _BFSET_(r32,23,21,v)
    #define   GET16Gbl_ChipCntl1_l2c_dirtyram_wtc(r16)         _BFGET_(r16, 7, 5)
    #define   SET16Gbl_ChipCntl1_l2c_dirtyram_wtc(r16,v)       _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_ChipCntl1_l2c_dirtyram_rtc(r32)         _BFGET_(r32,25,24)
    #define   SET32Gbl_ChipCntl1_l2c_dirtyram_rtc(r32,v)       _BFSET_(r32,25,24,v)
    #define   GET16Gbl_ChipCntl1_l2c_dirtyram_rtc(r16)         _BFGET_(r16, 9, 8)
    #define   SET16Gbl_ChipCntl1_l2c_dirtyram_rtc(r16,v)       _BFSET_(r16, 9, 8,v)

    #define   GET32Gbl_ChipCntl1_l2c_lockram_wtc(r32)          _BFGET_(r32,28,26)
    #define   SET32Gbl_ChipCntl1_l2c_lockram_wtc(r32,v)        _BFSET_(r32,28,26,v)
    #define   GET16Gbl_ChipCntl1_l2c_lockram_wtc(r16)          _BFGET_(r16,12,10)
    #define   SET16Gbl_ChipCntl1_l2c_lockram_wtc(r16,v)        _BFSET_(r16,12,10,v)

    #define   GET32Gbl_ChipCntl1_l2c_lockram_rtc(r32)          _BFGET_(r32,30,29)
    #define   SET32Gbl_ChipCntl1_l2c_lockram_rtc(r32,v)        _BFSET_(r32,30,29,v)
    #define   GET16Gbl_ChipCntl1_l2c_lockram_rtc(r16)          _BFGET_(r16,14,13)
    #define   SET16Gbl_ChipCntl1_l2c_lockram_rtc(r16,v)        _BFSET_(r16,14,13,v)

    #define     w32Gbl_ChipCntl11                              {\
            UNSG32 uChipCntl1_dcl1attr_wtc                     :  2;\
            UNSG32 uChipCntl1_dcl1attr_rtc                     :  2;\
            UNSG32 uChipCntl1_dcl1fifo_wtc                     :  2;\
            UNSG32 uChipCntl1_dcl1fifo_rtc                     :  2;\
            UNSG32 uChipCntl1_dcl0data_wtc                     :  2;\
            UNSG32 uChipCntl1_dcl0data_rtc                     :  2;\
            UNSG32 uChipCntl1_dcl0tag_wtc                      :  2;\
            UNSG32 uChipCntl1_dcl0tag_rtc                      :  2;\
            UNSG32 uChipCntl1_l2c_dataram_wtc                  :  2;\
            UNSG32 uChipCntl1_l2c_dataram_rtc                  :  3;\
            UNSG32 uChipCntl1_l2c_dirtyram_wtc                 :  3;\
            UNSG32 uChipCntl1_l2c_dirtyram_rtc                 :  2;\
            UNSG32 uChipCntl1_l2c_lockram_wtc                  :  3;\
            UNSG32 uChipCntl1_l2c_lockram_rtc                  :  2;\
            UNSG32 RSVDx19C_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_ChipCntl11;
            struct w32Gbl_ChipCntl11;
          };
    #define   GET32Gbl_ChipCntl1_l2c_eccram_wtc(r32)           _BFGET_(r32, 1, 0)
    #define   SET32Gbl_ChipCntl1_l2c_eccram_wtc(r32,v)         _BFSET_(r32, 1, 0,v)
    #define   GET16Gbl_ChipCntl1_l2c_eccram_wtc(r16)           _BFGET_(r16, 1, 0)
    #define   SET16Gbl_ChipCntl1_l2c_eccram_wtc(r16,v)         _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_ChipCntl1_l2c_eccram_rtc(r32)           _BFGET_(r32, 4, 2)
    #define   SET32Gbl_ChipCntl1_l2c_eccram_rtc(r32,v)         _BFSET_(r32, 4, 2,v)
    #define   GET16Gbl_ChipCntl1_l2c_eccram_rtc(r16)           _BFGET_(r16, 4, 2)
    #define   SET16Gbl_ChipCntl1_l2c_eccram_rtc(r16,v)         _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_ChipCntl1_l2c_tagram_wtc(r32)           _BFGET_(r32, 7, 5)
    #define   SET32Gbl_ChipCntl1_l2c_tagram_wtc(r32,v)         _BFSET_(r32, 7, 5,v)
    #define   GET16Gbl_ChipCntl1_l2c_tagram_wtc(r16)           _BFGET_(r16, 7, 5)
    #define   SET16Gbl_ChipCntl1_l2c_tagram_wtc(r16,v)         _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_ChipCntl1_l2c_tagram_rtc(r32)           _BFGET_(r32,10, 8)
    #define   SET32Gbl_ChipCntl1_l2c_tagram_rtc(r32,v)         _BFSET_(r32,10, 8,v)
    #define   GET16Gbl_ChipCntl1_l2c_tagram_rtc(r16)           _BFGET_(r16,10, 8)
    #define   SET16Gbl_ChipCntl1_l2c_tagram_rtc(r16,v)         _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_ChipCntl1_l2c_tzram_wtc(r32)            _BFGET_(r32,13,11)
    #define   SET32Gbl_ChipCntl1_l2c_tzram_wtc(r32,v)          _BFSET_(r32,13,11,v)
    #define   GET16Gbl_ChipCntl1_l2c_tzram_wtc(r16)            _BFGET_(r16,13,11)
    #define   SET16Gbl_ChipCntl1_l2c_tzram_wtc(r16,v)          _BFSET_(r16,13,11,v)

    #define   GET32Gbl_ChipCntl1_l2c_tzram_rtc(r32)            _BFGET_(r32,15,14)
    #define   SET32Gbl_ChipCntl1_l2c_tzram_rtc(r32,v)          _BFSET_(r32,15,14,v)
    #define   GET16Gbl_ChipCntl1_l2c_tzram_rtc(r16)            _BFGET_(r16,15,14)
    #define   SET16Gbl_ChipCntl1_l2c_tzram_rtc(r16,v)          _BFSET_(r16,15,14,v)

    #define   GET32Gbl_ChipCntl1_l2c_validram_wtc(r32)         _BFGET_(r32,18,16)
    #define   SET32Gbl_ChipCntl1_l2c_validram_wtc(r32,v)       _BFSET_(r32,18,16,v)
    #define   GET16Gbl_ChipCntl1_l2c_validram_wtc(r16)         _BFGET_(r16, 2, 0)
    #define   SET16Gbl_ChipCntl1_l2c_validram_wtc(r16,v)       _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_ChipCntl1_l2c_validram_rtc(r32)         _BFGET_(r32,20,19)
    #define   SET32Gbl_ChipCntl1_l2c_validram_rtc(r32,v)       _BFSET_(r32,20,19,v)
    #define   GET16Gbl_ChipCntl1_l2c_validram_rtc(r16)         _BFGET_(r16, 4, 3)
    #define   SET16Gbl_ChipCntl1_l2c_validram_rtc(r16,v)       _BFSET_(r16, 4, 3,v)

    #define   GET32Gbl_ChipCntl1_mmu_wtc(r32)                  _BFGET_(r32,22,21)
    #define   SET32Gbl_ChipCntl1_mmu_wtc(r32,v)                _BFSET_(r32,22,21,v)
    #define   GET16Gbl_ChipCntl1_mmu_wtc(r16)                  _BFGET_(r16, 6, 5)
    #define   SET16Gbl_ChipCntl1_mmu_wtc(r16,v)                _BFSET_(r16, 6, 5,v)

    #define   GET32Gbl_ChipCntl1_mmu_rtc(r32)                  _BFGET_(r32,24,23)
    #define   SET32Gbl_ChipCntl1_mmu_rtc(r32,v)                _BFSET_(r32,24,23,v)
    #define   GET16Gbl_ChipCntl1_mmu_rtc(r16)                  _BFGET_(r16, 8, 7)
    #define   SET16Gbl_ChipCntl1_mmu_rtc(r16,v)                _BFSET_(r16, 8, 7,v)

    #define   GET32Gbl_ChipCntl1_sf_wtc(r32)                   _BFGET_(r32,26,25)
    #define   SET32Gbl_ChipCntl1_sf_wtc(r32,v)                 _BFSET_(r32,26,25,v)
    #define   GET16Gbl_ChipCntl1_sf_wtc(r16)                   _BFGET_(r16,10, 9)
    #define   SET16Gbl_ChipCntl1_sf_wtc(r16,v)                 _BFSET_(r16,10, 9,v)

    #define   GET32Gbl_ChipCntl1_sf_rtc(r32)                   _BFGET_(r32,28,27)
    #define   SET32Gbl_ChipCntl1_sf_rtc(r32,v)                 _BFSET_(r32,28,27,v)
    #define   GET16Gbl_ChipCntl1_sf_rtc(r16)                   _BFGET_(r16,12,11)
    #define   SET16Gbl_ChipCntl1_sf_rtc(r16,v)                 _BFSET_(r16,12,11,v)

    #define     w32Gbl_ChipCntl12                              {\
            UNSG32 uChipCntl1_l2c_eccram_wtc                   :  2;\
            UNSG32 uChipCntl1_l2c_eccram_rtc                   :  3;\
            UNSG32 uChipCntl1_l2c_tagram_wtc                   :  3;\
            UNSG32 uChipCntl1_l2c_tagram_rtc                   :  3;\
            UNSG32 uChipCntl1_l2c_tzram_wtc                    :  3;\
            UNSG32 uChipCntl1_l2c_tzram_rtc                    :  2;\
            UNSG32 uChipCntl1_l2c_validram_wtc                 :  3;\
            UNSG32 uChipCntl1_l2c_validram_rtc                 :  2;\
            UNSG32 uChipCntl1_mmu_wtc                          :  2;\
            UNSG32 uChipCntl1_mmu_rtc                          :  2;\
            UNSG32 uChipCntl1_sf_wtc                           :  2;\
            UNSG32 uChipCntl1_sf_rtc                           :  2;\
            UNSG32 RSVDx1A0_b29                                :  3;\
          }
    union { UNSG32 u32Gbl_ChipCntl12;
            struct w32Gbl_ChipCntl12;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_avio31to0_value(r32)               _BFGET_(r32,31, 0)
    #define   SET32Gbl_RWTC_avio31to0_value(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32Gbl_RWTC_avio31to0                          {\
            UNSG32 uRWTC_avio31to0_value                       : 32;\
          }
    union { UNSG32 u32Gbl_RWTC_avio31to0;
            struct w32Gbl_RWTC_avio31to0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_avio41to32_value(r32)              _BFGET_(r32, 9, 0)
    #define   SET32Gbl_RWTC_avio41to32_value(r32,v)            _BFSET_(r32, 9, 0,v)
    #define   GET16Gbl_RWTC_avio41to32_value(r16)              _BFGET_(r16, 9, 0)
    #define   SET16Gbl_RWTC_avio41to32_value(r16,v)            _BFSET_(r16, 9, 0,v)

    #define     w32Gbl_RWTC_avio41to32                         {\
            UNSG32 uRWTC_avio41to32_value                      : 10;\
            UNSG32 RSVDx1A8_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RWTC_avio41to32;
            struct w32Gbl_RWTC_avio41to32;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_gfx2D31to0_value(r32)              _BFGET_(r32,31, 0)
    #define   SET32Gbl_RWTC_gfx2D31to0_value(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32Gbl_RWTC_gfx2D31to0                         {\
            UNSG32 uRWTC_gfx2D31to0_value                      : 32;\
          }
    union { UNSG32 u32Gbl_RWTC_gfx2D31to0;
            struct w32Gbl_RWTC_gfx2D31to0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_gfx2D41to32_value(r32)             _BFGET_(r32, 9, 0)
    #define   SET32Gbl_RWTC_gfx2D41to32_value(r32,v)           _BFSET_(r32, 9, 0,v)
    #define   GET16Gbl_RWTC_gfx2D41to32_value(r16)             _BFGET_(r16, 9, 0)
    #define   SET16Gbl_RWTC_gfx2D41to32_value(r16,v)           _BFSET_(r16, 9, 0,v)

    #define     w32Gbl_RWTC_gfx2D41to32                        {\
            UNSG32 uRWTC_gfx2D41to32_value                     : 10;\
            UNSG32 RSVDx1B0_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RWTC_gfx2D41to32;
            struct w32Gbl_RWTC_gfx2D41to32;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_gfx3D31to0_value(r32)              _BFGET_(r32,31, 0)
    #define   SET32Gbl_RWTC_gfx3D31to0_value(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32Gbl_RWTC_gfx3D31to0                         {\
            UNSG32 uRWTC_gfx3D31to0_value                      : 32;\
          }
    union { UNSG32 u32Gbl_RWTC_gfx3D31to0;
            struct w32Gbl_RWTC_gfx3D31to0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_gfx3D41to32_value(r32)             _BFGET_(r32, 9, 0)
    #define   SET32Gbl_RWTC_gfx3D41to32_value(r32,v)           _BFSET_(r32, 9, 0,v)
    #define   GET16Gbl_RWTC_gfx3D41to32_value(r16)             _BFGET_(r16, 9, 0)
    #define   SET16Gbl_RWTC_gfx3D41to32_value(r16,v)           _BFSET_(r16, 9, 0,v)

    #define     w32Gbl_RWTC_gfx3D41to32                        {\
            UNSG32 uRWTC_gfx3D41to32_value                     : 10;\
            UNSG32 RSVDx1B8_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RWTC_gfx3D41to32;
            struct w32Gbl_RWTC_gfx3D41to32;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_soc31to0_value(r32)                _BFGET_(r32,31, 0)
    #define   SET32Gbl_RWTC_soc31to0_value(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32Gbl_RWTC_soc31to0                           {\
            UNSG32 uRWTC_soc31to0_value                        : 32;\
          }
    union { UNSG32 u32Gbl_RWTC_soc31to0;
            struct w32Gbl_RWTC_soc31to0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_soc41to32_value(r32)               _BFGET_(r32, 9, 0)
    #define   SET32Gbl_RWTC_soc41to32_value(r32,v)             _BFSET_(r32, 9, 0,v)
    #define   GET16Gbl_RWTC_soc41to32_value(r16)               _BFGET_(r16, 9, 0)
    #define   SET16Gbl_RWTC_soc41to32_value(r16,v)             _BFSET_(r16, 9, 0,v)

    #define     w32Gbl_RWTC_soc41to32                          {\
            UNSG32 uRWTC_soc41to32_value                       : 10;\
            UNSG32 RSVDx1C0_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RWTC_soc41to32;
            struct w32Gbl_RWTC_soc41to32;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_vPro31to0_value(r32)               _BFGET_(r32,31, 0)
    #define   SET32Gbl_RWTC_vPro31to0_value(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32Gbl_RWTC_vPro31to0                          {\
            UNSG32 uRWTC_vPro31to0_value                       : 32;\
          }
    union { UNSG32 u32Gbl_RWTC_vPro31to0;
            struct w32Gbl_RWTC_vPro31to0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RWTC_vPro41to32_value(r32)              _BFGET_(r32, 9, 0)
    #define   SET32Gbl_RWTC_vPro41to32_value(r32,v)            _BFSET_(r32, 9, 0,v)
    #define   GET16Gbl_RWTC_vPro41to32_value(r16)              _BFGET_(r16, 9, 0)
    #define   SET16Gbl_RWTC_vPro41to32_value(r16,v)            _BFSET_(r16, 9, 0,v)

    #define     w32Gbl_RWTC_vPro41to32                         {\
            UNSG32 uRWTC_vPro41to32_value                      : 10;\
            UNSG32 RSVDx1C8_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RWTC_vPro41to32;
            struct w32Gbl_RWTC_vPro41to32;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_Id(r32)                       _BFGET_(r32,31, 0)
    #define   SET32Gbl_ProductId_Id(r32,v)                     _BFSET_(r32,31, 0,v)

    #define     w32Gbl_ProductId                               {\
            UNSG32 uProductId_Id                               : 32;\
          }
    union { UNSG32 u32Gbl_ProductId;
            struct w32Gbl_ProductId;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_ext_ID_EXT(r32)               _BFGET_(r32, 7, 0)
    #define   SET32Gbl_ProductId_ext_ID_EXT(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16Gbl_ProductId_ext_ID_EXT(r16)               _BFGET_(r16, 7, 0)
    #define   SET16Gbl_ProductId_ext_ID_EXT(r16,v)             _BFSET_(r16, 7, 0,v)

    #define     w32Gbl_ProductId_ext                           {\
            UNSG32 uProductId_ext_ID_EXT                       :  8;\
            UNSG32 RSVDx1D0_b8                                 : 24;\
          }
    union { UNSG32 u32Gbl_ProductId_ext;
            struct w32Gbl_ProductId_ext;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGAR_FPGAR(r32)                        _BFGET_(r32,31, 0)
    #define   SET32Gbl_FPGAR_FPGAR(r32,v)                      _BFSET_(r32,31, 0,v)

    #define     w32Gbl_FPGAR                                   {\
            UNSG32 uFPGAR_FPGAR                                : 32;\
          }
    union { UNSG32 u32Gbl_FPGAR;
            struct w32Gbl_FPGAR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGARW_FPGARW(r32)                      _BFGET_(r32,31, 0)
    #define   SET32Gbl_FPGARW_FPGARW(r32,v)                    _BFSET_(r32,31, 0,v)

    #define     w32Gbl_FPGARW                                  {\
            UNSG32 uFPGARW_FPGARW                              : 32;\
          }
    union { UNSG32 u32Gbl_FPGARW;
            struct w32Gbl_FPGARW;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RingOscCtl_centerInit(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RingOscCtl_centerInit(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_RingOscCtl_centerInit(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RingOscCtl_centerInit(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_RingOscCtl_avioTopInit(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RingOscCtl_avioTopInit(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_RingOscCtl_avioTopInit(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RingOscCtl_avioTopInit(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_RingOscCtl_avioBotInit(r32)             _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RingOscCtl_avioBotInit(r32,v)           _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_RingOscCtl_avioBotInit(r16)             _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RingOscCtl_avioBotInit(r16,v)           _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_RingOscCtl_usbTopInit(r32)              _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RingOscCtl_usbTopInit(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_RingOscCtl_usbTopInit(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RingOscCtl_usbTopInit(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_RingOscCtl_cpu1TopInit(r32)             _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RingOscCtl_cpu1TopInit(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_RingOscCtl_cpu1TopInit(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RingOscCtl_cpu1TopInit(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_RingOscCtl_cpu0TopInit(r32)             _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RingOscCtl_cpu0TopInit(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_RingOscCtl_cpu0TopInit(r16)             _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RingOscCtl_cpu0TopInit(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_RingOscCtl_cpuBotInit(r32)              _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RingOscCtl_cpuBotInit(r32,v)            _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_RingOscCtl_cpuBotInit(r16)              _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RingOscCtl_cpuBotInit(r16,v)            _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_RingOscCtl_topRiteInit(r32)             _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RingOscCtl_topRiteInit(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_RingOscCtl_topRiteInit(r16)             _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RingOscCtl_topRiteInit(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_RingOscCtl_midRiteInit(r32)             _BFGET_(r32, 8, 8)
    #define   SET32Gbl_RingOscCtl_midRiteInit(r32,v)           _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_RingOscCtl_midRiteInit(r16)             _BFGET_(r16, 8, 8)
    #define   SET16Gbl_RingOscCtl_midRiteInit(r16,v)           _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_RingOscCtl_botRiteInit(r32)             _BFGET_(r32, 9, 9)
    #define   SET32Gbl_RingOscCtl_botRiteInit(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_RingOscCtl_botRiteInit(r16)             _BFGET_(r16, 9, 9)
    #define   SET16Gbl_RingOscCtl_botRiteInit(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_RingOscCtl                              {\
            UNSG32 uRingOscCtl_centerInit                      :  1;\
            UNSG32 uRingOscCtl_avioTopInit                     :  1;\
            UNSG32 uRingOscCtl_avioBotInit                     :  1;\
            UNSG32 uRingOscCtl_usbTopInit                      :  1;\
            UNSG32 uRingOscCtl_cpu1TopInit                     :  1;\
            UNSG32 uRingOscCtl_cpu0TopInit                     :  1;\
            UNSG32 uRingOscCtl_cpuBotInit                      :  1;\
            UNSG32 uRingOscCtl_topRiteInit                     :  1;\
            UNSG32 uRingOscCtl_midRiteInit                     :  1;\
            UNSG32 uRingOscCtl_botRiteInit                     :  1;\
            UNSG32 RSVDx1DC_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_RingOscCtl;
            struct w32Gbl_RingOscCtl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_PLLBypsBootStrapEn_sysPLLBypsEn(r32)    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_PLLBypsBootStrapEn_sysPLLBypsEn(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_PLLBypsBootStrapEn_sysPLLBypsEn(r16)    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_PLLBypsBootStrapEn_sysPLLBypsEn(r16,v)  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_PLLBypsBootStrapEn_memPLLBypsEn(r32)    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_PLLBypsBootStrapEn_memPLLBypsEn(r32,v)  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_PLLBypsBootStrapEn_memPLLBypsEn(r16)    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_PLLBypsBootStrapEn_memPLLBypsEn(r16,v)  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn(r32)   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn(r16)   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_PLLBypsBootStrapEn_cpu1PLLBypsEn(r16,v) _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_PLLBypsBootStrapEn                      {\
            UNSG32 uPLLBypsBootStrapEn_sysPLLBypsEn            :  1;\
            UNSG32 uPLLBypsBootStrapEn_memPLLBypsEn            :  1;\
            UNSG32 uPLLBypsBootStrapEn_cpu1PLLBypsEn           :  1;\
            UNSG32 RSVDx1E0_b3                                 : 29;\
          }
    union { UNSG32 u32Gbl_PLLBypsBootStrapEn;
            struct w32Gbl_PLLBypsBootStrapEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_IO_CALIBRATE_IN_DO(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_IO_CALIBRATE_IN_DO(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DO(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_DO(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_CAL_EN(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_IO_CALIBRATE_IN_CAL_EN(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_CAL_EN(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_IO_CALIBRATE_IN_CAL_EN(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_ZP_CAL(r32)             _BFGET_(r32, 4, 2)
    #define   SET32Gbl_IO_CALIBRATE_IN_ZP_CAL(r32,v)           _BFSET_(r32, 4, 2,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_ZP_CAL(r16)             _BFGET_(r16, 4, 2)
    #define   SET16Gbl_IO_CALIBRATE_IN_ZP_CAL(r16,v)           _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_ZN_CAL(r32)             _BFGET_(r32, 7, 5)
    #define   SET32Gbl_IO_CALIBRATE_IN_ZN_CAL(r32,v)           _BFSET_(r32, 7, 5,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_ZN_CAL(r16)             _BFGET_(r16, 7, 5)
    #define   SET16Gbl_IO_CALIBRATE_IN_ZN_CAL(r16,v)           _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_RON_ADJ(r32)            _BFGET_(r32,10, 8)
    #define   SET32Gbl_IO_CALIBRATE_IN_RON_ADJ(r32,v)          _BFSET_(r32,10, 8,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_RON_ADJ(r16)            _BFGET_(r16,10, 8)
    #define   SET16Gbl_IO_CALIBRATE_IN_RON_ADJ(r16,v)          _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN(r32)       _BFGET_(r32,11,11)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN(r32,v)     _BFSET_(r32,11,11,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN(r16)       _BFGET_(r16,11,11)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_CAL_N_EN(r16,v)     _BFSET_(r16,11,11,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN(r32)       _BFGET_(r32,12,12)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN(r32,v)     _BFSET_(r32,12,12,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN(r16)       _BFGET_(r16,12,12)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_CAL_P_EN(r16,v)     _BFSET_(r16,12,12,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_ODR(r32)            _BFGET_(r32,15,13)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_ODR(r32,v)          _BFSET_(r32,15,13,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_ODR(r16)            _BFGET_(r16,15,13)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_ODR(r16,v)          _BFSET_(r16,15,13,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_ODR_EN(r32)         _BFGET_(r32,16,16)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_ODR_EN(r32,v)       _BFSET_(r32,16,16,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_ODR_EN(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_ODR_EN(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_ZN(r32)             _BFGET_(r32,20,17)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_ZN(r32,v)           _BFSET_(r32,20,17,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_ZN(r16)             _BFGET_(r16, 4, 1)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_ZN(r16,v)           _BFSET_(r16, 4, 1,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_ZP(r32)             _BFGET_(r32,24,21)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_ZP(r32,v)           _BFSET_(r32,24,21,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_ZP(r16)             _BFGET_(r16, 8, 5)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_ZP(r16,v)           _BFSET_(r16, 8, 5,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL(r32)     _BFGET_(r32,28,25)
    #define   SET32Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL(r32,v)   _BFSET_(r32,28,25,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL(r16)     _BFGET_(r16,12, 9)
    #define   SET16Gbl_IO_CALIBRATE_IN_TSI_ZP_AFT_CAL(r16,v)   _BFSET_(r16,12, 9,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN(r32)      _BFGET_(r32,29,29)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN(r32,v)    _BFSET_(r32,29,29,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN(r16)      _BFGET_(r16,13,13)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_CAL_N_EN(r16,v)    _BFSET_(r16,13,13,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN(r32)      _BFGET_(r32,30,30)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN(r32,v)    _BFSET_(r32,30,30,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN(r16)      _BFGET_(r16,14,14)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_CAL_P_EN(r16,v)    _BFSET_(r16,14,14,v)

    #define     w32Gbl_IO_CALIBRATE_IN                         {\
            UNSG32 uIO_CALIBRATE_IN_DO                         :  1;\
            UNSG32 uIO_CALIBRATE_IN_CAL_EN                     :  1;\
            UNSG32 uIO_CALIBRATE_IN_ZP_CAL                     :  3;\
            UNSG32 uIO_CALIBRATE_IN_ZN_CAL                     :  3;\
            UNSG32 uIO_CALIBRATE_IN_RON_ADJ                    :  3;\
            UNSG32 uIO_CALIBRATE_IN_TSI_CAL_N_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_TSI_CAL_P_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_TSI_ODR                    :  3;\
            UNSG32 uIO_CALIBRATE_IN_TSI_ODR_EN                 :  1;\
            UNSG32 uIO_CALIBRATE_IN_TSI_ZN                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_TSI_ZP                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_TSI_ZP_AFT_CAL             :  4;\
            UNSG32 uIO_CALIBRATE_IN_NAND_CAL_N_EN              :  1;\
            UNSG32 uIO_CALIBRATE_IN_NAND_CAL_P_EN              :  1;\
            UNSG32 RSVDx1E4_b31                                :  1;\
          }
    union { UNSG32 u32Gbl_IO_CALIBRATE_IN;
            struct w32Gbl_IO_CALIBRATE_IN;
          };
    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_ODR(r32)           _BFGET_(r32, 2, 0)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_ODR(r32,v)         _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_ODR(r16)           _BFGET_(r16, 2, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_ODR(r16,v)         _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_ODR_EN(r32)        _BFGET_(r32, 3, 3)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_ODR_EN(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_ODR_EN(r16)        _BFGET_(r16, 3, 3)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_ODR_EN(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_ZN(r32)            _BFGET_(r32, 7, 4)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_ZN(r32,v)          _BFSET_(r32, 7, 4,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_ZN(r16)            _BFGET_(r16, 7, 4)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_ZN(r16,v)          _BFSET_(r16, 7, 4,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_ZP(r32)            _BFGET_(r32,11, 8)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_ZP(r32,v)          _BFSET_(r32,11, 8,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_ZP(r16)            _BFGET_(r16,11, 8)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_ZP(r16,v)          _BFSET_(r16,11, 8,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL(r32)    _BFGET_(r32,15,12)
    #define   SET32Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL(r32,v)  _BFSET_(r32,15,12,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL(r16)    _BFGET_(r16,15,12)
    #define   SET16Gbl_IO_CALIBRATE_IN_NAND_ZP_AFT_CAL(r16,v)  _BFSET_(r16,15,12,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN(r32)       _BFGET_(r32,16,16)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN(r32,v)     _BFSET_(r32,16,16,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_CAL_N_EN(r16,v)     _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN(r32)       _BFGET_(r32,17,17)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN(r32,v)     _BFSET_(r32,17,17,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_CAL_P_EN(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_ODR(r32)            _BFGET_(r32,20,18)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_ODR(r32,v)          _BFSET_(r32,20,18,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_ODR(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_ODR(r16,v)          _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_ODR_EN(r32)         _BFGET_(r32,21,21)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_ODR_EN(r32,v)       _BFSET_(r32,21,21,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_ODR_EN(r16)         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_ODR_EN(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_ZN(r32)             _BFGET_(r32,25,22)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_ZN(r32,v)           _BFSET_(r32,25,22,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_ZN(r16)             _BFGET_(r16, 9, 6)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_ZN(r16,v)           _BFSET_(r16, 9, 6,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_ZP(r32)             _BFGET_(r32,29,26)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_ZP(r32,v)           _BFSET_(r32,29,26,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_ZP(r16)             _BFGET_(r16,13,10)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_ZP(r16,v)           _BFSET_(r16,13,10,v)

    #define     w32Gbl_IO_CALIBRATE_IN1                        {\
            UNSG32 uIO_CALIBRATE_IN_NAND_ODR                   :  3;\
            UNSG32 uIO_CALIBRATE_IN_NAND_ODR_EN                :  1;\
            UNSG32 uIO_CALIBRATE_IN_NAND_ZN                    :  4;\
            UNSG32 uIO_CALIBRATE_IN_NAND_ZP                    :  4;\
            UNSG32 uIO_CALIBRATE_IN_NAND_ZP_AFT_CAL            :  4;\
            UNSG32 uIO_CALIBRATE_IN_SPI_CAL_N_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SPI_CAL_P_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SPI_ODR                    :  3;\
            UNSG32 uIO_CALIBRATE_IN_SPI_ODR_EN                 :  1;\
            UNSG32 uIO_CALIBRATE_IN_SPI_ZN                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_SPI_ZP                     :  4;\
            UNSG32 RSVDx1E8_b30                                :  2;\
          }
    union { UNSG32 u32Gbl_IO_CALIBRATE_IN1;
            struct w32Gbl_IO_CALIBRATE_IN1;
          };
    #define   GET32Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL(r32)     _BFGET_(r32, 3, 0)
    #define   SET32Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL(r32,v)   _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL(r16)     _BFGET_(r16, 3, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_SPI_ZP_AFT_CAL(r16,v)   _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_CAL_N_EN(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN(r32)       _BFGET_(r32, 5, 5)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN(r32,v)     _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN(r16)       _BFGET_(r16, 5, 5)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_CAL_P_EN(r16,v)     _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_ODR(r32)            _BFGET_(r32, 8, 6)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_ODR(r32,v)          _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_ODR(r16)            _BFGET_(r16, 8, 6)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_ODR(r16,v)          _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_ODR_EN(r32)         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_ODR_EN(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_ODR_EN(r16)         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_ODR_EN(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_ZN(r32)             _BFGET_(r32,13,10)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_ZN(r32,v)           _BFSET_(r32,13,10,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_ZN(r16)             _BFGET_(r16,13,10)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_ZN(r16,v)           _BFSET_(r16,13,10,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_ZP(r32)             _BFGET_(r32,17,14)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_ZP(r32,v)           _BFSET_(r32,17,14,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL(r32)     _BFGET_(r32,21,18)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL(r32,v)   _BFSET_(r32,21,18,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL(r16)     _BFGET_(r16, 5, 2)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD0_ZP_AFT_CAL(r16,v)   _BFSET_(r16, 5, 2,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN(r32)       _BFGET_(r32,22,22)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN(r32,v)     _BFSET_(r32,22,22,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN(r16)       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_CAL_N_EN(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN(r32)       _BFGET_(r32,23,23)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN(r32,v)     _BFSET_(r32,23,23,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN(r16)       _BFGET_(r16, 7, 7)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_CAL_P_EN(r16,v)     _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_ODR(r32)            _BFGET_(r32,26,24)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_ODR(r32,v)          _BFSET_(r32,26,24,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_ODR(r16)            _BFGET_(r16,10, 8)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_ODR(r16,v)          _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_ODR_EN(r32)         _BFGET_(r32,27,27)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_ODR_EN(r32,v)       _BFSET_(r32,27,27,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_ODR_EN(r16)         _BFGET_(r16,11,11)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_ODR_EN(r16,v)       _BFSET_(r16,11,11,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_ZN(r32)             _BFGET_(r32,31,28)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_ZN(r32,v)           _BFSET_(r32,31,28,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_ZN(r16)             _BFGET_(r16,15,12)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_ZN(r16,v)           _BFSET_(r16,15,12,v)

    #define     w32Gbl_IO_CALIBRATE_IN2                        {\
            UNSG32 uIO_CALIBRATE_IN_SPI_ZP_AFT_CAL             :  4;\
            UNSG32 uIO_CALIBRATE_IN_SD0_CAL_N_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD0_CAL_P_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD0_ODR                    :  3;\
            UNSG32 uIO_CALIBRATE_IN_SD0_ODR_EN                 :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD0_ZN                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_SD0_ZP                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_SD0_ZP_AFT_CAL             :  4;\
            UNSG32 uIO_CALIBRATE_IN_SD1_CAL_N_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD1_CAL_P_EN               :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD1_ODR                    :  3;\
            UNSG32 uIO_CALIBRATE_IN_SD1_ODR_EN                 :  1;\
            UNSG32 uIO_CALIBRATE_IN_SD1_ZN                     :  4;\
          }
    union { UNSG32 u32Gbl_IO_CALIBRATE_IN2;
            struct w32Gbl_IO_CALIBRATE_IN2;
          };
    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_ZP(r32)             _BFGET_(r32, 3, 0)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_ZP(r32,v)           _BFSET_(r32, 3, 0,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_ZP(r16)             _BFGET_(r16, 3, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_ZP(r16,v)           _BFSET_(r16, 3, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL(r32)     _BFGET_(r32, 7, 4)
    #define   SET32Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL(r32,v)   _BFSET_(r32, 7, 4,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL(r16)     _BFGET_(r16, 7, 4)
    #define   SET16Gbl_IO_CALIBRATE_IN_SD1_ZP_AFT_CAL(r16,v)   _BFSET_(r16, 7, 4,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_DVIO_1_DO(r32)          _BFGET_(r32, 8, 8)
    #define   SET32Gbl_IO_CALIBRATE_IN_DVIO_1_DO(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DVIO_1_DO(r16)          _BFGET_(r16, 8, 8)
    #define   SET16Gbl_IO_CALIBRATE_IN_DVIO_1_DO(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN(r32)      _BFGET_(r32, 9, 9)
    #define   SET32Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN(r32,v)    _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN(r16)      _BFGET_(r16, 9, 9)
    #define   SET16Gbl_IO_CALIBRATE_IN_DVIO_1_CAL_EN(r16,v)    _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL(r32)      _BFGET_(r32,12,10)
    #define   SET32Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL(r32,v)    _BFSET_(r32,12,10,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL(r16)      _BFGET_(r16,12,10)
    #define   SET16Gbl_IO_CALIBRATE_IN_DVIO_1_ZP_CAL(r16,v)    _BFSET_(r16,12,10,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL(r32)      _BFGET_(r32,15,13)
    #define   SET32Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL(r32,v)    _BFSET_(r32,15,13,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL(r16)      _BFGET_(r16,15,13)
    #define   SET16Gbl_IO_CALIBRATE_IN_DVIO_1_ZN_CAL(r16,v)    _BFSET_(r16,15,13,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ(r32)     _BFGET_(r32,18,16)
    #define   SET32Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ(r32,v)   _BFSET_(r32,18,16,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ(r16)     _BFGET_(r16, 2, 0)
    #define   SET16Gbl_IO_CALIBRATE_IN_DVIO_1_RON_ADJ(r16,v)   _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_I2S_DO(r32)             _BFGET_(r32,19,19)
    #define   SET32Gbl_IO_CALIBRATE_IN_I2S_DO(r32,v)           _BFSET_(r32,19,19,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_I2S_DO(r16)             _BFGET_(r16, 3, 3)
    #define   SET16Gbl_IO_CALIBRATE_IN_I2S_DO(r16,v)           _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_I2S_CAL_EN(r32)         _BFGET_(r32,20,20)
    #define   SET32Gbl_IO_CALIBRATE_IN_I2S_CAL_EN(r32,v)       _BFSET_(r32,20,20,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_I2S_CAL_EN(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_IO_CALIBRATE_IN_I2S_CAL_EN(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL(r32)         _BFGET_(r32,23,21)
    #define   SET32Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL(r32,v)       _BFSET_(r32,23,21,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL(r16)         _BFGET_(r16, 7, 5)
    #define   SET16Gbl_IO_CALIBRATE_IN_I2S_ZP_CAL(r16,v)       _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL(r32)         _BFGET_(r32,26,24)
    #define   SET32Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL(r32,v)       _BFSET_(r32,26,24,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL(r16)         _BFGET_(r16,10, 8)
    #define   SET16Gbl_IO_CALIBRATE_IN_I2S_ZN_CAL(r16,v)       _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ(r32)        _BFGET_(r32,29,27)
    #define   SET32Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ(r32,v)      _BFSET_(r32,29,27,v)
    #define   GET16Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ(r16)        _BFGET_(r16,13,11)
    #define   SET16Gbl_IO_CALIBRATE_IN_I2S_RON_ADJ(r16,v)      _BFSET_(r16,13,11,v)

    #define     w32Gbl_IO_CALIBRATE_IN3                        {\
            UNSG32 uIO_CALIBRATE_IN_SD1_ZP                     :  4;\
            UNSG32 uIO_CALIBRATE_IN_SD1_ZP_AFT_CAL             :  4;\
            UNSG32 uIO_CALIBRATE_IN_DVIO_1_DO                  :  1;\
            UNSG32 uIO_CALIBRATE_IN_DVIO_1_CAL_EN              :  1;\
            UNSG32 uIO_CALIBRATE_IN_DVIO_1_ZP_CAL              :  3;\
            UNSG32 uIO_CALIBRATE_IN_DVIO_1_ZN_CAL              :  3;\
            UNSG32 uIO_CALIBRATE_IN_DVIO_1_RON_ADJ             :  3;\
            UNSG32 uIO_CALIBRATE_IN_I2S_DO                     :  1;\
            UNSG32 uIO_CALIBRATE_IN_I2S_CAL_EN                 :  1;\
            UNSG32 uIO_CALIBRATE_IN_I2S_ZP_CAL                 :  3;\
            UNSG32 uIO_CALIBRATE_IN_I2S_ZN_CAL                 :  3;\
            UNSG32 uIO_CALIBRATE_IN_I2S_RON_ADJ                :  3;\
            UNSG32 RSVDx1F0_b30                                :  2;\
          }
    union { UNSG32 u32Gbl_IO_CALIBRATE_IN3;
            struct w32Gbl_IO_CALIBRATE_IN3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_IO_CALBRATE_OUT_INC(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_IO_CALBRATE_OUT_INC(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_INC(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_IO_CALBRATE_OUT_INC(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC(r32)      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC(r32,v)    _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC(r16)      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_IO_CALBRATE_OUT_TSI_CAL_N_INC(r16,v)    _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC(r32)      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC(r16)      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_IO_CALBRATE_OUT_TSI_CAL_P_INC(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC(r32)      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC(r32,v)    _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_IO_CALBRATE_OUT_SD0_CAL_N_INC(r16,v)    _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC(r32)      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC(r32,v)    _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC(r16)      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_IO_CALBRATE_OUT_SD0_CAL_P_INC(r16,v)    _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC(r32)      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC(r32,v)    _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC(r16)      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_IO_CALBRATE_OUT_SD1_CAL_N_INC(r16,v)    _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC(r32)      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC(r32,v)    _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC(r16)      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_IO_CALBRATE_OUT_SD1_CAL_P_INC(r16,v)    _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC(r32)     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC(r32,v)   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC(r16)     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_IO_CALBRATE_OUT_NAND_CAL_N_INC(r16,v)   _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC(r32)     _BFGET_(r32, 8, 8)
    #define   SET32Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC(r32,v)   _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC(r16)     _BFGET_(r16, 8, 8)
    #define   SET16Gbl_IO_CALBRATE_OUT_NAND_CAL_P_INC(r16,v)   _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_DVIO_1_INC(r32)         _BFGET_(r32, 9, 9)
    #define   SET32Gbl_IO_CALBRATE_OUT_DVIO_1_INC(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_DVIO_1_INC(r16)         _BFGET_(r16, 9, 9)
    #define   SET16Gbl_IO_CALBRATE_OUT_DVIO_1_INC(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_IO_CALBRATE_OUT_I2S_INC(r32)            _BFGET_(r32,10,10)
    #define   SET32Gbl_IO_CALBRATE_OUT_I2S_INC(r32,v)          _BFSET_(r32,10,10,v)
    #define   GET16Gbl_IO_CALBRATE_OUT_I2S_INC(r16)            _BFGET_(r16,10,10)
    #define   SET16Gbl_IO_CALBRATE_OUT_I2S_INC(r16,v)          _BFSET_(r16,10,10,v)

    #define     w32Gbl_IO_CALBRATE_OUT                         {\
            UNSG32 uIO_CALBRATE_OUT_INC                        :  1;\
            UNSG32 uIO_CALBRATE_OUT_TSI_CAL_N_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_TSI_CAL_P_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_SD0_CAL_N_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_SD0_CAL_P_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_SD1_CAL_N_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_SD1_CAL_P_INC              :  1;\
            UNSG32 uIO_CALBRATE_OUT_NAND_CAL_N_INC             :  1;\
            UNSG32 uIO_CALBRATE_OUT_NAND_CAL_P_INC             :  1;\
            UNSG32 uIO_CALBRATE_OUT_DVIO_1_INC                 :  1;\
            UNSG32 uIO_CALBRATE_OUT_I2S_INC                    :  1;\
            UNSG32 RSVDx1F4_b11                                : 21;\
          }
    union { UNSG32 u32Gbl_IO_CALBRATE_OUT;
            struct w32Gbl_IO_CALBRATE_OUT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SECURE_SCAN_EN_SET(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SECURE_SCAN_EN_SET(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SECURE_SCAN_EN_SET(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SECURE_SCAN_EN_SET(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_SECURE_SCAN_EN                          {\
            UNSG32 uSECURE_SCAN_EN_SET                         :  1;\
            UNSG32 RSVDx1F8_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_SECURE_SCAN_EN;
            struct w32Gbl_SECURE_SCAN_EN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_NandWPn_Sel(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_NandWPn_Sel(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_NandWPn_Sel(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_NandWPn_Sel(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_NandWPn                                 {\
            UNSG32 uNandWPn_Sel                                :  1;\
            UNSG32 RSVDx1FC_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_NandWPn;
            struct w32Gbl_NandWPn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_RingCntCntl_centerStart(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_RingCntCntl_centerStart(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_RingCntCntl_centerStart(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RingCntCntl_centerStart(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_RingCntCntl_centerStop(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_RingCntCntl_centerStop(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_RingCntCntl_centerStop(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RingCntCntl_centerStop(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_RingCntCntl_avioTopStart(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_RingCntCntl_avioTopStart(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_RingCntCntl_avioTopStart(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RingCntCntl_avioTopStart(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_RingCntCntl_avioTopStop(r32)            _BFGET_(r32, 3, 3)
    #define   SET32Gbl_RingCntCntl_avioTopStop(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_RingCntCntl_avioTopStop(r16)            _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RingCntCntl_avioTopStop(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_RingCntCntl_avioBotStart(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_RingCntCntl_avioBotStart(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_RingCntCntl_avioBotStart(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_RingCntCntl_avioBotStart(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_RingCntCntl_avioBotStop(r32)            _BFGET_(r32, 5, 5)
    #define   SET32Gbl_RingCntCntl_avioBotStop(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_RingCntCntl_avioBotStop(r16)            _BFGET_(r16, 5, 5)
    #define   SET16Gbl_RingCntCntl_avioBotStop(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_RingCntCntl_usbTopStart(r32)            _BFGET_(r32, 6, 6)
    #define   SET32Gbl_RingCntCntl_usbTopStart(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_RingCntCntl_usbTopStart(r16)            _BFGET_(r16, 6, 6)
    #define   SET16Gbl_RingCntCntl_usbTopStart(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_RingCntCntl_usbTopStop(r32)             _BFGET_(r32, 7, 7)
    #define   SET32Gbl_RingCntCntl_usbTopStop(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_RingCntCntl_usbTopStop(r16)             _BFGET_(r16, 7, 7)
    #define   SET16Gbl_RingCntCntl_usbTopStop(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_RingCntCntl_cpu1TopStart(r32)           _BFGET_(r32, 8, 8)
    #define   SET32Gbl_RingCntCntl_cpu1TopStart(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_RingCntCntl_cpu1TopStart(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_RingCntCntl_cpu1TopStart(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_RingCntCntl_cpu1TopStop(r32)            _BFGET_(r32, 9, 9)
    #define   SET32Gbl_RingCntCntl_cpu1TopStop(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_RingCntCntl_cpu1TopStop(r16)            _BFGET_(r16, 9, 9)
    #define   SET16Gbl_RingCntCntl_cpu1TopStop(r16,v)          _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_RingCntCntl_cpu0TopStart(r32)           _BFGET_(r32,10,10)
    #define   SET32Gbl_RingCntCntl_cpu0TopStart(r32,v)         _BFSET_(r32,10,10,v)
    #define   GET16Gbl_RingCntCntl_cpu0TopStart(r16)           _BFGET_(r16,10,10)
    #define   SET16Gbl_RingCntCntl_cpu0TopStart(r16,v)         _BFSET_(r16,10,10,v)

    #define   GET32Gbl_RingCntCntl_cpu0TopStop(r32)            _BFGET_(r32,11,11)
    #define   SET32Gbl_RingCntCntl_cpu0TopStop(r32,v)          _BFSET_(r32,11,11,v)
    #define   GET16Gbl_RingCntCntl_cpu0TopStop(r16)            _BFGET_(r16,11,11)
    #define   SET16Gbl_RingCntCntl_cpu0TopStop(r16,v)          _BFSET_(r16,11,11,v)

    #define   GET32Gbl_RingCntCntl_cpuBotStart(r32)            _BFGET_(r32,12,12)
    #define   SET32Gbl_RingCntCntl_cpuBotStart(r32,v)          _BFSET_(r32,12,12,v)
    #define   GET16Gbl_RingCntCntl_cpuBotStart(r16)            _BFGET_(r16,12,12)
    #define   SET16Gbl_RingCntCntl_cpuBotStart(r16,v)          _BFSET_(r16,12,12,v)

    #define   GET32Gbl_RingCntCntl_cpuBotStop(r32)             _BFGET_(r32,13,13)
    #define   SET32Gbl_RingCntCntl_cpuBotStop(r32,v)           _BFSET_(r32,13,13,v)
    #define   GET16Gbl_RingCntCntl_cpuBotStop(r16)             _BFGET_(r16,13,13)
    #define   SET16Gbl_RingCntCntl_cpuBotStop(r16,v)           _BFSET_(r16,13,13,v)

    #define   GET32Gbl_RingCntCntl_topRiteStart(r32)           _BFGET_(r32,14,14)
    #define   SET32Gbl_RingCntCntl_topRiteStart(r32,v)         _BFSET_(r32,14,14,v)
    #define   GET16Gbl_RingCntCntl_topRiteStart(r16)           _BFGET_(r16,14,14)
    #define   SET16Gbl_RingCntCntl_topRiteStart(r16,v)         _BFSET_(r16,14,14,v)

    #define   GET32Gbl_RingCntCntl_topRiteStop(r32)            _BFGET_(r32,15,15)
    #define   SET32Gbl_RingCntCntl_topRiteStop(r32,v)          _BFSET_(r32,15,15,v)
    #define   GET16Gbl_RingCntCntl_topRiteStop(r16)            _BFGET_(r16,15,15)
    #define   SET16Gbl_RingCntCntl_topRiteStop(r16,v)          _BFSET_(r16,15,15,v)

    #define   GET32Gbl_RingCntCntl_midRiteStart(r32)           _BFGET_(r32,16,16)
    #define   SET32Gbl_RingCntCntl_midRiteStart(r32,v)         _BFSET_(r32,16,16,v)
    #define   GET16Gbl_RingCntCntl_midRiteStart(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_RingCntCntl_midRiteStart(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_RingCntCntl_midRiteStop(r32)            _BFGET_(r32,17,17)
    #define   SET32Gbl_RingCntCntl_midRiteStop(r32,v)          _BFSET_(r32,17,17,v)
    #define   GET16Gbl_RingCntCntl_midRiteStop(r16)            _BFGET_(r16, 1, 1)
    #define   SET16Gbl_RingCntCntl_midRiteStop(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_RingCntCntl_botRiteStart(r32)           _BFGET_(r32,18,18)
    #define   SET32Gbl_RingCntCntl_botRiteStart(r32,v)         _BFSET_(r32,18,18,v)
    #define   GET16Gbl_RingCntCntl_botRiteStart(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_RingCntCntl_botRiteStart(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_RingCntCntl_botRiteStop(r32)            _BFGET_(r32,19,19)
    #define   SET32Gbl_RingCntCntl_botRiteStop(r32,v)          _BFSET_(r32,19,19,v)
    #define   GET16Gbl_RingCntCntl_botRiteStop(r16)            _BFGET_(r16, 3, 3)
    #define   SET16Gbl_RingCntCntl_botRiteStop(r16,v)          _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_RingCntCntl                             {\
            UNSG32 uRingCntCntl_centerStart                    :  1;\
            UNSG32 uRingCntCntl_centerStop                     :  1;\
            UNSG32 uRingCntCntl_avioTopStart                   :  1;\
            UNSG32 uRingCntCntl_avioTopStop                    :  1;\
            UNSG32 uRingCntCntl_avioBotStart                   :  1;\
            UNSG32 uRingCntCntl_avioBotStop                    :  1;\
            UNSG32 uRingCntCntl_usbTopStart                    :  1;\
            UNSG32 uRingCntCntl_usbTopStop                     :  1;\
            UNSG32 uRingCntCntl_cpu1TopStart                   :  1;\
            UNSG32 uRingCntCntl_cpu1TopStop                    :  1;\
            UNSG32 uRingCntCntl_cpu0TopStart                   :  1;\
            UNSG32 uRingCntCntl_cpu0TopStop                    :  1;\
            UNSG32 uRingCntCntl_cpuBotStart                    :  1;\
            UNSG32 uRingCntCntl_cpuBotStop                     :  1;\
            UNSG32 uRingCntCntl_topRiteStart                   :  1;\
            UNSG32 uRingCntCntl_topRiteStop                    :  1;\
            UNSG32 uRingCntCntl_midRiteStart                   :  1;\
            UNSG32 uRingCntCntl_midRiteStop                    :  1;\
            UNSG32 uRingCntCntl_botRiteStart                   :  1;\
            UNSG32 uRingCntCntl_botRiteStop                    :  1;\
            UNSG32 RSVDx200_b20                                : 12;\
          }
    union { UNSG32 u32Gbl_RingCntCntl;
            struct w32Gbl_RingCntCntl;
          };
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topSvtDro0Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topLvtDro1Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topSvtDro2Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topLvtDro3Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topSvtDro4Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_topLvtDro5Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_avioSvtDro0Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_avioLvtDro1Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_avioSvtDro2Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_avioLvtDro3Cnt;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DCoreClkCtrl_clkEN(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DCoreClkCtrl_clkEN(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_clkEN(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DCoreClkCtrl_clkEN(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_gfx3DCoreClkCtrl_ClkPllSel(r32)         _BFGET_(r32, 3, 1)
    #define   SET32Gbl_gfx3DCoreClkCtrl_ClkPllSel(r32,v)       _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_ClkPllSel(r16)         _BFGET_(r16, 3, 1)
    #define   SET16Gbl_gfx3DCoreClkCtrl_ClkPllSel(r16,v)       _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_gfx3DCoreClkCtrl_ClkPllSwitch(r32)      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_gfx3DCoreClkCtrl_ClkPllSwitch(r32,v)    _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_ClkPllSwitch(r16)      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_gfx3DCoreClkCtrl_ClkPllSwitch(r16,v)    _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_gfx3DCoreClkCtrl_ClkSwitch(r32)         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_gfx3DCoreClkCtrl_ClkSwitch(r32,v)       _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_ClkSwitch(r16)         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_gfx3DCoreClkCtrl_ClkSwitch(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_gfx3DCoreClkCtrl_ClkD3Switch(r32)       _BFGET_(r32, 6, 6)
    #define   SET32Gbl_gfx3DCoreClkCtrl_ClkD3Switch(r32,v)     _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_ClkD3Switch(r16)       _BFGET_(r16, 6, 6)
    #define   SET16Gbl_gfx3DCoreClkCtrl_ClkD3Switch(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_gfx3DCoreClkCtrl_ClkSel(r32)            _BFGET_(r32, 9, 7)
    #define   SET32Gbl_gfx3DCoreClkCtrl_ClkSel(r32,v)          _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_gfx3DCoreClkCtrl_ClkSel(r16)            _BFGET_(r16, 9, 7)
    #define   SET16Gbl_gfx3DCoreClkCtrl_ClkSel(r16,v)          _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_gfx3DCoreClkCtrl                        {\
            UNSG32 ugfx3DCoreClkCtrl_clkEN                     :  1;\
            UNSG32 ugfx3DCoreClkCtrl_ClkPllSel                 :  3;\
            UNSG32 ugfx3DCoreClkCtrl_ClkPllSwitch              :  1;\
            UNSG32 ugfx3DCoreClkCtrl_ClkSwitch                 :  1;\
            UNSG32 ugfx3DCoreClkCtrl_ClkD3Switch               :  1;\
            UNSG32 ugfx3DCoreClkCtrl_ClkSel                    :  3;\
            UNSG32 RSVDx22C_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_gfx3DCoreClkCtrl;
            struct w32Gbl_gfx3DCoreClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DSysClkCtrl_clkEN(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DSysClkCtrl_clkEN(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_clkEN(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DSysClkCtrl_clkEN(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_gfx3DSysClkCtrl_ClkPllSel(r32)          _BFGET_(r32, 3, 1)
    #define   SET32Gbl_gfx3DSysClkCtrl_ClkPllSel(r32,v)        _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_ClkPllSel(r16)          _BFGET_(r16, 3, 1)
    #define   SET16Gbl_gfx3DSysClkCtrl_ClkPllSel(r16,v)        _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_gfx3DSysClkCtrl_ClkPllSwitch(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_gfx3DSysClkCtrl_ClkPllSwitch(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_ClkPllSwitch(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_gfx3DSysClkCtrl_ClkPllSwitch(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_gfx3DSysClkCtrl_ClkSwitch(r32)          _BFGET_(r32, 5, 5)
    #define   SET32Gbl_gfx3DSysClkCtrl_ClkSwitch(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_ClkSwitch(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_gfx3DSysClkCtrl_ClkSwitch(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_gfx3DSysClkCtrl_ClkD3Switch(r32)        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_gfx3DSysClkCtrl_ClkD3Switch(r32,v)      _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_ClkD3Switch(r16)        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_gfx3DSysClkCtrl_ClkD3Switch(r16,v)      _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_gfx3DSysClkCtrl_ClkSel(r32)             _BFGET_(r32, 9, 7)
    #define   SET32Gbl_gfx3DSysClkCtrl_ClkSel(r32,v)           _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_gfx3DSysClkCtrl_ClkSel(r16)             _BFGET_(r16, 9, 7)
    #define   SET16Gbl_gfx3DSysClkCtrl_ClkSel(r16,v)           _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_gfx3DSysClkCtrl                         {\
            UNSG32 ugfx3DSysClkCtrl_clkEN                      :  1;\
            UNSG32 ugfx3DSysClkCtrl_ClkPllSel                  :  3;\
            UNSG32 ugfx3DSysClkCtrl_ClkPllSwitch               :  1;\
            UNSG32 ugfx3DSysClkCtrl_ClkSwitch                  :  1;\
            UNSG32 ugfx3DSysClkCtrl_ClkD3Switch                :  1;\
            UNSG32 ugfx3DSysClkCtrl_ClkSel                     :  3;\
            UNSG32 RSVDx230_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_gfx3DSysClkCtrl;
            struct w32Gbl_gfx3DSysClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_arcRefClkCtrl_clkEN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_arcRefClkCtrl_clkEN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_arcRefClkCtrl_clkEN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_arcRefClkCtrl_clkEN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_arcRefClkCtrl_ClkPllSel(r32)            _BFGET_(r32, 3, 1)
    #define   SET32Gbl_arcRefClkCtrl_ClkPllSel(r32,v)          _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_arcRefClkCtrl_ClkPllSel(r16)            _BFGET_(r16, 3, 1)
    #define   SET16Gbl_arcRefClkCtrl_ClkPllSel(r16,v)          _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_arcRefClkCtrl_ClkPllSwitch(r32)         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_arcRefClkCtrl_ClkPllSwitch(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_arcRefClkCtrl_ClkPllSwitch(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_arcRefClkCtrl_ClkPllSwitch(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_arcRefClkCtrl_ClkSwitch(r32)            _BFGET_(r32, 5, 5)
    #define   SET32Gbl_arcRefClkCtrl_ClkSwitch(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_arcRefClkCtrl_ClkSwitch(r16)            _BFGET_(r16, 5, 5)
    #define   SET16Gbl_arcRefClkCtrl_ClkSwitch(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_arcRefClkCtrl_ClkD3Switch(r32)          _BFGET_(r32, 6, 6)
    #define   SET32Gbl_arcRefClkCtrl_ClkD3Switch(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_arcRefClkCtrl_ClkD3Switch(r16)          _BFGET_(r16, 6, 6)
    #define   SET16Gbl_arcRefClkCtrl_ClkD3Switch(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_arcRefClkCtrl_ClkSel(r32)               _BFGET_(r32, 9, 7)
    #define   SET32Gbl_arcRefClkCtrl_ClkSel(r32,v)             _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_arcRefClkCtrl_ClkSel(r16)               _BFGET_(r16, 9, 7)
    #define   SET16Gbl_arcRefClkCtrl_ClkSel(r16,v)             _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_arcRefClkCtrl                           {\
            UNSG32 uarcRefClkCtrl_clkEN                        :  1;\
            UNSG32 uarcRefClkCtrl_ClkPllSel                    :  3;\
            UNSG32 uarcRefClkCtrl_ClkPllSwitch                 :  1;\
            UNSG32 uarcRefClkCtrl_ClkSwitch                    :  1;\
            UNSG32 uarcRefClkCtrl_ClkD3Switch                  :  1;\
            UNSG32 uarcRefClkCtrl_ClkSel                       :  3;\
            UNSG32 RSVDx234_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_arcRefClkCtrl;
            struct w32Gbl_arcRefClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_vipClkCtrl_clkEN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_vipClkCtrl_clkEN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_vipClkCtrl_clkEN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_vipClkCtrl_clkEN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_vipClkCtrl_ClkPllSel(r32)               _BFGET_(r32, 3, 1)
    #define   SET32Gbl_vipClkCtrl_ClkPllSel(r32,v)             _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_vipClkCtrl_ClkPllSel(r16)               _BFGET_(r16, 3, 1)
    #define   SET16Gbl_vipClkCtrl_ClkPllSel(r16,v)             _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_vipClkCtrl_ClkPllSwitch(r32)            _BFGET_(r32, 4, 4)
    #define   SET32Gbl_vipClkCtrl_ClkPllSwitch(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_vipClkCtrl_ClkPllSwitch(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_vipClkCtrl_ClkPllSwitch(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_vipClkCtrl_ClkSwitch(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_vipClkCtrl_ClkSwitch(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_vipClkCtrl_ClkSwitch(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_vipClkCtrl_ClkSwitch(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_vipClkCtrl_ClkD3Switch(r32)             _BFGET_(r32, 6, 6)
    #define   SET32Gbl_vipClkCtrl_ClkD3Switch(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_vipClkCtrl_ClkD3Switch(r16)             _BFGET_(r16, 6, 6)
    #define   SET16Gbl_vipClkCtrl_ClkD3Switch(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_vipClkCtrl_ClkSel(r32)                  _BFGET_(r32, 9, 7)
    #define   SET32Gbl_vipClkCtrl_ClkSel(r32,v)                _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_vipClkCtrl_ClkSel(r16)                  _BFGET_(r16, 9, 7)
    #define   SET16Gbl_vipClkCtrl_ClkSel(r16,v)                _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_vipClkCtrl                              {\
            UNSG32 uvipClkCtrl_clkEN                           :  1;\
            UNSG32 uvipClkCtrl_ClkPllSel                       :  3;\
            UNSG32 uvipClkCtrl_ClkPllSwitch                    :  1;\
            UNSG32 uvipClkCtrl_ClkSwitch                       :  1;\
            UNSG32 uvipClkCtrl_ClkD3Switch                     :  1;\
            UNSG32 uvipClkCtrl_ClkSel                          :  3;\
            UNSG32 RSVDx238_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_vipClkCtrl;
            struct w32Gbl_vipClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdioXinClkCtrl_ClkEN(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_sdioXinClkCtrl_ClkEN(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkEN(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sdioXinClkCtrl_ClkEN(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sdioXinClkCtrl_ClkPllSel(r32)           _BFGET_(r32, 3, 1)
    #define   SET32Gbl_sdioXinClkCtrl_ClkPllSel(r32,v)         _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkPllSel(r16)           _BFGET_(r16, 3, 1)
    #define   SET16Gbl_sdioXinClkCtrl_ClkPllSel(r16,v)         _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_sdioXinClkCtrl_ClkPllSwitch(r32)        _BFGET_(r32, 4, 4)
    #define   SET32Gbl_sdioXinClkCtrl_ClkPllSwitch(r32,v)      _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkPllSwitch(r16)        _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sdioXinClkCtrl_ClkPllSwitch(r16,v)      _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_sdioXinClkCtrl_ClkSwitch(r32)           _BFGET_(r32, 5, 5)
    #define   SET32Gbl_sdioXinClkCtrl_ClkSwitch(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkSwitch(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_sdioXinClkCtrl_ClkSwitch(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_sdioXinClkCtrl_ClkD3Switch(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_sdioXinClkCtrl_ClkD3Switch(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkD3Switch(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_sdioXinClkCtrl_ClkD3Switch(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_sdioXinClkCtrl_ClkSel(r32)              _BFGET_(r32, 9, 7)
    #define   SET32Gbl_sdioXinClkCtrl_ClkSel(r32,v)            _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_sdioXinClkCtrl_ClkSel(r16)              _BFGET_(r16, 9, 7)
    #define   SET16Gbl_sdioXinClkCtrl_ClkSel(r16,v)            _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_sdioXinClkCtrl                          {\
            UNSG32 usdioXinClkCtrl_ClkEN                       :  1;\
            UNSG32 usdioXinClkCtrl_ClkPllSel                   :  3;\
            UNSG32 usdioXinClkCtrl_ClkPllSwitch                :  1;\
            UNSG32 usdioXinClkCtrl_ClkSwitch                   :  1;\
            UNSG32 usdioXinClkCtrl_ClkD3Switch                 :  1;\
            UNSG32 usdioXinClkCtrl_ClkSel                      :  3;\
            UNSG32 RSVDx23C_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_sdioXinClkCtrl;
            struct w32Gbl_sdioXinClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdio1XinClkCtrl_ClkEN(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkEN(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkEN(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkEN(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sdio1XinClkCtrl_ClkPllSel(r32)          _BFGET_(r32, 3, 1)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkPllSel(r32,v)        _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkPllSel(r16)          _BFGET_(r16, 3, 1)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkPllSel(r16,v)        _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_sdio1XinClkCtrl_ClkPllSwitch(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkPllSwitch(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkPllSwitch(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkPllSwitch(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_sdio1XinClkCtrl_ClkSwitch(r32)          _BFGET_(r32, 5, 5)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkSwitch(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkSwitch(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkSwitch(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_sdio1XinClkCtrl_ClkD3Switch(r32)        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkD3Switch(r32,v)      _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkD3Switch(r16)        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkD3Switch(r16,v)      _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_sdio1XinClkCtrl_ClkSel(r32)             _BFGET_(r32, 9, 7)
    #define   SET32Gbl_sdio1XinClkCtrl_ClkSel(r32,v)           _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_sdio1XinClkCtrl_ClkSel(r16)             _BFGET_(r16, 9, 7)
    #define   SET16Gbl_sdio1XinClkCtrl_ClkSel(r16,v)           _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_sdio1XinClkCtrl                         {\
            UNSG32 usdio1XinClkCtrl_ClkEN                      :  1;\
            UNSG32 usdio1XinClkCtrl_ClkPllSel                  :  3;\
            UNSG32 usdio1XinClkCtrl_ClkPllSwitch               :  1;\
            UNSG32 usdio1XinClkCtrl_ClkSwitch                  :  1;\
            UNSG32 usdio1XinClkCtrl_ClkD3Switch                :  1;\
            UNSG32 usdio1XinClkCtrl_ClkSel                     :  3;\
            UNSG32 RSVDx240_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_sdio1XinClkCtrl;
            struct w32Gbl_sdio1XinClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkEN(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkEN(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkEN(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkEN(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkPllSel(r32)        _BFGET_(r32, 3, 1)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkPllSel(r32,v)      _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkPllSel(r16)        _BFGET_(r16, 3, 1)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkPllSel(r16,v)      _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkPllSwitch(r32)     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkPllSwitch(r32,v)   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkPllSwitch(r16)     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkPllSwitch(r16,v)   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkSwitch(r32)        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkSwitch(r32,v)      _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkSwitch(r16)        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkSwitch(r16,v)      _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkD3Switch(r32)      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkD3Switch(r32,v)    _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkD3Switch(r16)      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkD3Switch(r16,v)    _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_gfx3DExtraClkCtrl_ClkSel(r32)           _BFGET_(r32, 9, 7)
    #define   SET32Gbl_gfx3DExtraClkCtrl_ClkSel(r32,v)         _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_gfx3DExtraClkCtrl_ClkSel(r16)           _BFGET_(r16, 9, 7)
    #define   SET16Gbl_gfx3DExtraClkCtrl_ClkSel(r16,v)         _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_gfx3DExtraClkCtrl                       {\
            UNSG32 ugfx3DExtraClkCtrl_ClkEN                    :  1;\
            UNSG32 ugfx3DExtraClkCtrl_ClkPllSel                :  3;\
            UNSG32 ugfx3DExtraClkCtrl_ClkPllSwitch             :  1;\
            UNSG32 ugfx3DExtraClkCtrl_ClkSwitch                :  1;\
            UNSG32 ugfx3DExtraClkCtrl_ClkD3Switch              :  1;\
            UNSG32 ugfx3DExtraClkCtrl_ClkSel                   :  3;\
            UNSG32 RSVDx244_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_gfx3DExtraClkCtrl;
            struct w32Gbl_gfx3DExtraClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DReset_SyncReset(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DReset_SyncReset(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DReset_SyncReset(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DReset_SyncReset(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DReset                              {\
            UNSG32 ugfx3DReset_SyncReset                       :  1;\
            UNSG32 RSVDx248_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DReset;
            struct w32Gbl_gfx3DReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gc360ClkCtrl_ClkEN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gc360ClkCtrl_ClkEN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkEN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gc360ClkCtrl_ClkEN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_gc360ClkCtrl_ClkPllSel(r32)             _BFGET_(r32, 3, 1)
    #define   SET32Gbl_gc360ClkCtrl_ClkPllSel(r32,v)           _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkPllSel(r16)             _BFGET_(r16, 3, 1)
    #define   SET16Gbl_gc360ClkCtrl_ClkPllSel(r16,v)           _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_gc360ClkCtrl_ClkPllSwitch(r32)          _BFGET_(r32, 4, 4)
    #define   SET32Gbl_gc360ClkCtrl_ClkPllSwitch(r32,v)        _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkPllSwitch(r16)          _BFGET_(r16, 4, 4)
    #define   SET16Gbl_gc360ClkCtrl_ClkPllSwitch(r16,v)        _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_gc360ClkCtrl_ClkSwitch(r32)             _BFGET_(r32, 5, 5)
    #define   SET32Gbl_gc360ClkCtrl_ClkSwitch(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkSwitch(r16)             _BFGET_(r16, 5, 5)
    #define   SET16Gbl_gc360ClkCtrl_ClkSwitch(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_gc360ClkCtrl_ClkD3Switch(r32)           _BFGET_(r32, 6, 6)
    #define   SET32Gbl_gc360ClkCtrl_ClkD3Switch(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkD3Switch(r16)           _BFGET_(r16, 6, 6)
    #define   SET16Gbl_gc360ClkCtrl_ClkD3Switch(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_gc360ClkCtrl_ClkSel(r32)                _BFGET_(r32, 9, 7)
    #define   SET32Gbl_gc360ClkCtrl_ClkSel(r32,v)              _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_gc360ClkCtrl_ClkSel(r16)                _BFGET_(r16, 9, 7)
    #define   SET16Gbl_gc360ClkCtrl_ClkSel(r16,v)              _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_gc360ClkCtrl                            {\
            UNSG32 ugc360ClkCtrl_ClkEN                         :  1;\
            UNSG32 ugc360ClkCtrl_ClkPllSel                     :  3;\
            UNSG32 ugc360ClkCtrl_ClkPllSwitch                  :  1;\
            UNSG32 ugc360ClkCtrl_ClkSwitch                     :  1;\
            UNSG32 ugc360ClkCtrl_ClkD3Switch                   :  1;\
            UNSG32 ugc360ClkCtrl_ClkSel                        :  3;\
            UNSG32 RSVDx24C_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_gc360ClkCtrl;
            struct w32Gbl_gc360ClkCtrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdioDllMstRef_ClkEN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_sdioDllMstRef_ClkEN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_sdioDllMstRef_ClkEN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sdioDllMstRef_ClkEN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sdioDllMstRef_ClkPllSel(r32)            _BFGET_(r32, 3, 1)
    #define   SET32Gbl_sdioDllMstRef_ClkPllSel(r32,v)          _BFSET_(r32, 3, 1,v)
    #define   GET16Gbl_sdioDllMstRef_ClkPllSel(r16)            _BFGET_(r16, 3, 1)
    #define   SET16Gbl_sdioDllMstRef_ClkPllSel(r16,v)          _BFSET_(r16, 3, 1,v)

    #define   GET32Gbl_sdioDllMstRef_ClkPllSwitch(r32)         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_sdioDllMstRef_ClkPllSwitch(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_sdioDllMstRef_ClkPllSwitch(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sdioDllMstRef_ClkPllSwitch(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_sdioDllMstRef_ClkSwitch(r32)            _BFGET_(r32, 5, 5)
    #define   SET32Gbl_sdioDllMstRef_ClkSwitch(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_sdioDllMstRef_ClkSwitch(r16)            _BFGET_(r16, 5, 5)
    #define   SET16Gbl_sdioDllMstRef_ClkSwitch(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_sdioDllMstRef_ClkD3Switch(r32)          _BFGET_(r32, 6, 6)
    #define   SET32Gbl_sdioDllMstRef_ClkD3Switch(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_sdioDllMstRef_ClkD3Switch(r16)          _BFGET_(r16, 6, 6)
    #define   SET16Gbl_sdioDllMstRef_ClkD3Switch(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_sdioDllMstRef_ClkSel(r32)               _BFGET_(r32, 9, 7)
    #define   SET32Gbl_sdioDllMstRef_ClkSel(r32,v)             _BFSET_(r32, 9, 7,v)
    #define   GET16Gbl_sdioDllMstRef_ClkSel(r16)               _BFGET_(r16, 9, 7)
    #define   SET16Gbl_sdioDllMstRef_ClkSel(r16,v)             _BFSET_(r16, 9, 7,v)

    #define     w32Gbl_sdioDllMstRef                           {\
            UNSG32 usdioDllMstRef_ClkEN                        :  1;\
            UNSG32 usdioDllMstRef_ClkPllSel                    :  3;\
            UNSG32 usdioDllMstRef_ClkPllSwitch                 :  1;\
            UNSG32 usdioDllMstRef_ClkSwitch                    :  1;\
            UNSG32 usdioDllMstRef_ClkD3Switch                  :  1;\
            UNSG32 usdioDllMstRef_ClkSel                       :  3;\
            UNSG32 RSVDx250_b10                                : 22;\
          }
    union { UNSG32 u32Gbl_sdioDllMstRef;
            struct w32Gbl_sdioDllMstRef;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdioDllMstCtrl_PH_SEL1(r32)             _BFGET_(r32, 4, 0)
    #define   SET32Gbl_sdioDllMstCtrl_PH_SEL1(r32,v)           _BFSET_(r32, 4, 0,v)
    #define   GET16Gbl_sdioDllMstCtrl_PH_SEL1(r16)             _BFGET_(r16, 4, 0)
    #define   SET16Gbl_sdioDllMstCtrl_PH_SEL1(r16,v)           _BFSET_(r16, 4, 0,v)

    #define   GET32Gbl_sdioDllMstCtrl_PH_SEL2(r32)             _BFGET_(r32, 9, 5)
    #define   SET32Gbl_sdioDllMstCtrl_PH_SEL2(r32,v)           _BFSET_(r32, 9, 5,v)
    #define   GET16Gbl_sdioDllMstCtrl_PH_SEL2(r16)             _BFGET_(r16, 9, 5)
    #define   SET16Gbl_sdioDllMstCtrl_PH_SEL2(r16,v)           _BFSET_(r16, 9, 5,v)

    #define   GET32Gbl_sdioDllMstCtrl_PH_SEL3(r32)             _BFGET_(r32,14,10)
    #define   SET32Gbl_sdioDllMstCtrl_PH_SEL3(r32,v)           _BFSET_(r32,14,10,v)
    #define   GET16Gbl_sdioDllMstCtrl_PH_SEL3(r16)             _BFGET_(r16,14,10)
    #define   SET16Gbl_sdioDllMstCtrl_PH_SEL3(r16,v)           _BFSET_(r16,14,10,v)

    #define   GET32Gbl_sdioDllMstCtrl_PH_SEL4(r32)             _BFGET_(r32,19,15)
    #define   SET32Gbl_sdioDllMstCtrl_PH_SEL4(r32,v)           _BFSET_(r32,19,15,v)

    #define   GET32Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN(r32)      _BFGET_(r32,20,20)
    #define   SET32Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN(r32,v)    _BFSET_(r32,20,20,v)
    #define   GET16Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN(r16)      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_sdioDllMstCtrl_AUTO_UPDATE_EN(r16,v)    _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_sdioDllMstCtrl_UPDATE_EN(r32)           _BFGET_(r32,21,21)
    #define   SET32Gbl_sdioDllMstCtrl_UPDATE_EN(r32,v)         _BFSET_(r32,21,21,v)
    #define   GET16Gbl_sdioDllMstCtrl_UPDATE_EN(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_sdioDllMstCtrl_UPDATE_EN(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_sdioDllMstCtrl_RESET(r32)               _BFGET_(r32,22,22)
    #define   SET32Gbl_sdioDllMstCtrl_RESET(r32,v)             _BFSET_(r32,22,22,v)
    #define   GET16Gbl_sdioDllMstCtrl_RESET(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_sdioDllMstCtrl_RESET(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_sdioDllMstCtrl_GAIN2X(r32)              _BFGET_(r32,23,23)
    #define   SET32Gbl_sdioDllMstCtrl_GAIN2X(r32,v)            _BFSET_(r32,23,23,v)
    #define   GET16Gbl_sdioDllMstCtrl_GAIN2X(r16)              _BFGET_(r16, 7, 7)
    #define   SET16Gbl_sdioDllMstCtrl_GAIN2X(r16,v)            _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_sdioDllMstCtrl_TEST_EN(r32)             _BFGET_(r32,24,24)
    #define   SET32Gbl_sdioDllMstCtrl_TEST_EN(r32,v)           _BFSET_(r32,24,24,v)
    #define   GET16Gbl_sdioDllMstCtrl_TEST_EN(r16)             _BFGET_(r16, 8, 8)
    #define   SET16Gbl_sdioDllMstCtrl_TEST_EN(r16,v)           _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_sdioDllMstCtrl_BYPASS_EN(r32)           _BFGET_(r32,25,25)
    #define   SET32Gbl_sdioDllMstCtrl_BYPASS_EN(r32,v)         _BFSET_(r32,25,25,v)
    #define   GET16Gbl_sdioDllMstCtrl_BYPASS_EN(r16)           _BFGET_(r16, 9, 9)
    #define   SET16Gbl_sdioDllMstCtrl_BYPASS_EN(r16,v)         _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_sdioDllMstCtrl                          {\
            UNSG32 usdioDllMstCtrl_PH_SEL1                     :  5;\
            UNSG32 usdioDllMstCtrl_PH_SEL2                     :  5;\
            UNSG32 usdioDllMstCtrl_PH_SEL3                     :  5;\
            UNSG32 usdioDllMstCtrl_PH_SEL4                     :  5;\
            UNSG32 usdioDllMstCtrl_AUTO_UPDATE_EN              :  1;\
            UNSG32 usdioDllMstCtrl_UPDATE_EN                   :  1;\
            UNSG32 usdioDllMstCtrl_RESET                       :  1;\
            UNSG32 usdioDllMstCtrl_GAIN2X                      :  1;\
            UNSG32 usdioDllMstCtrl_TEST_EN                     :  1;\
            UNSG32 usdioDllMstCtrl_BYPASS_EN                   :  1;\
            UNSG32 RSVDx254_b26                                :  6;\
          }
    union { UNSG32 u32Gbl_sdioDllMstCtrl;
            struct w32Gbl_sdioDllMstCtrl;
          };
    #define   GET32Gbl_sdioDllMstCtrl_DELAY_TEST(r32)          _BFGET_(r32, 8, 0)
    #define   SET32Gbl_sdioDllMstCtrl_DELAY_TEST(r32,v)        _BFSET_(r32, 8, 0,v)
    #define   GET16Gbl_sdioDllMstCtrl_DELAY_TEST(r16)          _BFGET_(r16, 8, 0)
    #define   SET16Gbl_sdioDllMstCtrl_DELAY_TEST(r16,v)        _BFSET_(r16, 8, 0,v)

    #define   GET32Gbl_sdioDllMstCtrl_RESERVE(r32)             _BFGET_(r32,13, 9)
    #define   SET32Gbl_sdioDllMstCtrl_RESERVE(r32,v)           _BFSET_(r32,13, 9,v)
    #define   GET16Gbl_sdioDllMstCtrl_RESERVE(r16)             _BFGET_(r16,13, 9)
    #define   SET16Gbl_sdioDllMstCtrl_RESERVE(r16,v)           _BFSET_(r16,13, 9,v)

    #define     w32Gbl_sdioDllMstCtrl1                         {\
            UNSG32 usdioDllMstCtrl_DELAY_TEST                  :  9;\
            UNSG32 usdioDllMstCtrl_RESERVE                     :  5;\
            UNSG32 RSVDx258_b14                                : 18;\
          }
    union { UNSG32 u32Gbl_sdioDllMstCtrl1;
            struct w32Gbl_sdioDllMstCtrl1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdioDllMstStatus_DELAY_CTRL2(r32)       _BFGET_(r32, 8, 0)
    #define   SET32Gbl_sdioDllMstStatus_DELAY_CTRL2(r32,v)     _BFSET_(r32, 8, 0,v)
    #define   GET16Gbl_sdioDllMstStatus_DELAY_CTRL2(r16)       _BFGET_(r16, 8, 0)
    #define   SET16Gbl_sdioDllMstStatus_DELAY_CTRL2(r16,v)     _BFSET_(r16, 8, 0,v)

    #define   GET32Gbl_sdioDllMstStatus_DELAY_CTRL3(r32)       _BFGET_(r32,17, 9)
    #define   SET32Gbl_sdioDllMstStatus_DELAY_CTRL3(r32,v)     _BFSET_(r32,17, 9,v)

    #define   GET32Gbl_sdioDllMstStatus_DELAY_CTRL4(r32)       _BFGET_(r32,26,18)
    #define   SET32Gbl_sdioDllMstStatus_DELAY_CTRL4(r32,v)     _BFSET_(r32,26,18,v)
    #define   GET16Gbl_sdioDllMstStatus_DELAY_CTRL4(r16)       _BFGET_(r16,10, 2)
    #define   SET16Gbl_sdioDllMstStatus_DELAY_CTRL4(r16,v)     _BFSET_(r16,10, 2,v)

    #define   GET32Gbl_sdioDllMstStatus_PRE_LOCK(r32)          _BFGET_(r32,27,27)
    #define   SET32Gbl_sdioDllMstStatus_PRE_LOCK(r32,v)        _BFSET_(r32,27,27,v)
    #define   GET16Gbl_sdioDllMstStatus_PRE_LOCK(r16)          _BFGET_(r16,11,11)
    #define   SET16Gbl_sdioDllMstStatus_PRE_LOCK(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32Gbl_sdioDllMstStatus_DLL_LOCK(r32)          _BFGET_(r32,28,28)
    #define   SET32Gbl_sdioDllMstStatus_DLL_LOCK(r32,v)        _BFSET_(r32,28,28,v)
    #define   GET16Gbl_sdioDllMstStatus_DLL_LOCK(r16)          _BFGET_(r16,12,12)
    #define   SET16Gbl_sdioDllMstStatus_DLL_LOCK(r16,v)        _BFSET_(r16,12,12,v)

    #define     w32Gbl_sdioDllMstStatus                        {\
            UNSG32 usdioDllMstStatus_DELAY_CTRL2               :  9;\
            UNSG32 usdioDllMstStatus_DELAY_CTRL3               :  9;\
            UNSG32 usdioDllMstStatus_DELAY_CTRL4               :  9;\
            UNSG32 usdioDllMstStatus_PRE_LOCK                  :  1;\
            UNSG32 usdioDllMstStatus_DLL_LOCK                  :  1;\
            UNSG32 RSVDx25C_b29                                :  3;\
          }
    union { UNSG32 u32Gbl_sdioDllMstStatus;
            struct w32Gbl_sdioDllMstStatus;
          };
    #define   GET32Gbl_sdioDllMstStatus_DELAY_OUT(r32)         _BFGET_(r32, 7, 0)
    #define   SET32Gbl_sdioDllMstStatus_DELAY_OUT(r32,v)       _BFSET_(r32, 7, 0,v)
    #define   GET16Gbl_sdioDllMstStatus_DELAY_OUT(r16)         _BFGET_(r16, 7, 0)
    #define   SET16Gbl_sdioDllMstStatus_DELAY_OUT(r16,v)       _BFSET_(r16, 7, 0,v)

    #define     w32Gbl_sdioDllMstStatus1                       {\
            UNSG32 usdioDllMstStatus_DELAY_OUT                 :  8;\
            UNSG32 RSVDx260_b8                                 : 24;\
          }
    union { UNSG32 u32Gbl_sdioDllMstStatus1;
            struct w32Gbl_sdioDllMstStatus1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sdioPortSel_port0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_sdioPortSel_port0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_sdioPortSel_port0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_sdioPortSel_port0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_sdioPortSel_port1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_sdioPortSel_port1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_sdioPortSel_port1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_sdioPortSel_port1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_sdioPortSel                             {\
            UNSG32 usdioPortSel_port0                          :  1;\
            UNSG32 usdioPortSel_port1                          :  1;\
            UNSG32 RSVDx264_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_sdioPortSel;
            struct w32Gbl_sdioPortSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gc360Reset_SyncReset(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gc360Reset_SyncReset(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gc360Reset_SyncReset(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gc360Reset_SyncReset(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gc360Reset                              {\
            UNSG32 ugc360Reset_SyncReset                       :  1;\
            UNSG32 RSVDx268_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gc360Reset;
            struct w32Gbl_gc360Reset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SpdifRxReset_SyncReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SpdifRxReset_SyncReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SpdifRxReset_SyncReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SpdifRxReset_SyncReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_SpdifRxReset                            {\
            UNSG32 uSpdifRxReset_SyncReset                     :  1;\
            UNSG32 RSVDx26C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_SpdifRxReset;
            struct w32Gbl_SpdifRxReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DDisRamClkGate_drcg(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DDisRamClkGate_drcg(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DDisRamClkGate_drcg(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DDisRamClkGate_drcg(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DDisRamClkGate                      {\
            UNSG32 ugfx3DDisRamClkGate_drcg                    :  1;\
            UNSG32 RSVDx270_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DDisRamClkGate;
            struct w32Gbl_gfx3DDisRamClkGate;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DResetStatus_SyncReset(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DResetStatus_SyncReset(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DResetStatus_SyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DResetStatus_SyncReset(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DResetStatus                        {\
            UNSG32 ugfx3DResetStatus_SyncReset                 :  1;\
            UNSG32 RSVDx274_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DResetStatus;
            struct w32Gbl_gfx3DResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gc360DisRCG_drcg(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gc360DisRCG_drcg(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gc360DisRCG_drcg(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gc360DisRCG_drcg(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gc360DisRCG                             {\
            UNSG32 ugc360DisRCG_drcg                           :  1;\
            UNSG32 RSVDx278_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gc360DisRCG;
            struct w32Gbl_gc360DisRCG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gc360ResetStatus_SyncReset(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gc360ResetStatus_SyncReset(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gc360ResetStatus_SyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gc360ResetStatus_SyncReset(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gc360ResetStatus                        {\
            UNSG32 ugc360ResetStatus_SyncReset                 :  1;\
            UNSG32 RSVDx27C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gc360ResetStatus;
            struct w32Gbl_gc360ResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SpdifRxResetStatus_SyncReset(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SpdifRxResetStatus_SyncReset(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SpdifRxResetStatus_SyncReset(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SpdifRxResetStatus_SyncReset(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_SpdifRxResetStatus                      {\
            UNSG32 uSpdifRxResetStatus_SyncReset               :  1;\
            UNSG32 RSVDx280_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_SpdifRxResetStatus;
            struct w32Gbl_SpdifRxResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DroEnable_EnDroCounter(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DroEnable_EnDroCounter(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DroEnable_EnDroCounter(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DroEnable_EnDroCounter(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DroEnable                               {\
            UNSG32 uDroEnable_EnDroCounter                     :  1;\
            UNSG32 RSVDx284_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DroEnable;
            struct w32Gbl_DroEnable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DroCounter_CountVal(r32)                _BFGET_(r32,31, 0)
    #define   SET32Gbl_DroCounter_CountVal(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32Gbl_DroCounter                              {\
            UNSG32 uDroCounter_CountVal                        : 32;\
          }
    union { UNSG32 u32Gbl_DroCounter;
            struct w32Gbl_DroCounter;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DroDone_status(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DroDone_status(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DroDone_status(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DroDone_status(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DroDone                                 {\
            UNSG32 uDroDone_status                             :  1;\
            UNSG32 RSVDx28C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DroDone;
            struct w32Gbl_DroDone;
          };
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_cpussSvtDro0Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_cpussLvtDro1Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_cpussSvtDro2Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_cpussLvtDro3Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_vMetaSvtDro0Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_vMetaLvtDro1Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_gfx3DSvtDro0Cnt;
    ///////////////////////////////////////////////////////////
              SIE_droCount                                     ie_gfx3DLvtDro1Cnt;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_INT_ID_VALUE(r32)                       _BFGET_(r32, 7, 0)
    #define   SET32Gbl_INT_ID_VALUE(r32,v)                     _BFSET_(r32, 7, 0,v)
    #define   GET16Gbl_INT_ID_VALUE(r16)                       _BFGET_(r16, 7, 0)
    #define   SET16Gbl_INT_ID_VALUE(r16,v)                     _BFSET_(r16, 7, 0,v)

    #define     w32Gbl_INT_ID                                  {\
            UNSG32 uINT_ID_VALUE                               :  8;\
            UNSG32 RSVDx2B0_b8                                 : 24;\
          }
    union { UNSG32 u32Gbl_INT_ID;
            struct w32Gbl_INT_ID;
          };
    ///////////////////////////////////////////////////////////
              SIE_clkD1                                        ie_hdmirxFpllRefClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_hdmirxTClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD8                                        ie_hdmirxMClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD8                                        ie_gethRgmiiClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_pcieTestClk;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_stickyResetN_gethRgmiiMemRstn(r32)      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_stickyResetN_gethRgmiiMemRstn(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_stickyResetN_gethRgmiiMemRstn(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_stickyResetN_gethRgmiiMemRstn(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_stickyResetN_gethRgmiiRstn(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_stickyResetN_gethRgmiiRstn(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_stickyResetN_gethRgmiiRstn(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_stickyResetN_gethRgmiiRstn(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_stickyResetN_cpuPllRstn(r32)            _BFGET_(r32, 2, 2)
    #define   SET32Gbl_stickyResetN_cpuPllRstn(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_stickyResetN_cpuPllRstn(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_stickyResetN_cpuPllRstn(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_stickyResetN_memPllRstn(r32)            _BFGET_(r32, 3, 3)
    #define   SET32Gbl_stickyResetN_memPllRstn(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_stickyResetN_memPllRstn(r16)            _BFGET_(r16, 3, 3)
    #define   SET16Gbl_stickyResetN_memPllRstn(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_stickyResetN_sysPllRstn(r32)            _BFGET_(r32, 4, 4)
    #define   SET32Gbl_stickyResetN_sysPllRstn(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_stickyResetN_sysPllRstn(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_stickyResetN_sysPllRstn(r16,v)          _BFSET_(r16, 4, 4,v)

    #define     w32Gbl_stickyResetN                            {\
            UNSG32 ustickyResetN_gethRgmiiMemRstn              :  1;\
            UNSG32 ustickyResetN_gethRgmiiRstn                 :  1;\
            UNSG32 ustickyResetN_cpuPllRstn                    :  1;\
            UNSG32 ustickyResetN_memPllRstn                    :  1;\
            UNSG32 ustickyResetN_sysPllRstn                    :  1;\
            UNSG32 RSVDx2C8_b5                                 : 27;\
          }
    union { UNSG32 u32Gbl_stickyResetN;
            struct w32Gbl_stickyResetN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gethRgmii_dll_tx_delay(r32)             _BFGET_(r32, 8, 0)
    #define   SET32Gbl_gethRgmii_dll_tx_delay(r32,v)           _BFSET_(r32, 8, 0,v)
    #define   GET16Gbl_gethRgmii_dll_tx_delay(r16)             _BFGET_(r16, 8, 0)
    #define   SET16Gbl_gethRgmii_dll_tx_delay(r16,v)           _BFSET_(r16, 8, 0,v)

    #define   GET32Gbl_gethRgmii_dll_rx_delay(r32)             _BFGET_(r32,17, 9)
    #define   SET32Gbl_gethRgmii_dll_rx_delay(r32,v)           _BFSET_(r32,17, 9,v)

    #define     w32Gbl_gethRgmii_dll                           {\
            UNSG32 ugethRgmii_dll_tx_delay                     :  9;\
            UNSG32 ugethRgmii_dll_rx_delay                     :  9;\
            UNSG32 RSVDx2CC_b18                                : 14;\
          }
    union { UNSG32 u32Gbl_gethRgmii_dll;
            struct w32Gbl_gethRgmii_dll;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_funcSel_pcie_sata_sel(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_funcSel_pcie_sata_sel(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_funcSel_pcie_sata_sel(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_funcSel_pcie_sata_sel(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_funcSel_gmac_eth_sel(r32)               _BFGET_(r32, 1, 1)
    #define   SET32Gbl_funcSel_gmac_eth_sel(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_funcSel_gmac_eth_sel(r16)               _BFGET_(r16, 1, 1)
    #define   SET16Gbl_funcSel_gmac_eth_sel(r16,v)             _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_funcSel                                 {\
            UNSG32 ufuncSel_pcie_sata_sel                      :  1;\
            UNSG32 ufuncSel_gmac_eth_sel                       :  1;\
            UNSG32 RSVDx2D0_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_funcSel;
            struct w32Gbl_funcSel;
          };
    ///////////////////////////////////////////////////////////
              SIE_efuse                                        ie_efuse;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_chipCntl_pcieDownMap(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_chipCntl_pcieDownMap(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_chipCntl_pcieDownMap(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_chipCntl_pcieDownMap(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_chipCntl_pcie_rc(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_chipCntl_pcie_rc(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_chipCntl_pcie_rc(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_chipCntl_pcie_rc(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_chipCntl                                {\
            UNSG32 uchipCntl_pcieDownMap                       :  1;\
            UNSG32 uchipCntl_pcie_rc                           :  1;\
            UNSG32 RSVDx300_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_chipCntl;
            struct w32Gbl_chipCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrapEn_pllPwrDownEn(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_bootStrapEn_pllPwrDownEn(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_bootStrapEn_pllPwrDownEn(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrapEn_pllPwrDownEn(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_bootStrapEn_refClk12P5MEn(r32)          _BFGET_(r32, 1, 1)
    #define   SET32Gbl_bootStrapEn_refClk12P5MEn(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_bootStrapEn_refClk12P5MEn(r16)          _BFGET_(r16, 1, 1)
    #define   SET16Gbl_bootStrapEn_refClk12P5MEn(r16,v)        _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_bootStrapEn                             {\
            UNSG32 ubootStrapEn_pllPwrDownEn                   :  1;\
            UNSG32 ubootStrapEn_refClk12P5MEn                  :  1;\
            UNSG32 RSVDx304_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_bootStrapEn;
            struct w32Gbl_bootStrapEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_axiClkEn_avioAxiClkEn(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_axiClkEn_avioAxiClkEn(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_axiClkEn_avioAxiClkEn(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_axiClkEn_avioAxiClkEn(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_axiClkEn                                {\
            UNSG32 uaxiClkEn_avioAxiClkEn                      :  1;\
            UNSG32 RSVDx308_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_axiClkEn;
            struct w32Gbl_axiClkEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ahbClkEn_avioAhbClkEn(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ahbClkEn_avioAhbClkEn(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ahbClkEn_avioAhbClkEn(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ahbClkEn_avioAhbClkEn(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_ahbClkEn                                {\
            UNSG32 uahbClkEn_avioAhbClkEn                      :  1;\
            UNSG32 RSVDx30C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_ahbClkEn;
            struct w32Gbl_ahbClkEn;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx310                                    [31984];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS0nCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS0nCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS0nCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS0nCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS0nCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS0nCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS0nCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS0nCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SS0nCntl                           {\
            UNSG32 uSPI1_SS0nCntl_PU_EN                        :  1;\
            UNSG32 uSPI1_SS0nCntl_PD_EN                        :  1;\
            UNSG32 RSVDx8000_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SS0nCntl;
            struct w32Gbl_SPI1_SS0nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS1nCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS1nCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS1nCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS1nCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS1nCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS1nCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS1nCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS1nCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SS1nCntl                           {\
            UNSG32 uSPI1_SS1nCntl_PU_EN                        :  1;\
            UNSG32 uSPI1_SS1nCntl_PD_EN                        :  1;\
            UNSG32 RSVDx8004_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SS1nCntl;
            struct w32Gbl_SPI1_SS1nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS2nCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS2nCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS2nCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS2nCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS2nCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS2nCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS2nCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS2nCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SS2nCntl                           {\
            UNSG32 uSPI1_SS2nCntl_PU_EN                        :  1;\
            UNSG32 uSPI1_SS2nCntl_PD_EN                        :  1;\
            UNSG32 RSVDx8008_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SS2nCntl;
            struct w32Gbl_SPI1_SS2nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SCLKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SCLKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SCLKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SCLKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SCLKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SCLKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SCLKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SCLKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SCLKCntl                           {\
            UNSG32 uSPI1_SCLKCntl_PU_EN                        :  1;\
            UNSG32 uSPI1_SCLKCntl_PD_EN                        :  1;\
            UNSG32 RSVDx800C_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SCLKCntl;
            struct w32Gbl_SPI1_SCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDOCntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDOCntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SDOCntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDOCntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SDOCntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDOCntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SDOCntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDOCntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SDOCntl                            {\
            UNSG32 uSPI1_SDOCntl_PU_EN                         :  1;\
            UNSG32 uSPI1_SDOCntl_PD_EN                         :  1;\
            UNSG32 RSVDx8010_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SDOCntl;
            struct w32Gbl_SPI1_SDOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDICntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDICntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SDICntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDICntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SDICntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDICntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SDICntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDICntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_SPI1_SDICntl                            {\
            UNSG32 uSPI1_SDICntl_PU_EN                         :  1;\
            UNSG32 uSPI1_SDICntl_PD_EN                         :  1;\
            UNSG32 RSVDx8014_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_SPI1_SDICntl;
            struct w32Gbl_SPI1_SDICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_URT0_RXDCntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_URT0_RXDCntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_URT0_RXDCntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_URT0_RXDCntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_URT0_RXDCntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_URT0_RXDCntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_URT0_RXDCntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_URT0_RXDCntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_URT0_RXDCntl                            {\
            UNSG32 uURT0_RXDCntl_PU_EN                         :  1;\
            UNSG32 uURT0_RXDCntl_PD_EN                         :  1;\
            UNSG32 RSVDx8018_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_URT0_RXDCntl;
            struct w32Gbl_URT0_RXDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_URT0_TXDCntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_URT0_TXDCntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_URT0_TXDCntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_URT0_TXDCntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_URT0_TXDCntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_URT0_TXDCntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_URT0_TXDCntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_URT0_TXDCntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_URT0_TXDCntl                            {\
            UNSG32 uURT0_TXDCntl_PU_EN                         :  1;\
            UNSG32 uURT0_TXDCntl_PD_EN                         :  1;\
            UNSG32 RSVDx801C_b2                                : 30;\
          }
    union { UNSG32 u32Gbl_URT0_TXDCntl;
            struct w32Gbl_URT0_TXDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO0Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO0Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO0Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO0Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO0Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO0Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO0Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO0Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO0Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO0Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO0Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO0Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO0Cntl                               {\
            UNSG32 uDVIO0Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO0Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO0Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8020_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO0Cntl;
            struct w32Gbl_DVIO0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO1Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO1Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO1Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO1Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO1Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO1Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO1Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO1Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO1Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO1Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO1Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO1Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO1Cntl                               {\
            UNSG32 uDVIO1Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO1Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO1Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8024_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO1Cntl;
            struct w32Gbl_DVIO1Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO2Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO2Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO2Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO2Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO2Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO2Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO2Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO2Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO2Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO2Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO2Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO2Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO2Cntl                               {\
            UNSG32 uDVIO2Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO2Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO2Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8028_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO2Cntl;
            struct w32Gbl_DVIO2Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO3Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO3Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO3Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO3Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO3Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO3Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO3Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO3Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO3Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO3Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO3Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO3Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO3Cntl                               {\
            UNSG32 uDVIO3Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO3Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO3Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx802C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO3Cntl;
            struct w32Gbl_DVIO3Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO4Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO4Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO4Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO4Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO4Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO4Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO4Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO4Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO4Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO4Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO4Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO4Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO4Cntl                               {\
            UNSG32 uDVIO4Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO4Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO4Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8030_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO4Cntl;
            struct w32Gbl_DVIO4Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO5Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO5Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO5Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO5Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO5Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO5Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO5Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO5Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO5Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO5Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO5Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO5Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO5Cntl                               {\
            UNSG32 uDVIO5Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO5Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO5Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8034_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO5Cntl;
            struct w32Gbl_DVIO5Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO6Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO6Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO6Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO6Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO6Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO6Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO6Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO6Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO6Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO6Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO6Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO6Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO6Cntl                               {\
            UNSG32 uDVIO6Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO6Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO6Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8038_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO6Cntl;
            struct w32Gbl_DVIO6Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO7Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO7Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO7Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO7Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO7Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO7Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO7Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO7Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO7Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO7Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO7Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO7Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO7Cntl                               {\
            UNSG32 uDVIO7Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO7Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO7Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx803C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO7Cntl;
            struct w32Gbl_DVIO7Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO8Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO8Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO8Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO8Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO8Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO8Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO8Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO8Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO8Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO8Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO8Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO8Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO8Cntl                               {\
            UNSG32 uDVIO8Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO8Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO8Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8040_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO8Cntl;
            struct w32Gbl_DVIO8Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO9Cntl_PU_EN(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO9Cntl_PU_EN(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO9Cntl_PU_EN(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO9Cntl_PU_EN(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO9Cntl_PD_EN(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO9Cntl_PD_EN(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO9Cntl_PD_EN(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO9Cntl_PD_EN(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO9Cntl_SLP_DI(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO9Cntl_SLP_DI(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO9Cntl_SLP_DI(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO9Cntl_SLP_DI(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO9Cntl                               {\
            UNSG32 uDVIO9Cntl_PU_EN                            :  1;\
            UNSG32 uDVIO9Cntl_PD_EN                            :  1;\
            UNSG32 uDVIO9Cntl_SLP_DI                           :  1;\
            UNSG32 RSVDx8044_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO9Cntl;
            struct w32Gbl_DVIO9Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO10Cntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO10Cntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO10Cntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO10Cntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO10Cntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO10Cntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO10Cntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO10Cntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO10Cntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO10Cntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO10Cntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO10Cntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO10Cntl                              {\
            UNSG32 uDVIO10Cntl_PU_EN                           :  1;\
            UNSG32 uDVIO10Cntl_PD_EN                           :  1;\
            UNSG32 uDVIO10Cntl_SLP_DI                          :  1;\
            UNSG32 RSVDx8048_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO10Cntl;
            struct w32Gbl_DVIO10Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DVIO11Cntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DVIO11Cntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DVIO11Cntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DVIO11Cntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DVIO11Cntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DVIO11Cntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DVIO11Cntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DVIO11Cntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DVIO11Cntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DVIO11Cntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DVIO11Cntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DVIO11Cntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DVIO11Cntl                              {\
            UNSG32 uDVIO11Cntl_PU_EN                           :  1;\
            UNSG32 uDVIO11Cntl_PD_EN                           :  1;\
            UNSG32 uDVIO11Cntl_SLP_DI                          :  1;\
            UNSG32 RSVDx804C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DVIO11Cntl;
            struct w32Gbl_DVIO11Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DV0_CLKCntl_PU_EN(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DV0_CLKCntl_PU_EN(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DV0_CLKCntl_PU_EN(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DV0_CLKCntl_PU_EN(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DV0_CLKCntl_PD_EN(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DV0_CLKCntl_PD_EN(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DV0_CLKCntl_PD_EN(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DV0_CLKCntl_PD_EN(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DV0_CLKCntl_SLP_DI(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DV0_CLKCntl_SLP_DI(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DV0_CLKCntl_SLP_DI(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DV0_CLKCntl_SLP_DI(r16,v)               _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DV0_CLKCntl                             {\
            UNSG32 uDV0_CLKCntl_PU_EN                          :  1;\
            UNSG32 uDV0_CLKCntl_PD_EN                          :  1;\
            UNSG32 uDV0_CLKCntl_SLP_DI                         :  1;\
            UNSG32 RSVDx8050_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DV0_CLKCntl;
            struct w32Gbl_DV0_CLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DV0_HSCntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DV0_HSCntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DV0_HSCntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DV0_HSCntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DV0_HSCntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DV0_HSCntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DV0_HSCntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DV0_HSCntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DV0_HSCntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DV0_HSCntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DV0_HSCntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DV0_HSCntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DV0_HSCntl                              {\
            UNSG32 uDV0_HSCntl_PU_EN                           :  1;\
            UNSG32 uDV0_HSCntl_PD_EN                           :  1;\
            UNSG32 uDV0_HSCntl_SLP_DI                          :  1;\
            UNSG32 RSVDx8054_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DV0_HSCntl;
            struct w32Gbl_DV0_HSCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DV0_VSCntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DV0_VSCntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DV0_VSCntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DV0_VSCntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DV0_VSCntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DV0_VSCntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DV0_VSCntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DV0_VSCntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DV0_VSCntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DV0_VSCntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DV0_VSCntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DV0_VSCntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DV0_VSCntl                              {\
            UNSG32 uDV0_VSCntl_PU_EN                           :  1;\
            UNSG32 uDV0_VSCntl_PD_EN                           :  1;\
            UNSG32 uDV0_VSCntl_SLP_DI                          :  1;\
            UNSG32 RSVDx8058_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DV0_VSCntl;
            struct w32Gbl_DV0_VSCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DV0_FIDCntl_PU_EN(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DV0_FIDCntl_PU_EN(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DV0_FIDCntl_PU_EN(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DV0_FIDCntl_PU_EN(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DV0_FIDCntl_PD_EN(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DV0_FIDCntl_PD_EN(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DV0_FIDCntl_PD_EN(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DV0_FIDCntl_PD_EN(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_DV0_FIDCntl_SLP_DI(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_DV0_FIDCntl_SLP_DI(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_DV0_FIDCntl_SLP_DI(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_DV0_FIDCntl_SLP_DI(r16,v)               _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_DV0_FIDCntl                             {\
            UNSG32 uDV0_FIDCntl_PU_EN                          :  1;\
            UNSG32 uDV0_FIDCntl_PD_EN                          :  1;\
            UNSG32 uDV0_FIDCntl_SLP_DI                         :  1;\
            UNSG32 RSVDx805C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_DV0_FIDCntl;
            struct w32Gbl_DV0_FIDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_BCLKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_BCLKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_BCLKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_BCLKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_BCLKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_BCLKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_BCLKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_BCLKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_BCLKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_BCLKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_BCLKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_BCLKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_BCLKCntl                           {\
            UNSG32 uI2S0_BCLKCntl_PU_EN                        :  1;\
            UNSG32 uI2S0_BCLKCntl_PD_EN                        :  1;\
            UNSG32 uI2S0_BCLKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx8060_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_BCLKCntl;
            struct w32Gbl_I2S0_BCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_LRCKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_LRCKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_LRCKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_LRCKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_LRCKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_LRCKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_LRCKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_LRCKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_LRCKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_LRCKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_LRCKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_LRCKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_LRCKCntl                           {\
            UNSG32 uI2S0_LRCKCntl_PU_EN                        :  1;\
            UNSG32 uI2S0_LRCKCntl_PD_EN                        :  1;\
            UNSG32 uI2S0_LRCKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx8064_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_LRCKCntl;
            struct w32Gbl_I2S0_LRCKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_DO0Cntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_DO0Cntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_DO0Cntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_DO0Cntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_DO0Cntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_DO0Cntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_DO0Cntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_DO0Cntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_DO0Cntl_SLP_DI(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_DO0Cntl_SLP_DI(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_DO0Cntl_SLP_DI(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_DO0Cntl_SLP_DI(r16,v)              _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_DO0Cntl                            {\
            UNSG32 uI2S0_DO0Cntl_PU_EN                         :  1;\
            UNSG32 uI2S0_DO0Cntl_PD_EN                         :  1;\
            UNSG32 uI2S0_DO0Cntl_SLP_DI                        :  1;\
            UNSG32 RSVDx8068_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_DO0Cntl;
            struct w32Gbl_I2S0_DO0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_DO1Cntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_DO1Cntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_DO1Cntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_DO1Cntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_DO1Cntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_DO1Cntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_DO1Cntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_DO1Cntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_DO1Cntl_SLP_DI(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_DO1Cntl_SLP_DI(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_DO1Cntl_SLP_DI(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_DO1Cntl_SLP_DI(r16,v)              _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_DO1Cntl                            {\
            UNSG32 uI2S0_DO1Cntl_PU_EN                         :  1;\
            UNSG32 uI2S0_DO1Cntl_PD_EN                         :  1;\
            UNSG32 uI2S0_DO1Cntl_SLP_DI                        :  1;\
            UNSG32 RSVDx806C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_DO1Cntl;
            struct w32Gbl_I2S0_DO1Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_DO2Cntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_DO2Cntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_DO2Cntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_DO2Cntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_DO2Cntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_DO2Cntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_DO2Cntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_DO2Cntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_DO2Cntl_SLP_DI(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_DO2Cntl_SLP_DI(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_DO2Cntl_SLP_DI(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_DO2Cntl_SLP_DI(r16,v)              _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_DO2Cntl                            {\
            UNSG32 uI2S0_DO2Cntl_PU_EN                         :  1;\
            UNSG32 uI2S0_DO2Cntl_PD_EN                         :  1;\
            UNSG32 uI2S0_DO2Cntl_SLP_DI                        :  1;\
            UNSG32 RSVDx8070_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_DO2Cntl;
            struct w32Gbl_I2S0_DO2Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S0_DO3Cntl_PU_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S0_DO3Cntl_PU_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S0_DO3Cntl_PU_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S0_DO3Cntl_PU_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S0_DO3Cntl_PD_EN(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S0_DO3Cntl_PD_EN(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S0_DO3Cntl_PD_EN(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S0_DO3Cntl_PD_EN(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S0_DO3Cntl_SLP_DI(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S0_DO3Cntl_SLP_DI(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S0_DO3Cntl_SLP_DI(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S0_DO3Cntl_SLP_DI(r16,v)              _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S0_DO3Cntl                            {\
            UNSG32 uI2S0_DO3Cntl_PU_EN                         :  1;\
            UNSG32 uI2S0_DO3Cntl_PD_EN                         :  1;\
            UNSG32 uI2S0_DO3Cntl_SLP_DI                        :  1;\
            UNSG32 RSVDx8074_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S0_DO3Cntl;
            struct w32Gbl_I2S0_DO3Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPDIFICntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPDIFICntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPDIFICntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPDIFICntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPDIFICntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPDIFICntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPDIFICntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPDIFICntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPDIFICntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPDIFICntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPDIFICntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPDIFICntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_SPDIFICntl                              {\
            UNSG32 uSPDIFICntl_PU_EN                           :  1;\
            UNSG32 uSPDIFICntl_PD_EN                           :  1;\
            UNSG32 uSPDIFICntl_SLP_DI                          :  1;\
            UNSG32 RSVDx8078_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_SPDIFICntl;
            struct w32Gbl_SPDIFICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_LRCKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_LRCKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_LRCKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_LRCKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_LRCKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_LRCKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_LRCKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_LRCKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_LRCKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_LRCKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_LRCKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_LRCKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S1_LRCKCntl                           {\
            UNSG32 uI2S1_LRCKCntl_PU_EN                        :  1;\
            UNSG32 uI2S1_LRCKCntl_PD_EN                        :  1;\
            UNSG32 uI2S1_LRCKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx807C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S1_LRCKCntl;
            struct w32Gbl_I2S1_LRCKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_BCLKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_BCLKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_BCLKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_BCLKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_BCLKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_BCLKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_BCLKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_BCLKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_BCLKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_BCLKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_BCLKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_BCLKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S1_BCLKCntl                           {\
            UNSG32 uI2S1_BCLKCntl_PU_EN                        :  1;\
            UNSG32 uI2S1_BCLKCntl_PD_EN                        :  1;\
            UNSG32 uI2S1_BCLKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx8080_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S1_BCLKCntl;
            struct w32Gbl_I2S1_BCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DOCntl_PU_EN(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DOCntl_PU_EN(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_DOCntl_PU_EN(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DOCntl_PU_EN(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_DOCntl_PD_EN(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DOCntl_PD_EN(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_DOCntl_PD_EN(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DOCntl_PD_EN(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_DOCntl_SLP_DI(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DOCntl_SLP_DI(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_DOCntl_SLP_DI(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DOCntl_SLP_DI(r16,v)               _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S1_DOCntl                             {\
            UNSG32 uI2S1_DOCntl_PU_EN                          :  1;\
            UNSG32 uI2S1_DOCntl_PD_EN                          :  1;\
            UNSG32 uI2S1_DOCntl_SLP_DI                         :  1;\
            UNSG32 RSVDx8084_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S1_DOCntl;
            struct w32Gbl_I2S1_DOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_LRCKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_LRCKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_LRCKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_LRCKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_LRCKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_LRCKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_LRCKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_LRCKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_LRCKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_LRCKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_LRCKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_LRCKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S2_LRCKCntl                           {\
            UNSG32 uI2S2_LRCKCntl_PU_EN                        :  1;\
            UNSG32 uI2S2_LRCKCntl_PD_EN                        :  1;\
            UNSG32 uI2S2_LRCKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx8088_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S2_LRCKCntl;
            struct w32Gbl_I2S2_LRCKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_BCLKCntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_BCLKCntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_BCLKCntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_BCLKCntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_BCLKCntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_BCLKCntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_BCLKCntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_BCLKCntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_BCLKCntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_BCLKCntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_BCLKCntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_BCLKCntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S2_BCLKCntl                           {\
            UNSG32 uI2S2_BCLKCntl_PU_EN                        :  1;\
            UNSG32 uI2S2_BCLKCntl_PD_EN                        :  1;\
            UNSG32 uI2S2_BCLKCntl_SLP_DI                       :  1;\
            UNSG32 RSVDx808C_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S2_BCLKCntl;
            struct w32Gbl_I2S2_BCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DI_0Cntl_PU_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DI_0Cntl_PU_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_DI_0Cntl_PU_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DI_0Cntl_PU_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_DI_0Cntl_PD_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DI_0Cntl_PD_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_DI_0Cntl_PD_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DI_0Cntl_PD_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_DI_0Cntl_SLP_DI(r32)               _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DI_0Cntl_SLP_DI(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_DI_0Cntl_SLP_DI(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DI_0Cntl_SLP_DI(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_I2S2_DI_0Cntl                           {\
            UNSG32 uI2S2_DI_0Cntl_PU_EN                        :  1;\
            UNSG32 uI2S2_DI_0Cntl_PD_EN                        :  1;\
            UNSG32 uI2S2_DI_0Cntl_SLP_DI                       :  1;\
            UNSG32 RSVDx8090_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_I2S2_DI_0Cntl;
            struct w32Gbl_I2S2_DI_0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPDIFOCntl_PU_EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPDIFOCntl_PU_EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPDIFOCntl_PU_EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPDIFOCntl_PU_EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPDIFOCntl_PD_EN(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPDIFOCntl_PD_EN(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPDIFOCntl_PD_EN(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPDIFOCntl_PD_EN(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPDIFOCntl_SLP_DI(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPDIFOCntl_SLP_DI(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPDIFOCntl_SLP_DI(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPDIFOCntl_SLP_DI(r16,v)                _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_SPDIFOCntl                              {\
            UNSG32 uSPDIFOCntl_PU_EN                           :  1;\
            UNSG32 uSPDIFOCntl_PD_EN                           :  1;\
            UNSG32 uSPDIFOCntl_SLP_DI                          :  1;\
            UNSG32 RSVDx8094_b3                                : 29;\
          }
    union { UNSG32 u32Gbl_SPDIFOCntl;
            struct w32Gbl_SPDIFOCntl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_Gbl;

    typedef union  T32Gbl_pinMux
          { UNSG32 u32;
            struct w32Gbl_pinMux;
                 } T32Gbl_pinMux;
    typedef union  T32Gbl_pinMux1
          { UNSG32 u32;
            struct w32Gbl_pinMux1;
                 } T32Gbl_pinMux1;
    typedef union  T32Gbl_pinMux2
          { UNSG32 u32;
            struct w32Gbl_pinMux2;
                 } T32Gbl_pinMux2;
    typedef union  T32Gbl_bootStrap
          { UNSG32 u32;
            struct w32Gbl_bootStrap;
                 } T32Gbl_bootStrap;
    typedef union  T32Gbl_anaGrpCtl
          { UNSG32 u32;
            struct w32Gbl_anaGrpCtl;
                 } T32Gbl_anaGrpCtl;
    typedef union  T32Gbl_sysPllCtl
          { UNSG32 u32;
            struct w32Gbl_sysPllCtl;
                 } T32Gbl_sysPllCtl;
    typedef union  T32Gbl_sysPllCtl1
          { UNSG32 u32;
            struct w32Gbl_sysPllCtl1;
                 } T32Gbl_sysPllCtl1;
    typedef union  T32Gbl_sysPllCtl2
          { UNSG32 u32;
            struct w32Gbl_sysPllCtl2;
                 } T32Gbl_sysPllCtl2;
    typedef union  T32Gbl_sysPllCtl3
          { UNSG32 u32;
            struct w32Gbl_sysPllCtl3;
                 } T32Gbl_sysPllCtl3;
    typedef union  T32Gbl_sysPllCtl4
          { UNSG32 u32;
            struct w32Gbl_sysPllCtl4;
                 } T32Gbl_sysPllCtl4;
    typedef union  T32Gbl_memPllCtl
          { UNSG32 u32;
            struct w32Gbl_memPllCtl;
                 } T32Gbl_memPllCtl;
    typedef union  T32Gbl_memPllCtl1
          { UNSG32 u32;
            struct w32Gbl_memPllCtl1;
                 } T32Gbl_memPllCtl1;
    typedef union  T32Gbl_memPllCtl2
          { UNSG32 u32;
            struct w32Gbl_memPllCtl2;
                 } T32Gbl_memPllCtl2;
    typedef union  T32Gbl_memPllCtl3
          { UNSG32 u32;
            struct w32Gbl_memPllCtl3;
                 } T32Gbl_memPllCtl3;
    typedef union  T32Gbl_memPllCtl4
          { UNSG32 u32;
            struct w32Gbl_memPllCtl4;
                 } T32Gbl_memPllCtl4;
    typedef union  T32Gbl_cpuPllCtl
          { UNSG32 u32;
            struct w32Gbl_cpuPllCtl;
                 } T32Gbl_cpuPllCtl;
    typedef union  T32Gbl_cpuPllCtl1
          { UNSG32 u32;
            struct w32Gbl_cpuPllCtl1;
                 } T32Gbl_cpuPllCtl1;
    typedef union  T32Gbl_cpuPllCtl2
          { UNSG32 u32;
            struct w32Gbl_cpuPllCtl2;
                 } T32Gbl_cpuPllCtl2;
    typedef union  T32Gbl_cpuPllCtl3
          { UNSG32 u32;
            struct w32Gbl_cpuPllCtl3;
                 } T32Gbl_cpuPllCtl3;
    typedef union  T32Gbl_cpuPllCtl4
          { UNSG32 u32;
            struct w32Gbl_cpuPllCtl4;
                 } T32Gbl_cpuPllCtl4;
    typedef union  T32Gbl_avPllCtl
          { UNSG32 u32;
            struct w32Gbl_avPllCtl;
                 } T32Gbl_avPllCtl;
    typedef union  T32Gbl_avPllCtl1
          { UNSG32 u32;
            struct w32Gbl_avPllCtl1;
                 } T32Gbl_avPllCtl1;
    typedef union  T32Gbl_avPllCtl2
          { UNSG32 u32;
            struct w32Gbl_avPllCtl2;
                 } T32Gbl_avPllCtl2;
    typedef union  T32Gbl_avPllCtl3
          { UNSG32 u32;
            struct w32Gbl_avPllCtl3;
                 } T32Gbl_avPllCtl3;
    typedef union  T32Gbl_avPllCtl4
          { UNSG32 u32;
            struct w32Gbl_avPllCtl4;
                 } T32Gbl_avPllCtl4;
    typedef union  T32Gbl_avPllCtl5
          { UNSG32 u32;
            struct w32Gbl_avPllCtl5;
                 } T32Gbl_avPllCtl5;
    typedef union  T32Gbl_avPllCtl6
          { UNSG32 u32;
            struct w32Gbl_avPllCtl6;
                 } T32Gbl_avPllCtl6;
    typedef union  T32Gbl_avPllCtl7
          { UNSG32 u32;
            struct w32Gbl_avPllCtl7;
                 } T32Gbl_avPllCtl7;
    typedef union  T32Gbl_avPllCtl8
          { UNSG32 u32;
            struct w32Gbl_avPllCtl8;
                 } T32Gbl_avPllCtl8;
    typedef union  T32Gbl_avPllCtl9
          { UNSG32 u32;
            struct w32Gbl_avPllCtl9;
                 } T32Gbl_avPllCtl9;
    typedef union  T32Gbl_avPllCtl10
          { UNSG32 u32;
            struct w32Gbl_avPllCtl10;
                 } T32Gbl_avPllCtl10;
    typedef union  T32Gbl_avPllCtl11
          { UNSG32 u32;
            struct w32Gbl_avPllCtl11;
                 } T32Gbl_avPllCtl11;
    typedef union  T32Gbl_avPllCtl12
          { UNSG32 u32;
            struct w32Gbl_avPllCtl12;
                 } T32Gbl_avPllCtl12;
    typedef union  T32Gbl_avPllCtl13
          { UNSG32 u32;
            struct w32Gbl_avPllCtl13;
                 } T32Gbl_avPllCtl13;
    typedef union  T32Gbl_avPllCtl14
          { UNSG32 u32;
            struct w32Gbl_avPllCtl14;
                 } T32Gbl_avPllCtl14;
    typedef union  T32Gbl_avPllCtl15
          { UNSG32 u32;
            struct w32Gbl_avPllCtl15;
                 } T32Gbl_avPllCtl15;
    typedef union  T32Gbl_avPllCtl16
          { UNSG32 u32;
            struct w32Gbl_avPllCtl16;
                 } T32Gbl_avPllCtl16;
    typedef union  T32Gbl_avPllCtl17
          { UNSG32 u32;
            struct w32Gbl_avPllCtl17;
                 } T32Gbl_avPllCtl17;
    typedef union  T32Gbl_avPllCtl18
          { UNSG32 u32;
            struct w32Gbl_avPllCtl18;
                 } T32Gbl_avPllCtl18;
    typedef union  T32Gbl_avPllCtl19
          { UNSG32 u32;
            struct w32Gbl_avPllCtl19;
                 } T32Gbl_avPllCtl19;
    typedef union  T32Gbl_avPllCtl20
          { UNSG32 u32;
            struct w32Gbl_avPllCtl20;
                 } T32Gbl_avPllCtl20;
    typedef union  T32Gbl_avPllCtl21
          { UNSG32 u32;
            struct w32Gbl_avPllCtl21;
                 } T32Gbl_avPllCtl21;
    typedef union  T32Gbl_avPllCtl22
          { UNSG32 u32;
            struct w32Gbl_avPllCtl22;
                 } T32Gbl_avPllCtl22;
    typedef union  T32Gbl_avPllCtl23
          { UNSG32 u32;
            struct w32Gbl_avPllCtl23;
                 } T32Gbl_avPllCtl23;
    typedef union  T32Gbl_avPllCtl24
          { UNSG32 u32;
            struct w32Gbl_avPllCtl24;
                 } T32Gbl_avPllCtl24;
    typedef union  T32Gbl_avPllCtl25
          { UNSG32 u32;
            struct w32Gbl_avPllCtl25;
                 } T32Gbl_avPllCtl25;
    typedef union  T32Gbl_avPllCtl26
          { UNSG32 u32;
            struct w32Gbl_avPllCtl26;
                 } T32Gbl_avPllCtl26;
    typedef union  T32Gbl_avPllCtl27
          { UNSG32 u32;
            struct w32Gbl_avPllCtl27;
                 } T32Gbl_avPllCtl27;
    typedef union  T32Gbl_avPllCtl28
          { UNSG32 u32;
            struct w32Gbl_avPllCtl28;
                 } T32Gbl_avPllCtl28;
    typedef union  T32Gbl_avPllCtl29
          { UNSG32 u32;
            struct w32Gbl_avPllCtl29;
                 } T32Gbl_avPllCtl29;
    typedef union  T32Gbl_avPllCtl30
          { UNSG32 u32;
            struct w32Gbl_avPllCtl30;
                 } T32Gbl_avPllCtl30;
    typedef union  T32Gbl_avPllCtl31
          { UNSG32 u32;
            struct w32Gbl_avPllCtl31;
                 } T32Gbl_avPllCtl31;
    typedef union  T32Gbl_avPllCtl32
          { UNSG32 u32;
            struct w32Gbl_avPllCtl32;
                 } T32Gbl_avPllCtl32;
    typedef union  T32Gbl_avPllCtl33
          { UNSG32 u32;
            struct w32Gbl_avPllCtl33;
                 } T32Gbl_avPllCtl33;
    typedef union  T32Gbl_avPllCtl34
          { UNSG32 u32;
            struct w32Gbl_avPllCtl34;
                 } T32Gbl_avPllCtl34;
    typedef union  T32Gbl_avPllCtl35
          { UNSG32 u32;
            struct w32Gbl_avPllCtl35;
                 } T32Gbl_avPllCtl35;
    typedef union  T32Gbl_avPllCtl36
          { UNSG32 u32;
            struct w32Gbl_avPllCtl36;
                 } T32Gbl_avPllCtl36;
    typedef union  T32Gbl_avPllCtl37
          { UNSG32 u32;
            struct w32Gbl_avPllCtl37;
                 } T32Gbl_avPllCtl37;
    typedef union  T32Gbl_avPllCtl38
          { UNSG32 u32;
            struct w32Gbl_avPllCtl38;
                 } T32Gbl_avPllCtl38;
    typedef union  T32Gbl_avPllCtl39
          { UNSG32 u32;
            struct w32Gbl_avPllCtl39;
                 } T32Gbl_avPllCtl39;
    typedef union  T32Gbl_avPllCtl40
          { UNSG32 u32;
            struct w32Gbl_avPllCtl40;
                 } T32Gbl_avPllCtl40;
    typedef union  T32Gbl_avPllCtl41
          { UNSG32 u32;
            struct w32Gbl_avPllCtl41;
                 } T32Gbl_avPllCtl41;
    typedef union  T32Gbl_avPllCtl42
          { UNSG32 u32;
            struct w32Gbl_avPllCtl42;
                 } T32Gbl_avPllCtl42;
    typedef union  T32Gbl_avPllCtl43
          { UNSG32 u32;
            struct w32Gbl_avPllCtl43;
                 } T32Gbl_avPllCtl43;
    typedef union  T32Gbl_avPllCtl44
          { UNSG32 u32;
            struct w32Gbl_avPllCtl44;
                 } T32Gbl_avPllCtl44;
    typedef union  T32Gbl_avPllCtl45
          { UNSG32 u32;
            struct w32Gbl_avPllCtl45;
                 } T32Gbl_avPllCtl45;
    typedef union  T32Gbl_avPllCtl46
          { UNSG32 u32;
            struct w32Gbl_avPllCtl46;
                 } T32Gbl_avPllCtl46;
    typedef union  T32Gbl_avPllCtl47
          { UNSG32 u32;
            struct w32Gbl_avPllCtl47;
                 } T32Gbl_avPllCtl47;
    typedef union  T32Gbl_avPllCtl48
          { UNSG32 u32;
            struct w32Gbl_avPllCtl48;
                 } T32Gbl_avPllCtl48;
    typedef union  T32Gbl_avPllCtl49
          { UNSG32 u32;
            struct w32Gbl_avPllCtl49;
                 } T32Gbl_avPllCtl49;
    typedef union  T32Gbl_avPllCtl50
          { UNSG32 u32;
            struct w32Gbl_avPllCtl50;
                 } T32Gbl_avPllCtl50;
    typedef union  T32Gbl_avPllCtl51
          { UNSG32 u32;
            struct w32Gbl_avPllCtl51;
                 } T32Gbl_avPllCtl51;
    typedef union  T32Gbl_avPllCtl52
          { UNSG32 u32;
            struct w32Gbl_avPllCtl52;
                 } T32Gbl_avPllCtl52;
    typedef union  T32Gbl_avPllCtl53
          { UNSG32 u32;
            struct w32Gbl_avPllCtl53;
                 } T32Gbl_avPllCtl53;
    typedef union  T32Gbl_avPllCtl54
          { UNSG32 u32;
            struct w32Gbl_avPllCtl54;
                 } T32Gbl_avPllCtl54;
    typedef union  T32Gbl_avPllCtl55
          { UNSG32 u32;
            struct w32Gbl_avPllCtl55;
                 } T32Gbl_avPllCtl55;
    typedef union  T32Gbl_avPllCtl56
          { UNSG32 u32;
            struct w32Gbl_avPllCtl56;
                 } T32Gbl_avPllCtl56;
    typedef union  T32Gbl_avPllCtl57
          { UNSG32 u32;
            struct w32Gbl_avPllCtl57;
                 } T32Gbl_avPllCtl57;
    typedef union  T32Gbl_avPllCtl58
          { UNSG32 u32;
            struct w32Gbl_avPllCtl58;
                 } T32Gbl_avPllCtl58;
    typedef union  T32Gbl_avPllCtl59
          { UNSG32 u32;
            struct w32Gbl_avPllCtl59;
                 } T32Gbl_avPllCtl59;
    typedef union  T32Gbl_avPllCtl60
          { UNSG32 u32;
            struct w32Gbl_avPllCtl60;
                 } T32Gbl_avPllCtl60;
    typedef union  T32Gbl_avPllCtl61
          { UNSG32 u32;
            struct w32Gbl_avPllCtl61;
                 } T32Gbl_avPllCtl61;
    typedef union  T32Gbl_avPllCtl62
          { UNSG32 u32;
            struct w32Gbl_avPllCtl62;
                 } T32Gbl_avPllCtl62;
    typedef union  T32Gbl_pllStatus
          { UNSG32 u32;
            struct w32Gbl_pllStatus;
                 } T32Gbl_pllStatus;
    typedef union  T32Gbl_clkEnable
          { UNSG32 u32;
            struct w32Gbl_clkEnable;
                 } T32Gbl_clkEnable;
    typedef union  T32Gbl_clkSelect
          { UNSG32 u32;
            struct w32Gbl_clkSelect;
                 } T32Gbl_clkSelect;
    typedef union  T32Gbl_clkSelect1
          { UNSG32 u32;
            struct w32Gbl_clkSelect1;
                 } T32Gbl_clkSelect1;
    typedef union  T32Gbl_clkSelect2
          { UNSG32 u32;
            struct w32Gbl_clkSelect2;
                 } T32Gbl_clkSelect2;
    typedef union  T32Gbl_clkSelect3
          { UNSG32 u32;
            struct w32Gbl_clkSelect3;
                 } T32Gbl_clkSelect3;
    typedef union  T32Gbl_ClkSwitch
          { UNSG32 u32;
            struct w32Gbl_ClkSwitch;
                 } T32Gbl_ClkSwitch;
    typedef union  T32Gbl_ClkSwitch1
          { UNSG32 u32;
            struct w32Gbl_ClkSwitch1;
                 } T32Gbl_ClkSwitch1;
    typedef union  T32Gbl_PadSelect
          { UNSG32 u32;
            struct w32Gbl_PadSelect;
                 } T32Gbl_PadSelect;
    typedef union  T32Gbl_PadSelect1
          { UNSG32 u32;
            struct w32Gbl_PadSelect1;
                 } T32Gbl_PadSelect1;
    typedef union  T32Gbl_PadSelect2
          { UNSG32 u32;
            struct w32Gbl_PadSelect2;
                 } T32Gbl_PadSelect2;
    typedef union  T32Gbl_ResetTrigger
          { UNSG32 u32;
            struct w32Gbl_ResetTrigger;
                 } T32Gbl_ResetTrigger;
    typedef union  T32Gbl_ResetStatus
          { UNSG32 u32;
            struct w32Gbl_ResetStatus;
                 } T32Gbl_ResetStatus;
    typedef union  T32Gbl_ResetStatus1
          { UNSG32 u32;
            struct w32Gbl_ResetStatus1;
                 } T32Gbl_ResetStatus1;
    typedef union  T32Gbl_sw_generic0
          { UNSG32 u32;
            struct w32Gbl_sw_generic0;
                 } T32Gbl_sw_generic0;
    typedef union  T32Gbl_sw_generic1
          { UNSG32 u32;
            struct w32Gbl_sw_generic1;
                 } T32Gbl_sw_generic1;
    typedef union  T32Gbl_sw_generic2
          { UNSG32 u32;
            struct w32Gbl_sw_generic2;
                 } T32Gbl_sw_generic2;
    typedef union  T32Gbl_sw_generic3
          { UNSG32 u32;
            struct w32Gbl_sw_generic3;
                 } T32Gbl_sw_generic3;
    typedef union  T32Gbl_ChipCntl0
          { UNSG32 u32;
            struct w32Gbl_ChipCntl0;
                 } T32Gbl_ChipCntl0;
    typedef union  T32Gbl_ChipCntl1
          { UNSG32 u32;
            struct w32Gbl_ChipCntl1;
                 } T32Gbl_ChipCntl1;
    typedef union  T32Gbl_ChipCntl11
          { UNSG32 u32;
            struct w32Gbl_ChipCntl11;
                 } T32Gbl_ChipCntl11;
    typedef union  T32Gbl_ChipCntl12
          { UNSG32 u32;
            struct w32Gbl_ChipCntl12;
                 } T32Gbl_ChipCntl12;
    typedef union  T32Gbl_RWTC_avio31to0
          { UNSG32 u32;
            struct w32Gbl_RWTC_avio31to0;
                 } T32Gbl_RWTC_avio31to0;
    typedef union  T32Gbl_RWTC_avio41to32
          { UNSG32 u32;
            struct w32Gbl_RWTC_avio41to32;
                 } T32Gbl_RWTC_avio41to32;
    typedef union  T32Gbl_RWTC_gfx2D31to0
          { UNSG32 u32;
            struct w32Gbl_RWTC_gfx2D31to0;
                 } T32Gbl_RWTC_gfx2D31to0;
    typedef union  T32Gbl_RWTC_gfx2D41to32
          { UNSG32 u32;
            struct w32Gbl_RWTC_gfx2D41to32;
                 } T32Gbl_RWTC_gfx2D41to32;
    typedef union  T32Gbl_RWTC_gfx3D31to0
          { UNSG32 u32;
            struct w32Gbl_RWTC_gfx3D31to0;
                 } T32Gbl_RWTC_gfx3D31to0;
    typedef union  T32Gbl_RWTC_gfx3D41to32
          { UNSG32 u32;
            struct w32Gbl_RWTC_gfx3D41to32;
                 } T32Gbl_RWTC_gfx3D41to32;
    typedef union  T32Gbl_RWTC_soc31to0
          { UNSG32 u32;
            struct w32Gbl_RWTC_soc31to0;
                 } T32Gbl_RWTC_soc31to0;
    typedef union  T32Gbl_RWTC_soc41to32
          { UNSG32 u32;
            struct w32Gbl_RWTC_soc41to32;
                 } T32Gbl_RWTC_soc41to32;
    typedef union  T32Gbl_RWTC_vPro31to0
          { UNSG32 u32;
            struct w32Gbl_RWTC_vPro31to0;
                 } T32Gbl_RWTC_vPro31to0;
    typedef union  T32Gbl_RWTC_vPro41to32
          { UNSG32 u32;
            struct w32Gbl_RWTC_vPro41to32;
                 } T32Gbl_RWTC_vPro41to32;
    typedef union  T32Gbl_ProductId
          { UNSG32 u32;
            struct w32Gbl_ProductId;
                 } T32Gbl_ProductId;
    typedef union  T32Gbl_ProductId_ext
          { UNSG32 u32;
            struct w32Gbl_ProductId_ext;
                 } T32Gbl_ProductId_ext;
    typedef union  T32Gbl_FPGAR
          { UNSG32 u32;
            struct w32Gbl_FPGAR;
                 } T32Gbl_FPGAR;
    typedef union  T32Gbl_FPGARW
          { UNSG32 u32;
            struct w32Gbl_FPGARW;
                 } T32Gbl_FPGARW;
    typedef union  T32Gbl_RingOscCtl
          { UNSG32 u32;
            struct w32Gbl_RingOscCtl;
                 } T32Gbl_RingOscCtl;
    typedef union  T32Gbl_PLLBypsBootStrapEn
          { UNSG32 u32;
            struct w32Gbl_PLLBypsBootStrapEn;
                 } T32Gbl_PLLBypsBootStrapEn;
    typedef union  T32Gbl_IO_CALIBRATE_IN
          { UNSG32 u32;
            struct w32Gbl_IO_CALIBRATE_IN;
                 } T32Gbl_IO_CALIBRATE_IN;
    typedef union  T32Gbl_IO_CALIBRATE_IN1
          { UNSG32 u32;
            struct w32Gbl_IO_CALIBRATE_IN1;
                 } T32Gbl_IO_CALIBRATE_IN1;
    typedef union  T32Gbl_IO_CALIBRATE_IN2
          { UNSG32 u32;
            struct w32Gbl_IO_CALIBRATE_IN2;
                 } T32Gbl_IO_CALIBRATE_IN2;
    typedef union  T32Gbl_IO_CALIBRATE_IN3
          { UNSG32 u32;
            struct w32Gbl_IO_CALIBRATE_IN3;
                 } T32Gbl_IO_CALIBRATE_IN3;
    typedef union  T32Gbl_IO_CALBRATE_OUT
          { UNSG32 u32;
            struct w32Gbl_IO_CALBRATE_OUT;
                 } T32Gbl_IO_CALBRATE_OUT;
    typedef union  T32Gbl_SECURE_SCAN_EN
          { UNSG32 u32;
            struct w32Gbl_SECURE_SCAN_EN;
                 } T32Gbl_SECURE_SCAN_EN;
    typedef union  T32Gbl_NandWPn
          { UNSG32 u32;
            struct w32Gbl_NandWPn;
                 } T32Gbl_NandWPn;
    typedef union  T32Gbl_RingCntCntl
          { UNSG32 u32;
            struct w32Gbl_RingCntCntl;
                 } T32Gbl_RingCntCntl;
    typedef union  T32Gbl_gfx3DCoreClkCtrl
          { UNSG32 u32;
            struct w32Gbl_gfx3DCoreClkCtrl;
                 } T32Gbl_gfx3DCoreClkCtrl;
    typedef union  T32Gbl_gfx3DSysClkCtrl
          { UNSG32 u32;
            struct w32Gbl_gfx3DSysClkCtrl;
                 } T32Gbl_gfx3DSysClkCtrl;
    typedef union  T32Gbl_arcRefClkCtrl
          { UNSG32 u32;
            struct w32Gbl_arcRefClkCtrl;
                 } T32Gbl_arcRefClkCtrl;
    typedef union  T32Gbl_vipClkCtrl
          { UNSG32 u32;
            struct w32Gbl_vipClkCtrl;
                 } T32Gbl_vipClkCtrl;
    typedef union  T32Gbl_sdioXinClkCtrl
          { UNSG32 u32;
            struct w32Gbl_sdioXinClkCtrl;
                 } T32Gbl_sdioXinClkCtrl;
    typedef union  T32Gbl_sdio1XinClkCtrl
          { UNSG32 u32;
            struct w32Gbl_sdio1XinClkCtrl;
                 } T32Gbl_sdio1XinClkCtrl;
    typedef union  T32Gbl_gfx3DExtraClkCtrl
          { UNSG32 u32;
            struct w32Gbl_gfx3DExtraClkCtrl;
                 } T32Gbl_gfx3DExtraClkCtrl;
    typedef union  T32Gbl_gfx3DReset
          { UNSG32 u32;
            struct w32Gbl_gfx3DReset;
                 } T32Gbl_gfx3DReset;
    typedef union  T32Gbl_gc360ClkCtrl
          { UNSG32 u32;
            struct w32Gbl_gc360ClkCtrl;
                 } T32Gbl_gc360ClkCtrl;
    typedef union  T32Gbl_sdioDllMstRef
          { UNSG32 u32;
            struct w32Gbl_sdioDllMstRef;
                 } T32Gbl_sdioDllMstRef;
    typedef union  T32Gbl_sdioDllMstCtrl
          { UNSG32 u32;
            struct w32Gbl_sdioDllMstCtrl;
                 } T32Gbl_sdioDllMstCtrl;
    typedef union  T32Gbl_sdioDllMstCtrl1
          { UNSG32 u32;
            struct w32Gbl_sdioDllMstCtrl1;
                 } T32Gbl_sdioDllMstCtrl1;
    typedef union  T32Gbl_sdioDllMstStatus
          { UNSG32 u32;
            struct w32Gbl_sdioDllMstStatus;
                 } T32Gbl_sdioDllMstStatus;
    typedef union  T32Gbl_sdioDllMstStatus1
          { UNSG32 u32;
            struct w32Gbl_sdioDllMstStatus1;
                 } T32Gbl_sdioDllMstStatus1;
    typedef union  T32Gbl_sdioPortSel
          { UNSG32 u32;
            struct w32Gbl_sdioPortSel;
                 } T32Gbl_sdioPortSel;
    typedef union  T32Gbl_gc360Reset
          { UNSG32 u32;
            struct w32Gbl_gc360Reset;
                 } T32Gbl_gc360Reset;
    typedef union  T32Gbl_SpdifRxReset
          { UNSG32 u32;
            struct w32Gbl_SpdifRxReset;
                 } T32Gbl_SpdifRxReset;
    typedef union  T32Gbl_gfx3DDisRamClkGate
          { UNSG32 u32;
            struct w32Gbl_gfx3DDisRamClkGate;
                 } T32Gbl_gfx3DDisRamClkGate;
    typedef union  T32Gbl_gfx3DResetStatus
          { UNSG32 u32;
            struct w32Gbl_gfx3DResetStatus;
                 } T32Gbl_gfx3DResetStatus;
    typedef union  T32Gbl_gc360DisRCG
          { UNSG32 u32;
            struct w32Gbl_gc360DisRCG;
                 } T32Gbl_gc360DisRCG;
    typedef union  T32Gbl_gc360ResetStatus
          { UNSG32 u32;
            struct w32Gbl_gc360ResetStatus;
                 } T32Gbl_gc360ResetStatus;
    typedef union  T32Gbl_SpdifRxResetStatus
          { UNSG32 u32;
            struct w32Gbl_SpdifRxResetStatus;
                 } T32Gbl_SpdifRxResetStatus;
    typedef union  T32Gbl_DroEnable
          { UNSG32 u32;
            struct w32Gbl_DroEnable;
                 } T32Gbl_DroEnable;
    typedef union  T32Gbl_DroCounter
          { UNSG32 u32;
            struct w32Gbl_DroCounter;
                 } T32Gbl_DroCounter;
    typedef union  T32Gbl_DroDone
          { UNSG32 u32;
            struct w32Gbl_DroDone;
                 } T32Gbl_DroDone;
    typedef union  T32Gbl_INT_ID
          { UNSG32 u32;
            struct w32Gbl_INT_ID;
                 } T32Gbl_INT_ID;
    typedef union  T32Gbl_stickyResetN
          { UNSG32 u32;
            struct w32Gbl_stickyResetN;
                 } T32Gbl_stickyResetN;
    typedef union  T32Gbl_gethRgmii_dll
          { UNSG32 u32;
            struct w32Gbl_gethRgmii_dll;
                 } T32Gbl_gethRgmii_dll;
    typedef union  T32Gbl_funcSel
          { UNSG32 u32;
            struct w32Gbl_funcSel;
                 } T32Gbl_funcSel;
    typedef union  T32Gbl_chipCntl
          { UNSG32 u32;
            struct w32Gbl_chipCntl;
                 } T32Gbl_chipCntl;
    typedef union  T32Gbl_bootStrapEn
          { UNSG32 u32;
            struct w32Gbl_bootStrapEn;
                 } T32Gbl_bootStrapEn;
    typedef union  T32Gbl_axiClkEn
          { UNSG32 u32;
            struct w32Gbl_axiClkEn;
                 } T32Gbl_axiClkEn;
    typedef union  T32Gbl_ahbClkEn
          { UNSG32 u32;
            struct w32Gbl_ahbClkEn;
                 } T32Gbl_ahbClkEn;
    typedef union  T32Gbl_SPI1_SS0nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS0nCntl;
                 } T32Gbl_SPI1_SS0nCntl;
    typedef union  T32Gbl_SPI1_SS1nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS1nCntl;
                 } T32Gbl_SPI1_SS1nCntl;
    typedef union  T32Gbl_SPI1_SS2nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS2nCntl;
                 } T32Gbl_SPI1_SS2nCntl;
    typedef union  T32Gbl_SPI1_SCLKCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SCLKCntl;
                 } T32Gbl_SPI1_SCLKCntl;
    typedef union  T32Gbl_SPI1_SDOCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SDOCntl;
                 } T32Gbl_SPI1_SDOCntl;
    typedef union  T32Gbl_SPI1_SDICntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SDICntl;
                 } T32Gbl_SPI1_SDICntl;
    typedef union  T32Gbl_URT0_RXDCntl
          { UNSG32 u32;
            struct w32Gbl_URT0_RXDCntl;
                 } T32Gbl_URT0_RXDCntl;
    typedef union  T32Gbl_URT0_TXDCntl
          { UNSG32 u32;
            struct w32Gbl_URT0_TXDCntl;
                 } T32Gbl_URT0_TXDCntl;
    typedef union  T32Gbl_DVIO0Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO0Cntl;
                 } T32Gbl_DVIO0Cntl;
    typedef union  T32Gbl_DVIO1Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO1Cntl;
                 } T32Gbl_DVIO1Cntl;
    typedef union  T32Gbl_DVIO2Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO2Cntl;
                 } T32Gbl_DVIO2Cntl;
    typedef union  T32Gbl_DVIO3Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO3Cntl;
                 } T32Gbl_DVIO3Cntl;
    typedef union  T32Gbl_DVIO4Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO4Cntl;
                 } T32Gbl_DVIO4Cntl;
    typedef union  T32Gbl_DVIO5Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO5Cntl;
                 } T32Gbl_DVIO5Cntl;
    typedef union  T32Gbl_DVIO6Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO6Cntl;
                 } T32Gbl_DVIO6Cntl;
    typedef union  T32Gbl_DVIO7Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO7Cntl;
                 } T32Gbl_DVIO7Cntl;
    typedef union  T32Gbl_DVIO8Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO8Cntl;
                 } T32Gbl_DVIO8Cntl;
    typedef union  T32Gbl_DVIO9Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO9Cntl;
                 } T32Gbl_DVIO9Cntl;
    typedef union  T32Gbl_DVIO10Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO10Cntl;
                 } T32Gbl_DVIO10Cntl;
    typedef union  T32Gbl_DVIO11Cntl
          { UNSG32 u32;
            struct w32Gbl_DVIO11Cntl;
                 } T32Gbl_DVIO11Cntl;
    typedef union  T32Gbl_DV0_CLKCntl
          { UNSG32 u32;
            struct w32Gbl_DV0_CLKCntl;
                 } T32Gbl_DV0_CLKCntl;
    typedef union  T32Gbl_DV0_HSCntl
          { UNSG32 u32;
            struct w32Gbl_DV0_HSCntl;
                 } T32Gbl_DV0_HSCntl;
    typedef union  T32Gbl_DV0_VSCntl
          { UNSG32 u32;
            struct w32Gbl_DV0_VSCntl;
                 } T32Gbl_DV0_VSCntl;
    typedef union  T32Gbl_DV0_FIDCntl
          { UNSG32 u32;
            struct w32Gbl_DV0_FIDCntl;
                 } T32Gbl_DV0_FIDCntl;
    typedef union  T32Gbl_I2S0_BCLKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_BCLKCntl;
                 } T32Gbl_I2S0_BCLKCntl;
    typedef union  T32Gbl_I2S0_LRCKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_LRCKCntl;
                 } T32Gbl_I2S0_LRCKCntl;
    typedef union  T32Gbl_I2S0_DO0Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_DO0Cntl;
                 } T32Gbl_I2S0_DO0Cntl;
    typedef union  T32Gbl_I2S0_DO1Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_DO1Cntl;
                 } T32Gbl_I2S0_DO1Cntl;
    typedef union  T32Gbl_I2S0_DO2Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_DO2Cntl;
                 } T32Gbl_I2S0_DO2Cntl;
    typedef union  T32Gbl_I2S0_DO3Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S0_DO3Cntl;
                 } T32Gbl_I2S0_DO3Cntl;
    typedef union  T32Gbl_SPDIFICntl
          { UNSG32 u32;
            struct w32Gbl_SPDIFICntl;
                 } T32Gbl_SPDIFICntl;
    typedef union  T32Gbl_I2S1_LRCKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_LRCKCntl;
                 } T32Gbl_I2S1_LRCKCntl;
    typedef union  T32Gbl_I2S1_BCLKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_BCLKCntl;
                 } T32Gbl_I2S1_BCLKCntl;
    typedef union  T32Gbl_I2S1_DOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_DOCntl;
                 } T32Gbl_I2S1_DOCntl;
    typedef union  T32Gbl_I2S2_LRCKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_LRCKCntl;
                 } T32Gbl_I2S2_LRCKCntl;
    typedef union  T32Gbl_I2S2_BCLKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_BCLKCntl;
                 } T32Gbl_I2S2_BCLKCntl;
    typedef union  T32Gbl_I2S2_DI_0Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_DI_0Cntl;
                 } T32Gbl_I2S2_DI_0Cntl;
    typedef union  T32Gbl_SPDIFOCntl
          { UNSG32 u32;
            struct w32Gbl_SPDIFOCntl;
                 } T32Gbl_SPDIFOCntl;
    ///////////////////////////////////////////////////////////

    typedef union  TGbl_pinMux
          { UNSG32 u32[3];
            struct {
            struct w32Gbl_pinMux;
            struct w32Gbl_pinMux1;
            struct w32Gbl_pinMux2;
                   };
                 } TGbl_pinMux;
    typedef union  TGbl_bootStrap
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrap;
                   };
                 } TGbl_bootStrap;
    typedef union  TGbl_anaGrpCtl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_anaGrpCtl;
                   };
                 } TGbl_anaGrpCtl;
    typedef union  TGbl_sysPllCtl
          { UNSG32 u32[5];
            struct {
            struct w32Gbl_sysPllCtl;
            struct w32Gbl_sysPllCtl1;
            struct w32Gbl_sysPllCtl2;
            struct w32Gbl_sysPllCtl3;
            struct w32Gbl_sysPllCtl4;
                   };
                 } TGbl_sysPllCtl;
    typedef union  TGbl_memPllCtl
          { UNSG32 u32[5];
            struct {
            struct w32Gbl_memPllCtl;
            struct w32Gbl_memPllCtl1;
            struct w32Gbl_memPllCtl2;
            struct w32Gbl_memPllCtl3;
            struct w32Gbl_memPllCtl4;
                   };
                 } TGbl_memPllCtl;
    typedef union  TGbl_cpuPllCtl
          { UNSG32 u32[5];
            struct {
            struct w32Gbl_cpuPllCtl;
            struct w32Gbl_cpuPllCtl1;
            struct w32Gbl_cpuPllCtl2;
            struct w32Gbl_cpuPllCtl3;
            struct w32Gbl_cpuPllCtl4;
                   };
                 } TGbl_cpuPllCtl;
    typedef union  TGbl_avPllCtl
          { UNSG32 u32[63];
            struct {
            struct w32Gbl_avPllCtl;
            struct w32Gbl_avPllCtl1;
            struct w32Gbl_avPllCtl2;
            struct w32Gbl_avPllCtl3;
            struct w32Gbl_avPllCtl4;
            struct w32Gbl_avPllCtl5;
            struct w32Gbl_avPllCtl6;
            struct w32Gbl_avPllCtl7;
            struct w32Gbl_avPllCtl8;
            struct w32Gbl_avPllCtl9;
            struct w32Gbl_avPllCtl10;
            struct w32Gbl_avPllCtl11;
            struct w32Gbl_avPllCtl12;
            struct w32Gbl_avPllCtl13;
            struct w32Gbl_avPllCtl14;
            struct w32Gbl_avPllCtl15;
            struct w32Gbl_avPllCtl16;
            struct w32Gbl_avPllCtl17;
            struct w32Gbl_avPllCtl18;
            struct w32Gbl_avPllCtl19;
            struct w32Gbl_avPllCtl20;
            struct w32Gbl_avPllCtl21;
            struct w32Gbl_avPllCtl22;
            struct w32Gbl_avPllCtl23;
            struct w32Gbl_avPllCtl24;
            struct w32Gbl_avPllCtl25;
            struct w32Gbl_avPllCtl26;
            struct w32Gbl_avPllCtl27;
            struct w32Gbl_avPllCtl28;
            struct w32Gbl_avPllCtl29;
            struct w32Gbl_avPllCtl30;
            struct w32Gbl_avPllCtl31;
            struct w32Gbl_avPllCtl32;
            struct w32Gbl_avPllCtl33;
            struct w32Gbl_avPllCtl34;
            struct w32Gbl_avPllCtl35;
            struct w32Gbl_avPllCtl36;
            struct w32Gbl_avPllCtl37;
            struct w32Gbl_avPllCtl38;
            struct w32Gbl_avPllCtl39;
            struct w32Gbl_avPllCtl40;
            struct w32Gbl_avPllCtl41;
            struct w32Gbl_avPllCtl42;
            struct w32Gbl_avPllCtl43;
            struct w32Gbl_avPllCtl44;
            struct w32Gbl_avPllCtl45;
            struct w32Gbl_avPllCtl46;
            struct w32Gbl_avPllCtl47;
            struct w32Gbl_avPllCtl48;
            struct w32Gbl_avPllCtl49;
            struct w32Gbl_avPllCtl50;
            struct w32Gbl_avPllCtl51;
            struct w32Gbl_avPllCtl52;
            struct w32Gbl_avPllCtl53;
            struct w32Gbl_avPllCtl54;
            struct w32Gbl_avPllCtl55;
            struct w32Gbl_avPllCtl56;
            struct w32Gbl_avPllCtl57;
            struct w32Gbl_avPllCtl58;
            struct w32Gbl_avPllCtl59;
            struct w32Gbl_avPllCtl60;
            struct w32Gbl_avPllCtl61;
            struct w32Gbl_avPllCtl62;
                   };
                 } TGbl_avPllCtl;
    typedef union  TGbl_pllStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_pllStatus;
                   };
                 } TGbl_pllStatus;
    typedef union  TGbl_clkEnable
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_clkEnable;
                   };
                 } TGbl_clkEnable;
    typedef union  TGbl_clkSelect
          { UNSG32 u32[4];
            struct {
            struct w32Gbl_clkSelect;
            struct w32Gbl_clkSelect1;
            struct w32Gbl_clkSelect2;
            struct w32Gbl_clkSelect3;
                   };
                 } TGbl_clkSelect;
    typedef union  TGbl_ClkSwitch
          { UNSG32 u32[2];
            struct {
            struct w32Gbl_ClkSwitch;
            struct w32Gbl_ClkSwitch1;
                   };
                 } TGbl_ClkSwitch;
    typedef union  TGbl_PadSelect
          { UNSG32 u32[3];
            struct {
            struct w32Gbl_PadSelect;
            struct w32Gbl_PadSelect1;
            struct w32Gbl_PadSelect2;
                   };
                 } TGbl_PadSelect;
    typedef union  TGbl_ResetTrigger
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ResetTrigger;
                   };
                 } TGbl_ResetTrigger;
    typedef union  TGbl_ResetStatus
          { UNSG32 u32[2];
            struct {
            struct w32Gbl_ResetStatus;
            struct w32Gbl_ResetStatus1;
                   };
                 } TGbl_ResetStatus;
    typedef union  TGbl_sw_generic0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic0;
                   };
                 } TGbl_sw_generic0;
    typedef union  TGbl_sw_generic1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic1;
                   };
                 } TGbl_sw_generic1;
    typedef union  TGbl_sw_generic2
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic2;
                   };
                 } TGbl_sw_generic2;
    typedef union  TGbl_sw_generic3
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic3;
                   };
                 } TGbl_sw_generic3;
    typedef union  TGbl_ChipCntl0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ChipCntl0;
                   };
                 } TGbl_ChipCntl0;
    typedef union  TGbl_ChipCntl1
          { UNSG32 u32[3];
            struct {
            struct w32Gbl_ChipCntl1;
            struct w32Gbl_ChipCntl11;
            struct w32Gbl_ChipCntl12;
                   };
                 } TGbl_ChipCntl1;
    typedef union  TGbl_RWTC_avio31to0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_avio31to0;
                   };
                 } TGbl_RWTC_avio31to0;
    typedef union  TGbl_RWTC_avio41to32
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_avio41to32;
                   };
                 } TGbl_RWTC_avio41to32;
    typedef union  TGbl_RWTC_gfx2D31to0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_gfx2D31to0;
                   };
                 } TGbl_RWTC_gfx2D31to0;
    typedef union  TGbl_RWTC_gfx2D41to32
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_gfx2D41to32;
                   };
                 } TGbl_RWTC_gfx2D41to32;
    typedef union  TGbl_RWTC_gfx3D31to0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_gfx3D31to0;
                   };
                 } TGbl_RWTC_gfx3D31to0;
    typedef union  TGbl_RWTC_gfx3D41to32
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_gfx3D41to32;
                   };
                 } TGbl_RWTC_gfx3D41to32;
    typedef union  TGbl_RWTC_soc31to0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_soc31to0;
                   };
                 } TGbl_RWTC_soc31to0;
    typedef union  TGbl_RWTC_soc41to32
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_soc41to32;
                   };
                 } TGbl_RWTC_soc41to32;
    typedef union  TGbl_RWTC_vPro31to0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_vPro31to0;
                   };
                 } TGbl_RWTC_vPro31to0;
    typedef union  TGbl_RWTC_vPro41to32
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RWTC_vPro41to32;
                   };
                 } TGbl_RWTC_vPro41to32;
    typedef union  TGbl_ProductId
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ProductId;
                   };
                 } TGbl_ProductId;
    typedef union  TGbl_ProductId_ext
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ProductId_ext;
                   };
                 } TGbl_ProductId_ext;
    typedef union  TGbl_FPGAR
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_FPGAR;
                   };
                 } TGbl_FPGAR;
    typedef union  TGbl_FPGARW
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_FPGARW;
                   };
                 } TGbl_FPGARW;
    typedef union  TGbl_RingOscCtl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RingOscCtl;
                   };
                 } TGbl_RingOscCtl;
    typedef union  TGbl_PLLBypsBootStrapEn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_PLLBypsBootStrapEn;
                   };
                 } TGbl_PLLBypsBootStrapEn;
    typedef union  TGbl_IO_CALIBRATE_IN
          { UNSG32 u32[4];
            struct {
            struct w32Gbl_IO_CALIBRATE_IN;
            struct w32Gbl_IO_CALIBRATE_IN1;
            struct w32Gbl_IO_CALIBRATE_IN2;
            struct w32Gbl_IO_CALIBRATE_IN3;
                   };
                 } TGbl_IO_CALIBRATE_IN;
    typedef union  TGbl_IO_CALBRATE_OUT
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_IO_CALBRATE_OUT;
                   };
                 } TGbl_IO_CALBRATE_OUT;
    typedef union  TGbl_SECURE_SCAN_EN
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SECURE_SCAN_EN;
                   };
                 } TGbl_SECURE_SCAN_EN;
    typedef union  TGbl_NandWPn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_NandWPn;
                   };
                 } TGbl_NandWPn;
    typedef union  TGbl_RingCntCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_RingCntCntl;
                   };
                 } TGbl_RingCntCntl;
    typedef union  TGbl_gfx3DCoreClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DCoreClkCtrl;
                   };
                 } TGbl_gfx3DCoreClkCtrl;
    typedef union  TGbl_gfx3DSysClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DSysClkCtrl;
                   };
                 } TGbl_gfx3DSysClkCtrl;
    typedef union  TGbl_arcRefClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_arcRefClkCtrl;
                   };
                 } TGbl_arcRefClkCtrl;
    typedef union  TGbl_vipClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_vipClkCtrl;
                   };
                 } TGbl_vipClkCtrl;
    typedef union  TGbl_sdioXinClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sdioXinClkCtrl;
                   };
                 } TGbl_sdioXinClkCtrl;
    typedef union  TGbl_sdio1XinClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sdio1XinClkCtrl;
                   };
                 } TGbl_sdio1XinClkCtrl;
    typedef union  TGbl_gfx3DExtraClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DExtraClkCtrl;
                   };
                 } TGbl_gfx3DExtraClkCtrl;
    typedef union  TGbl_gfx3DReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DReset;
                   };
                 } TGbl_gfx3DReset;
    typedef union  TGbl_gc360ClkCtrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gc360ClkCtrl;
                   };
                 } TGbl_gc360ClkCtrl;
    typedef union  TGbl_sdioDllMstRef
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sdioDllMstRef;
                   };
                 } TGbl_sdioDllMstRef;
    typedef union  TGbl_sdioDllMstCtrl
          { UNSG32 u32[2];
            struct {
            struct w32Gbl_sdioDllMstCtrl;
            struct w32Gbl_sdioDllMstCtrl1;
                   };
                 } TGbl_sdioDllMstCtrl;
    typedef union  TGbl_sdioDllMstStatus
          { UNSG32 u32[2];
            struct {
            struct w32Gbl_sdioDllMstStatus;
            struct w32Gbl_sdioDllMstStatus1;
                   };
                 } TGbl_sdioDllMstStatus;
    typedef union  TGbl_sdioPortSel
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sdioPortSel;
                   };
                 } TGbl_sdioPortSel;
    typedef union  TGbl_gc360Reset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gc360Reset;
                   };
                 } TGbl_gc360Reset;
    typedef union  TGbl_SpdifRxReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SpdifRxReset;
                   };
                 } TGbl_SpdifRxReset;
    typedef union  TGbl_gfx3DDisRamClkGate
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DDisRamClkGate;
                   };
                 } TGbl_gfx3DDisRamClkGate;
    typedef union  TGbl_gfx3DResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DResetStatus;
                   };
                 } TGbl_gfx3DResetStatus;
    typedef union  TGbl_gc360DisRCG
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gc360DisRCG;
                   };
                 } TGbl_gc360DisRCG;
    typedef union  TGbl_gc360ResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gc360ResetStatus;
                   };
                 } TGbl_gc360ResetStatus;
    typedef union  TGbl_SpdifRxResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SpdifRxResetStatus;
                   };
                 } TGbl_SpdifRxResetStatus;
    typedef union  TGbl_DroEnable
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DroEnable;
                   };
                 } TGbl_DroEnable;
    typedef union  TGbl_DroCounter
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DroCounter;
                   };
                 } TGbl_DroCounter;
    typedef union  TGbl_DroDone
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DroDone;
                   };
                 } TGbl_DroDone;
    typedef union  TGbl_INT_ID
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_INT_ID;
                   };
                 } TGbl_INT_ID;
    typedef union  TGbl_stickyResetN
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_stickyResetN;
                   };
                 } TGbl_stickyResetN;
    typedef union  TGbl_gethRgmii_dll
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gethRgmii_dll;
                   };
                 } TGbl_gethRgmii_dll;
    typedef union  TGbl_funcSel
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_funcSel;
                   };
                 } TGbl_funcSel;
    typedef union  TGbl_chipCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_chipCntl;
                   };
                 } TGbl_chipCntl;
    typedef union  TGbl_bootStrapEn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrapEn;
                   };
                 } TGbl_bootStrapEn;
    typedef union  TGbl_axiClkEn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_axiClkEn;
                   };
                 } TGbl_axiClkEn;
    typedef union  TGbl_ahbClkEn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ahbClkEn;
                   };
                 } TGbl_ahbClkEn;
    typedef union  TGbl_SPI1_SS0nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS0nCntl;
                   };
                 } TGbl_SPI1_SS0nCntl;
    typedef union  TGbl_SPI1_SS1nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS1nCntl;
                   };
                 } TGbl_SPI1_SS1nCntl;
    typedef union  TGbl_SPI1_SS2nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS2nCntl;
                   };
                 } TGbl_SPI1_SS2nCntl;
    typedef union  TGbl_SPI1_SCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SCLKCntl;
                   };
                 } TGbl_SPI1_SCLKCntl;
    typedef union  TGbl_SPI1_SDOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SDOCntl;
                   };
                 } TGbl_SPI1_SDOCntl;
    typedef union  TGbl_SPI1_SDICntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SDICntl;
                   };
                 } TGbl_SPI1_SDICntl;
    typedef union  TGbl_URT0_RXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_URT0_RXDCntl;
                   };
                 } TGbl_URT0_RXDCntl;
    typedef union  TGbl_URT0_TXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_URT0_TXDCntl;
                   };
                 } TGbl_URT0_TXDCntl;
    typedef union  TGbl_DVIO0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO0Cntl;
                   };
                 } TGbl_DVIO0Cntl;
    typedef union  TGbl_DVIO1Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO1Cntl;
                   };
                 } TGbl_DVIO1Cntl;
    typedef union  TGbl_DVIO2Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO2Cntl;
                   };
                 } TGbl_DVIO2Cntl;
    typedef union  TGbl_DVIO3Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO3Cntl;
                   };
                 } TGbl_DVIO3Cntl;
    typedef union  TGbl_DVIO4Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO4Cntl;
                   };
                 } TGbl_DVIO4Cntl;
    typedef union  TGbl_DVIO5Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO5Cntl;
                   };
                 } TGbl_DVIO5Cntl;
    typedef union  TGbl_DVIO6Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO6Cntl;
                   };
                 } TGbl_DVIO6Cntl;
    typedef union  TGbl_DVIO7Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO7Cntl;
                   };
                 } TGbl_DVIO7Cntl;
    typedef union  TGbl_DVIO8Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO8Cntl;
                   };
                 } TGbl_DVIO8Cntl;
    typedef union  TGbl_DVIO9Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO9Cntl;
                   };
                 } TGbl_DVIO9Cntl;
    typedef union  TGbl_DVIO10Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO10Cntl;
                   };
                 } TGbl_DVIO10Cntl;
    typedef union  TGbl_DVIO11Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DVIO11Cntl;
                   };
                 } TGbl_DVIO11Cntl;
    typedef union  TGbl_DV0_CLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DV0_CLKCntl;
                   };
                 } TGbl_DV0_CLKCntl;
    typedef union  TGbl_DV0_HSCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DV0_HSCntl;
                   };
                 } TGbl_DV0_HSCntl;
    typedef union  TGbl_DV0_VSCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DV0_VSCntl;
                   };
                 } TGbl_DV0_VSCntl;
    typedef union  TGbl_DV0_FIDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DV0_FIDCntl;
                   };
                 } TGbl_DV0_FIDCntl;
    typedef union  TGbl_I2S0_BCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_BCLKCntl;
                   };
                 } TGbl_I2S0_BCLKCntl;
    typedef union  TGbl_I2S0_LRCKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_LRCKCntl;
                   };
                 } TGbl_I2S0_LRCKCntl;
    typedef union  TGbl_I2S0_DO0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_DO0Cntl;
                   };
                 } TGbl_I2S0_DO0Cntl;
    typedef union  TGbl_I2S0_DO1Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_DO1Cntl;
                   };
                 } TGbl_I2S0_DO1Cntl;
    typedef union  TGbl_I2S0_DO2Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_DO2Cntl;
                   };
                 } TGbl_I2S0_DO2Cntl;
    typedef union  TGbl_I2S0_DO3Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S0_DO3Cntl;
                   };
                 } TGbl_I2S0_DO3Cntl;
    typedef union  TGbl_SPDIFICntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPDIFICntl;
                   };
                 } TGbl_SPDIFICntl;
    typedef union  TGbl_I2S1_LRCKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_LRCKCntl;
                   };
                 } TGbl_I2S1_LRCKCntl;
    typedef union  TGbl_I2S1_BCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_BCLKCntl;
                   };
                 } TGbl_I2S1_BCLKCntl;
    typedef union  TGbl_I2S1_DOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_DOCntl;
                   };
                 } TGbl_I2S1_DOCntl;
    typedef union  TGbl_I2S2_LRCKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_LRCKCntl;
                   };
                 } TGbl_I2S2_LRCKCntl;
    typedef union  TGbl_I2S2_BCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_BCLKCntl;
                   };
                 } TGbl_I2S2_BCLKCntl;
    typedef union  TGbl_I2S2_DI_0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_DI_0Cntl;
                   };
                 } TGbl_I2S2_DI_0Cntl;
    typedef union  TGbl_SPDIFOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPDIFOCntl;
                   };
                 } TGbl_SPDIFOCntl;

    ///////////////////////////////////////////////////////////
     SIGN32 Gbl_drvrd(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 Gbl_drvwr(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void Gbl_reset(SIE_Gbl *p);
     SIGN32 Gbl_cmp  (SIE_Gbl *p, SIE_Gbl *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define Gbl_check(p,pie,pfx,hLOG) Gbl_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define Gbl_print(p,    pfx,hLOG) Gbl_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: Gbl
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: global.h
////////////////////////////////////////////////////////////

