//////
/// don't edit! auto-generated by docc: PngDec.h
////////////////////////////////////////////////////////////
#ifndef PngDec_h
#define PngDec_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE PngDecAxiParam                           (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 AxiParam             (P)
///               %unsigned 4  ALEN                      0xF
///                                    ###
///                                    * Maxim burst length of the AXI requests issued. AXI master also guarantees that AXI burst will not cross the boundary of maxim burst length.
///                                    * 0: one beat
///                                    * 1: two beats
///                                    * 3: four beats
///                                    * 7: eight beats
///                                    * 15: sixteen beats
///                                    * All other values are reserved;
///                                    ###
///               %unsigned 4  ACACHE                    0x0
///                                    ###
///                                    * The value will be passed to AxCACHE[3:0] on AXI interface
///                                    ###
///               %unsigned 1  AIOB                      0x0
///                                    ###
///                                    * The value will be passed to AxUSER[0] on AXI interface. Based on the value of this bit, SOC Fabric will route the AXI transaction through CPU IO coherent bridge or directly to memory controller.
///                                    * 1: AXI transaction goes through IO coherent bridge.
///                                    * 0: Data go directly to memory controller and data.
///                                    ###
///               %unsigned 3  APROT                     0x0
///                                    ###
///                                    * The value will be passed to AxPROT[2:0] on AXI interface
///                                    ###
///               %unsigned 4  AQOS                      0x0
///                                    ###
///                                    * The value will be passed to AxQOS[3:0] on AXI interface
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      16b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PngDecAxiParam
#define h_PngDecAxiParam (){}

    #define     RA_PngDecAxiParam_AxiParam                     0x0000

    #define     BA_PngDecAxiParam_AxiParam_ALEN                0x0000
    #define     B16PngDecAxiParam_AxiParam_ALEN                0x0000
    #define   LSb32PngDecAxiParam_AxiParam_ALEN                   0
    #define   LSb16PngDecAxiParam_AxiParam_ALEN                   0
    #define       bPngDecAxiParam_AxiParam_ALEN                4
    #define   MSK32PngDecAxiParam_AxiParam_ALEN                   0x0000000F

    #define     BA_PngDecAxiParam_AxiParam_ACACHE              0x0000
    #define     B16PngDecAxiParam_AxiParam_ACACHE              0x0000
    #define   LSb32PngDecAxiParam_AxiParam_ACACHE                 4
    #define   LSb16PngDecAxiParam_AxiParam_ACACHE                 4
    #define       bPngDecAxiParam_AxiParam_ACACHE              4
    #define   MSK32PngDecAxiParam_AxiParam_ACACHE                 0x000000F0

    #define     BA_PngDecAxiParam_AxiParam_AIOB                0x0001
    #define     B16PngDecAxiParam_AxiParam_AIOB                0x0000
    #define   LSb32PngDecAxiParam_AxiParam_AIOB                   8
    #define   LSb16PngDecAxiParam_AxiParam_AIOB                   8
    #define       bPngDecAxiParam_AxiParam_AIOB                1
    #define   MSK32PngDecAxiParam_AxiParam_AIOB                   0x00000100

    #define     BA_PngDecAxiParam_AxiParam_APROT               0x0001
    #define     B16PngDecAxiParam_AxiParam_APROT               0x0000
    #define   LSb32PngDecAxiParam_AxiParam_APROT                  9
    #define   LSb16PngDecAxiParam_AxiParam_APROT                  9
    #define       bPngDecAxiParam_AxiParam_APROT               3
    #define   MSK32PngDecAxiParam_AxiParam_APROT                  0x00000E00

    #define     BA_PngDecAxiParam_AxiParam_AQOS                0x0001
    #define     B16PngDecAxiParam_AxiParam_AQOS                0x0000
    #define   LSb32PngDecAxiParam_AxiParam_AQOS                   12
    #define   LSb16PngDecAxiParam_AxiParam_AQOS                   12
    #define       bPngDecAxiParam_AxiParam_AQOS                4
    #define   MSK32PngDecAxiParam_AxiParam_AQOS                   0x0000F000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PngDecAxiParam {
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecAxiParam_AxiParam_ALEN(r32)           _BFGET_(r32, 3, 0)
    #define   SET32PngDecAxiParam_AxiParam_ALEN(r32,v)         _BFSET_(r32, 3, 0,v)
    #define   GET16PngDecAxiParam_AxiParam_ALEN(r16)           _BFGET_(r16, 3, 0)
    #define   SET16PngDecAxiParam_AxiParam_ALEN(r16,v)         _BFSET_(r16, 3, 0,v)

    #define   GET32PngDecAxiParam_AxiParam_ACACHE(r32)         _BFGET_(r32, 7, 4)
    #define   SET32PngDecAxiParam_AxiParam_ACACHE(r32,v)       _BFSET_(r32, 7, 4,v)
    #define   GET16PngDecAxiParam_AxiParam_ACACHE(r16)         _BFGET_(r16, 7, 4)
    #define   SET16PngDecAxiParam_AxiParam_ACACHE(r16,v)       _BFSET_(r16, 7, 4,v)

    #define   GET32PngDecAxiParam_AxiParam_AIOB(r32)           _BFGET_(r32, 8, 8)
    #define   SET32PngDecAxiParam_AxiParam_AIOB(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16PngDecAxiParam_AxiParam_AIOB(r16)           _BFGET_(r16, 8, 8)
    #define   SET16PngDecAxiParam_AxiParam_AIOB(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32PngDecAxiParam_AxiParam_APROT(r32)          _BFGET_(r32,11, 9)
    #define   SET32PngDecAxiParam_AxiParam_APROT(r32,v)        _BFSET_(r32,11, 9,v)
    #define   GET16PngDecAxiParam_AxiParam_APROT(r16)          _BFGET_(r16,11, 9)
    #define   SET16PngDecAxiParam_AxiParam_APROT(r16,v)        _BFSET_(r16,11, 9,v)

    #define   GET32PngDecAxiParam_AxiParam_AQOS(r32)           _BFGET_(r32,15,12)
    #define   SET32PngDecAxiParam_AxiParam_AQOS(r32,v)         _BFSET_(r32,15,12,v)
    #define   GET16PngDecAxiParam_AxiParam_AQOS(r16)           _BFGET_(r16,15,12)
    #define   SET16PngDecAxiParam_AxiParam_AQOS(r16,v)         _BFSET_(r16,15,12,v)

    #define     w32PngDecAxiParam_AxiParam                     {\
            UNSG32 uAxiParam_ALEN                              :  4;\
            UNSG32 uAxiParam_ACACHE                            :  4;\
            UNSG32 uAxiParam_AIOB                              :  1;\
            UNSG32 uAxiParam_APROT                             :  3;\
            UNSG32 uAxiParam_AQOS                              :  4;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32PngDecAxiParam_AxiParam;
            struct w32PngDecAxiParam_AxiParam;
          };
    ///////////////////////////////////////////////////////////
    } SIE_PngDecAxiParam;

    typedef union  T32PngDecAxiParam_AxiParam
          { UNSG32 u32;
            struct w32PngDecAxiParam_AxiParam;
                 } T32PngDecAxiParam_AxiParam;
    ///////////////////////////////////////////////////////////

    typedef union  TPngDecAxiParam_AxiParam
          { UNSG32 u32[1];
            struct {
            struct w32PngDecAxiParam_AxiParam;
                   };
                 } TPngDecAxiParam_AxiParam;

    ///////////////////////////////////////////////////////////
     SIGN32 PngDecAxiParam_drvrd(SIE_PngDecAxiParam *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PngDecAxiParam_drvwr(SIE_PngDecAxiParam *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PngDecAxiParam_reset(SIE_PngDecAxiParam *p);
     SIGN32 PngDecAxiParam_cmp  (SIE_PngDecAxiParam *p, SIE_PngDecAxiParam *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PngDecAxiParam_check(p,pie,pfx,hLOG) PngDecAxiParam_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define PngDecAxiParam_print(p,    pfx,hLOG) PngDecAxiParam_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: PngDecAxiParam
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE PngDecReg               biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Enable               (P-)
///               %unsigned 1  Enable                    0x0
///                                    ###
///                                    * 1:enable PNG decoder
///                                    * 0:disable PNG decoder
///                                    * When disabled, PNG decoder will stay in reset state, all the configuration registers is still accessible and the values will be kept.
///                                    * After power on, PNG decoder is disabled until firmware set this bit to 1.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004 ClockControl         (P)
///               %unsigned 1  ClockGatingEnable         0x1
///                                    ###
///                                    * 1:enable clock gating
///                                    * 0:disable clock gating
///                                    * When clock gating is enabled, PNG decoder will turn off the core clock while there is no input stream.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x0000C ChuckDecEnable       (P)
///               %unsigned 1  IDAT                      0x0
///                                    ###
///                                    * 1: Enable the IDAT decoding
///                                    * 0: Ignore IDAT chunk
///                                    ###
///               %unsigned 1  iCCP                      0x0
///                                    ###
///                                    * 1: Enable the iCCP decompression
///                                    * 0: Ignore iCCP chunk
///                                    ###
///               %unsigned 1  iTXt                      0x0
///                                    ###
///                                    * 1: Enable the iTXt decompression
///                                    * 0: Ignore iTXt chunk
///                                    * When this bit is one, only the compressed iTXt will be decompressed and saved into output ring buffer, uncompressed iTXt chunk will still be ignored by H/W.
///                                    ###
///               %unsigned 1  zTXt                      0x0
///                                    ###
///                                    * 1: Enable the zTXt decompression
///                                    * 0: Ignore zTXt chunk
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00010 StreamPointerStatus  (R-)
///               %unsigned 8  Level                     0x0
///                                    ###
///                                    * Level of stream buffer pointer FIFO
///                                    ###
///               %unsigned 1  Full                      0x0
///                                    ###
///                                    * 1: Stream buffer pointer FIFO is full
///                                    * 0: Stream buffer pointer FIFO is not full
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x00014                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00018 StreamAddress        (P)
///               %unsigned 32 StreamAddress             0x0
///                                    ###
///                                    * Base address of the input stream buffer
///                                    ###
///     @ 0x0001C StreamInfo           (P)
///               %unsigned 24 Size                      0x0
///                                    ###
///                                    * Size of the stream buffer; H/W will ignore stream buffer with size of zero.
///                                    * Writing to StreamInfo will push StreamAddress and StreamInfo into stream buffer pointer FIFO.
///                                    * Firmware should always write StreamAddress before it writes StreamInfo.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00020 ImageFormat          (P)
///               %unsigned 2  PixelFormat               0x0
///                                    ###
///                                    * Format of the pixels in the output image buffer:
///                                    * 0: ARGB,
///                                    * 1: RGBA,
///                                    * 2: ABGR,
///                                    * 3: BGRA
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00024 ImageAddress         (P)
///               %unsigned 32 ImageAddress              0x0
///                                    ###
///                                    * Base address of the output 2D image buffer
///                                    * The base address of the image buffer should be 4-byte aligned. H/W will ignore the 2 LSB.
///                                    ###
///     @ 0x00028 ImageStride          (P)
///               %unsigned 32 ImageStride               0x0
///                                    ###
///                                    * Stride of the output 2D image buffer
///                                    * The image stride of the image buffer should be 4-byte aligned. H/W will ignore the 2 LSB.
///                                    ###
///     @ 0x0002C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00030 RingBufferAddress    (P)
///               %unsigned 32 RingBufferAddress         0x0
///                                    ###
///                                    * Base address of the output ring buffer for the decompressed data
///                                    * The ring buffer address should be 4-byte aligned. H/W will ignore the 2 LSB.
///                                    ###
///     @ 0x00034 RingBufferSize       (P)
///               %unsigned 32 RingBufferSize            0x0
///                                    ###
///                                    * Size of the decompressed data output ring buffer
///                                    * The ring buffer size should be 4-byte aligned. H/W will ignore the 2 LSB.
///                                    ###
///     @ 0x00038 RingBufferReadPointer (P)
///               %unsigned 32 RingBufferReadPointer     0x0
///                                    ###
///                                    * Read pointer (offset to the base address) of the decompressed data output ring buffer
///                                    * Firmware should keep updating this field as it reads data out of the buffer.
///                                    ###
///     @ 0x0003C RingBufferWritePointer (R-)
///               %unsigned 32 RingBufferWritePointer    0x0
///                                    ###
///                                    * Write pointer (offset to the base address) of the decompressed data output ring buffer
///                                    * H/W will keep updating this field as it writes data into the buffer.
///                                    * Firmware reads the value of this register and compares it with the read pointer to find out how many data has been written by H/W.
///                                    ###
///     @ 0x00040                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00050 IntDecStatus         (WOC-)
///               ###
///               * Writing ones to any of the bits will clear those bits.
///               ###
///               %unsigned 1  IHDR                      0x0
///               %unsigned 1  PLTE                      0x0
///               %unsigned 1  IDAT                      0x0
///               %unsigned 1  IEND                      0x0
///               %unsigned 1  cHRM                      0x0
///               %unsigned 1  gAMA                      0x0
///               %unsigned 1  iCCP                      0x0
///               %unsigned 1  sBIT                      0x0
///               %unsigned 1  sRGB                      0x0
///               %unsigned 1  bKGD                      0x0
///               %unsigned 1  hIST                      0x0
///               %unsigned 1  tRNS                      0x0
///               %unsigned 1  pHYs                      0x0
///               %unsigned 1  sPLT                      0x0
///               %unsigned 1  tIME                      0x0
///               %unsigned 1  iTXt                      0x0
///               %unsigned 1  tEXt                      0x0
///               %unsigned 1  zTXt                      0x0
///               %unsigned 1  Unknown                   0x0
///                                    ###
///                                    * These bits indicate that at least one chunk of that type is processed and the output (if any) is ready in the memory.
///                                    * There is one bit for each type of chunk.
///                                    ###
///               %unsigned 11 Reserved0                 0x0
///               %unsigned 1  StreamPointerAEmpty       0x0
///                                    ###
///                                    * This bit indicates that the input stream buffer pointer FIFO is almost empty and firmware can push more pointers into it.
///                                    ###
///               %unsigned 1  RingBufferAFull           0x0
///                                    ###
///                                    * This bit indicates that the output ring buffer is almost full and firmware needs to read some data out.
///                                    ###
///     @ 0x00054 IntDecStatusMask     (P)
///               %unsigned 32 IntDecStatusMask          0x0
///                                    ###
///                                    * Interrupt mask for IntDecStatus
///                                    * Bit i is used for IntDecStatus bit i.
///                                    ###
///     @ 0x00058 IntDecStatusStop     (P)
///               %unsigned 32 IntDecStatusStop          0x0
///                                    ###
///                                    * Stop bit for IntDecStatus.
///                                    * When this bit is one, PNG decoder will stop when the IntDecStatus bit is set and resume after IntDecStatus is cleared by firmware.
///                                    * Bit i is used for IntDecStatus bit i.
///                                    ###
///     @ 0x0005C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00060 IntDecError          (WOC-)
///               ###
///               * Writing ones to any of the bits will clear those bits.
///               ###
///               %unsigned 1  StreamPointerOverflow     0x0
///                                    ###
///                                    * This bit will be set when firmware writes to the StreamInfo when StreamPointerStatus.Full is high.
///                                    ###
///               %unsigned 1  ChunkCrc                  0x0
///                                    ###
///                                    * This bit will be set when there is CRC error in the chunk data
///                                    ###
///               %unsigned 1  SignatureWrong            0x0
///                                    ###
///                                    * This bit will be set when the 8-byte signature is incorrect
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00064 IntDecErrorMask      (P)
///               %unsigned 2  IntDecErrorMask           0x0
///                                    ###
///                                    * Interrupt mask for IntDecError
///                                    * Bit i is used for IntDecError bit i.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00068 IntDecErrorStop      (P)
///               %unsigned 2  IntDecErrorStop           0x0
///                                    ###
///                                    * Stop bit for IntDecError.
///                                    * When this bit is set to one, PNG decoder will stop when the error bit is set.
///                                    * Bit i is used for IntDecError bit i.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x0006C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00070 IntAxiRespError      (WOC-)
///               ###
///               * Writing ones to any of the bits will clear those bits.
///               ###
///               %unsigned 1  IntAxiRespError_0i        0x0
///               %unsigned 1  IntAxiRespError_1i        0x0
///               %unsigned 1  IntAxiRespError_2i        0x0
///               %unsigned 1  IntAxiRespError_3i        0x0
///                                    ###
///                                    * Error status for AXI response;
///                                    * Bit [0]: SLVERR on BRESP;
///                                    * Bit [1]: DECERR on BRESP;
///                                    * Bit[3:2]: RRESP errors;
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00074 IntAxiRespErrorMask  (P)
///               %unsigned 4  IntAxiRespErrorMask       0x0
///                                    ###
///                                    * Interrupt mask for IntAxiRespError
///                                    * Bit i is used for IntAxiRespError bit i.
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00078                      (W-)
///     #         # Stuffing bytes...
///               %% 832
///     @ 0x000E0                      (P)
///     # 0x000E0 AxiRead              
///               $PngDecAxiParam      AxiRead           REG          
///                                    ###
///                                    * Configuration registers for AXI read channel
///                                    ###
///     @ 0x000E4                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x000F0                      (P)
///     # 0x000F0 AxiWrite             
///               $PngDecAxiParam      AxiWrite          REG          
///                                    ###
///                                    * Configuration registers for AXI write channel
///                                    ###
///     @ 0x000F4                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00100 DownScaleParam       (P)
///               %unsigned 5  Ratio                     0x1
///                                    ###
///                                    * Downscaling ratio;
///                                    * 0 or 1: disable downscaling
///                                    * 2 to 16: downscale width to 1/ratio
///                                    * Other values are reserved
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00104 DownScaleCoeff0      (P)
///               %signed   17 Coeff                     32768
///                                    ###
///                                    * 17-bit signed coefficient for the downscaling filter. H/W multiplies the coefficients with image samples and adds the products together. The sum of products is divided by 216 (right shift 15 bits) and clipped into the valid range ([0,255]).
///                                    ###
///               %%        15         # Stuffing bits...
///     @ 0x00108 DownScaleCoeff1      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x0010C DownScaleCoeff2      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x00110 DownScaleCoeff3      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x00114 DownScaleCoeff4      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x00118 DownScaleCoeff5      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x0011C DownScaleCoeff6      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x00120 DownScaleCoeff7      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     @ 0x00124 DownScaleCoeff8      (P)
///               %signed   17 Coeff                     0
///               %%        15         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     296B, bits:     566b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PngDecReg
#define h_PngDecReg (){}

    #define     RA_PngDecReg_Enable                            0x0000

    #define     BA_PngDecReg_Enable_Enable                     0x0000
    #define     B16PngDecReg_Enable_Enable                     0x0000
    #define   LSb32PngDecReg_Enable_Enable                        0
    #define   LSb16PngDecReg_Enable_Enable                        0
    #define       bPngDecReg_Enable_Enable                     1
    #define   MSK32PngDecReg_Enable_Enable                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_ClockControl                      0x0004

    #define     BA_PngDecReg_ClockControl_ClockGatingEnable    0x0004
    #define     B16PngDecReg_ClockControl_ClockGatingEnable    0x0004
    #define   LSb32PngDecReg_ClockControl_ClockGatingEnable       0
    #define   LSb16PngDecReg_ClockControl_ClockGatingEnable       0
    #define       bPngDecReg_ClockControl_ClockGatingEnable    1
    #define   MSK32PngDecReg_ClockControl_ClockGatingEnable       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_ChuckDecEnable                    0x000C

    #define     BA_PngDecReg_ChuckDecEnable_IDAT               0x000C
    #define     B16PngDecReg_ChuckDecEnable_IDAT               0x000C
    #define   LSb32PngDecReg_ChuckDecEnable_IDAT                  0
    #define   LSb16PngDecReg_ChuckDecEnable_IDAT                  0
    #define       bPngDecReg_ChuckDecEnable_IDAT               1
    #define   MSK32PngDecReg_ChuckDecEnable_IDAT                  0x00000001

    #define     BA_PngDecReg_ChuckDecEnable_iCCP               0x000C
    #define     B16PngDecReg_ChuckDecEnable_iCCP               0x000C
    #define   LSb32PngDecReg_ChuckDecEnable_iCCP                  1
    #define   LSb16PngDecReg_ChuckDecEnable_iCCP                  1
    #define       bPngDecReg_ChuckDecEnable_iCCP               1
    #define   MSK32PngDecReg_ChuckDecEnable_iCCP                  0x00000002

    #define     BA_PngDecReg_ChuckDecEnable_iTXt               0x000C
    #define     B16PngDecReg_ChuckDecEnable_iTXt               0x000C
    #define   LSb32PngDecReg_ChuckDecEnable_iTXt                  2
    #define   LSb16PngDecReg_ChuckDecEnable_iTXt                  2
    #define       bPngDecReg_ChuckDecEnable_iTXt               1
    #define   MSK32PngDecReg_ChuckDecEnable_iTXt                  0x00000004

    #define     BA_PngDecReg_ChuckDecEnable_zTXt               0x000C
    #define     B16PngDecReg_ChuckDecEnable_zTXt               0x000C
    #define   LSb32PngDecReg_ChuckDecEnable_zTXt                  3
    #define   LSb16PngDecReg_ChuckDecEnable_zTXt                  3
    #define       bPngDecReg_ChuckDecEnable_zTXt               1
    #define   MSK32PngDecReg_ChuckDecEnable_zTXt                  0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_StreamPointerStatus               0x0010

    #define     BA_PngDecReg_StreamPointerStatus_Level         0x0010
    #define     B16PngDecReg_StreamPointerStatus_Level         0x0010
    #define   LSb32PngDecReg_StreamPointerStatus_Level            0
    #define   LSb16PngDecReg_StreamPointerStatus_Level            0
    #define       bPngDecReg_StreamPointerStatus_Level         8
    #define   MSK32PngDecReg_StreamPointerStatus_Level            0x000000FF

    #define     BA_PngDecReg_StreamPointerStatus_Full          0x0011
    #define     B16PngDecReg_StreamPointerStatus_Full          0x0010
    #define   LSb32PngDecReg_StreamPointerStatus_Full             8
    #define   LSb16PngDecReg_StreamPointerStatus_Full             8
    #define       bPngDecReg_StreamPointerStatus_Full          1
    #define   MSK32PngDecReg_StreamPointerStatus_Full             0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_StreamAddress                     0x0018

    #define     BA_PngDecReg_StreamAddress_StreamAddress       0x0018
    #define     B16PngDecReg_StreamAddress_StreamAddress       0x0018
    #define   LSb32PngDecReg_StreamAddress_StreamAddress          0
    #define   LSb16PngDecReg_StreamAddress_StreamAddress          0
    #define       bPngDecReg_StreamAddress_StreamAddress       32
    #define   MSK32PngDecReg_StreamAddress_StreamAddress          0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_StreamInfo                        0x001C

    #define     BA_PngDecReg_StreamInfo_Size                   0x001C
    #define     B16PngDecReg_StreamInfo_Size                   0x001C
    #define   LSb32PngDecReg_StreamInfo_Size                      0
    #define   LSb16PngDecReg_StreamInfo_Size                      0
    #define       bPngDecReg_StreamInfo_Size                   24
    #define   MSK32PngDecReg_StreamInfo_Size                      0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_ImageFormat                       0x0020

    #define     BA_PngDecReg_ImageFormat_PixelFormat           0x0020
    #define     B16PngDecReg_ImageFormat_PixelFormat           0x0020
    #define   LSb32PngDecReg_ImageFormat_PixelFormat              0
    #define   LSb16PngDecReg_ImageFormat_PixelFormat              0
    #define       bPngDecReg_ImageFormat_PixelFormat           2
    #define   MSK32PngDecReg_ImageFormat_PixelFormat              0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_ImageAddress                      0x0024

    #define     BA_PngDecReg_ImageAddress_ImageAddress         0x0024
    #define     B16PngDecReg_ImageAddress_ImageAddress         0x0024
    #define   LSb32PngDecReg_ImageAddress_ImageAddress            0
    #define   LSb16PngDecReg_ImageAddress_ImageAddress            0
    #define       bPngDecReg_ImageAddress_ImageAddress         32
    #define   MSK32PngDecReg_ImageAddress_ImageAddress            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_ImageStride                       0x0028

    #define     BA_PngDecReg_ImageStride_ImageStride           0x0028
    #define     B16PngDecReg_ImageStride_ImageStride           0x0028
    #define   LSb32PngDecReg_ImageStride_ImageStride              0
    #define   LSb16PngDecReg_ImageStride_ImageStride              0
    #define       bPngDecReg_ImageStride_ImageStride           32
    #define   MSK32PngDecReg_ImageStride_ImageStride              0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_RingBufferAddress                 0x0030

    #define     BA_PngDecReg_RingBufferAddress_RingBufferAddress 0x0030
    #define     B16PngDecReg_RingBufferAddress_RingBufferAddress 0x0030
    #define   LSb32PngDecReg_RingBufferAddress_RingBufferAddress    0
    #define   LSb16PngDecReg_RingBufferAddress_RingBufferAddress    0
    #define       bPngDecReg_RingBufferAddress_RingBufferAddress 32
    #define   MSK32PngDecReg_RingBufferAddress_RingBufferAddress    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_RingBufferSize                    0x0034

    #define     BA_PngDecReg_RingBufferSize_RingBufferSize     0x0034
    #define     B16PngDecReg_RingBufferSize_RingBufferSize     0x0034
    #define   LSb32PngDecReg_RingBufferSize_RingBufferSize        0
    #define   LSb16PngDecReg_RingBufferSize_RingBufferSize        0
    #define       bPngDecReg_RingBufferSize_RingBufferSize     32
    #define   MSK32PngDecReg_RingBufferSize_RingBufferSize        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_RingBufferReadPointer             0x0038

    #define     BA_PngDecReg_RingBufferReadPointer_RingBufferReadPointer 0x0038
    #define     B16PngDecReg_RingBufferReadPointer_RingBufferReadPointer 0x0038
    #define   LSb32PngDecReg_RingBufferReadPointer_RingBufferReadPointer    0
    #define   LSb16PngDecReg_RingBufferReadPointer_RingBufferReadPointer    0
    #define       bPngDecReg_RingBufferReadPointer_RingBufferReadPointer 32
    #define   MSK32PngDecReg_RingBufferReadPointer_RingBufferReadPointer    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_RingBufferWritePointer            0x003C

    #define     BA_PngDecReg_RingBufferWritePointer_RingBufferWritePointer 0x003C
    #define     B16PngDecReg_RingBufferWritePointer_RingBufferWritePointer 0x003C
    #define   LSb32PngDecReg_RingBufferWritePointer_RingBufferWritePointer    0
    #define   LSb16PngDecReg_RingBufferWritePointer_RingBufferWritePointer    0
    #define       bPngDecReg_RingBufferWritePointer_RingBufferWritePointer 32
    #define   MSK32PngDecReg_RingBufferWritePointer_RingBufferWritePointer    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecStatus                      0x0050

    #define     BA_PngDecReg_IntDecStatus_IHDR                 0x0050
    #define     B16PngDecReg_IntDecStatus_IHDR                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_IHDR                    0
    #define   LSb16PngDecReg_IntDecStatus_IHDR                    0
    #define       bPngDecReg_IntDecStatus_IHDR                 1
    #define   MSK32PngDecReg_IntDecStatus_IHDR                    0x00000001

    #define     BA_PngDecReg_IntDecStatus_PLTE                 0x0050
    #define     B16PngDecReg_IntDecStatus_PLTE                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_PLTE                    1
    #define   LSb16PngDecReg_IntDecStatus_PLTE                    1
    #define       bPngDecReg_IntDecStatus_PLTE                 1
    #define   MSK32PngDecReg_IntDecStatus_PLTE                    0x00000002

    #define     BA_PngDecReg_IntDecStatus_IDAT                 0x0050
    #define     B16PngDecReg_IntDecStatus_IDAT                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_IDAT                    2
    #define   LSb16PngDecReg_IntDecStatus_IDAT                    2
    #define       bPngDecReg_IntDecStatus_IDAT                 1
    #define   MSK32PngDecReg_IntDecStatus_IDAT                    0x00000004

    #define     BA_PngDecReg_IntDecStatus_IEND                 0x0050
    #define     B16PngDecReg_IntDecStatus_IEND                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_IEND                    3
    #define   LSb16PngDecReg_IntDecStatus_IEND                    3
    #define       bPngDecReg_IntDecStatus_IEND                 1
    #define   MSK32PngDecReg_IntDecStatus_IEND                    0x00000008

    #define     BA_PngDecReg_IntDecStatus_cHRM                 0x0050
    #define     B16PngDecReg_IntDecStatus_cHRM                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_cHRM                    4
    #define   LSb16PngDecReg_IntDecStatus_cHRM                    4
    #define       bPngDecReg_IntDecStatus_cHRM                 1
    #define   MSK32PngDecReg_IntDecStatus_cHRM                    0x00000010

    #define     BA_PngDecReg_IntDecStatus_gAMA                 0x0050
    #define     B16PngDecReg_IntDecStatus_gAMA                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_gAMA                    5
    #define   LSb16PngDecReg_IntDecStatus_gAMA                    5
    #define       bPngDecReg_IntDecStatus_gAMA                 1
    #define   MSK32PngDecReg_IntDecStatus_gAMA                    0x00000020

    #define     BA_PngDecReg_IntDecStatus_iCCP                 0x0050
    #define     B16PngDecReg_IntDecStatus_iCCP                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_iCCP                    6
    #define   LSb16PngDecReg_IntDecStatus_iCCP                    6
    #define       bPngDecReg_IntDecStatus_iCCP                 1
    #define   MSK32PngDecReg_IntDecStatus_iCCP                    0x00000040

    #define     BA_PngDecReg_IntDecStatus_sBIT                 0x0050
    #define     B16PngDecReg_IntDecStatus_sBIT                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_sBIT                    7
    #define   LSb16PngDecReg_IntDecStatus_sBIT                    7
    #define       bPngDecReg_IntDecStatus_sBIT                 1
    #define   MSK32PngDecReg_IntDecStatus_sBIT                    0x00000080

    #define     BA_PngDecReg_IntDecStatus_sRGB                 0x0051
    #define     B16PngDecReg_IntDecStatus_sRGB                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_sRGB                    8
    #define   LSb16PngDecReg_IntDecStatus_sRGB                    8
    #define       bPngDecReg_IntDecStatus_sRGB                 1
    #define   MSK32PngDecReg_IntDecStatus_sRGB                    0x00000100

    #define     BA_PngDecReg_IntDecStatus_bKGD                 0x0051
    #define     B16PngDecReg_IntDecStatus_bKGD                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_bKGD                    9
    #define   LSb16PngDecReg_IntDecStatus_bKGD                    9
    #define       bPngDecReg_IntDecStatus_bKGD                 1
    #define   MSK32PngDecReg_IntDecStatus_bKGD                    0x00000200

    #define     BA_PngDecReg_IntDecStatus_hIST                 0x0051
    #define     B16PngDecReg_IntDecStatus_hIST                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_hIST                    10
    #define   LSb16PngDecReg_IntDecStatus_hIST                    10
    #define       bPngDecReg_IntDecStatus_hIST                 1
    #define   MSK32PngDecReg_IntDecStatus_hIST                    0x00000400

    #define     BA_PngDecReg_IntDecStatus_tRNS                 0x0051
    #define     B16PngDecReg_IntDecStatus_tRNS                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_tRNS                    11
    #define   LSb16PngDecReg_IntDecStatus_tRNS                    11
    #define       bPngDecReg_IntDecStatus_tRNS                 1
    #define   MSK32PngDecReg_IntDecStatus_tRNS                    0x00000800

    #define     BA_PngDecReg_IntDecStatus_pHYs                 0x0051
    #define     B16PngDecReg_IntDecStatus_pHYs                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_pHYs                    12
    #define   LSb16PngDecReg_IntDecStatus_pHYs                    12
    #define       bPngDecReg_IntDecStatus_pHYs                 1
    #define   MSK32PngDecReg_IntDecStatus_pHYs                    0x00001000

    #define     BA_PngDecReg_IntDecStatus_sPLT                 0x0051
    #define     B16PngDecReg_IntDecStatus_sPLT                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_sPLT                    13
    #define   LSb16PngDecReg_IntDecStatus_sPLT                    13
    #define       bPngDecReg_IntDecStatus_sPLT                 1
    #define   MSK32PngDecReg_IntDecStatus_sPLT                    0x00002000

    #define     BA_PngDecReg_IntDecStatus_tIME                 0x0051
    #define     B16PngDecReg_IntDecStatus_tIME                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_tIME                    14
    #define   LSb16PngDecReg_IntDecStatus_tIME                    14
    #define       bPngDecReg_IntDecStatus_tIME                 1
    #define   MSK32PngDecReg_IntDecStatus_tIME                    0x00004000

    #define     BA_PngDecReg_IntDecStatus_iTXt                 0x0051
    #define     B16PngDecReg_IntDecStatus_iTXt                 0x0050
    #define   LSb32PngDecReg_IntDecStatus_iTXt                    15
    #define   LSb16PngDecReg_IntDecStatus_iTXt                    15
    #define       bPngDecReg_IntDecStatus_iTXt                 1
    #define   MSK32PngDecReg_IntDecStatus_iTXt                    0x00008000

    #define     BA_PngDecReg_IntDecStatus_tEXt                 0x0052
    #define     B16PngDecReg_IntDecStatus_tEXt                 0x0052
    #define   LSb32PngDecReg_IntDecStatus_tEXt                    16
    #define   LSb16PngDecReg_IntDecStatus_tEXt                    0
    #define       bPngDecReg_IntDecStatus_tEXt                 1
    #define   MSK32PngDecReg_IntDecStatus_tEXt                    0x00010000

    #define     BA_PngDecReg_IntDecStatus_zTXt                 0x0052
    #define     B16PngDecReg_IntDecStatus_zTXt                 0x0052
    #define   LSb32PngDecReg_IntDecStatus_zTXt                    17
    #define   LSb16PngDecReg_IntDecStatus_zTXt                    1
    #define       bPngDecReg_IntDecStatus_zTXt                 1
    #define   MSK32PngDecReg_IntDecStatus_zTXt                    0x00020000

    #define     BA_PngDecReg_IntDecStatus_Unknown              0x0052
    #define     B16PngDecReg_IntDecStatus_Unknown              0x0052
    #define   LSb32PngDecReg_IntDecStatus_Unknown                 18
    #define   LSb16PngDecReg_IntDecStatus_Unknown                 2
    #define       bPngDecReg_IntDecStatus_Unknown              1
    #define   MSK32PngDecReg_IntDecStatus_Unknown                 0x00040000

    #define     BA_PngDecReg_IntDecStatus_Reserved0            0x0052
    #define     B16PngDecReg_IntDecStatus_Reserved0            0x0052
    #define   LSb32PngDecReg_IntDecStatus_Reserved0               19
    #define   LSb16PngDecReg_IntDecStatus_Reserved0               3
    #define       bPngDecReg_IntDecStatus_Reserved0            11
    #define   MSK32PngDecReg_IntDecStatus_Reserved0               0x3FF80000

    #define     BA_PngDecReg_IntDecStatus_StreamPointerAEmpty  0x0053
    #define     B16PngDecReg_IntDecStatus_StreamPointerAEmpty  0x0052
    #define   LSb32PngDecReg_IntDecStatus_StreamPointerAEmpty     30
    #define   LSb16PngDecReg_IntDecStatus_StreamPointerAEmpty     14
    #define       bPngDecReg_IntDecStatus_StreamPointerAEmpty  1
    #define   MSK32PngDecReg_IntDecStatus_StreamPointerAEmpty     0x40000000

    #define     BA_PngDecReg_IntDecStatus_RingBufferAFull      0x0053
    #define     B16PngDecReg_IntDecStatus_RingBufferAFull      0x0052
    #define   LSb32PngDecReg_IntDecStatus_RingBufferAFull         31
    #define   LSb16PngDecReg_IntDecStatus_RingBufferAFull         15
    #define       bPngDecReg_IntDecStatus_RingBufferAFull      1
    #define   MSK32PngDecReg_IntDecStatus_RingBufferAFull         0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecStatusMask                  0x0054

    #define     BA_PngDecReg_IntDecStatusMask_IntDecStatusMask 0x0054
    #define     B16PngDecReg_IntDecStatusMask_IntDecStatusMask 0x0054
    #define   LSb32PngDecReg_IntDecStatusMask_IntDecStatusMask    0
    #define   LSb16PngDecReg_IntDecStatusMask_IntDecStatusMask    0
    #define       bPngDecReg_IntDecStatusMask_IntDecStatusMask 32
    #define   MSK32PngDecReg_IntDecStatusMask_IntDecStatusMask    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecStatusStop                  0x0058

    #define     BA_PngDecReg_IntDecStatusStop_IntDecStatusStop 0x0058
    #define     B16PngDecReg_IntDecStatusStop_IntDecStatusStop 0x0058
    #define   LSb32PngDecReg_IntDecStatusStop_IntDecStatusStop    0
    #define   LSb16PngDecReg_IntDecStatusStop_IntDecStatusStop    0
    #define       bPngDecReg_IntDecStatusStop_IntDecStatusStop 32
    #define   MSK32PngDecReg_IntDecStatusStop_IntDecStatusStop    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecError                       0x0060

    #define     BA_PngDecReg_IntDecError_StreamPointerOverflow 0x0060
    #define     B16PngDecReg_IntDecError_StreamPointerOverflow 0x0060
    #define   LSb32PngDecReg_IntDecError_StreamPointerOverflow    0
    #define   LSb16PngDecReg_IntDecError_StreamPointerOverflow    0
    #define       bPngDecReg_IntDecError_StreamPointerOverflow 1
    #define   MSK32PngDecReg_IntDecError_StreamPointerOverflow    0x00000001

    #define     BA_PngDecReg_IntDecError_ChunkCrc              0x0060
    #define     B16PngDecReg_IntDecError_ChunkCrc              0x0060
    #define   LSb32PngDecReg_IntDecError_ChunkCrc                 1
    #define   LSb16PngDecReg_IntDecError_ChunkCrc                 1
    #define       bPngDecReg_IntDecError_ChunkCrc              1
    #define   MSK32PngDecReg_IntDecError_ChunkCrc                 0x00000002

    #define     BA_PngDecReg_IntDecError_SignatureWrong        0x0060
    #define     B16PngDecReg_IntDecError_SignatureWrong        0x0060
    #define   LSb32PngDecReg_IntDecError_SignatureWrong           2
    #define   LSb16PngDecReg_IntDecError_SignatureWrong           2
    #define       bPngDecReg_IntDecError_SignatureWrong        1
    #define   MSK32PngDecReg_IntDecError_SignatureWrong           0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecErrorMask                   0x0064

    #define     BA_PngDecReg_IntDecErrorMask_IntDecErrorMask   0x0064
    #define     B16PngDecReg_IntDecErrorMask_IntDecErrorMask   0x0064
    #define   LSb32PngDecReg_IntDecErrorMask_IntDecErrorMask      0
    #define   LSb16PngDecReg_IntDecErrorMask_IntDecErrorMask      0
    #define       bPngDecReg_IntDecErrorMask_IntDecErrorMask   2
    #define   MSK32PngDecReg_IntDecErrorMask_IntDecErrorMask      0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntDecErrorStop                   0x0068

    #define     BA_PngDecReg_IntDecErrorStop_IntDecErrorStop   0x0068
    #define     B16PngDecReg_IntDecErrorStop_IntDecErrorStop   0x0068
    #define   LSb32PngDecReg_IntDecErrorStop_IntDecErrorStop      0
    #define   LSb16PngDecReg_IntDecErrorStop_IntDecErrorStop      0
    #define       bPngDecReg_IntDecErrorStop_IntDecErrorStop   2
    #define   MSK32PngDecReg_IntDecErrorStop_IntDecErrorStop      0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntAxiRespError                   0x0070

    #define     BA_PngDecReg_IntAxiRespError_IntAxiRespError_0i 0x0070
    #define     B16PngDecReg_IntAxiRespError_IntAxiRespError_0i 0x0070
    #define   LSb32PngDecReg_IntAxiRespError_IntAxiRespError_0i    0
    #define   LSb16PngDecReg_IntAxiRespError_IntAxiRespError_0i    0
    #define       bPngDecReg_IntAxiRespError_IntAxiRespError_0i 1
    #define   MSK32PngDecReg_IntAxiRespError_IntAxiRespError_0i    0x00000001

    #define     BA_PngDecReg_IntAxiRespError_IntAxiRespError_1i 0x0070
    #define     B16PngDecReg_IntAxiRespError_IntAxiRespError_1i 0x0070
    #define   LSb32PngDecReg_IntAxiRespError_IntAxiRespError_1i    1
    #define   LSb16PngDecReg_IntAxiRespError_IntAxiRespError_1i    1
    #define       bPngDecReg_IntAxiRespError_IntAxiRespError_1i 1
    #define   MSK32PngDecReg_IntAxiRespError_IntAxiRespError_1i    0x00000002

    #define     BA_PngDecReg_IntAxiRespError_IntAxiRespError_2i 0x0070
    #define     B16PngDecReg_IntAxiRespError_IntAxiRespError_2i 0x0070
    #define   LSb32PngDecReg_IntAxiRespError_IntAxiRespError_2i    2
    #define   LSb16PngDecReg_IntAxiRespError_IntAxiRespError_2i    2
    #define       bPngDecReg_IntAxiRespError_IntAxiRespError_2i 1
    #define   MSK32PngDecReg_IntAxiRespError_IntAxiRespError_2i    0x00000004

    #define     BA_PngDecReg_IntAxiRespError_IntAxiRespError_3i 0x0070
    #define     B16PngDecReg_IntAxiRespError_IntAxiRespError_3i 0x0070
    #define   LSb32PngDecReg_IntAxiRespError_IntAxiRespError_3i    3
    #define   LSb16PngDecReg_IntAxiRespError_IntAxiRespError_3i    3
    #define       bPngDecReg_IntAxiRespError_IntAxiRespError_3i 1
    #define   MSK32PngDecReg_IntAxiRespError_IntAxiRespError_3i    0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_IntAxiRespErrorMask               0x0074

    #define     BA_PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask 0x0074
    #define     B16PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask 0x0074
    #define   LSb32PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask    0
    #define   LSb16PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask    0
    #define       bPngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask 4
    #define   MSK32PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask    0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_AxiRead                           0x00E0
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_AxiWrite                          0x00F0
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleParam                    0x0100

    #define     BA_PngDecReg_DownScaleParam_Ratio              0x0100
    #define     B16PngDecReg_DownScaleParam_Ratio              0x0100
    #define   LSb32PngDecReg_DownScaleParam_Ratio                 0
    #define   LSb16PngDecReg_DownScaleParam_Ratio                 0
    #define       bPngDecReg_DownScaleParam_Ratio              5
    #define   MSK32PngDecReg_DownScaleParam_Ratio                 0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff0                   0x0104

    #define     BA_PngDecReg_DownScaleCoeff0_Coeff             0x0104
    #define     B16PngDecReg_DownScaleCoeff0_Coeff             0x0104
    #define   LSb32PngDecReg_DownScaleCoeff0_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff0_Coeff                0
    #define       bPngDecReg_DownScaleCoeff0_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff0_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff1                   0x0108

    #define     BA_PngDecReg_DownScaleCoeff1_Coeff             0x0108
    #define     B16PngDecReg_DownScaleCoeff1_Coeff             0x0108
    #define   LSb32PngDecReg_DownScaleCoeff1_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff1_Coeff                0
    #define       bPngDecReg_DownScaleCoeff1_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff1_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff2                   0x010C

    #define     BA_PngDecReg_DownScaleCoeff2_Coeff             0x010C
    #define     B16PngDecReg_DownScaleCoeff2_Coeff             0x010C
    #define   LSb32PngDecReg_DownScaleCoeff2_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff2_Coeff                0
    #define       bPngDecReg_DownScaleCoeff2_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff2_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff3                   0x0110

    #define     BA_PngDecReg_DownScaleCoeff3_Coeff             0x0110
    #define     B16PngDecReg_DownScaleCoeff3_Coeff             0x0110
    #define   LSb32PngDecReg_DownScaleCoeff3_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff3_Coeff                0
    #define       bPngDecReg_DownScaleCoeff3_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff3_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff4                   0x0114

    #define     BA_PngDecReg_DownScaleCoeff4_Coeff             0x0114
    #define     B16PngDecReg_DownScaleCoeff4_Coeff             0x0114
    #define   LSb32PngDecReg_DownScaleCoeff4_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff4_Coeff                0
    #define       bPngDecReg_DownScaleCoeff4_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff4_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff5                   0x0118

    #define     BA_PngDecReg_DownScaleCoeff5_Coeff             0x0118
    #define     B16PngDecReg_DownScaleCoeff5_Coeff             0x0118
    #define   LSb32PngDecReg_DownScaleCoeff5_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff5_Coeff                0
    #define       bPngDecReg_DownScaleCoeff5_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff5_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff6                   0x011C

    #define     BA_PngDecReg_DownScaleCoeff6_Coeff             0x011C
    #define     B16PngDecReg_DownScaleCoeff6_Coeff             0x011C
    #define   LSb32PngDecReg_DownScaleCoeff6_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff6_Coeff                0
    #define       bPngDecReg_DownScaleCoeff6_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff6_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff7                   0x0120

    #define     BA_PngDecReg_DownScaleCoeff7_Coeff             0x0120
    #define     B16PngDecReg_DownScaleCoeff7_Coeff             0x0120
    #define   LSb32PngDecReg_DownScaleCoeff7_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff7_Coeff                0
    #define       bPngDecReg_DownScaleCoeff7_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff7_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PngDecReg_DownScaleCoeff8                   0x0124

    #define     BA_PngDecReg_DownScaleCoeff8_Coeff             0x0124
    #define     B16PngDecReg_DownScaleCoeff8_Coeff             0x0124
    #define   LSb32PngDecReg_DownScaleCoeff8_Coeff                0
    #define   LSb16PngDecReg_DownScaleCoeff8_Coeff                0
    #define       bPngDecReg_DownScaleCoeff8_Coeff             17
    #define   MSK32PngDecReg_DownScaleCoeff8_Coeff                0x0001FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PngDecReg {
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_Enable_Enable(r32)                _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_Enable_Enable(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_Enable_Enable(r16)                _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_Enable_Enable(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32PngDecReg_Enable                            {\
            UNSG32 uEnable_Enable                              :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32PngDecReg_Enable;
            struct w32PngDecReg_Enable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_ClockControl_ClockGatingEnable(r32) _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_ClockControl_ClockGatingEnable(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_ClockControl_ClockGatingEnable(r16) _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_ClockControl_ClockGatingEnable(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32PngDecReg_ClockControl                      {\
            UNSG32 uClockControl_ClockGatingEnable             :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32PngDecReg_ClockControl;
            struct w32PngDecReg_ClockControl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx8                                      [4];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_ChuckDecEnable_IDAT(r32)          _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_ChuckDecEnable_IDAT(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_ChuckDecEnable_IDAT(r16)          _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_ChuckDecEnable_IDAT(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32PngDecReg_ChuckDecEnable_iCCP(r32)          _BFGET_(r32, 1, 1)
    #define   SET32PngDecReg_ChuckDecEnable_iCCP(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16PngDecReg_ChuckDecEnable_iCCP(r16)          _BFGET_(r16, 1, 1)
    #define   SET16PngDecReg_ChuckDecEnable_iCCP(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32PngDecReg_ChuckDecEnable_iTXt(r32)          _BFGET_(r32, 2, 2)
    #define   SET32PngDecReg_ChuckDecEnable_iTXt(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16PngDecReg_ChuckDecEnable_iTXt(r16)          _BFGET_(r16, 2, 2)
    #define   SET16PngDecReg_ChuckDecEnable_iTXt(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32PngDecReg_ChuckDecEnable_zTXt(r32)          _BFGET_(r32, 3, 3)
    #define   SET32PngDecReg_ChuckDecEnable_zTXt(r32,v)        _BFSET_(r32, 3, 3,v)
    #define   GET16PngDecReg_ChuckDecEnable_zTXt(r16)          _BFGET_(r16, 3, 3)
    #define   SET16PngDecReg_ChuckDecEnable_zTXt(r16,v)        _BFSET_(r16, 3, 3,v)

    #define     w32PngDecReg_ChuckDecEnable                    {\
            UNSG32 uChuckDecEnable_IDAT                        :  1;\
            UNSG32 uChuckDecEnable_iCCP                        :  1;\
            UNSG32 uChuckDecEnable_iTXt                        :  1;\
            UNSG32 uChuckDecEnable_zTXt                        :  1;\
            UNSG32 RSVDxC_b4                                   : 28;\
          }
    union { UNSG32 u32PngDecReg_ChuckDecEnable;
            struct w32PngDecReg_ChuckDecEnable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_StreamPointerStatus_Level(r32)    _BFGET_(r32, 7, 0)
    #define   SET32PngDecReg_StreamPointerStatus_Level(r32,v)  _BFSET_(r32, 7, 0,v)
    #define   GET16PngDecReg_StreamPointerStatus_Level(r16)    _BFGET_(r16, 7, 0)
    #define   SET16PngDecReg_StreamPointerStatus_Level(r16,v)  _BFSET_(r16, 7, 0,v)

    #define   GET32PngDecReg_StreamPointerStatus_Full(r32)     _BFGET_(r32, 8, 8)
    #define   SET32PngDecReg_StreamPointerStatus_Full(r32,v)   _BFSET_(r32, 8, 8,v)
    #define   GET16PngDecReg_StreamPointerStatus_Full(r16)     _BFGET_(r16, 8, 8)
    #define   SET16PngDecReg_StreamPointerStatus_Full(r16,v)   _BFSET_(r16, 8, 8,v)

    #define     w32PngDecReg_StreamPointerStatus               {\
            UNSG32 uStreamPointerStatus_Level                  :  8;\
            UNSG32 uStreamPointerStatus_Full                   :  1;\
            UNSG32 RSVDx10_b9                                  : 23;\
          }
    union { UNSG32 u32PngDecReg_StreamPointerStatus;
            struct w32PngDecReg_StreamPointerStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx14                                     [4];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_StreamAddress_StreamAddress(r32)  _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_StreamAddress_StreamAddress(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_StreamAddress                     {\
            UNSG32 uStreamAddress_StreamAddress                : 32;\
          }
    union { UNSG32 u32PngDecReg_StreamAddress;
            struct w32PngDecReg_StreamAddress;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_StreamInfo_Size(r32)              _BFGET_(r32,23, 0)
    #define   SET32PngDecReg_StreamInfo_Size(r32,v)            _BFSET_(r32,23, 0,v)

    #define     w32PngDecReg_StreamInfo                        {\
            UNSG32 uStreamInfo_Size                            : 24;\
            UNSG32 RSVDx1C_b24                                 :  8;\
          }
    union { UNSG32 u32PngDecReg_StreamInfo;
            struct w32PngDecReg_StreamInfo;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_ImageFormat_PixelFormat(r32)      _BFGET_(r32, 1, 0)
    #define   SET32PngDecReg_ImageFormat_PixelFormat(r32,v)    _BFSET_(r32, 1, 0,v)
    #define   GET16PngDecReg_ImageFormat_PixelFormat(r16)      _BFGET_(r16, 1, 0)
    #define   SET16PngDecReg_ImageFormat_PixelFormat(r16,v)    _BFSET_(r16, 1, 0,v)

    #define     w32PngDecReg_ImageFormat                       {\
            UNSG32 uImageFormat_PixelFormat                    :  2;\
            UNSG32 RSVDx20_b2                                  : 30;\
          }
    union { UNSG32 u32PngDecReg_ImageFormat;
            struct w32PngDecReg_ImageFormat;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_ImageAddress_ImageAddress(r32)    _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_ImageAddress_ImageAddress(r32,v)  _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_ImageAddress                      {\
            UNSG32 uImageAddress_ImageAddress                  : 32;\
          }
    union { UNSG32 u32PngDecReg_ImageAddress;
            struct w32PngDecReg_ImageAddress;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_ImageStride_ImageStride(r32)      _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_ImageStride_ImageStride(r32,v)    _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_ImageStride                       {\
            UNSG32 uImageStride_ImageStride                    : 32;\
          }
    union { UNSG32 u32PngDecReg_ImageStride;
            struct w32PngDecReg_ImageStride;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx2C                                     [4];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_RingBufferAddress_RingBufferAddress(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_RingBufferAddress_RingBufferAddress(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_RingBufferAddress                 {\
            UNSG32 uRingBufferAddress_RingBufferAddress        : 32;\
          }
    union { UNSG32 u32PngDecReg_RingBufferAddress;
            struct w32PngDecReg_RingBufferAddress;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_RingBufferSize_RingBufferSize(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_RingBufferSize_RingBufferSize(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_RingBufferSize                    {\
            UNSG32 uRingBufferSize_RingBufferSize              : 32;\
          }
    union { UNSG32 u32PngDecReg_RingBufferSize;
            struct w32PngDecReg_RingBufferSize;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_RingBufferReadPointer_RingBufferReadPointer(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_RingBufferReadPointer_RingBufferReadPointer(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_RingBufferReadPointer             {\
            UNSG32 uRingBufferReadPointer_RingBufferReadPointer : 32;\
          }
    union { UNSG32 u32PngDecReg_RingBufferReadPointer;
            struct w32PngDecReg_RingBufferReadPointer;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_RingBufferWritePointer_RingBufferWritePointer(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_RingBufferWritePointer_RingBufferWritePointer(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_RingBufferWritePointer            {\
            UNSG32 uRingBufferWritePointer_RingBufferWritePointer : 32;\
          }
    union { UNSG32 u32PngDecReg_RingBufferWritePointer;
            struct w32PngDecReg_RingBufferWritePointer;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx40                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecStatus_IHDR(r32)            _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_IntDecStatus_IHDR(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_IntDecStatus_IHDR(r16)            _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_IntDecStatus_IHDR(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32PngDecReg_IntDecStatus_PLTE(r32)            _BFGET_(r32, 1, 1)
    #define   SET32PngDecReg_IntDecStatus_PLTE(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16PngDecReg_IntDecStatus_PLTE(r16)            _BFGET_(r16, 1, 1)
    #define   SET16PngDecReg_IntDecStatus_PLTE(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32PngDecReg_IntDecStatus_IDAT(r32)            _BFGET_(r32, 2, 2)
    #define   SET32PngDecReg_IntDecStatus_IDAT(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16PngDecReg_IntDecStatus_IDAT(r16)            _BFGET_(r16, 2, 2)
    #define   SET16PngDecReg_IntDecStatus_IDAT(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32PngDecReg_IntDecStatus_IEND(r32)            _BFGET_(r32, 3, 3)
    #define   SET32PngDecReg_IntDecStatus_IEND(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16PngDecReg_IntDecStatus_IEND(r16)            _BFGET_(r16, 3, 3)
    #define   SET16PngDecReg_IntDecStatus_IEND(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32PngDecReg_IntDecStatus_cHRM(r32)            _BFGET_(r32, 4, 4)
    #define   SET32PngDecReg_IntDecStatus_cHRM(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16PngDecReg_IntDecStatus_cHRM(r16)            _BFGET_(r16, 4, 4)
    #define   SET16PngDecReg_IntDecStatus_cHRM(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32PngDecReg_IntDecStatus_gAMA(r32)            _BFGET_(r32, 5, 5)
    #define   SET32PngDecReg_IntDecStatus_gAMA(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16PngDecReg_IntDecStatus_gAMA(r16)            _BFGET_(r16, 5, 5)
    #define   SET16PngDecReg_IntDecStatus_gAMA(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32PngDecReg_IntDecStatus_iCCP(r32)            _BFGET_(r32, 6, 6)
    #define   SET32PngDecReg_IntDecStatus_iCCP(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16PngDecReg_IntDecStatus_iCCP(r16)            _BFGET_(r16, 6, 6)
    #define   SET16PngDecReg_IntDecStatus_iCCP(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32PngDecReg_IntDecStatus_sBIT(r32)            _BFGET_(r32, 7, 7)
    #define   SET32PngDecReg_IntDecStatus_sBIT(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16PngDecReg_IntDecStatus_sBIT(r16)            _BFGET_(r16, 7, 7)
    #define   SET16PngDecReg_IntDecStatus_sBIT(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32PngDecReg_IntDecStatus_sRGB(r32)            _BFGET_(r32, 8, 8)
    #define   SET32PngDecReg_IntDecStatus_sRGB(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16PngDecReg_IntDecStatus_sRGB(r16)            _BFGET_(r16, 8, 8)
    #define   SET16PngDecReg_IntDecStatus_sRGB(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32PngDecReg_IntDecStatus_bKGD(r32)            _BFGET_(r32, 9, 9)
    #define   SET32PngDecReg_IntDecStatus_bKGD(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16PngDecReg_IntDecStatus_bKGD(r16)            _BFGET_(r16, 9, 9)
    #define   SET16PngDecReg_IntDecStatus_bKGD(r16,v)          _BFSET_(r16, 9, 9,v)

    #define   GET32PngDecReg_IntDecStatus_hIST(r32)            _BFGET_(r32,10,10)
    #define   SET32PngDecReg_IntDecStatus_hIST(r32,v)          _BFSET_(r32,10,10,v)
    #define   GET16PngDecReg_IntDecStatus_hIST(r16)            _BFGET_(r16,10,10)
    #define   SET16PngDecReg_IntDecStatus_hIST(r16,v)          _BFSET_(r16,10,10,v)

    #define   GET32PngDecReg_IntDecStatus_tRNS(r32)            _BFGET_(r32,11,11)
    #define   SET32PngDecReg_IntDecStatus_tRNS(r32,v)          _BFSET_(r32,11,11,v)
    #define   GET16PngDecReg_IntDecStatus_tRNS(r16)            _BFGET_(r16,11,11)
    #define   SET16PngDecReg_IntDecStatus_tRNS(r16,v)          _BFSET_(r16,11,11,v)

    #define   GET32PngDecReg_IntDecStatus_pHYs(r32)            _BFGET_(r32,12,12)
    #define   SET32PngDecReg_IntDecStatus_pHYs(r32,v)          _BFSET_(r32,12,12,v)
    #define   GET16PngDecReg_IntDecStatus_pHYs(r16)            _BFGET_(r16,12,12)
    #define   SET16PngDecReg_IntDecStatus_pHYs(r16,v)          _BFSET_(r16,12,12,v)

    #define   GET32PngDecReg_IntDecStatus_sPLT(r32)            _BFGET_(r32,13,13)
    #define   SET32PngDecReg_IntDecStatus_sPLT(r32,v)          _BFSET_(r32,13,13,v)
    #define   GET16PngDecReg_IntDecStatus_sPLT(r16)            _BFGET_(r16,13,13)
    #define   SET16PngDecReg_IntDecStatus_sPLT(r16,v)          _BFSET_(r16,13,13,v)

    #define   GET32PngDecReg_IntDecStatus_tIME(r32)            _BFGET_(r32,14,14)
    #define   SET32PngDecReg_IntDecStatus_tIME(r32,v)          _BFSET_(r32,14,14,v)
    #define   GET16PngDecReg_IntDecStatus_tIME(r16)            _BFGET_(r16,14,14)
    #define   SET16PngDecReg_IntDecStatus_tIME(r16,v)          _BFSET_(r16,14,14,v)

    #define   GET32PngDecReg_IntDecStatus_iTXt(r32)            _BFGET_(r32,15,15)
    #define   SET32PngDecReg_IntDecStatus_iTXt(r32,v)          _BFSET_(r32,15,15,v)
    #define   GET16PngDecReg_IntDecStatus_iTXt(r16)            _BFGET_(r16,15,15)
    #define   SET16PngDecReg_IntDecStatus_iTXt(r16,v)          _BFSET_(r16,15,15,v)

    #define   GET32PngDecReg_IntDecStatus_tEXt(r32)            _BFGET_(r32,16,16)
    #define   SET32PngDecReg_IntDecStatus_tEXt(r32,v)          _BFSET_(r32,16,16,v)
    #define   GET16PngDecReg_IntDecStatus_tEXt(r16)            _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_IntDecStatus_tEXt(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32PngDecReg_IntDecStatus_zTXt(r32)            _BFGET_(r32,17,17)
    #define   SET32PngDecReg_IntDecStatus_zTXt(r32,v)          _BFSET_(r32,17,17,v)
    #define   GET16PngDecReg_IntDecStatus_zTXt(r16)            _BFGET_(r16, 1, 1)
    #define   SET16PngDecReg_IntDecStatus_zTXt(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32PngDecReg_IntDecStatus_Unknown(r32)         _BFGET_(r32,18,18)
    #define   SET32PngDecReg_IntDecStatus_Unknown(r32,v)       _BFSET_(r32,18,18,v)
    #define   GET16PngDecReg_IntDecStatus_Unknown(r16)         _BFGET_(r16, 2, 2)
    #define   SET16PngDecReg_IntDecStatus_Unknown(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32PngDecReg_IntDecStatus_Reserved0(r32)       _BFGET_(r32,29,19)
    #define   SET32PngDecReg_IntDecStatus_Reserved0(r32,v)     _BFSET_(r32,29,19,v)
    #define   GET16PngDecReg_IntDecStatus_Reserved0(r16)       _BFGET_(r16,13, 3)
    #define   SET16PngDecReg_IntDecStatus_Reserved0(r16,v)     _BFSET_(r16,13, 3,v)

    #define   GET32PngDecReg_IntDecStatus_StreamPointerAEmpty(r32) _BFGET_(r32,30,30)
    #define   SET32PngDecReg_IntDecStatus_StreamPointerAEmpty(r32,v) _BFSET_(r32,30,30,v)
    #define   GET16PngDecReg_IntDecStatus_StreamPointerAEmpty(r16) _BFGET_(r16,14,14)
    #define   SET16PngDecReg_IntDecStatus_StreamPointerAEmpty(r16,v) _BFSET_(r16,14,14,v)

    #define   GET32PngDecReg_IntDecStatus_RingBufferAFull(r32) _BFGET_(r32,31,31)
    #define   SET32PngDecReg_IntDecStatus_RingBufferAFull(r32,v) _BFSET_(r32,31,31,v)
    #define   GET16PngDecReg_IntDecStatus_RingBufferAFull(r16) _BFGET_(r16,15,15)
    #define   SET16PngDecReg_IntDecStatus_RingBufferAFull(r16,v) _BFSET_(r16,15,15,v)

    #define     w32PngDecReg_IntDecStatus                      {\
            UNSG32 uIntDecStatus_IHDR                          :  1;\
            UNSG32 uIntDecStatus_PLTE                          :  1;\
            UNSG32 uIntDecStatus_IDAT                          :  1;\
            UNSG32 uIntDecStatus_IEND                          :  1;\
            UNSG32 uIntDecStatus_cHRM                          :  1;\
            UNSG32 uIntDecStatus_gAMA                          :  1;\
            UNSG32 uIntDecStatus_iCCP                          :  1;\
            UNSG32 uIntDecStatus_sBIT                          :  1;\
            UNSG32 uIntDecStatus_sRGB                          :  1;\
            UNSG32 uIntDecStatus_bKGD                          :  1;\
            UNSG32 uIntDecStatus_hIST                          :  1;\
            UNSG32 uIntDecStatus_tRNS                          :  1;\
            UNSG32 uIntDecStatus_pHYs                          :  1;\
            UNSG32 uIntDecStatus_sPLT                          :  1;\
            UNSG32 uIntDecStatus_tIME                          :  1;\
            UNSG32 uIntDecStatus_iTXt                          :  1;\
            UNSG32 uIntDecStatus_tEXt                          :  1;\
            UNSG32 uIntDecStatus_zTXt                          :  1;\
            UNSG32 uIntDecStatus_Unknown                       :  1;\
            UNSG32 uIntDecStatus_Reserved0                     : 11;\
            UNSG32 uIntDecStatus_StreamPointerAEmpty           :  1;\
            UNSG32 uIntDecStatus_RingBufferAFull               :  1;\
          }
    union { UNSG32 u32PngDecReg_IntDecStatus;
            struct w32PngDecReg_IntDecStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecStatusMask_IntDecStatusMask(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_IntDecStatusMask_IntDecStatusMask(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_IntDecStatusMask                  {\
            UNSG32 uIntDecStatusMask_IntDecStatusMask          : 32;\
          }
    union { UNSG32 u32PngDecReg_IntDecStatusMask;
            struct w32PngDecReg_IntDecStatusMask;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecStatusStop_IntDecStatusStop(r32) _BFGET_(r32,31, 0)
    #define   SET32PngDecReg_IntDecStatusStop_IntDecStatusStop(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32PngDecReg_IntDecStatusStop                  {\
            UNSG32 uIntDecStatusStop_IntDecStatusStop          : 32;\
          }
    union { UNSG32 u32PngDecReg_IntDecStatusStop;
            struct w32PngDecReg_IntDecStatusStop;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx5C                                     [4];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecError_StreamPointerOverflow(r32) _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_IntDecError_StreamPointerOverflow(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_IntDecError_StreamPointerOverflow(r16) _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_IntDecError_StreamPointerOverflow(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32PngDecReg_IntDecError_ChunkCrc(r32)         _BFGET_(r32, 1, 1)
    #define   SET32PngDecReg_IntDecError_ChunkCrc(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16PngDecReg_IntDecError_ChunkCrc(r16)         _BFGET_(r16, 1, 1)
    #define   SET16PngDecReg_IntDecError_ChunkCrc(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32PngDecReg_IntDecError_SignatureWrong(r32)   _BFGET_(r32, 2, 2)
    #define   SET32PngDecReg_IntDecError_SignatureWrong(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16PngDecReg_IntDecError_SignatureWrong(r16)   _BFGET_(r16, 2, 2)
    #define   SET16PngDecReg_IntDecError_SignatureWrong(r16,v) _BFSET_(r16, 2, 2,v)

    #define     w32PngDecReg_IntDecError                       {\
            UNSG32 uIntDecError_StreamPointerOverflow          :  1;\
            UNSG32 uIntDecError_ChunkCrc                       :  1;\
            UNSG32 uIntDecError_SignatureWrong                 :  1;\
            UNSG32 RSVDx60_b3                                  : 29;\
          }
    union { UNSG32 u32PngDecReg_IntDecError;
            struct w32PngDecReg_IntDecError;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecErrorMask_IntDecErrorMask(r32) _BFGET_(r32, 1, 0)
    #define   SET32PngDecReg_IntDecErrorMask_IntDecErrorMask(r32,v) _BFSET_(r32, 1, 0,v)
    #define   GET16PngDecReg_IntDecErrorMask_IntDecErrorMask(r16) _BFGET_(r16, 1, 0)
    #define   SET16PngDecReg_IntDecErrorMask_IntDecErrorMask(r16,v) _BFSET_(r16, 1, 0,v)

    #define     w32PngDecReg_IntDecErrorMask                   {\
            UNSG32 uIntDecErrorMask_IntDecErrorMask            :  2;\
            UNSG32 RSVDx64_b2                                  : 30;\
          }
    union { UNSG32 u32PngDecReg_IntDecErrorMask;
            struct w32PngDecReg_IntDecErrorMask;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntDecErrorStop_IntDecErrorStop(r32) _BFGET_(r32, 1, 0)
    #define   SET32PngDecReg_IntDecErrorStop_IntDecErrorStop(r32,v) _BFSET_(r32, 1, 0,v)
    #define   GET16PngDecReg_IntDecErrorStop_IntDecErrorStop(r16) _BFGET_(r16, 1, 0)
    #define   SET16PngDecReg_IntDecErrorStop_IntDecErrorStop(r16,v) _BFSET_(r16, 1, 0,v)

    #define     w32PngDecReg_IntDecErrorStop                   {\
            UNSG32 uIntDecErrorStop_IntDecErrorStop            :  2;\
            UNSG32 RSVDx68_b2                                  : 30;\
          }
    union { UNSG32 u32PngDecReg_IntDecErrorStop;
            struct w32PngDecReg_IntDecErrorStop;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx6C                                     [4];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntAxiRespError_IntAxiRespError_0i(r32) _BFGET_(r32, 0, 0)
    #define   SET32PngDecReg_IntAxiRespError_IntAxiRespError_0i(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PngDecReg_IntAxiRespError_IntAxiRespError_0i(r16) _BFGET_(r16, 0, 0)
    #define   SET16PngDecReg_IntAxiRespError_IntAxiRespError_0i(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32PngDecReg_IntAxiRespError_IntAxiRespError_1i(r32) _BFGET_(r32, 1, 1)
    #define   SET32PngDecReg_IntAxiRespError_IntAxiRespError_1i(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16PngDecReg_IntAxiRespError_IntAxiRespError_1i(r16) _BFGET_(r16, 1, 1)
    #define   SET16PngDecReg_IntAxiRespError_IntAxiRespError_1i(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32PngDecReg_IntAxiRespError_IntAxiRespError_2i(r32) _BFGET_(r32, 2, 2)
    #define   SET32PngDecReg_IntAxiRespError_IntAxiRespError_2i(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16PngDecReg_IntAxiRespError_IntAxiRespError_2i(r16) _BFGET_(r16, 2, 2)
    #define   SET16PngDecReg_IntAxiRespError_IntAxiRespError_2i(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32PngDecReg_IntAxiRespError_IntAxiRespError_3i(r32) _BFGET_(r32, 3, 3)
    #define   SET32PngDecReg_IntAxiRespError_IntAxiRespError_3i(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16PngDecReg_IntAxiRespError_IntAxiRespError_3i(r16) _BFGET_(r16, 3, 3)
    #define   SET16PngDecReg_IntAxiRespError_IntAxiRespError_3i(r16,v) _BFSET_(r16, 3, 3,v)

    #define     w32PngDecReg_IntAxiRespError                   {\
            UNSG32 uIntAxiRespError_IntAxiRespError_0i         :  1;\
            UNSG32 uIntAxiRespError_IntAxiRespError_1i         :  1;\
            UNSG32 uIntAxiRespError_IntAxiRespError_2i         :  1;\
            UNSG32 uIntAxiRespError_IntAxiRespError_3i         :  1;\
            UNSG32 RSVDx70_b4                                  : 28;\
          }
    union { UNSG32 u32PngDecReg_IntAxiRespError;
            struct w32PngDecReg_IntAxiRespError;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask(r32) _BFGET_(r32, 3, 0)
    #define   SET32PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask(r32,v) _BFSET_(r32, 3, 0,v)
    #define   GET16PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask(r16) _BFGET_(r16, 3, 0)
    #define   SET16PngDecReg_IntAxiRespErrorMask_IntAxiRespErrorMask(r16,v) _BFSET_(r16, 3, 0,v)

    #define     w32PngDecReg_IntAxiRespErrorMask               {\
            UNSG32 uIntAxiRespErrorMask_IntAxiRespErrorMask    :  4;\
            UNSG32 RSVDx74_b4                                  : 28;\
          }
    union { UNSG32 u32PngDecReg_IntAxiRespErrorMask;
            struct w32PngDecReg_IntAxiRespErrorMask;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx78                                     [104];
    ///////////////////////////////////////////////////////////
              SIE_PngDecAxiParam                               ie_AxiRead;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxE4                                     [12];
    ///////////////////////////////////////////////////////////
              SIE_PngDecAxiParam                               ie_AxiWrite;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxF4                                     [12];
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleParam_Ratio(r32)         _BFGET_(r32, 4, 0)
    #define   SET32PngDecReg_DownScaleParam_Ratio(r32,v)       _BFSET_(r32, 4, 0,v)
    #define   GET16PngDecReg_DownScaleParam_Ratio(r16)         _BFGET_(r16, 4, 0)
    #define   SET16PngDecReg_DownScaleParam_Ratio(r16,v)       _BFSET_(r16, 4, 0,v)

    #define     w32PngDecReg_DownScaleParam                    {\
            UNSG32 uDownScaleParam_Ratio                       :  5;\
            UNSG32 RSVDx100_b5                                 : 27;\
          }
    union { UNSG32 u32PngDecReg_DownScaleParam;
            struct w32PngDecReg_DownScaleParam;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff0_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff0_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff0                   {\
            UNSG32 sDownScaleCoeff0_Coeff                      : 17;\
            UNSG32 RSVDx104_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff0;
            struct w32PngDecReg_DownScaleCoeff0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff1_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff1_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff1                   {\
            UNSG32 sDownScaleCoeff1_Coeff                      : 17;\
            UNSG32 RSVDx108_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff1;
            struct w32PngDecReg_DownScaleCoeff1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff2_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff2_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff2                   {\
            UNSG32 sDownScaleCoeff2_Coeff                      : 17;\
            UNSG32 RSVDx10C_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff2;
            struct w32PngDecReg_DownScaleCoeff2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff3_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff3_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff3                   {\
            UNSG32 sDownScaleCoeff3_Coeff                      : 17;\
            UNSG32 RSVDx110_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff3;
            struct w32PngDecReg_DownScaleCoeff3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff4_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff4_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff4                   {\
            UNSG32 sDownScaleCoeff4_Coeff                      : 17;\
            UNSG32 RSVDx114_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff4;
            struct w32PngDecReg_DownScaleCoeff4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff5_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff5_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff5                   {\
            UNSG32 sDownScaleCoeff5_Coeff                      : 17;\
            UNSG32 RSVDx118_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff5;
            struct w32PngDecReg_DownScaleCoeff5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff6_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff6_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff6                   {\
            UNSG32 sDownScaleCoeff6_Coeff                      : 17;\
            UNSG32 RSVDx11C_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff6;
            struct w32PngDecReg_DownScaleCoeff6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff7_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff7_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff7                   {\
            UNSG32 sDownScaleCoeff7_Coeff                      : 17;\
            UNSG32 RSVDx120_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff7;
            struct w32PngDecReg_DownScaleCoeff7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PngDecReg_DownScaleCoeff8_Coeff(r32)        _BFGET_(r32,16, 0)
    #define   SET32PngDecReg_DownScaleCoeff8_Coeff(r32,v)      _BFSET_(r32,16, 0,v)

    #define     w32PngDecReg_DownScaleCoeff8                   {\
            UNSG32 sDownScaleCoeff8_Coeff                      : 17;\
            UNSG32 RSVDx124_b17                                : 15;\
          }
    union { UNSG32 u32PngDecReg_DownScaleCoeff8;
            struct w32PngDecReg_DownScaleCoeff8;
          };
    ///////////////////////////////////////////////////////////
    } SIE_PngDecReg;

    typedef union  T32PngDecReg_Enable
          { UNSG32 u32;
            struct w32PngDecReg_Enable;
                 } T32PngDecReg_Enable;
    typedef union  T32PngDecReg_ClockControl
          { UNSG32 u32;
            struct w32PngDecReg_ClockControl;
                 } T32PngDecReg_ClockControl;
    typedef union  T32PngDecReg_ChuckDecEnable
          { UNSG32 u32;
            struct w32PngDecReg_ChuckDecEnable;
                 } T32PngDecReg_ChuckDecEnable;
    typedef union  T32PngDecReg_StreamPointerStatus
          { UNSG32 u32;
            struct w32PngDecReg_StreamPointerStatus;
                 } T32PngDecReg_StreamPointerStatus;
    typedef union  T32PngDecReg_StreamAddress
          { UNSG32 u32;
            struct w32PngDecReg_StreamAddress;
                 } T32PngDecReg_StreamAddress;
    typedef union  T32PngDecReg_StreamInfo
          { UNSG32 u32;
            struct w32PngDecReg_StreamInfo;
                 } T32PngDecReg_StreamInfo;
    typedef union  T32PngDecReg_ImageFormat
          { UNSG32 u32;
            struct w32PngDecReg_ImageFormat;
                 } T32PngDecReg_ImageFormat;
    typedef union  T32PngDecReg_ImageAddress
          { UNSG32 u32;
            struct w32PngDecReg_ImageAddress;
                 } T32PngDecReg_ImageAddress;
    typedef union  T32PngDecReg_ImageStride
          { UNSG32 u32;
            struct w32PngDecReg_ImageStride;
                 } T32PngDecReg_ImageStride;
    typedef union  T32PngDecReg_RingBufferAddress
          { UNSG32 u32;
            struct w32PngDecReg_RingBufferAddress;
                 } T32PngDecReg_RingBufferAddress;
    typedef union  T32PngDecReg_RingBufferSize
          { UNSG32 u32;
            struct w32PngDecReg_RingBufferSize;
                 } T32PngDecReg_RingBufferSize;
    typedef union  T32PngDecReg_RingBufferReadPointer
          { UNSG32 u32;
            struct w32PngDecReg_RingBufferReadPointer;
                 } T32PngDecReg_RingBufferReadPointer;
    typedef union  T32PngDecReg_RingBufferWritePointer
          { UNSG32 u32;
            struct w32PngDecReg_RingBufferWritePointer;
                 } T32PngDecReg_RingBufferWritePointer;
    typedef union  T32PngDecReg_IntDecStatus
          { UNSG32 u32;
            struct w32PngDecReg_IntDecStatus;
                 } T32PngDecReg_IntDecStatus;
    typedef union  T32PngDecReg_IntDecStatusMask
          { UNSG32 u32;
            struct w32PngDecReg_IntDecStatusMask;
                 } T32PngDecReg_IntDecStatusMask;
    typedef union  T32PngDecReg_IntDecStatusStop
          { UNSG32 u32;
            struct w32PngDecReg_IntDecStatusStop;
                 } T32PngDecReg_IntDecStatusStop;
    typedef union  T32PngDecReg_IntDecError
          { UNSG32 u32;
            struct w32PngDecReg_IntDecError;
                 } T32PngDecReg_IntDecError;
    typedef union  T32PngDecReg_IntDecErrorMask
          { UNSG32 u32;
            struct w32PngDecReg_IntDecErrorMask;
                 } T32PngDecReg_IntDecErrorMask;
    typedef union  T32PngDecReg_IntDecErrorStop
          { UNSG32 u32;
            struct w32PngDecReg_IntDecErrorStop;
                 } T32PngDecReg_IntDecErrorStop;
    typedef union  T32PngDecReg_IntAxiRespError
          { UNSG32 u32;
            struct w32PngDecReg_IntAxiRespError;
                 } T32PngDecReg_IntAxiRespError;
    typedef union  T32PngDecReg_IntAxiRespErrorMask
          { UNSG32 u32;
            struct w32PngDecReg_IntAxiRespErrorMask;
                 } T32PngDecReg_IntAxiRespErrorMask;
    typedef union  T32PngDecReg_DownScaleParam
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleParam;
                 } T32PngDecReg_DownScaleParam;
    typedef union  T32PngDecReg_DownScaleCoeff0
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff0;
                 } T32PngDecReg_DownScaleCoeff0;
    typedef union  T32PngDecReg_DownScaleCoeff1
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff1;
                 } T32PngDecReg_DownScaleCoeff1;
    typedef union  T32PngDecReg_DownScaleCoeff2
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff2;
                 } T32PngDecReg_DownScaleCoeff2;
    typedef union  T32PngDecReg_DownScaleCoeff3
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff3;
                 } T32PngDecReg_DownScaleCoeff3;
    typedef union  T32PngDecReg_DownScaleCoeff4
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff4;
                 } T32PngDecReg_DownScaleCoeff4;
    typedef union  T32PngDecReg_DownScaleCoeff5
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff5;
                 } T32PngDecReg_DownScaleCoeff5;
    typedef union  T32PngDecReg_DownScaleCoeff6
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff6;
                 } T32PngDecReg_DownScaleCoeff6;
    typedef union  T32PngDecReg_DownScaleCoeff7
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff7;
                 } T32PngDecReg_DownScaleCoeff7;
    typedef union  T32PngDecReg_DownScaleCoeff8
          { UNSG32 u32;
            struct w32PngDecReg_DownScaleCoeff8;
                 } T32PngDecReg_DownScaleCoeff8;
    ///////////////////////////////////////////////////////////

    typedef union  TPngDecReg_Enable
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_Enable;
                   };
                 } TPngDecReg_Enable;
    typedef union  TPngDecReg_ClockControl
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_ClockControl;
                   };
                 } TPngDecReg_ClockControl;
    typedef union  TPngDecReg_ChuckDecEnable
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_ChuckDecEnable;
                   };
                 } TPngDecReg_ChuckDecEnable;
    typedef union  TPngDecReg_StreamPointerStatus
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_StreamPointerStatus;
                   };
                 } TPngDecReg_StreamPointerStatus;
    typedef union  TPngDecReg_StreamAddress
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_StreamAddress;
                   };
                 } TPngDecReg_StreamAddress;
    typedef union  TPngDecReg_StreamInfo
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_StreamInfo;
                   };
                 } TPngDecReg_StreamInfo;
    typedef union  TPngDecReg_ImageFormat
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_ImageFormat;
                   };
                 } TPngDecReg_ImageFormat;
    typedef union  TPngDecReg_ImageAddress
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_ImageAddress;
                   };
                 } TPngDecReg_ImageAddress;
    typedef union  TPngDecReg_ImageStride
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_ImageStride;
                   };
                 } TPngDecReg_ImageStride;
    typedef union  TPngDecReg_RingBufferAddress
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_RingBufferAddress;
                   };
                 } TPngDecReg_RingBufferAddress;
    typedef union  TPngDecReg_RingBufferSize
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_RingBufferSize;
                   };
                 } TPngDecReg_RingBufferSize;
    typedef union  TPngDecReg_RingBufferReadPointer
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_RingBufferReadPointer;
                   };
                 } TPngDecReg_RingBufferReadPointer;
    typedef union  TPngDecReg_RingBufferWritePointer
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_RingBufferWritePointer;
                   };
                 } TPngDecReg_RingBufferWritePointer;
    typedef union  TPngDecReg_IntDecStatus
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecStatus;
                   };
                 } TPngDecReg_IntDecStatus;
    typedef union  TPngDecReg_IntDecStatusMask
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecStatusMask;
                   };
                 } TPngDecReg_IntDecStatusMask;
    typedef union  TPngDecReg_IntDecStatusStop
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecStatusStop;
                   };
                 } TPngDecReg_IntDecStatusStop;
    typedef union  TPngDecReg_IntDecError
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecError;
                   };
                 } TPngDecReg_IntDecError;
    typedef union  TPngDecReg_IntDecErrorMask
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecErrorMask;
                   };
                 } TPngDecReg_IntDecErrorMask;
    typedef union  TPngDecReg_IntDecErrorStop
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntDecErrorStop;
                   };
                 } TPngDecReg_IntDecErrorStop;
    typedef union  TPngDecReg_IntAxiRespError
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntAxiRespError;
                   };
                 } TPngDecReg_IntAxiRespError;
    typedef union  TPngDecReg_IntAxiRespErrorMask
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_IntAxiRespErrorMask;
                   };
                 } TPngDecReg_IntAxiRespErrorMask;
    typedef union  TPngDecReg_DownScaleParam
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleParam;
                   };
                 } TPngDecReg_DownScaleParam;
    typedef union  TPngDecReg_DownScaleCoeff0
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff0;
                   };
                 } TPngDecReg_DownScaleCoeff0;
    typedef union  TPngDecReg_DownScaleCoeff1
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff1;
                   };
                 } TPngDecReg_DownScaleCoeff1;
    typedef union  TPngDecReg_DownScaleCoeff2
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff2;
                   };
                 } TPngDecReg_DownScaleCoeff2;
    typedef union  TPngDecReg_DownScaleCoeff3
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff3;
                   };
                 } TPngDecReg_DownScaleCoeff3;
    typedef union  TPngDecReg_DownScaleCoeff4
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff4;
                   };
                 } TPngDecReg_DownScaleCoeff4;
    typedef union  TPngDecReg_DownScaleCoeff5
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff5;
                   };
                 } TPngDecReg_DownScaleCoeff5;
    typedef union  TPngDecReg_DownScaleCoeff6
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff6;
                   };
                 } TPngDecReg_DownScaleCoeff6;
    typedef union  TPngDecReg_DownScaleCoeff7
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff7;
                   };
                 } TPngDecReg_DownScaleCoeff7;
    typedef union  TPngDecReg_DownScaleCoeff8
          { UNSG32 u32[1];
            struct {
            struct w32PngDecReg_DownScaleCoeff8;
                   };
                 } TPngDecReg_DownScaleCoeff8;

    ///////////////////////////////////////////////////////////
     SIGN32 PngDecReg_drvrd(SIE_PngDecReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PngDecReg_drvwr(SIE_PngDecReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PngDecReg_reset(SIE_PngDecReg *p);
     SIGN32 PngDecReg_cmp  (SIE_PngDecReg *p, SIE_PngDecReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PngDecReg_check(p,pie,pfx,hLOG) PngDecReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define PngDecReg_print(p,    pfx,hLOG) PngDecReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: PngDecReg
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: PngDec.h
////////////////////////////////////////////////////////////

