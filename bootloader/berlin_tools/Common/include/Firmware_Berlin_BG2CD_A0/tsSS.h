//////
/// don't edit! auto-generated by docc: tsSS.h
////////////////////////////////////////////////////////////
#ifndef tsSS_h
#define tsSS_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE TSOTP                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (RW)
///               %unsigned 4  test                      0x5
///               %unsigned 1  rstb                      0x1
///               %unsigned 1  csb                       0x1
///               %unsigned 1  pgmb                      0x1
///               %unsigned 1  sclk                      0x0
///               %unsigned 1  load                      0x1
///               %unsigned 1  pdwn                      0x0
///               %unsigned 13 addr                      0x0
///                                    ###
///                                    * select the OTP cells to be programmed; only 0~2699 are valid numbers
///                                    ###
///               %unsigned 8  crcchk                    0x0
///               %%        1          # Stuffing bits...
///     @ 0x00004                      (RW)
///               %unsigned 1  progseqcode               0x0
///               %unsigned 1  progseqcodeclk            0x0
///               %%        30         # Stuffing bits...
///     @ 0x00008                      (R-)
///               %unsigned 32 data0                     0x1
///               %unsigned 32 data1                     0x1
///               %unsigned 2  data2                     0x1
///               %unsigned 1  security                  0x1
///               %unsigned 1  rddone                    0x0
///               %unsigned 1  dout                      0x1
///               %unsigned 1  match                     0x1
///                                    ###
///                                    * please refer to OTP Macro Document regarding to definition and programming timing about these bits.
///                                    ###
///               %%        26         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      20B, bits:     103b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TSOTP
#define h_TSOTP (){}

    #define     BA_TSOTP_test                                  0x0000
    #define     B16TSOTP_test                                  0x0000
    #define   LSb32TSOTP_test                                     0
    #define   LSb16TSOTP_test                                     0
    #define       bTSOTP_test                                  4
    #define   MSK32TSOTP_test                                     0x0000000F

    #define     BA_TSOTP_rstb                                  0x0000
    #define     B16TSOTP_rstb                                  0x0000
    #define   LSb32TSOTP_rstb                                     4
    #define   LSb16TSOTP_rstb                                     4
    #define       bTSOTP_rstb                                  1
    #define   MSK32TSOTP_rstb                                     0x00000010

    #define     BA_TSOTP_csb                                   0x0000
    #define     B16TSOTP_csb                                   0x0000
    #define   LSb32TSOTP_csb                                      5
    #define   LSb16TSOTP_csb                                      5
    #define       bTSOTP_csb                                   1
    #define   MSK32TSOTP_csb                                      0x00000020

    #define     BA_TSOTP_pgmb                                  0x0000
    #define     B16TSOTP_pgmb                                  0x0000
    #define   LSb32TSOTP_pgmb                                     6
    #define   LSb16TSOTP_pgmb                                     6
    #define       bTSOTP_pgmb                                  1
    #define   MSK32TSOTP_pgmb                                     0x00000040

    #define     BA_TSOTP_sclk                                  0x0000
    #define     B16TSOTP_sclk                                  0x0000
    #define   LSb32TSOTP_sclk                                     7
    #define   LSb16TSOTP_sclk                                     7
    #define       bTSOTP_sclk                                  1
    #define   MSK32TSOTP_sclk                                     0x00000080

    #define     BA_TSOTP_load                                  0x0001
    #define     B16TSOTP_load                                  0x0000
    #define   LSb32TSOTP_load                                     8
    #define   LSb16TSOTP_load                                     8
    #define       bTSOTP_load                                  1
    #define   MSK32TSOTP_load                                     0x00000100

    #define     BA_TSOTP_pdwn                                  0x0001
    #define     B16TSOTP_pdwn                                  0x0000
    #define   LSb32TSOTP_pdwn                                     9
    #define   LSb16TSOTP_pdwn                                     9
    #define       bTSOTP_pdwn                                  1
    #define   MSK32TSOTP_pdwn                                     0x00000200

    #define     BA_TSOTP_addr                                  0x0001
    #define     B16TSOTP_addr                                  0x0000
    #define   LSb32TSOTP_addr                                     10
    #define   LSb16TSOTP_addr                                     10
    #define       bTSOTP_addr                                  13
    #define   MSK32TSOTP_addr                                     0x007FFC00

    #define     BA_TSOTP_crcchk                                0x0002
    #define     B16TSOTP_crcchk                                0x0002
    #define   LSb32TSOTP_crcchk                                   23
    #define   LSb16TSOTP_crcchk                                   7
    #define       bTSOTP_crcchk                                8
    #define   MSK32TSOTP_crcchk                                   0x7F800000
    ///////////////////////////////////////////////////////////

    #define     BA_TSOTP_progseqcode                           0x0004
    #define     B16TSOTP_progseqcode                           0x0004
    #define   LSb32TSOTP_progseqcode                              0
    #define   LSb16TSOTP_progseqcode                              0
    #define       bTSOTP_progseqcode                           1
    #define   MSK32TSOTP_progseqcode                              0x00000001

    #define     BA_TSOTP_progseqcodeclk                        0x0004
    #define     B16TSOTP_progseqcodeclk                        0x0004
    #define   LSb32TSOTP_progseqcodeclk                           1
    #define   LSb16TSOTP_progseqcodeclk                           1
    #define       bTSOTP_progseqcodeclk                        1
    #define   MSK32TSOTP_progseqcodeclk                           0x00000002
    ///////////////////////////////////////////////////////////

    #define     BA_TSOTP_data0                                 0x0008
    #define     B16TSOTP_data0                                 0x0008
    #define   LSb32TSOTP_data0                                    0
    #define   LSb16TSOTP_data0                                    0
    #define       bTSOTP_data0                                 32
    #define   MSK32TSOTP_data0                                    0xFFFFFFFF

    #define     BA_TSOTP_data1                                 0x000C
    #define     B16TSOTP_data1                                 0x000C
    #define   LSb32TSOTP_data1                                    0
    #define   LSb16TSOTP_data1                                    0
    #define       bTSOTP_data1                                 32
    #define   MSK32TSOTP_data1                                    0xFFFFFFFF

    #define     BA_TSOTP_data2                                 0x0010
    #define     B16TSOTP_data2                                 0x0010
    #define   LSb32TSOTP_data2                                    0
    #define   LSb16TSOTP_data2                                    0
    #define       bTSOTP_data2                                 2
    #define   MSK32TSOTP_data2                                    0x00000003

    #define     BA_TSOTP_security                              0x0010
    #define     B16TSOTP_security                              0x0010
    #define   LSb32TSOTP_security                                 2
    #define   LSb16TSOTP_security                                 2
    #define       bTSOTP_security                              1
    #define   MSK32TSOTP_security                                 0x00000004

    #define     BA_TSOTP_rddone                                0x0010
    #define     B16TSOTP_rddone                                0x0010
    #define   LSb32TSOTP_rddone                                   3
    #define   LSb16TSOTP_rddone                                   3
    #define       bTSOTP_rddone                                1
    #define   MSK32TSOTP_rddone                                   0x00000008

    #define     BA_TSOTP_dout                                  0x0010
    #define     B16TSOTP_dout                                  0x0010
    #define   LSb32TSOTP_dout                                     4
    #define   LSb16TSOTP_dout                                     4
    #define       bTSOTP_dout                                  1
    #define   MSK32TSOTP_dout                                     0x00000010

    #define     BA_TSOTP_match                                 0x0010
    #define     B16TSOTP_match                                 0x0010
    #define   LSb32TSOTP_match                                    5
    #define   LSb16TSOTP_match                                    5
    #define       bTSOTP_match                                 1
    #define   MSK32TSOTP_match                                    0x00000020
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TSOTP {
    ///////////////////////////////////////////////////////////
    #define   GET32TSOTP_test(r32)                             _BFGET_(r32, 3, 0)
    #define   SET32TSOTP_test(r32,v)                           _BFSET_(r32, 3, 0,v)
    #define   GET16TSOTP_test(r16)                             _BFGET_(r16, 3, 0)
    #define   SET16TSOTP_test(r16,v)                           _BFSET_(r16, 3, 0,v)

    #define   GET32TSOTP_rstb(r32)                             _BFGET_(r32, 4, 4)
    #define   SET32TSOTP_rstb(r32,v)                           _BFSET_(r32, 4, 4,v)
    #define   GET16TSOTP_rstb(r16)                             _BFGET_(r16, 4, 4)
    #define   SET16TSOTP_rstb(r16,v)                           _BFSET_(r16, 4, 4,v)

    #define   GET32TSOTP_csb(r32)                              _BFGET_(r32, 5, 5)
    #define   SET32TSOTP_csb(r32,v)                            _BFSET_(r32, 5, 5,v)
    #define   GET16TSOTP_csb(r16)                              _BFGET_(r16, 5, 5)
    #define   SET16TSOTP_csb(r16,v)                            _BFSET_(r16, 5, 5,v)

    #define   GET32TSOTP_pgmb(r32)                             _BFGET_(r32, 6, 6)
    #define   SET32TSOTP_pgmb(r32,v)                           _BFSET_(r32, 6, 6,v)
    #define   GET16TSOTP_pgmb(r16)                             _BFGET_(r16, 6, 6)
    #define   SET16TSOTP_pgmb(r16,v)                           _BFSET_(r16, 6, 6,v)

    #define   GET32TSOTP_sclk(r32)                             _BFGET_(r32, 7, 7)
    #define   SET32TSOTP_sclk(r32,v)                           _BFSET_(r32, 7, 7,v)
    #define   GET16TSOTP_sclk(r16)                             _BFGET_(r16, 7, 7)
    #define   SET16TSOTP_sclk(r16,v)                           _BFSET_(r16, 7, 7,v)

    #define   GET32TSOTP_load(r32)                             _BFGET_(r32, 8, 8)
    #define   SET32TSOTP_load(r32,v)                           _BFSET_(r32, 8, 8,v)
    #define   GET16TSOTP_load(r16)                             _BFGET_(r16, 8, 8)
    #define   SET16TSOTP_load(r16,v)                           _BFSET_(r16, 8, 8,v)

    #define   GET32TSOTP_pdwn(r32)                             _BFGET_(r32, 9, 9)
    #define   SET32TSOTP_pdwn(r32,v)                           _BFSET_(r32, 9, 9,v)
    #define   GET16TSOTP_pdwn(r16)                             _BFGET_(r16, 9, 9)
    #define   SET16TSOTP_pdwn(r16,v)                           _BFSET_(r16, 9, 9,v)

    #define   GET32TSOTP_addr(r32)                             _BFGET_(r32,22,10)
    #define   SET32TSOTP_addr(r32,v)                           _BFSET_(r32,22,10,v)

    #define   GET32TSOTP_crcchk(r32)                           _BFGET_(r32,30,23)
    #define   SET32TSOTP_crcchk(r32,v)                         _BFSET_(r32,30,23,v)
    #define   GET16TSOTP_crcchk(r16)                           _BFGET_(r16,14, 7)
    #define   SET16TSOTP_crcchk(r16,v)                         _BFSET_(r16,14, 7,v)

            UNSG32 u_test                                      :  4;
            UNSG32 u_rstb                                      :  1;
            UNSG32 u_csb                                       :  1;
            UNSG32 u_pgmb                                      :  1;
            UNSG32 u_sclk                                      :  1;
            UNSG32 u_load                                      :  1;
            UNSG32 u_pdwn                                      :  1;
            UNSG32 u_addr                                      : 13;
            UNSG32 u_crcchk                                    :  8;
            UNSG32 RSVDx0_b31                                  :  1;
    ///////////////////////////////////////////////////////////
    #define   GET32TSOTP_progseqcode(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32TSOTP_progseqcode(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16TSOTP_progseqcode(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16TSOTP_progseqcode(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define   GET32TSOTP_progseqcodeclk(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32TSOTP_progseqcodeclk(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16TSOTP_progseqcodeclk(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16TSOTP_progseqcodeclk(r16,v)                 _BFSET_(r16, 1, 1,v)

            UNSG32 u_progseqcode                               :  1;
            UNSG32 u_progseqcodeclk                            :  1;
            UNSG32 RSVDx4_b2                                   : 30;
    ///////////////////////////////////////////////////////////
    #define   GET32TSOTP_data0(r32)                            _BFGET_(r32,31, 0)
    #define   SET32TSOTP_data0(r32,v)                          _BFSET_(r32,31, 0,v)

            UNSG32 u_data0                                     : 32;
    ///////////////////////////////////////////////////////////

    #define   GET32TSOTP_data1(r32)                            _BFGET_(r32,31, 0)
    #define   SET32TSOTP_data1(r32,v)                          _BFSET_(r32,31, 0,v)

            UNSG32 u_data1                                     : 32;
    ///////////////////////////////////////////////////////////

    #define   GET32TSOTP_data2(r32)                            _BFGET_(r32, 1, 0)
    #define   SET32TSOTP_data2(r32,v)                          _BFSET_(r32, 1, 0,v)
    #define   GET16TSOTP_data2(r16)                            _BFGET_(r16, 1, 0)
    #define   SET16TSOTP_data2(r16,v)                          _BFSET_(r16, 1, 0,v)

    #define   GET32TSOTP_security(r32)                         _BFGET_(r32, 2, 2)
    #define   SET32TSOTP_security(r32,v)                       _BFSET_(r32, 2, 2,v)
    #define   GET16TSOTP_security(r16)                         _BFGET_(r16, 2, 2)
    #define   SET16TSOTP_security(r16,v)                       _BFSET_(r16, 2, 2,v)

    #define   GET32TSOTP_rddone(r32)                           _BFGET_(r32, 3, 3)
    #define   SET32TSOTP_rddone(r32,v)                         _BFSET_(r32, 3, 3,v)
    #define   GET16TSOTP_rddone(r16)                           _BFGET_(r16, 3, 3)
    #define   SET16TSOTP_rddone(r16,v)                         _BFSET_(r16, 3, 3,v)

    #define   GET32TSOTP_dout(r32)                             _BFGET_(r32, 4, 4)
    #define   SET32TSOTP_dout(r32,v)                           _BFSET_(r32, 4, 4,v)
    #define   GET16TSOTP_dout(r16)                             _BFGET_(r16, 4, 4)
    #define   SET16TSOTP_dout(r16,v)                           _BFSET_(r16, 4, 4,v)

    #define   GET32TSOTP_match(r32)                            _BFGET_(r32, 5, 5)
    #define   SET32TSOTP_match(r32,v)                          _BFSET_(r32, 5, 5,v)
    #define   GET16TSOTP_match(r16)                            _BFGET_(r16, 5, 5)
    #define   SET16TSOTP_match(r16,v)                          _BFSET_(r16, 5, 5,v)

            UNSG32 u_data2                                     :  2;
            UNSG32 u_security                                  :  1;
            UNSG32 u_rddone                                    :  1;
            UNSG32 u_dout                                      :  1;
            UNSG32 u_match                                     :  1;
            UNSG32 RSVDx10_b6                                  : 26;
    ///////////////////////////////////////////////////////////
    } SIE_TSOTP;

    ///////////////////////////////////////////////////////////
     SIGN32 TSOTP_drvrd(SIE_TSOTP *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TSOTP_drvwr(SIE_TSOTP *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TSOTP_reset(SIE_TSOTP *p);
     SIGN32 TSOTP_cmp  (SIE_TSOTP *p, SIE_TSOTP *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TSOTP_check(p,pie,pfx,hLOG) TSOTP_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TSOTP_print(p,    pfx,hLOG) TSOTP_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TSOTP
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SHADOWREG                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 KeyData0             (P)
///               %unsigned 32 KeyData0_0                0x0
///                                    ###
///                                    * Key0 [31:0]
///                                    ###
///     # 0x00004 KeyData01            
///               %unsigned 32 KeyData0_1                0x0
///                                    ###
///                                    * Key0 [63:32]
///                                    ###
///     # 0x00008 KeyData02            
///               %unsigned 32 KeyData0_2                0x0
///                                    ###
///                                    * Key0 [96:64]
///                                    ###
///     # 0x0000C KeyData03            
///               %unsigned 32 KeyData0_3                0x0
///                                    ###
///                                    * Key0 [127:96]
///                                    ###
///     @ 0x00010                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00020 KeyData1             (P)
///               %unsigned 32 KeyData1_0                0x0
///                                    ###
///                                    * Key1 [31:0]
///                                    ###
///     # 0x00024 KeyData11            
///               %unsigned 32 KeyData1_1                0x0
///                                    ###
///                                    * Key1 [63:32]
///                                    ###
///     # 0x00028 KeyData12            
///               %unsigned 32 KeyData1_2                0x0
///                                    ###
///                                    * Key1 [96:64]
///                                    ###
///     # 0x0002C KeyData13            
///               %unsigned 32 KeyData1_3                0x0
///                                    ###
///                                    * Key1 [127:96]
///                                    ###
///     @ 0x00030                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00040 KeyData2             (P)
///               %unsigned 32 KeyData2_0                0x0
///                                    ###
///                                    * Key2 [31:0]
///                                    ###
///     # 0x00044 KeyData21            
///               %unsigned 32 KeyData2_1                0x0
///                                    ###
///                                    * Key2 [63:32]
///                                    ###
///     # 0x00048 KeyData22            
///               %unsigned 32 KeyData2_2                0x0
///                                    ###
///                                    * Key2 [96:64]
///                                    ###
///     # 0x0004C KeyData23            
///               %unsigned 32 KeyData2_3                0x0
///                                    ###
///                                    * Key2 [127:96]
///                                    ###
///     @ 0x00050                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00060 KeyData3             (P)
///               %unsigned 32 KeyData3_0                0x0
///                                    ###
///                                    * Key3 [31:0]
///                                    ###
///     # 0x00064 KeyData31            
///               %unsigned 32 KeyData3_1                0x0
///                                    ###
///                                    * Key3 [63:32]
///                                    ###
///     # 0x00068 KeyData32            
///               %unsigned 32 KeyData3_2                0x0
///                                    ###
///                                    * Key3 [96:64]
///                                    ###
///     # 0x0006C KeyData33            
///               %unsigned 32 KeyData3_3                0x0
///                                    ###
///                                    * Key3 [127:96]
///                                    ###
///     @ 0x00070                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00080 KeyData4             (P)
///               %unsigned 32 KeyData4_0                0x0
///                                    ###
///                                    * Key4 [31:0]
///                                    ###
///     # 0x00084 KeyData41            
///               %unsigned 32 KeyData4_1                0x0
///                                    ###
///                                    * Key4 [63:32]
///                                    ###
///     # 0x00088 KeyData42            
///               %unsigned 32 KeyData4_2                0x0
///                                    ###
///                                    * Key4 [96:64]
///                                    ###
///     # 0x0008C KeyData43            
///               %unsigned 32 KeyData4_3                0x0
///                                    ###
///                                    * Key4 [127:96]
///                                    ###
///     @ 0x00090                      (W-)
///     #         # Stuffing bytes...
///               %% 896
///     @ 0x00100 KeyData5             (P)
///               %unsigned 32 KeyData5_0                0x0
///                                    ###
///                                    * Key5 [31:0]
///                                    ###
///     # 0x00104 KeyData51            
///               %unsigned 32 KeyData5_1                0x0
///                                    ###
///                                    * Key5 [63:32]
///                                    ###
///     # 0x00108 KeyData52            
///               %unsigned 32 KeyData5_2                0x0
///                                    ###
///                                    * Key5 [96:64]
///                                    ###
///     # 0x0010C KeyData53            
///               %unsigned 32 KeyData5_3                0x0
///                                    ###
///                                    * Key5 [127:96]
///                                    ###
///     @ 0x00110                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00120 KeyData6             (P)
///               %unsigned 32 KeyData6_0                0x0
///                                    ###
///                                    * Key6 [31:0]
///                                    ###
///     # 0x00124 KeyData61            
///               %unsigned 32 KeyData6_1                0x0
///                                    ###
///                                    * Key6 [63:32]
///                                    ###
///     # 0x00128 KeyData62            
///               %unsigned 32 KeyData6_2                0x0
///                                    ###
///                                    * Key6 [96:64]
///                                    ###
///     # 0x0012C KeyData63            
///               %unsigned 32 KeyData6_3                0x0
///                                    ###
///                                    * Key6 [127:96]
///                                    ###
///     @ 0x00130                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00140 KeyData7             (P)
///               %unsigned 32 KeyData7_0                0x0
///                                    ###
///                                    * Key7 [31:0]
///                                    ###
///     # 0x00144 KeyData71            
///               %unsigned 32 KeyData7_1                0x0
///                                    ###
///                                    * Key7 [63:32]
///                                    ###
///     # 0x00148 KeyData72            
///               %unsigned 32 KeyData7_2                0x0
///                                    ###
///                                    * Key7 [96:64]
///                                    ###
///     # 0x0014C KeyData73            
///               %unsigned 32 KeyData7_3                0x0
///                                    ###
///                                    * Key7 [127:96]
///                                    ###
///     @ 0x00150                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00160 CheckSum3_0          (P)
///               %unsigned 8  CheckSum0                 0x0
///                                    ###
///                                    * Checksum0[7:0]
///                                    ###
///               %unsigned 8  CheckSum1                 0x0
///                                    ###
///                                    * Checksum1[7:0]
///                                    ###
///               %unsigned 8  CheckSum2                 0x0
///                                    ###
///                                    * Checksum2[7:0]
///                                    ###
///               %unsigned 8  CheckSum3                 0x0
///                                    ###
///                                    * Checksum3[7:0]
///                                    ###
///     @ 0x00164                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00170 CheckSum7_4          (P)
///               %unsigned 8  CheckSum4                 0x0
///                                    ###
///                                    * Checksum4[7:0]
///                                    ###
///               %unsigned 8  CheckSum5                 0x0
///                                    ###
///                                    * Checksum5[7:0]
///                                    ###
///               %unsigned 8  CheckSum6                 0x0
///                                    ###
///                                    * Checksum6[7:0]
///                                    ###
///               %unsigned 8  CheckSum7                 0x0
///                                    ###
///                                    * Checksum7[7:0]
///                                    ###
///     @ 0x00174                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00180 KeyValid             (P)
///               %unsigned 8  KeyValid                  0x0
///                                    ###
///                                    * KeyValid[7:0]
///                                    * Bit0 is used for secret key 0
///                                    * Bit1 is used for secret key 1
///                                    * …
///                                    * Bit6 is used for secret key 6
///                                    * Bit7 is used for secret key 7
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00184                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00190 SecMode              (P)
///               %unsigned 8  SecMode                   0x0
///                                    ###
///                                    * SecMode[7:0]
///                                    * Bit0 is used for secret key 0
///                                    * Bit1 is used for secret key 1
///                                    * …
///                                    * Bit6 is used for secret key 6
///                                    * Bit7 is used for secret key 7
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00194                      (W-)
///     #         # Stuffing bytes...
///               %% 864
///     @ 0x00200 V_PubOtpOID          (P)
///               %unsigned 16 V_PubOtpOID               0x0
///               %%        16         # Stuffing bits...
///     @ 0x00204                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00210 V_PubOtpVID          (P)
///               %unsigned 16 V_PubOtpVID               0x0
///               %%        16         # Stuffing bits...
///     @ 0x00214                      (W-)
///     #         # Stuffing bytes...
///               %% 224
///     @ 0x00230 V_PubOtpBID          (P)
///               %unsigned 8  V_PubOtpBID               0x0
///                                    ###
///                                    * VPubOtpBID [3:0]
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00234                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00240 V_PubOtpRsaIndex     (P)
///               %unsigned 8  V_PubOtpRsaIndex          0x0
///                                    ###
///                                    * VPubOtpRsaIndex [3:0]
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00244                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00250 V_PubOtpMinCofVer    (P)
///               %unsigned 8  V_PubOtpMinConfVer        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00254                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00260 V_PubOtpGP           (P)
///               %unsigned 8  V_PubOtpGP                0x0
///               %%        24         # Stuffing bits...
///     @ 0x00264                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00270 V_PubOtpUniqueID3_0  (P)
///               %unsigned 32 V_PubOtpUniqueID3_0       0x0
///                                    ###
///                                    * V_PubOtpUniqueID byte 3-0
///                                    ###
///     @ 0x00274                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00280 V_PubOtpUniqueID7_4  (P)
///               %unsigned 32 V_PubOtpUniqueID7_4       0x0
///                                    ###
///                                    * V_PubOtpUniqueID byte 7-4
///                                    ###
///     @ 0x00284                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00290 ConcurrencyCtl       (P)
///               %unsigned 3  ConcurrencyControl        0x0
///                                    ###
///                                    * Only [2:0] is used
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00294                      (W-)
///     #         # Stuffing bytes...
///               %% 864
///     @ 0x00300 V_Secondary_select   (P)
///               %unsigned 3  V_Secondary_select        0x0
///                                    ###
///                                    * Only [2:0] is used
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00304                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00310 OTPWrProtect         (P)
///               %unsigned 1  OtpWriteProtect           0x0
///                                    ###
///                                    * Only [0] is used
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00314                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00320 AddtitionalValues    (P)
///               %unsigned 32 AdditionalValues          0x0
///     @ 0x00324                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00330 CsaVariantsControl   (P)
///               %unsigned 4  CsaVariantsControl        0x0
///                                    ###
///                                    * [1:0]: Csa2VariantsControl
///                                    * [3:2]: Csa3VariantsControl
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00334                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00340 SCFlowControlOn      (P)
///               %unsigned 1  SCFlowControlOn           0x0
///                                    ###
///                                    * Used to enable/disable the flow control function of Smart Card controller
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00344                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00350 JtagProtection       (P)
///               %unsigned 2  JtagProtection            0x0
///                                    ###
///                                    * Only [1:0] is used
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00354                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00360 SlowDownCheckOn      (P)
///               %unsigned 1  SlowDownCheckOn           0x0
///               %%        31         # Stuffing bits...
///     @ 0x00364                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00370 SpeedUpCheckOn       (P)
///               %unsigned 1  SpeedUpCheckOn            0x0
///               %%        31         # Stuffing bits...
///     @ 0x00374                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00380 ClockStopCheckOn     (P)
///               %unsigned 1  ClockStopCheckOn          0x0
///               %%        31         # Stuffing bits...
///     @ 0x00384                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00390 TestModeDisable      (P)
///               %unsigned 1  TestModeDisable           0x0
///               %%        31         # Stuffing bits...
///     @ 0x00394                      (W-)
///     #         # Stuffing bytes...
///               %% 864
///     @ 0x00400 DVBCPCMLSADisable    (P)
///               %unsigned 1  DVBCPCMLSADisable         0x0
///               %%        31         # Stuffing bits...
///     @ 0x00404                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00410 ShadowCopyDone       (P)
///               %unsigned 1  ShadowCopyDone            0x0
///                                    ###
///                                    * Indicates that all OTP data is copied and ready for NSK to use
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    1044B, bits:    1284b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SHADOWREG
#define h_SHADOWREG (){}

    #define     RA_SHADOWREG_KeyData0                          0x0000

    #define     BA_SHADOWREG_KeyData0_KeyData0_0               0x0000
    #define     B16SHADOWREG_KeyData0_KeyData0_0               0x0000
    #define   LSb32SHADOWREG_KeyData0_KeyData0_0                  0
    #define   LSb16SHADOWREG_KeyData0_KeyData0_0                  0
    #define       bSHADOWREG_KeyData0_KeyData0_0               32
    #define   MSK32SHADOWREG_KeyData0_KeyData0_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData01                         0x0004

    #define     BA_SHADOWREG_KeyData0_KeyData0_1               0x0004
    #define     B16SHADOWREG_KeyData0_KeyData0_1               0x0004
    #define   LSb32SHADOWREG_KeyData0_KeyData0_1                  0
    #define   LSb16SHADOWREG_KeyData0_KeyData0_1                  0
    #define       bSHADOWREG_KeyData0_KeyData0_1               32
    #define   MSK32SHADOWREG_KeyData0_KeyData0_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData02                         0x0008

    #define     BA_SHADOWREG_KeyData0_KeyData0_2               0x0008
    #define     B16SHADOWREG_KeyData0_KeyData0_2               0x0008
    #define   LSb32SHADOWREG_KeyData0_KeyData0_2                  0
    #define   LSb16SHADOWREG_KeyData0_KeyData0_2                  0
    #define       bSHADOWREG_KeyData0_KeyData0_2               32
    #define   MSK32SHADOWREG_KeyData0_KeyData0_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData03                         0x000C

    #define     BA_SHADOWREG_KeyData0_KeyData0_3               0x000C
    #define     B16SHADOWREG_KeyData0_KeyData0_3               0x000C
    #define   LSb32SHADOWREG_KeyData0_KeyData0_3                  0
    #define   LSb16SHADOWREG_KeyData0_KeyData0_3                  0
    #define       bSHADOWREG_KeyData0_KeyData0_3               32
    #define   MSK32SHADOWREG_KeyData0_KeyData0_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData1                          0x0020

    #define     BA_SHADOWREG_KeyData1_KeyData1_0               0x0020
    #define     B16SHADOWREG_KeyData1_KeyData1_0               0x0020
    #define   LSb32SHADOWREG_KeyData1_KeyData1_0                  0
    #define   LSb16SHADOWREG_KeyData1_KeyData1_0                  0
    #define       bSHADOWREG_KeyData1_KeyData1_0               32
    #define   MSK32SHADOWREG_KeyData1_KeyData1_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData11                         0x0024

    #define     BA_SHADOWREG_KeyData1_KeyData1_1               0x0024
    #define     B16SHADOWREG_KeyData1_KeyData1_1               0x0024
    #define   LSb32SHADOWREG_KeyData1_KeyData1_1                  0
    #define   LSb16SHADOWREG_KeyData1_KeyData1_1                  0
    #define       bSHADOWREG_KeyData1_KeyData1_1               32
    #define   MSK32SHADOWREG_KeyData1_KeyData1_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData12                         0x0028

    #define     BA_SHADOWREG_KeyData1_KeyData1_2               0x0028
    #define     B16SHADOWREG_KeyData1_KeyData1_2               0x0028
    #define   LSb32SHADOWREG_KeyData1_KeyData1_2                  0
    #define   LSb16SHADOWREG_KeyData1_KeyData1_2                  0
    #define       bSHADOWREG_KeyData1_KeyData1_2               32
    #define   MSK32SHADOWREG_KeyData1_KeyData1_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData13                         0x002C

    #define     BA_SHADOWREG_KeyData1_KeyData1_3               0x002C
    #define     B16SHADOWREG_KeyData1_KeyData1_3               0x002C
    #define   LSb32SHADOWREG_KeyData1_KeyData1_3                  0
    #define   LSb16SHADOWREG_KeyData1_KeyData1_3                  0
    #define       bSHADOWREG_KeyData1_KeyData1_3               32
    #define   MSK32SHADOWREG_KeyData1_KeyData1_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData2                          0x0040

    #define     BA_SHADOWREG_KeyData2_KeyData2_0               0x0040
    #define     B16SHADOWREG_KeyData2_KeyData2_0               0x0040
    #define   LSb32SHADOWREG_KeyData2_KeyData2_0                  0
    #define   LSb16SHADOWREG_KeyData2_KeyData2_0                  0
    #define       bSHADOWREG_KeyData2_KeyData2_0               32
    #define   MSK32SHADOWREG_KeyData2_KeyData2_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData21                         0x0044

    #define     BA_SHADOWREG_KeyData2_KeyData2_1               0x0044
    #define     B16SHADOWREG_KeyData2_KeyData2_1               0x0044
    #define   LSb32SHADOWREG_KeyData2_KeyData2_1                  0
    #define   LSb16SHADOWREG_KeyData2_KeyData2_1                  0
    #define       bSHADOWREG_KeyData2_KeyData2_1               32
    #define   MSK32SHADOWREG_KeyData2_KeyData2_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData22                         0x0048

    #define     BA_SHADOWREG_KeyData2_KeyData2_2               0x0048
    #define     B16SHADOWREG_KeyData2_KeyData2_2               0x0048
    #define   LSb32SHADOWREG_KeyData2_KeyData2_2                  0
    #define   LSb16SHADOWREG_KeyData2_KeyData2_2                  0
    #define       bSHADOWREG_KeyData2_KeyData2_2               32
    #define   MSK32SHADOWREG_KeyData2_KeyData2_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData23                         0x004C

    #define     BA_SHADOWREG_KeyData2_KeyData2_3               0x004C
    #define     B16SHADOWREG_KeyData2_KeyData2_3               0x004C
    #define   LSb32SHADOWREG_KeyData2_KeyData2_3                  0
    #define   LSb16SHADOWREG_KeyData2_KeyData2_3                  0
    #define       bSHADOWREG_KeyData2_KeyData2_3               32
    #define   MSK32SHADOWREG_KeyData2_KeyData2_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData3                          0x0060

    #define     BA_SHADOWREG_KeyData3_KeyData3_0               0x0060
    #define     B16SHADOWREG_KeyData3_KeyData3_0               0x0060
    #define   LSb32SHADOWREG_KeyData3_KeyData3_0                  0
    #define   LSb16SHADOWREG_KeyData3_KeyData3_0                  0
    #define       bSHADOWREG_KeyData3_KeyData3_0               32
    #define   MSK32SHADOWREG_KeyData3_KeyData3_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData31                         0x0064

    #define     BA_SHADOWREG_KeyData3_KeyData3_1               0x0064
    #define     B16SHADOWREG_KeyData3_KeyData3_1               0x0064
    #define   LSb32SHADOWREG_KeyData3_KeyData3_1                  0
    #define   LSb16SHADOWREG_KeyData3_KeyData3_1                  0
    #define       bSHADOWREG_KeyData3_KeyData3_1               32
    #define   MSK32SHADOWREG_KeyData3_KeyData3_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData32                         0x0068

    #define     BA_SHADOWREG_KeyData3_KeyData3_2               0x0068
    #define     B16SHADOWREG_KeyData3_KeyData3_2               0x0068
    #define   LSb32SHADOWREG_KeyData3_KeyData3_2                  0
    #define   LSb16SHADOWREG_KeyData3_KeyData3_2                  0
    #define       bSHADOWREG_KeyData3_KeyData3_2               32
    #define   MSK32SHADOWREG_KeyData3_KeyData3_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData33                         0x006C

    #define     BA_SHADOWREG_KeyData3_KeyData3_3               0x006C
    #define     B16SHADOWREG_KeyData3_KeyData3_3               0x006C
    #define   LSb32SHADOWREG_KeyData3_KeyData3_3                  0
    #define   LSb16SHADOWREG_KeyData3_KeyData3_3                  0
    #define       bSHADOWREG_KeyData3_KeyData3_3               32
    #define   MSK32SHADOWREG_KeyData3_KeyData3_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData4                          0x0080

    #define     BA_SHADOWREG_KeyData4_KeyData4_0               0x0080
    #define     B16SHADOWREG_KeyData4_KeyData4_0               0x0080
    #define   LSb32SHADOWREG_KeyData4_KeyData4_0                  0
    #define   LSb16SHADOWREG_KeyData4_KeyData4_0                  0
    #define       bSHADOWREG_KeyData4_KeyData4_0               32
    #define   MSK32SHADOWREG_KeyData4_KeyData4_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData41                         0x0084

    #define     BA_SHADOWREG_KeyData4_KeyData4_1               0x0084
    #define     B16SHADOWREG_KeyData4_KeyData4_1               0x0084
    #define   LSb32SHADOWREG_KeyData4_KeyData4_1                  0
    #define   LSb16SHADOWREG_KeyData4_KeyData4_1                  0
    #define       bSHADOWREG_KeyData4_KeyData4_1               32
    #define   MSK32SHADOWREG_KeyData4_KeyData4_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData42                         0x0088

    #define     BA_SHADOWREG_KeyData4_KeyData4_2               0x0088
    #define     B16SHADOWREG_KeyData4_KeyData4_2               0x0088
    #define   LSb32SHADOWREG_KeyData4_KeyData4_2                  0
    #define   LSb16SHADOWREG_KeyData4_KeyData4_2                  0
    #define       bSHADOWREG_KeyData4_KeyData4_2               32
    #define   MSK32SHADOWREG_KeyData4_KeyData4_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData43                         0x008C

    #define     BA_SHADOWREG_KeyData4_KeyData4_3               0x008C
    #define     B16SHADOWREG_KeyData4_KeyData4_3               0x008C
    #define   LSb32SHADOWREG_KeyData4_KeyData4_3                  0
    #define   LSb16SHADOWREG_KeyData4_KeyData4_3                  0
    #define       bSHADOWREG_KeyData4_KeyData4_3               32
    #define   MSK32SHADOWREG_KeyData4_KeyData4_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData5                          0x0100

    #define     BA_SHADOWREG_KeyData5_KeyData5_0               0x0100
    #define     B16SHADOWREG_KeyData5_KeyData5_0               0x0100
    #define   LSb32SHADOWREG_KeyData5_KeyData5_0                  0
    #define   LSb16SHADOWREG_KeyData5_KeyData5_0                  0
    #define       bSHADOWREG_KeyData5_KeyData5_0               32
    #define   MSK32SHADOWREG_KeyData5_KeyData5_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData51                         0x0104

    #define     BA_SHADOWREG_KeyData5_KeyData5_1               0x0104
    #define     B16SHADOWREG_KeyData5_KeyData5_1               0x0104
    #define   LSb32SHADOWREG_KeyData5_KeyData5_1                  0
    #define   LSb16SHADOWREG_KeyData5_KeyData5_1                  0
    #define       bSHADOWREG_KeyData5_KeyData5_1               32
    #define   MSK32SHADOWREG_KeyData5_KeyData5_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData52                         0x0108

    #define     BA_SHADOWREG_KeyData5_KeyData5_2               0x0108
    #define     B16SHADOWREG_KeyData5_KeyData5_2               0x0108
    #define   LSb32SHADOWREG_KeyData5_KeyData5_2                  0
    #define   LSb16SHADOWREG_KeyData5_KeyData5_2                  0
    #define       bSHADOWREG_KeyData5_KeyData5_2               32
    #define   MSK32SHADOWREG_KeyData5_KeyData5_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData53                         0x010C

    #define     BA_SHADOWREG_KeyData5_KeyData5_3               0x010C
    #define     B16SHADOWREG_KeyData5_KeyData5_3               0x010C
    #define   LSb32SHADOWREG_KeyData5_KeyData5_3                  0
    #define   LSb16SHADOWREG_KeyData5_KeyData5_3                  0
    #define       bSHADOWREG_KeyData5_KeyData5_3               32
    #define   MSK32SHADOWREG_KeyData5_KeyData5_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData6                          0x0120

    #define     BA_SHADOWREG_KeyData6_KeyData6_0               0x0120
    #define     B16SHADOWREG_KeyData6_KeyData6_0               0x0120
    #define   LSb32SHADOWREG_KeyData6_KeyData6_0                  0
    #define   LSb16SHADOWREG_KeyData6_KeyData6_0                  0
    #define       bSHADOWREG_KeyData6_KeyData6_0               32
    #define   MSK32SHADOWREG_KeyData6_KeyData6_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData61                         0x0124

    #define     BA_SHADOWREG_KeyData6_KeyData6_1               0x0124
    #define     B16SHADOWREG_KeyData6_KeyData6_1               0x0124
    #define   LSb32SHADOWREG_KeyData6_KeyData6_1                  0
    #define   LSb16SHADOWREG_KeyData6_KeyData6_1                  0
    #define       bSHADOWREG_KeyData6_KeyData6_1               32
    #define   MSK32SHADOWREG_KeyData6_KeyData6_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData62                         0x0128

    #define     BA_SHADOWREG_KeyData6_KeyData6_2               0x0128
    #define     B16SHADOWREG_KeyData6_KeyData6_2               0x0128
    #define   LSb32SHADOWREG_KeyData6_KeyData6_2                  0
    #define   LSb16SHADOWREG_KeyData6_KeyData6_2                  0
    #define       bSHADOWREG_KeyData6_KeyData6_2               32
    #define   MSK32SHADOWREG_KeyData6_KeyData6_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData63                         0x012C

    #define     BA_SHADOWREG_KeyData6_KeyData6_3               0x012C
    #define     B16SHADOWREG_KeyData6_KeyData6_3               0x012C
    #define   LSb32SHADOWREG_KeyData6_KeyData6_3                  0
    #define   LSb16SHADOWREG_KeyData6_KeyData6_3                  0
    #define       bSHADOWREG_KeyData6_KeyData6_3               32
    #define   MSK32SHADOWREG_KeyData6_KeyData6_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyData7                          0x0140

    #define     BA_SHADOWREG_KeyData7_KeyData7_0               0x0140
    #define     B16SHADOWREG_KeyData7_KeyData7_0               0x0140
    #define   LSb32SHADOWREG_KeyData7_KeyData7_0                  0
    #define   LSb16SHADOWREG_KeyData7_KeyData7_0                  0
    #define       bSHADOWREG_KeyData7_KeyData7_0               32
    #define   MSK32SHADOWREG_KeyData7_KeyData7_0                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData71                         0x0144

    #define     BA_SHADOWREG_KeyData7_KeyData7_1               0x0144
    #define     B16SHADOWREG_KeyData7_KeyData7_1               0x0144
    #define   LSb32SHADOWREG_KeyData7_KeyData7_1                  0
    #define   LSb16SHADOWREG_KeyData7_KeyData7_1                  0
    #define       bSHADOWREG_KeyData7_KeyData7_1               32
    #define   MSK32SHADOWREG_KeyData7_KeyData7_1                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData72                         0x0148

    #define     BA_SHADOWREG_KeyData7_KeyData7_2               0x0148
    #define     B16SHADOWREG_KeyData7_KeyData7_2               0x0148
    #define   LSb32SHADOWREG_KeyData7_KeyData7_2                  0
    #define   LSb16SHADOWREG_KeyData7_KeyData7_2                  0
    #define       bSHADOWREG_KeyData7_KeyData7_2               32
    #define   MSK32SHADOWREG_KeyData7_KeyData7_2                  0xFFFFFFFF

    #define     RA_SHADOWREG_KeyData73                         0x014C

    #define     BA_SHADOWREG_KeyData7_KeyData7_3               0x014C
    #define     B16SHADOWREG_KeyData7_KeyData7_3               0x014C
    #define   LSb32SHADOWREG_KeyData7_KeyData7_3                  0
    #define   LSb16SHADOWREG_KeyData7_KeyData7_3                  0
    #define       bSHADOWREG_KeyData7_KeyData7_3               32
    #define   MSK32SHADOWREG_KeyData7_KeyData7_3                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_CheckSum3_0                       0x0160

    #define     BA_SHADOWREG_CheckSum3_0_CheckSum0             0x0160
    #define     B16SHADOWREG_CheckSum3_0_CheckSum0             0x0160
    #define   LSb32SHADOWREG_CheckSum3_0_CheckSum0                0
    #define   LSb16SHADOWREG_CheckSum3_0_CheckSum0                0
    #define       bSHADOWREG_CheckSum3_0_CheckSum0             8
    #define   MSK32SHADOWREG_CheckSum3_0_CheckSum0                0x000000FF

    #define     BA_SHADOWREG_CheckSum3_0_CheckSum1             0x0161
    #define     B16SHADOWREG_CheckSum3_0_CheckSum1             0x0160
    #define   LSb32SHADOWREG_CheckSum3_0_CheckSum1                8
    #define   LSb16SHADOWREG_CheckSum3_0_CheckSum1                8
    #define       bSHADOWREG_CheckSum3_0_CheckSum1             8
    #define   MSK32SHADOWREG_CheckSum3_0_CheckSum1                0x0000FF00

    #define     BA_SHADOWREG_CheckSum3_0_CheckSum2             0x0162
    #define     B16SHADOWREG_CheckSum3_0_CheckSum2             0x0162
    #define   LSb32SHADOWREG_CheckSum3_0_CheckSum2                16
    #define   LSb16SHADOWREG_CheckSum3_0_CheckSum2                0
    #define       bSHADOWREG_CheckSum3_0_CheckSum2             8
    #define   MSK32SHADOWREG_CheckSum3_0_CheckSum2                0x00FF0000

    #define     BA_SHADOWREG_CheckSum3_0_CheckSum3             0x0163
    #define     B16SHADOWREG_CheckSum3_0_CheckSum3             0x0162
    #define   LSb32SHADOWREG_CheckSum3_0_CheckSum3                24
    #define   LSb16SHADOWREG_CheckSum3_0_CheckSum3                8
    #define       bSHADOWREG_CheckSum3_0_CheckSum3             8
    #define   MSK32SHADOWREG_CheckSum3_0_CheckSum3                0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_CheckSum7_4                       0x0170

    #define     BA_SHADOWREG_CheckSum7_4_CheckSum4             0x0170
    #define     B16SHADOWREG_CheckSum7_4_CheckSum4             0x0170
    #define   LSb32SHADOWREG_CheckSum7_4_CheckSum4                0
    #define   LSb16SHADOWREG_CheckSum7_4_CheckSum4                0
    #define       bSHADOWREG_CheckSum7_4_CheckSum4             8
    #define   MSK32SHADOWREG_CheckSum7_4_CheckSum4                0x000000FF

    #define     BA_SHADOWREG_CheckSum7_4_CheckSum5             0x0171
    #define     B16SHADOWREG_CheckSum7_4_CheckSum5             0x0170
    #define   LSb32SHADOWREG_CheckSum7_4_CheckSum5                8
    #define   LSb16SHADOWREG_CheckSum7_4_CheckSum5                8
    #define       bSHADOWREG_CheckSum7_4_CheckSum5             8
    #define   MSK32SHADOWREG_CheckSum7_4_CheckSum5                0x0000FF00

    #define     BA_SHADOWREG_CheckSum7_4_CheckSum6             0x0172
    #define     B16SHADOWREG_CheckSum7_4_CheckSum6             0x0172
    #define   LSb32SHADOWREG_CheckSum7_4_CheckSum6                16
    #define   LSb16SHADOWREG_CheckSum7_4_CheckSum6                0
    #define       bSHADOWREG_CheckSum7_4_CheckSum6             8
    #define   MSK32SHADOWREG_CheckSum7_4_CheckSum6                0x00FF0000

    #define     BA_SHADOWREG_CheckSum7_4_CheckSum7             0x0173
    #define     B16SHADOWREG_CheckSum7_4_CheckSum7             0x0172
    #define   LSb32SHADOWREG_CheckSum7_4_CheckSum7                24
    #define   LSb16SHADOWREG_CheckSum7_4_CheckSum7                8
    #define       bSHADOWREG_CheckSum7_4_CheckSum7             8
    #define   MSK32SHADOWREG_CheckSum7_4_CheckSum7                0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_KeyValid                          0x0180

    #define     BA_SHADOWREG_KeyValid_KeyValid                 0x0180
    #define     B16SHADOWREG_KeyValid_KeyValid                 0x0180
    #define   LSb32SHADOWREG_KeyValid_KeyValid                    0
    #define   LSb16SHADOWREG_KeyValid_KeyValid                    0
    #define       bSHADOWREG_KeyValid_KeyValid                 8
    #define   MSK32SHADOWREG_KeyValid_KeyValid                    0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_SecMode                           0x0190

    #define     BA_SHADOWREG_SecMode_SecMode                   0x0190
    #define     B16SHADOWREG_SecMode_SecMode                   0x0190
    #define   LSb32SHADOWREG_SecMode_SecMode                      0
    #define   LSb16SHADOWREG_SecMode_SecMode                      0
    #define       bSHADOWREG_SecMode_SecMode                   8
    #define   MSK32SHADOWREG_SecMode_SecMode                      0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpOID                       0x0200

    #define     BA_SHADOWREG_V_PubOtpOID_V_PubOtpOID           0x0200
    #define     B16SHADOWREG_V_PubOtpOID_V_PubOtpOID           0x0200
    #define   LSb32SHADOWREG_V_PubOtpOID_V_PubOtpOID              0
    #define   LSb16SHADOWREG_V_PubOtpOID_V_PubOtpOID              0
    #define       bSHADOWREG_V_PubOtpOID_V_PubOtpOID           16
    #define   MSK32SHADOWREG_V_PubOtpOID_V_PubOtpOID              0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpVID                       0x0210

    #define     BA_SHADOWREG_V_PubOtpVID_V_PubOtpVID           0x0210
    #define     B16SHADOWREG_V_PubOtpVID_V_PubOtpVID           0x0210
    #define   LSb32SHADOWREG_V_PubOtpVID_V_PubOtpVID              0
    #define   LSb16SHADOWREG_V_PubOtpVID_V_PubOtpVID              0
    #define       bSHADOWREG_V_PubOtpVID_V_PubOtpVID           16
    #define   MSK32SHADOWREG_V_PubOtpVID_V_PubOtpVID              0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpBID                       0x0230

    #define     BA_SHADOWREG_V_PubOtpBID_V_PubOtpBID           0x0230
    #define     B16SHADOWREG_V_PubOtpBID_V_PubOtpBID           0x0230
    #define   LSb32SHADOWREG_V_PubOtpBID_V_PubOtpBID              0
    #define   LSb16SHADOWREG_V_PubOtpBID_V_PubOtpBID              0
    #define       bSHADOWREG_V_PubOtpBID_V_PubOtpBID           8
    #define   MSK32SHADOWREG_V_PubOtpBID_V_PubOtpBID              0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpRsaIndex                  0x0240

    #define     BA_SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex 0x0240
    #define     B16SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex 0x0240
    #define   LSb32SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex    0
    #define   LSb16SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex    0
    #define       bSHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex 8
    #define   MSK32SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex    0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpMinCofVer                 0x0250

    #define     BA_SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer 0x0250
    #define     B16SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer 0x0250
    #define   LSb32SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer    0
    #define   LSb16SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer    0
    #define       bSHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer 8
    #define   MSK32SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer    0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpGP                        0x0260

    #define     BA_SHADOWREG_V_PubOtpGP_V_PubOtpGP             0x0260
    #define     B16SHADOWREG_V_PubOtpGP_V_PubOtpGP             0x0260
    #define   LSb32SHADOWREG_V_PubOtpGP_V_PubOtpGP                0
    #define   LSb16SHADOWREG_V_PubOtpGP_V_PubOtpGP                0
    #define       bSHADOWREG_V_PubOtpGP_V_PubOtpGP             8
    #define   MSK32SHADOWREG_V_PubOtpGP_V_PubOtpGP                0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpUniqueID3_0               0x0270

    #define     BA_SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0 0x0270
    #define     B16SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0 0x0270
    #define   LSb32SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0    0
    #define   LSb16SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0    0
    #define       bSHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0 32
    #define   MSK32SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_PubOtpUniqueID7_4               0x0280

    #define     BA_SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4 0x0280
    #define     B16SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4 0x0280
    #define   LSb32SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4    0
    #define   LSb16SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4    0
    #define       bSHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4 32
    #define   MSK32SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_ConcurrencyCtl                    0x0290

    #define     BA_SHADOWREG_ConcurrencyCtl_ConcurrencyControl 0x0290
    #define     B16SHADOWREG_ConcurrencyCtl_ConcurrencyControl 0x0290
    #define   LSb32SHADOWREG_ConcurrencyCtl_ConcurrencyControl    0
    #define   LSb16SHADOWREG_ConcurrencyCtl_ConcurrencyControl    0
    #define       bSHADOWREG_ConcurrencyCtl_ConcurrencyControl 3
    #define   MSK32SHADOWREG_ConcurrencyCtl_ConcurrencyControl    0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_V_Secondary_select                0x0300

    #define     BA_SHADOWREG_V_Secondary_select_V_Secondary_select 0x0300
    #define     B16SHADOWREG_V_Secondary_select_V_Secondary_select 0x0300
    #define   LSb32SHADOWREG_V_Secondary_select_V_Secondary_select    0
    #define   LSb16SHADOWREG_V_Secondary_select_V_Secondary_select    0
    #define       bSHADOWREG_V_Secondary_select_V_Secondary_select 3
    #define   MSK32SHADOWREG_V_Secondary_select_V_Secondary_select    0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_OTPWrProtect                      0x0310

    #define     BA_SHADOWREG_OTPWrProtect_OtpWriteProtect      0x0310
    #define     B16SHADOWREG_OTPWrProtect_OtpWriteProtect      0x0310
    #define   LSb32SHADOWREG_OTPWrProtect_OtpWriteProtect         0
    #define   LSb16SHADOWREG_OTPWrProtect_OtpWriteProtect         0
    #define       bSHADOWREG_OTPWrProtect_OtpWriteProtect      1
    #define   MSK32SHADOWREG_OTPWrProtect_OtpWriteProtect         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_AddtitionalValues                 0x0320

    #define     BA_SHADOWREG_AddtitionalValues_AdditionalValues 0x0320
    #define     B16SHADOWREG_AddtitionalValues_AdditionalValues 0x0320
    #define   LSb32SHADOWREG_AddtitionalValues_AdditionalValues    0
    #define   LSb16SHADOWREG_AddtitionalValues_AdditionalValues    0
    #define       bSHADOWREG_AddtitionalValues_AdditionalValues 32
    #define   MSK32SHADOWREG_AddtitionalValues_AdditionalValues    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_CsaVariantsControl                0x0330

    #define     BA_SHADOWREG_CsaVariantsControl_CsaVariantsControl 0x0330
    #define     B16SHADOWREG_CsaVariantsControl_CsaVariantsControl 0x0330
    #define   LSb32SHADOWREG_CsaVariantsControl_CsaVariantsControl    0
    #define   LSb16SHADOWREG_CsaVariantsControl_CsaVariantsControl    0
    #define       bSHADOWREG_CsaVariantsControl_CsaVariantsControl 4
    #define   MSK32SHADOWREG_CsaVariantsControl_CsaVariantsControl    0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_SCFlowControlOn                   0x0340

    #define     BA_SHADOWREG_SCFlowControlOn_SCFlowControlOn   0x0340
    #define     B16SHADOWREG_SCFlowControlOn_SCFlowControlOn   0x0340
    #define   LSb32SHADOWREG_SCFlowControlOn_SCFlowControlOn      0
    #define   LSb16SHADOWREG_SCFlowControlOn_SCFlowControlOn      0
    #define       bSHADOWREG_SCFlowControlOn_SCFlowControlOn   1
    #define   MSK32SHADOWREG_SCFlowControlOn_SCFlowControlOn      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_JtagProtection                    0x0350

    #define     BA_SHADOWREG_JtagProtection_JtagProtection     0x0350
    #define     B16SHADOWREG_JtagProtection_JtagProtection     0x0350
    #define   LSb32SHADOWREG_JtagProtection_JtagProtection        0
    #define   LSb16SHADOWREG_JtagProtection_JtagProtection        0
    #define       bSHADOWREG_JtagProtection_JtagProtection     2
    #define   MSK32SHADOWREG_JtagProtection_JtagProtection        0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_SlowDownCheckOn                   0x0360

    #define     BA_SHADOWREG_SlowDownCheckOn_SlowDownCheckOn   0x0360
    #define     B16SHADOWREG_SlowDownCheckOn_SlowDownCheckOn   0x0360
    #define   LSb32SHADOWREG_SlowDownCheckOn_SlowDownCheckOn      0
    #define   LSb16SHADOWREG_SlowDownCheckOn_SlowDownCheckOn      0
    #define       bSHADOWREG_SlowDownCheckOn_SlowDownCheckOn   1
    #define   MSK32SHADOWREG_SlowDownCheckOn_SlowDownCheckOn      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_SpeedUpCheckOn                    0x0370

    #define     BA_SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn     0x0370
    #define     B16SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn     0x0370
    #define   LSb32SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn        0
    #define   LSb16SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn        0
    #define       bSHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn     1
    #define   MSK32SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_ClockStopCheckOn                  0x0380

    #define     BA_SHADOWREG_ClockStopCheckOn_ClockStopCheckOn 0x0380
    #define     B16SHADOWREG_ClockStopCheckOn_ClockStopCheckOn 0x0380
    #define   LSb32SHADOWREG_ClockStopCheckOn_ClockStopCheckOn    0
    #define   LSb16SHADOWREG_ClockStopCheckOn_ClockStopCheckOn    0
    #define       bSHADOWREG_ClockStopCheckOn_ClockStopCheckOn 1
    #define   MSK32SHADOWREG_ClockStopCheckOn_ClockStopCheckOn    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_TestModeDisable                   0x0390

    #define     BA_SHADOWREG_TestModeDisable_TestModeDisable   0x0390
    #define     B16SHADOWREG_TestModeDisable_TestModeDisable   0x0390
    #define   LSb32SHADOWREG_TestModeDisable_TestModeDisable      0
    #define   LSb16SHADOWREG_TestModeDisable_TestModeDisable      0
    #define       bSHADOWREG_TestModeDisable_TestModeDisable   1
    #define   MSK32SHADOWREG_TestModeDisable_TestModeDisable      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_DVBCPCMLSADisable                 0x0400

    #define     BA_SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable 0x0400
    #define     B16SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable 0x0400
    #define   LSb32SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable    0
    #define   LSb16SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable    0
    #define       bSHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable 1
    #define   MSK32SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_SHADOWREG_ShadowCopyDone                    0x0410

    #define     BA_SHADOWREG_ShadowCopyDone_ShadowCopyDone     0x0410
    #define     B16SHADOWREG_ShadowCopyDone_ShadowCopyDone     0x0410
    #define   LSb32SHADOWREG_ShadowCopyDone_ShadowCopyDone        0
    #define   LSb16SHADOWREG_ShadowCopyDone_ShadowCopyDone        0
    #define       bSHADOWREG_ShadowCopyDone_ShadowCopyDone     1
    #define   MSK32SHADOWREG_ShadowCopyDone_ShadowCopyDone        0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SHADOWREG {
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData0_KeyData0_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData0_KeyData0_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData0                          {\
            UNSG32 uKeyData0_KeyData0_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData0;
            struct w32SHADOWREG_KeyData0;
          };
    #define   GET32SHADOWREG_KeyData0_KeyData0_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData0_KeyData0_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData01                         {\
            UNSG32 uKeyData0_KeyData0_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData01;
            struct w32SHADOWREG_KeyData01;
          };
    #define   GET32SHADOWREG_KeyData0_KeyData0_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData0_KeyData0_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData02                         {\
            UNSG32 uKeyData0_KeyData0_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData02;
            struct w32SHADOWREG_KeyData02;
          };
    #define   GET32SHADOWREG_KeyData0_KeyData0_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData0_KeyData0_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData03                         {\
            UNSG32 uKeyData0_KeyData0_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData03;
            struct w32SHADOWREG_KeyData03;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx10                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData1_KeyData1_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData1_KeyData1_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData1                          {\
            UNSG32 uKeyData1_KeyData1_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData1;
            struct w32SHADOWREG_KeyData1;
          };
    #define   GET32SHADOWREG_KeyData1_KeyData1_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData1_KeyData1_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData11                         {\
            UNSG32 uKeyData1_KeyData1_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData11;
            struct w32SHADOWREG_KeyData11;
          };
    #define   GET32SHADOWREG_KeyData1_KeyData1_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData1_KeyData1_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData12                         {\
            UNSG32 uKeyData1_KeyData1_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData12;
            struct w32SHADOWREG_KeyData12;
          };
    #define   GET32SHADOWREG_KeyData1_KeyData1_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData1_KeyData1_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData13                         {\
            UNSG32 uKeyData1_KeyData1_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData13;
            struct w32SHADOWREG_KeyData13;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx30                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData2_KeyData2_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData2_KeyData2_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData2                          {\
            UNSG32 uKeyData2_KeyData2_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData2;
            struct w32SHADOWREG_KeyData2;
          };
    #define   GET32SHADOWREG_KeyData2_KeyData2_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData2_KeyData2_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData21                         {\
            UNSG32 uKeyData2_KeyData2_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData21;
            struct w32SHADOWREG_KeyData21;
          };
    #define   GET32SHADOWREG_KeyData2_KeyData2_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData2_KeyData2_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData22                         {\
            UNSG32 uKeyData2_KeyData2_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData22;
            struct w32SHADOWREG_KeyData22;
          };
    #define   GET32SHADOWREG_KeyData2_KeyData2_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData2_KeyData2_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData23                         {\
            UNSG32 uKeyData2_KeyData2_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData23;
            struct w32SHADOWREG_KeyData23;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx50                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData3_KeyData3_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData3_KeyData3_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData3                          {\
            UNSG32 uKeyData3_KeyData3_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData3;
            struct w32SHADOWREG_KeyData3;
          };
    #define   GET32SHADOWREG_KeyData3_KeyData3_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData3_KeyData3_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData31                         {\
            UNSG32 uKeyData3_KeyData3_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData31;
            struct w32SHADOWREG_KeyData31;
          };
    #define   GET32SHADOWREG_KeyData3_KeyData3_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData3_KeyData3_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData32                         {\
            UNSG32 uKeyData3_KeyData3_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData32;
            struct w32SHADOWREG_KeyData32;
          };
    #define   GET32SHADOWREG_KeyData3_KeyData3_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData3_KeyData3_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData33                         {\
            UNSG32 uKeyData3_KeyData3_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData33;
            struct w32SHADOWREG_KeyData33;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx70                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData4_KeyData4_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData4_KeyData4_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData4                          {\
            UNSG32 uKeyData4_KeyData4_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData4;
            struct w32SHADOWREG_KeyData4;
          };
    #define   GET32SHADOWREG_KeyData4_KeyData4_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData4_KeyData4_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData41                         {\
            UNSG32 uKeyData4_KeyData4_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData41;
            struct w32SHADOWREG_KeyData41;
          };
    #define   GET32SHADOWREG_KeyData4_KeyData4_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData4_KeyData4_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData42                         {\
            UNSG32 uKeyData4_KeyData4_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData42;
            struct w32SHADOWREG_KeyData42;
          };
    #define   GET32SHADOWREG_KeyData4_KeyData4_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData4_KeyData4_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData43                         {\
            UNSG32 uKeyData4_KeyData4_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData43;
            struct w32SHADOWREG_KeyData43;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx90                                     [112];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData5_KeyData5_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData5_KeyData5_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData5                          {\
            UNSG32 uKeyData5_KeyData5_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData5;
            struct w32SHADOWREG_KeyData5;
          };
    #define   GET32SHADOWREG_KeyData5_KeyData5_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData5_KeyData5_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData51                         {\
            UNSG32 uKeyData5_KeyData5_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData51;
            struct w32SHADOWREG_KeyData51;
          };
    #define   GET32SHADOWREG_KeyData5_KeyData5_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData5_KeyData5_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData52                         {\
            UNSG32 uKeyData5_KeyData5_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData52;
            struct w32SHADOWREG_KeyData52;
          };
    #define   GET32SHADOWREG_KeyData5_KeyData5_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData5_KeyData5_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData53                         {\
            UNSG32 uKeyData5_KeyData5_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData53;
            struct w32SHADOWREG_KeyData53;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx110                                    [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData6_KeyData6_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData6_KeyData6_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData6                          {\
            UNSG32 uKeyData6_KeyData6_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData6;
            struct w32SHADOWREG_KeyData6;
          };
    #define   GET32SHADOWREG_KeyData6_KeyData6_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData6_KeyData6_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData61                         {\
            UNSG32 uKeyData6_KeyData6_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData61;
            struct w32SHADOWREG_KeyData61;
          };
    #define   GET32SHADOWREG_KeyData6_KeyData6_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData6_KeyData6_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData62                         {\
            UNSG32 uKeyData6_KeyData6_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData62;
            struct w32SHADOWREG_KeyData62;
          };
    #define   GET32SHADOWREG_KeyData6_KeyData6_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData6_KeyData6_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData63                         {\
            UNSG32 uKeyData6_KeyData6_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData63;
            struct w32SHADOWREG_KeyData63;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx130                                    [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyData7_KeyData7_0(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData7_KeyData7_0(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData7                          {\
            UNSG32 uKeyData7_KeyData7_0                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData7;
            struct w32SHADOWREG_KeyData7;
          };
    #define   GET32SHADOWREG_KeyData7_KeyData7_1(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData7_KeyData7_1(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData71                         {\
            UNSG32 uKeyData7_KeyData7_1                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData71;
            struct w32SHADOWREG_KeyData71;
          };
    #define   GET32SHADOWREG_KeyData7_KeyData7_2(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData7_KeyData7_2(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData72                         {\
            UNSG32 uKeyData7_KeyData7_2                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData72;
            struct w32SHADOWREG_KeyData72;
          };
    #define   GET32SHADOWREG_KeyData7_KeyData7_3(r32)          _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_KeyData7_KeyData7_3(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_KeyData73                         {\
            UNSG32 uKeyData7_KeyData7_3                        : 32;\
          }
    union { UNSG32 u32SHADOWREG_KeyData73;
            struct w32SHADOWREG_KeyData73;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx150                                    [16];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_CheckSum3_0_CheckSum0(r32)        _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_CheckSum3_0_CheckSum0(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_CheckSum3_0_CheckSum0(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_CheckSum3_0_CheckSum0(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32SHADOWREG_CheckSum3_0_CheckSum1(r32)        _BFGET_(r32,15, 8)
    #define   SET32SHADOWREG_CheckSum3_0_CheckSum1(r32,v)      _BFSET_(r32,15, 8,v)
    #define   GET16SHADOWREG_CheckSum3_0_CheckSum1(r16)        _BFGET_(r16,15, 8)
    #define   SET16SHADOWREG_CheckSum3_0_CheckSum1(r16,v)      _BFSET_(r16,15, 8,v)

    #define   GET32SHADOWREG_CheckSum3_0_CheckSum2(r32)        _BFGET_(r32,23,16)
    #define   SET32SHADOWREG_CheckSum3_0_CheckSum2(r32,v)      _BFSET_(r32,23,16,v)
    #define   GET16SHADOWREG_CheckSum3_0_CheckSum2(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_CheckSum3_0_CheckSum2(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32SHADOWREG_CheckSum3_0_CheckSum3(r32)        _BFGET_(r32,31,24)
    #define   SET32SHADOWREG_CheckSum3_0_CheckSum3(r32,v)      _BFSET_(r32,31,24,v)
    #define   GET16SHADOWREG_CheckSum3_0_CheckSum3(r16)        _BFGET_(r16,15, 8)
    #define   SET16SHADOWREG_CheckSum3_0_CheckSum3(r16,v)      _BFSET_(r16,15, 8,v)

    #define     w32SHADOWREG_CheckSum3_0                       {\
            UNSG32 uCheckSum3_0_CheckSum0                      :  8;\
            UNSG32 uCheckSum3_0_CheckSum1                      :  8;\
            UNSG32 uCheckSum3_0_CheckSum2                      :  8;\
            UNSG32 uCheckSum3_0_CheckSum3                      :  8;\
          }
    union { UNSG32 u32SHADOWREG_CheckSum3_0;
            struct w32SHADOWREG_CheckSum3_0;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx164                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_CheckSum7_4_CheckSum4(r32)        _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_CheckSum7_4_CheckSum4(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_CheckSum7_4_CheckSum4(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_CheckSum7_4_CheckSum4(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32SHADOWREG_CheckSum7_4_CheckSum5(r32)        _BFGET_(r32,15, 8)
    #define   SET32SHADOWREG_CheckSum7_4_CheckSum5(r32,v)      _BFSET_(r32,15, 8,v)
    #define   GET16SHADOWREG_CheckSum7_4_CheckSum5(r16)        _BFGET_(r16,15, 8)
    #define   SET16SHADOWREG_CheckSum7_4_CheckSum5(r16,v)      _BFSET_(r16,15, 8,v)

    #define   GET32SHADOWREG_CheckSum7_4_CheckSum6(r32)        _BFGET_(r32,23,16)
    #define   SET32SHADOWREG_CheckSum7_4_CheckSum6(r32,v)      _BFSET_(r32,23,16,v)
    #define   GET16SHADOWREG_CheckSum7_4_CheckSum6(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_CheckSum7_4_CheckSum6(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32SHADOWREG_CheckSum7_4_CheckSum7(r32)        _BFGET_(r32,31,24)
    #define   SET32SHADOWREG_CheckSum7_4_CheckSum7(r32,v)      _BFSET_(r32,31,24,v)
    #define   GET16SHADOWREG_CheckSum7_4_CheckSum7(r16)        _BFGET_(r16,15, 8)
    #define   SET16SHADOWREG_CheckSum7_4_CheckSum7(r16,v)      _BFSET_(r16,15, 8,v)

    #define     w32SHADOWREG_CheckSum7_4                       {\
            UNSG32 uCheckSum7_4_CheckSum4                      :  8;\
            UNSG32 uCheckSum7_4_CheckSum5                      :  8;\
            UNSG32 uCheckSum7_4_CheckSum6                      :  8;\
            UNSG32 uCheckSum7_4_CheckSum7                      :  8;\
          }
    union { UNSG32 u32SHADOWREG_CheckSum7_4;
            struct w32SHADOWREG_CheckSum7_4;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx174                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_KeyValid_KeyValid(r32)            _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_KeyValid_KeyValid(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_KeyValid_KeyValid(r16)            _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_KeyValid_KeyValid(r16,v)          _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_KeyValid                          {\
            UNSG32 uKeyValid_KeyValid                          :  8;\
            UNSG32 RSVDx180_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_KeyValid;
            struct w32SHADOWREG_KeyValid;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx184                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_SecMode_SecMode(r32)              _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_SecMode_SecMode(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_SecMode_SecMode(r16)              _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_SecMode_SecMode(r16,v)            _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_SecMode                           {\
            UNSG32 uSecMode_SecMode                            :  8;\
            UNSG32 RSVDx190_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_SecMode;
            struct w32SHADOWREG_SecMode;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx194                                    [108];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpOID_V_PubOtpOID(r32)      _BFGET_(r32,15, 0)
    #define   SET32SHADOWREG_V_PubOtpOID_V_PubOtpOID(r32,v)    _BFSET_(r32,15, 0,v)
    #define   GET16SHADOWREG_V_PubOtpOID_V_PubOtpOID(r16)      _BFGET_(r16,15, 0)
    #define   SET16SHADOWREG_V_PubOtpOID_V_PubOtpOID(r16,v)    _BFSET_(r16,15, 0,v)

    #define     w32SHADOWREG_V_PubOtpOID                       {\
            UNSG32 uV_PubOtpOID_V_PubOtpOID                    : 16;\
            UNSG32 RSVDx200_b16                                : 16;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpOID;
            struct w32SHADOWREG_V_PubOtpOID;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx204                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpVID_V_PubOtpVID(r32)      _BFGET_(r32,15, 0)
    #define   SET32SHADOWREG_V_PubOtpVID_V_PubOtpVID(r32,v)    _BFSET_(r32,15, 0,v)
    #define   GET16SHADOWREG_V_PubOtpVID_V_PubOtpVID(r16)      _BFGET_(r16,15, 0)
    #define   SET16SHADOWREG_V_PubOtpVID_V_PubOtpVID(r16,v)    _BFSET_(r16,15, 0,v)

    #define     w32SHADOWREG_V_PubOtpVID                       {\
            UNSG32 uV_PubOtpVID_V_PubOtpVID                    : 16;\
            UNSG32 RSVDx210_b16                                : 16;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpVID;
            struct w32SHADOWREG_V_PubOtpVID;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx214                                    [28];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpBID_V_PubOtpBID(r32)      _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_V_PubOtpBID_V_PubOtpBID(r32,v)    _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_V_PubOtpBID_V_PubOtpBID(r16)      _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_V_PubOtpBID_V_PubOtpBID(r16,v)    _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_V_PubOtpBID                       {\
            UNSG32 uV_PubOtpBID_V_PubOtpBID                    :  8;\
            UNSG32 RSVDx230_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpBID;
            struct w32SHADOWREG_V_PubOtpBID;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx234                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex(r32) _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex(r32,v) _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex(r16) _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_V_PubOtpRsaIndex_V_PubOtpRsaIndex(r16,v) _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_V_PubOtpRsaIndex                  {\
            UNSG32 uV_PubOtpRsaIndex_V_PubOtpRsaIndex          :  8;\
            UNSG32 RSVDx240_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpRsaIndex;
            struct w32SHADOWREG_V_PubOtpRsaIndex;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx244                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer(r32) _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer(r32,v) _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer(r16) _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_V_PubOtpMinCofVer_V_PubOtpMinConfVer(r16,v) _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_V_PubOtpMinCofVer                 {\
            UNSG32 uV_PubOtpMinCofVer_V_PubOtpMinConfVer       :  8;\
            UNSG32 RSVDx250_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpMinCofVer;
            struct w32SHADOWREG_V_PubOtpMinCofVer;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx254                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpGP_V_PubOtpGP(r32)        _BFGET_(r32, 7, 0)
    #define   SET32SHADOWREG_V_PubOtpGP_V_PubOtpGP(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16SHADOWREG_V_PubOtpGP_V_PubOtpGP(r16)        _BFGET_(r16, 7, 0)
    #define   SET16SHADOWREG_V_PubOtpGP_V_PubOtpGP(r16,v)      _BFSET_(r16, 7, 0,v)

    #define     w32SHADOWREG_V_PubOtpGP                        {\
            UNSG32 uV_PubOtpGP_V_PubOtpGP                      :  8;\
            UNSG32 RSVDx260_b8                                 : 24;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpGP;
            struct w32SHADOWREG_V_PubOtpGP;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx264                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0(r32) _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_V_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_V_PubOtpUniqueID3_0               {\
            UNSG32 uV_PubOtpUniqueID3_0_V_PubOtpUniqueID3_0    : 32;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpUniqueID3_0;
            struct w32SHADOWREG_V_PubOtpUniqueID3_0;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx274                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4(r32) _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_V_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_V_PubOtpUniqueID7_4               {\
            UNSG32 uV_PubOtpUniqueID7_4_V_PubOtpUniqueID7_4    : 32;\
          }
    union { UNSG32 u32SHADOWREG_V_PubOtpUniqueID7_4;
            struct w32SHADOWREG_V_PubOtpUniqueID7_4;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx284                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_ConcurrencyCtl_ConcurrencyControl(r32) _BFGET_(r32, 2, 0)
    #define   SET32SHADOWREG_ConcurrencyCtl_ConcurrencyControl(r32,v) _BFSET_(r32, 2, 0,v)
    #define   GET16SHADOWREG_ConcurrencyCtl_ConcurrencyControl(r16) _BFGET_(r16, 2, 0)
    #define   SET16SHADOWREG_ConcurrencyCtl_ConcurrencyControl(r16,v) _BFSET_(r16, 2, 0,v)

    #define     w32SHADOWREG_ConcurrencyCtl                    {\
            UNSG32 uConcurrencyCtl_ConcurrencyControl          :  3;\
            UNSG32 RSVDx290_b3                                 : 29;\
          }
    union { UNSG32 u32SHADOWREG_ConcurrencyCtl;
            struct w32SHADOWREG_ConcurrencyCtl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx294                                    [108];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_V_Secondary_select_V_Secondary_select(r32) _BFGET_(r32, 2, 0)
    #define   SET32SHADOWREG_V_Secondary_select_V_Secondary_select(r32,v) _BFSET_(r32, 2, 0,v)
    #define   GET16SHADOWREG_V_Secondary_select_V_Secondary_select(r16) _BFGET_(r16, 2, 0)
    #define   SET16SHADOWREG_V_Secondary_select_V_Secondary_select(r16,v) _BFSET_(r16, 2, 0,v)

    #define     w32SHADOWREG_V_Secondary_select                {\
            UNSG32 uV_Secondary_select_V_Secondary_select      :  3;\
            UNSG32 RSVDx300_b3                                 : 29;\
          }
    union { UNSG32 u32SHADOWREG_V_Secondary_select;
            struct w32SHADOWREG_V_Secondary_select;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx304                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_OTPWrProtect_OtpWriteProtect(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_OTPWrProtect_OtpWriteProtect(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_OTPWrProtect_OtpWriteProtect(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_OTPWrProtect_OtpWriteProtect(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_OTPWrProtect                      {\
            UNSG32 uOTPWrProtect_OtpWriteProtect               :  1;\
            UNSG32 RSVDx310_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_OTPWrProtect;
            struct w32SHADOWREG_OTPWrProtect;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx314                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_AddtitionalValues_AdditionalValues(r32) _BFGET_(r32,31, 0)
    #define   SET32SHADOWREG_AddtitionalValues_AdditionalValues(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32SHADOWREG_AddtitionalValues                 {\
            UNSG32 uAddtitionalValues_AdditionalValues         : 32;\
          }
    union { UNSG32 u32SHADOWREG_AddtitionalValues;
            struct w32SHADOWREG_AddtitionalValues;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx324                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_CsaVariantsControl_CsaVariantsControl(r32) _BFGET_(r32, 3, 0)
    #define   SET32SHADOWREG_CsaVariantsControl_CsaVariantsControl(r32,v) _BFSET_(r32, 3, 0,v)
    #define   GET16SHADOWREG_CsaVariantsControl_CsaVariantsControl(r16) _BFGET_(r16, 3, 0)
    #define   SET16SHADOWREG_CsaVariantsControl_CsaVariantsControl(r16,v) _BFSET_(r16, 3, 0,v)

    #define     w32SHADOWREG_CsaVariantsControl                {\
            UNSG32 uCsaVariantsControl_CsaVariantsControl      :  4;\
            UNSG32 RSVDx330_b4                                 : 28;\
          }
    union { UNSG32 u32SHADOWREG_CsaVariantsControl;
            struct w32SHADOWREG_CsaVariantsControl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx334                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_SCFlowControlOn_SCFlowControlOn(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_SCFlowControlOn_SCFlowControlOn(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_SCFlowControlOn_SCFlowControlOn(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_SCFlowControlOn_SCFlowControlOn(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_SCFlowControlOn                   {\
            UNSG32 uSCFlowControlOn_SCFlowControlOn            :  1;\
            UNSG32 RSVDx340_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_SCFlowControlOn;
            struct w32SHADOWREG_SCFlowControlOn;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx344                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_JtagProtection_JtagProtection(r32) _BFGET_(r32, 1, 0)
    #define   SET32SHADOWREG_JtagProtection_JtagProtection(r32,v) _BFSET_(r32, 1, 0,v)
    #define   GET16SHADOWREG_JtagProtection_JtagProtection(r16) _BFGET_(r16, 1, 0)
    #define   SET16SHADOWREG_JtagProtection_JtagProtection(r16,v) _BFSET_(r16, 1, 0,v)

    #define     w32SHADOWREG_JtagProtection                    {\
            UNSG32 uJtagProtection_JtagProtection              :  2;\
            UNSG32 RSVDx350_b2                                 : 30;\
          }
    union { UNSG32 u32SHADOWREG_JtagProtection;
            struct w32SHADOWREG_JtagProtection;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx354                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_SlowDownCheckOn_SlowDownCheckOn(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_SlowDownCheckOn_SlowDownCheckOn(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_SlowDownCheckOn_SlowDownCheckOn(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_SlowDownCheckOn_SlowDownCheckOn(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_SlowDownCheckOn                   {\
            UNSG32 uSlowDownCheckOn_SlowDownCheckOn            :  1;\
            UNSG32 RSVDx360_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_SlowDownCheckOn;
            struct w32SHADOWREG_SlowDownCheckOn;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx364                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_SpeedUpCheckOn_SpeedUpCheckOn(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_SpeedUpCheckOn                    {\
            UNSG32 uSpeedUpCheckOn_SpeedUpCheckOn              :  1;\
            UNSG32 RSVDx370_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_SpeedUpCheckOn;
            struct w32SHADOWREG_SpeedUpCheckOn;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx374                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_ClockStopCheckOn_ClockStopCheckOn(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_ClockStopCheckOn_ClockStopCheckOn(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_ClockStopCheckOn_ClockStopCheckOn(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_ClockStopCheckOn_ClockStopCheckOn(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_ClockStopCheckOn                  {\
            UNSG32 uClockStopCheckOn_ClockStopCheckOn          :  1;\
            UNSG32 RSVDx380_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_ClockStopCheckOn;
            struct w32SHADOWREG_ClockStopCheckOn;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx384                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_TestModeDisable_TestModeDisable(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_TestModeDisable_TestModeDisable(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_TestModeDisable_TestModeDisable(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_TestModeDisable_TestModeDisable(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_TestModeDisable                   {\
            UNSG32 uTestModeDisable_TestModeDisable            :  1;\
            UNSG32 RSVDx390_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_TestModeDisable;
            struct w32SHADOWREG_TestModeDisable;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx394                                    [108];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_DVBCPCMLSADisable_DVBCPCMLSADisable(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_DVBCPCMLSADisable                 {\
            UNSG32 uDVBCPCMLSADisable_DVBCPCMLSADisable        :  1;\
            UNSG32 RSVDx400_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_DVBCPCMLSADisable;
            struct w32SHADOWREG_DVBCPCMLSADisable;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx404                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32SHADOWREG_ShadowCopyDone_ShadowCopyDone(r32) _BFGET_(r32, 0, 0)
    #define   SET32SHADOWREG_ShadowCopyDone_ShadowCopyDone(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16SHADOWREG_ShadowCopyDone_ShadowCopyDone(r16) _BFGET_(r16, 0, 0)
    #define   SET16SHADOWREG_ShadowCopyDone_ShadowCopyDone(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32SHADOWREG_ShadowCopyDone                    {\
            UNSG32 uShadowCopyDone_ShadowCopyDone              :  1;\
            UNSG32 RSVDx410_b1                                 : 31;\
          }
    union { UNSG32 u32SHADOWREG_ShadowCopyDone;
            struct w32SHADOWREG_ShadowCopyDone;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SHADOWREG;

    typedef union  T32SHADOWREG_KeyData0
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData0;
                 } T32SHADOWREG_KeyData0;
    typedef union  T32SHADOWREG_KeyData01
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData01;
                 } T32SHADOWREG_KeyData01;
    typedef union  T32SHADOWREG_KeyData02
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData02;
                 } T32SHADOWREG_KeyData02;
    typedef union  T32SHADOWREG_KeyData03
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData03;
                 } T32SHADOWREG_KeyData03;
    typedef union  T32SHADOWREG_KeyData1
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData1;
                 } T32SHADOWREG_KeyData1;
    typedef union  T32SHADOWREG_KeyData11
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData11;
                 } T32SHADOWREG_KeyData11;
    typedef union  T32SHADOWREG_KeyData12
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData12;
                 } T32SHADOWREG_KeyData12;
    typedef union  T32SHADOWREG_KeyData13
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData13;
                 } T32SHADOWREG_KeyData13;
    typedef union  T32SHADOWREG_KeyData2
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData2;
                 } T32SHADOWREG_KeyData2;
    typedef union  T32SHADOWREG_KeyData21
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData21;
                 } T32SHADOWREG_KeyData21;
    typedef union  T32SHADOWREG_KeyData22
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData22;
                 } T32SHADOWREG_KeyData22;
    typedef union  T32SHADOWREG_KeyData23
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData23;
                 } T32SHADOWREG_KeyData23;
    typedef union  T32SHADOWREG_KeyData3
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData3;
                 } T32SHADOWREG_KeyData3;
    typedef union  T32SHADOWREG_KeyData31
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData31;
                 } T32SHADOWREG_KeyData31;
    typedef union  T32SHADOWREG_KeyData32
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData32;
                 } T32SHADOWREG_KeyData32;
    typedef union  T32SHADOWREG_KeyData33
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData33;
                 } T32SHADOWREG_KeyData33;
    typedef union  T32SHADOWREG_KeyData4
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData4;
                 } T32SHADOWREG_KeyData4;
    typedef union  T32SHADOWREG_KeyData41
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData41;
                 } T32SHADOWREG_KeyData41;
    typedef union  T32SHADOWREG_KeyData42
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData42;
                 } T32SHADOWREG_KeyData42;
    typedef union  T32SHADOWREG_KeyData43
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData43;
                 } T32SHADOWREG_KeyData43;
    typedef union  T32SHADOWREG_KeyData5
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData5;
                 } T32SHADOWREG_KeyData5;
    typedef union  T32SHADOWREG_KeyData51
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData51;
                 } T32SHADOWREG_KeyData51;
    typedef union  T32SHADOWREG_KeyData52
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData52;
                 } T32SHADOWREG_KeyData52;
    typedef union  T32SHADOWREG_KeyData53
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData53;
                 } T32SHADOWREG_KeyData53;
    typedef union  T32SHADOWREG_KeyData6
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData6;
                 } T32SHADOWREG_KeyData6;
    typedef union  T32SHADOWREG_KeyData61
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData61;
                 } T32SHADOWREG_KeyData61;
    typedef union  T32SHADOWREG_KeyData62
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData62;
                 } T32SHADOWREG_KeyData62;
    typedef union  T32SHADOWREG_KeyData63
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData63;
                 } T32SHADOWREG_KeyData63;
    typedef union  T32SHADOWREG_KeyData7
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData7;
                 } T32SHADOWREG_KeyData7;
    typedef union  T32SHADOWREG_KeyData71
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData71;
                 } T32SHADOWREG_KeyData71;
    typedef union  T32SHADOWREG_KeyData72
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData72;
                 } T32SHADOWREG_KeyData72;
    typedef union  T32SHADOWREG_KeyData73
          { UNSG32 u32;
            struct w32SHADOWREG_KeyData73;
                 } T32SHADOWREG_KeyData73;
    typedef union  T32SHADOWREG_CheckSum3_0
          { UNSG32 u32;
            struct w32SHADOWREG_CheckSum3_0;
                 } T32SHADOWREG_CheckSum3_0;
    typedef union  T32SHADOWREG_CheckSum7_4
          { UNSG32 u32;
            struct w32SHADOWREG_CheckSum7_4;
                 } T32SHADOWREG_CheckSum7_4;
    typedef union  T32SHADOWREG_KeyValid
          { UNSG32 u32;
            struct w32SHADOWREG_KeyValid;
                 } T32SHADOWREG_KeyValid;
    typedef union  T32SHADOWREG_SecMode
          { UNSG32 u32;
            struct w32SHADOWREG_SecMode;
                 } T32SHADOWREG_SecMode;
    typedef union  T32SHADOWREG_V_PubOtpOID
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpOID;
                 } T32SHADOWREG_V_PubOtpOID;
    typedef union  T32SHADOWREG_V_PubOtpVID
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpVID;
                 } T32SHADOWREG_V_PubOtpVID;
    typedef union  T32SHADOWREG_V_PubOtpBID
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpBID;
                 } T32SHADOWREG_V_PubOtpBID;
    typedef union  T32SHADOWREG_V_PubOtpRsaIndex
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpRsaIndex;
                 } T32SHADOWREG_V_PubOtpRsaIndex;
    typedef union  T32SHADOWREG_V_PubOtpMinCofVer
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpMinCofVer;
                 } T32SHADOWREG_V_PubOtpMinCofVer;
    typedef union  T32SHADOWREG_V_PubOtpGP
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpGP;
                 } T32SHADOWREG_V_PubOtpGP;
    typedef union  T32SHADOWREG_V_PubOtpUniqueID3_0
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpUniqueID3_0;
                 } T32SHADOWREG_V_PubOtpUniqueID3_0;
    typedef union  T32SHADOWREG_V_PubOtpUniqueID7_4
          { UNSG32 u32;
            struct w32SHADOWREG_V_PubOtpUniqueID7_4;
                 } T32SHADOWREG_V_PubOtpUniqueID7_4;
    typedef union  T32SHADOWREG_ConcurrencyCtl
          { UNSG32 u32;
            struct w32SHADOWREG_ConcurrencyCtl;
                 } T32SHADOWREG_ConcurrencyCtl;
    typedef union  T32SHADOWREG_V_Secondary_select
          { UNSG32 u32;
            struct w32SHADOWREG_V_Secondary_select;
                 } T32SHADOWREG_V_Secondary_select;
    typedef union  T32SHADOWREG_OTPWrProtect
          { UNSG32 u32;
            struct w32SHADOWREG_OTPWrProtect;
                 } T32SHADOWREG_OTPWrProtect;
    typedef union  T32SHADOWREG_AddtitionalValues
          { UNSG32 u32;
            struct w32SHADOWREG_AddtitionalValues;
                 } T32SHADOWREG_AddtitionalValues;
    typedef union  T32SHADOWREG_CsaVariantsControl
          { UNSG32 u32;
            struct w32SHADOWREG_CsaVariantsControl;
                 } T32SHADOWREG_CsaVariantsControl;
    typedef union  T32SHADOWREG_SCFlowControlOn
          { UNSG32 u32;
            struct w32SHADOWREG_SCFlowControlOn;
                 } T32SHADOWREG_SCFlowControlOn;
    typedef union  T32SHADOWREG_JtagProtection
          { UNSG32 u32;
            struct w32SHADOWREG_JtagProtection;
                 } T32SHADOWREG_JtagProtection;
    typedef union  T32SHADOWREG_SlowDownCheckOn
          { UNSG32 u32;
            struct w32SHADOWREG_SlowDownCheckOn;
                 } T32SHADOWREG_SlowDownCheckOn;
    typedef union  T32SHADOWREG_SpeedUpCheckOn
          { UNSG32 u32;
            struct w32SHADOWREG_SpeedUpCheckOn;
                 } T32SHADOWREG_SpeedUpCheckOn;
    typedef union  T32SHADOWREG_ClockStopCheckOn
          { UNSG32 u32;
            struct w32SHADOWREG_ClockStopCheckOn;
                 } T32SHADOWREG_ClockStopCheckOn;
    typedef union  T32SHADOWREG_TestModeDisable
          { UNSG32 u32;
            struct w32SHADOWREG_TestModeDisable;
                 } T32SHADOWREG_TestModeDisable;
    typedef union  T32SHADOWREG_DVBCPCMLSADisable
          { UNSG32 u32;
            struct w32SHADOWREG_DVBCPCMLSADisable;
                 } T32SHADOWREG_DVBCPCMLSADisable;
    typedef union  T32SHADOWREG_ShadowCopyDone
          { UNSG32 u32;
            struct w32SHADOWREG_ShadowCopyDone;
                 } T32SHADOWREG_ShadowCopyDone;
    ///////////////////////////////////////////////////////////

    typedef union  TSHADOWREG_KeyData0
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData0;
            struct w32SHADOWREG_KeyData01;
            struct w32SHADOWREG_KeyData02;
            struct w32SHADOWREG_KeyData03;
                   };
                 } TSHADOWREG_KeyData0;
    typedef union  TSHADOWREG_KeyData1
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData1;
            struct w32SHADOWREG_KeyData11;
            struct w32SHADOWREG_KeyData12;
            struct w32SHADOWREG_KeyData13;
                   };
                 } TSHADOWREG_KeyData1;
    typedef union  TSHADOWREG_KeyData2
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData2;
            struct w32SHADOWREG_KeyData21;
            struct w32SHADOWREG_KeyData22;
            struct w32SHADOWREG_KeyData23;
                   };
                 } TSHADOWREG_KeyData2;
    typedef union  TSHADOWREG_KeyData3
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData3;
            struct w32SHADOWREG_KeyData31;
            struct w32SHADOWREG_KeyData32;
            struct w32SHADOWREG_KeyData33;
                   };
                 } TSHADOWREG_KeyData3;
    typedef union  TSHADOWREG_KeyData4
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData4;
            struct w32SHADOWREG_KeyData41;
            struct w32SHADOWREG_KeyData42;
            struct w32SHADOWREG_KeyData43;
                   };
                 } TSHADOWREG_KeyData4;
    typedef union  TSHADOWREG_KeyData5
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData5;
            struct w32SHADOWREG_KeyData51;
            struct w32SHADOWREG_KeyData52;
            struct w32SHADOWREG_KeyData53;
                   };
                 } TSHADOWREG_KeyData5;
    typedef union  TSHADOWREG_KeyData6
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData6;
            struct w32SHADOWREG_KeyData61;
            struct w32SHADOWREG_KeyData62;
            struct w32SHADOWREG_KeyData63;
                   };
                 } TSHADOWREG_KeyData6;
    typedef union  TSHADOWREG_KeyData7
          { UNSG32 u32[4];
            struct {
            struct w32SHADOWREG_KeyData7;
            struct w32SHADOWREG_KeyData71;
            struct w32SHADOWREG_KeyData72;
            struct w32SHADOWREG_KeyData73;
                   };
                 } TSHADOWREG_KeyData7;
    typedef union  TSHADOWREG_CheckSum3_0
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_CheckSum3_0;
                   };
                 } TSHADOWREG_CheckSum3_0;
    typedef union  TSHADOWREG_CheckSum7_4
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_CheckSum7_4;
                   };
                 } TSHADOWREG_CheckSum7_4;
    typedef union  TSHADOWREG_KeyValid
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_KeyValid;
                   };
                 } TSHADOWREG_KeyValid;
    typedef union  TSHADOWREG_SecMode
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_SecMode;
                   };
                 } TSHADOWREG_SecMode;
    typedef union  TSHADOWREG_V_PubOtpOID
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpOID;
                   };
                 } TSHADOWREG_V_PubOtpOID;
    typedef union  TSHADOWREG_V_PubOtpVID
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpVID;
                   };
                 } TSHADOWREG_V_PubOtpVID;
    typedef union  TSHADOWREG_V_PubOtpBID
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpBID;
                   };
                 } TSHADOWREG_V_PubOtpBID;
    typedef union  TSHADOWREG_V_PubOtpRsaIndex
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpRsaIndex;
                   };
                 } TSHADOWREG_V_PubOtpRsaIndex;
    typedef union  TSHADOWREG_V_PubOtpMinCofVer
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpMinCofVer;
                   };
                 } TSHADOWREG_V_PubOtpMinCofVer;
    typedef union  TSHADOWREG_V_PubOtpGP
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpGP;
                   };
                 } TSHADOWREG_V_PubOtpGP;
    typedef union  TSHADOWREG_V_PubOtpUniqueID3_0
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpUniqueID3_0;
                   };
                 } TSHADOWREG_V_PubOtpUniqueID3_0;
    typedef union  TSHADOWREG_V_PubOtpUniqueID7_4
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_PubOtpUniqueID7_4;
                   };
                 } TSHADOWREG_V_PubOtpUniqueID7_4;
    typedef union  TSHADOWREG_ConcurrencyCtl
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_ConcurrencyCtl;
                   };
                 } TSHADOWREG_ConcurrencyCtl;
    typedef union  TSHADOWREG_V_Secondary_select
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_V_Secondary_select;
                   };
                 } TSHADOWREG_V_Secondary_select;
    typedef union  TSHADOWREG_OTPWrProtect
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_OTPWrProtect;
                   };
                 } TSHADOWREG_OTPWrProtect;
    typedef union  TSHADOWREG_AddtitionalValues
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_AddtitionalValues;
                   };
                 } TSHADOWREG_AddtitionalValues;
    typedef union  TSHADOWREG_CsaVariantsControl
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_CsaVariantsControl;
                   };
                 } TSHADOWREG_CsaVariantsControl;
    typedef union  TSHADOWREG_SCFlowControlOn
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_SCFlowControlOn;
                   };
                 } TSHADOWREG_SCFlowControlOn;
    typedef union  TSHADOWREG_JtagProtection
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_JtagProtection;
                   };
                 } TSHADOWREG_JtagProtection;
    typedef union  TSHADOWREG_SlowDownCheckOn
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_SlowDownCheckOn;
                   };
                 } TSHADOWREG_SlowDownCheckOn;
    typedef union  TSHADOWREG_SpeedUpCheckOn
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_SpeedUpCheckOn;
                   };
                 } TSHADOWREG_SpeedUpCheckOn;
    typedef union  TSHADOWREG_ClockStopCheckOn
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_ClockStopCheckOn;
                   };
                 } TSHADOWREG_ClockStopCheckOn;
    typedef union  TSHADOWREG_TestModeDisable
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_TestModeDisable;
                   };
                 } TSHADOWREG_TestModeDisable;
    typedef union  TSHADOWREG_DVBCPCMLSADisable
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_DVBCPCMLSADisable;
                   };
                 } TSHADOWREG_DVBCPCMLSADisable;
    typedef union  TSHADOWREG_ShadowCopyDone
          { UNSG32 u32[1];
            struct {
            struct w32SHADOWREG_ShadowCopyDone;
                   };
                 } TSHADOWREG_ShadowCopyDone;

    ///////////////////////////////////////////////////////////
     SIGN32 SHADOWREG_drvrd(SIE_SHADOWREG *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SHADOWREG_drvwr(SIE_SHADOWREG *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SHADOWREG_reset(SIE_SHADOWREG *p);
     SIGN32 SHADOWREG_cmp  (SIE_SHADOWREG *p, SIE_SHADOWREG *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SHADOWREG_check(p,pie,pfx,hLOG) SHADOWREG_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SHADOWREG_print(p,    pfx,hLOG) SHADOWREG_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SHADOWREG
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE RNGReg                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 DIV_VAL              (P)
///               %unsigned 8  DIV_VAL                   0x0
///                                    ###
///                                    * Decimate value of noisy oscillator
///                                    * before sampling the fast oscillator
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00004 SYS_CK_SEL           (P)
///               %unsigned 1  SYS_CK_SEL                0x0
///                                    ###
///                                    * Select System clock as data for sampling
///                                    * flip-flop instead of FAST_OSC
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 SLOW_OSC_ENA         (P)
///               %unsigned 1  SLOW_OSC_ENA              0x1
///                                    ###
///                                    * 1 : enable SLOW_OSC ( noisy osc)
///                                    * 0: disable SLOW_OSC ( noisy osc)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C FAST_OSC_ENA         (P)
///               %unsigned 1  FAST_OSC_ENA              0x1
///                                    ###
///                                    * 1 : enable FAST_OSC ( noisy osc)
///                                    * 0: disable FAST_OSC ( noisy osc)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 PU_BIAS              (P)
///               %unsigned 1  PU_BIAS                   0x1
///                                    ###
///                                    * 1: provide power for slow oscillator and
///                                    * its bias circuits
///                                    * 0: shut down power of the circuit.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 RSTN                 (P)
///               %unsigned 1  RSTN                      0x1
///                                    ###
///                                    * 0: Reset
///                                    * 1: Normal
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      24B, bits:      13b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_RNGReg
#define h_RNGReg (){}

    #define     RA_RNGReg_DIV_VAL                              0x0000

    #define     BA_RNGReg_DIV_VAL_DIV_VAL                      0x0000
    #define     B16RNGReg_DIV_VAL_DIV_VAL                      0x0000
    #define   LSb32RNGReg_DIV_VAL_DIV_VAL                         0
    #define   LSb16RNGReg_DIV_VAL_DIV_VAL                         0
    #define       bRNGReg_DIV_VAL_DIV_VAL                      8
    #define   MSK32RNGReg_DIV_VAL_DIV_VAL                         0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_SYS_CK_SEL                           0x0004

    #define     BA_RNGReg_SYS_CK_SEL_SYS_CK_SEL                0x0004
    #define     B16RNGReg_SYS_CK_SEL_SYS_CK_SEL                0x0004
    #define   LSb32RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0
    #define   LSb16RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0
    #define       bRNGReg_SYS_CK_SEL_SYS_CK_SEL                1
    #define   MSK32RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_SLOW_OSC_ENA                         0x0008

    #define     BA_RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            0x0008
    #define     B16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            0x0008
    #define   LSb32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0
    #define   LSb16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0
    #define       bRNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            1
    #define   MSK32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_FAST_OSC_ENA                         0x000C

    #define     BA_RNGReg_FAST_OSC_ENA_FAST_OSC_ENA            0x000C
    #define     B16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA            0x000C
    #define   LSb32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0
    #define   LSb16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0
    #define       bRNGReg_FAST_OSC_ENA_FAST_OSC_ENA            1
    #define   MSK32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_PU_BIAS                              0x0010

    #define     BA_RNGReg_PU_BIAS_PU_BIAS                      0x0010
    #define     B16RNGReg_PU_BIAS_PU_BIAS                      0x0010
    #define   LSb32RNGReg_PU_BIAS_PU_BIAS                         0
    #define   LSb16RNGReg_PU_BIAS_PU_BIAS                         0
    #define       bRNGReg_PU_BIAS_PU_BIAS                      1
    #define   MSK32RNGReg_PU_BIAS_PU_BIAS                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RSTN                                 0x0014

    #define     BA_RNGReg_RSTN_RSTN                            0x0014
    #define     B16RNGReg_RSTN_RSTN                            0x0014
    #define   LSb32RNGReg_RSTN_RSTN                               0
    #define   LSb16RNGReg_RSTN_RSTN                               0
    #define       bRNGReg_RSTN_RSTN                            1
    #define   MSK32RNGReg_RSTN_RSTN                               0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_RNGReg {
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_DIV_VAL_DIV_VAL(r32)                 _BFGET_(r32, 7, 0)
    #define   SET32RNGReg_DIV_VAL_DIV_VAL(r32,v)               _BFSET_(r32, 7, 0,v)
    #define   GET16RNGReg_DIV_VAL_DIV_VAL(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16RNGReg_DIV_VAL_DIV_VAL(r16,v)               _BFSET_(r16, 7, 0,v)

    #define     w32RNGReg_DIV_VAL                              {\
            UNSG32 uDIV_VAL_DIV_VAL                            :  8;\
            UNSG32 RSVDx0_b8                                   : 24;\
          }
    union { UNSG32 u32RNGReg_DIV_VAL;
            struct w32RNGReg_DIV_VAL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_SYS_CK_SEL_SYS_CK_SEL(r32)           _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_SYS_CK_SEL_SYS_CK_SEL(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_SYS_CK_SEL_SYS_CK_SEL(r16)           _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_SYS_CK_SEL_SYS_CK_SEL(r16,v)         _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_SYS_CK_SEL                           {\
            UNSG32 uSYS_CK_SEL_SYS_CK_SEL                      :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_SYS_CK_SEL;
            struct w32RNGReg_SYS_CK_SEL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r32)       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r16)       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_SLOW_OSC_ENA                         {\
            UNSG32 uSLOW_OSC_ENA_SLOW_OSC_ENA                  :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_SLOW_OSC_ENA;
            struct w32RNGReg_SLOW_OSC_ENA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r32)       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r16)       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_FAST_OSC_ENA                         {\
            UNSG32 uFAST_OSC_ENA_FAST_OSC_ENA                  :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_FAST_OSC_ENA;
            struct w32RNGReg_FAST_OSC_ENA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_PU_BIAS_PU_BIAS(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_PU_BIAS_PU_BIAS(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_PU_BIAS_PU_BIAS(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_PU_BIAS_PU_BIAS(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_PU_BIAS                              {\
            UNSG32 uPU_BIAS_PU_BIAS                            :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_PU_BIAS;
            struct w32RNGReg_PU_BIAS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RSTN_RSTN(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_RSTN_RSTN(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_RSTN_RSTN(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_RSTN_RSTN(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_RSTN                                 {\
            UNSG32 uRSTN_RSTN                                  :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_RSTN;
            struct w32RNGReg_RSTN;
          };
    ///////////////////////////////////////////////////////////
    } SIE_RNGReg;

    typedef union  T32RNGReg_DIV_VAL
          { UNSG32 u32;
            struct w32RNGReg_DIV_VAL;
                 } T32RNGReg_DIV_VAL;
    typedef union  T32RNGReg_SYS_CK_SEL
          { UNSG32 u32;
            struct w32RNGReg_SYS_CK_SEL;
                 } T32RNGReg_SYS_CK_SEL;
    typedef union  T32RNGReg_SLOW_OSC_ENA
          { UNSG32 u32;
            struct w32RNGReg_SLOW_OSC_ENA;
                 } T32RNGReg_SLOW_OSC_ENA;
    typedef union  T32RNGReg_FAST_OSC_ENA
          { UNSG32 u32;
            struct w32RNGReg_FAST_OSC_ENA;
                 } T32RNGReg_FAST_OSC_ENA;
    typedef union  T32RNGReg_PU_BIAS
          { UNSG32 u32;
            struct w32RNGReg_PU_BIAS;
                 } T32RNGReg_PU_BIAS;
    typedef union  T32RNGReg_RSTN
          { UNSG32 u32;
            struct w32RNGReg_RSTN;
                 } T32RNGReg_RSTN;
    ///////////////////////////////////////////////////////////

    typedef union  TRNGReg_DIV_VAL
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_DIV_VAL;
                   };
                 } TRNGReg_DIV_VAL;
    typedef union  TRNGReg_SYS_CK_SEL
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_SYS_CK_SEL;
                   };
                 } TRNGReg_SYS_CK_SEL;
    typedef union  TRNGReg_SLOW_OSC_ENA
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_SLOW_OSC_ENA;
                   };
                 } TRNGReg_SLOW_OSC_ENA;
    typedef union  TRNGReg_FAST_OSC_ENA
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_FAST_OSC_ENA;
                   };
                 } TRNGReg_FAST_OSC_ENA;
    typedef union  TRNGReg_PU_BIAS
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_PU_BIAS;
                   };
                 } TRNGReg_PU_BIAS;
    typedef union  TRNGReg_RSTN
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RSTN;
                   };
                 } TRNGReg_RSTN;

    ///////////////////////////////////////////////////////////
     SIGN32 RNGReg_drvrd(SIE_RNGReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 RNGReg_drvwr(SIE_RNGReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void RNGReg_reset(SIE_RNGReg *p);
     SIGN32 RNGReg_cmp  (SIE_RNGReg *p, SIE_RNGReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define RNGReg_check(p,pie,pfx,hLOG) RNGReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define RNGReg_print(p,    pfx,hLOG) RNGReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: RNGReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE KMDReg                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 WriteTSKey           (P)
///               %unsigned 1  WriteTSKeyReg             0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘WriteTransportKey’ to KMD.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004 WriteM2MKey          (P)
///               %unsigned 1  WriteM2MKeyReg            0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘WriteM2MKey’ to KMD.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 WriteSCPUKey         (P)
///               %unsigned 1  WriteSCPUKeyReg           0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘WriteSCPUKey’ to KMD
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C WriteJtagKey         (P)
///               %unsigned 1  WriteJtagKeyReg           0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘WriteJtagKey’ to KMD.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 AckKTE               (P)
///               %unsigned 1  AckKTEReg                 0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘AchknowledgeKTE’ to KMD
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 InitComplete         (P)
///               %unsigned 1  InitCompleteReg           0x0
///                                    ###
///                                    * When writing to this address, host CPU sends cmd ‘NSKBasicInitilizationComplete’ to KMD
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00018 InterruptClear       (P)
///               %unsigned 1  InterrruptClear           0x0
///                                    ###
///                                    * When KMD asserts an error interrupt to host CPU, KMD will also write 1 to this register. Host CPU needs to write it back to 0 to clear the error interrupt
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0001C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00020 KTEReserve           (P)
///               %unsigned 4  KTEReserve                0x0
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      36B, bits:      11b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_KMDReg
#define h_KMDReg (){}

    #define     RA_KMDReg_WriteTSKey                           0x0000

    #define     BA_KMDReg_WriteTSKey_WriteTSKeyReg             0x0000
    #define     B16KMDReg_WriteTSKey_WriteTSKeyReg             0x0000
    #define   LSb32KMDReg_WriteTSKey_WriteTSKeyReg                0
    #define   LSb16KMDReg_WriteTSKey_WriteTSKeyReg                0
    #define       bKMDReg_WriteTSKey_WriteTSKeyReg             1
    #define   MSK32KMDReg_WriteTSKey_WriteTSKeyReg                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_WriteM2MKey                          0x0004

    #define     BA_KMDReg_WriteM2MKey_WriteM2MKeyReg           0x0004
    #define     B16KMDReg_WriteM2MKey_WriteM2MKeyReg           0x0004
    #define   LSb32KMDReg_WriteM2MKey_WriteM2MKeyReg              0
    #define   LSb16KMDReg_WriteM2MKey_WriteM2MKeyReg              0
    #define       bKMDReg_WriteM2MKey_WriteM2MKeyReg           1
    #define   MSK32KMDReg_WriteM2MKey_WriteM2MKeyReg              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_WriteSCPUKey                         0x0008

    #define     BA_KMDReg_WriteSCPUKey_WriteSCPUKeyReg         0x0008
    #define     B16KMDReg_WriteSCPUKey_WriteSCPUKeyReg         0x0008
    #define   LSb32KMDReg_WriteSCPUKey_WriteSCPUKeyReg            0
    #define   LSb16KMDReg_WriteSCPUKey_WriteSCPUKeyReg            0
    #define       bKMDReg_WriteSCPUKey_WriteSCPUKeyReg         1
    #define   MSK32KMDReg_WriteSCPUKey_WriteSCPUKeyReg            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_WriteJtagKey                         0x000C

    #define     BA_KMDReg_WriteJtagKey_WriteJtagKeyReg         0x000C
    #define     B16KMDReg_WriteJtagKey_WriteJtagKeyReg         0x000C
    #define   LSb32KMDReg_WriteJtagKey_WriteJtagKeyReg            0
    #define   LSb16KMDReg_WriteJtagKey_WriteJtagKeyReg            0
    #define       bKMDReg_WriteJtagKey_WriteJtagKeyReg         1
    #define   MSK32KMDReg_WriteJtagKey_WriteJtagKeyReg            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_AckKTE                               0x0010

    #define     BA_KMDReg_AckKTE_AckKTEReg                     0x0010
    #define     B16KMDReg_AckKTE_AckKTEReg                     0x0010
    #define   LSb32KMDReg_AckKTE_AckKTEReg                        0
    #define   LSb16KMDReg_AckKTE_AckKTEReg                        0
    #define       bKMDReg_AckKTE_AckKTEReg                     1
    #define   MSK32KMDReg_AckKTE_AckKTEReg                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_InitComplete                         0x0014

    #define     BA_KMDReg_InitComplete_InitCompleteReg         0x0014
    #define     B16KMDReg_InitComplete_InitCompleteReg         0x0014
    #define   LSb32KMDReg_InitComplete_InitCompleteReg            0
    #define   LSb16KMDReg_InitComplete_InitCompleteReg            0
    #define       bKMDReg_InitComplete_InitCompleteReg         1
    #define   MSK32KMDReg_InitComplete_InitCompleteReg            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_InterruptClear                       0x0018

    #define     BA_KMDReg_InterruptClear_InterrruptClear       0x0018
    #define     B16KMDReg_InterruptClear_InterrruptClear       0x0018
    #define   LSb32KMDReg_InterruptClear_InterrruptClear          0
    #define   LSb16KMDReg_InterruptClear_InterrruptClear          0
    #define       bKMDReg_InterruptClear_InterrruptClear       1
    #define   MSK32KMDReg_InterruptClear_InterrruptClear          0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KMDReg_KTEReserve                           0x0020

    #define     BA_KMDReg_KTEReserve_KTEReserve                0x0020
    #define     B16KMDReg_KTEReserve_KTEReserve                0x0020
    #define   LSb32KMDReg_KTEReserve_KTEReserve                   0
    #define   LSb16KMDReg_KTEReserve_KTEReserve                   0
    #define       bKMDReg_KTEReserve_KTEReserve                4
    #define   MSK32KMDReg_KTEReserve_KTEReserve                   0x0000000F
    ///////////////////////////////////////////////////////////

    typedef struct SIE_KMDReg {
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_WriteTSKey_WriteTSKeyReg(r32)        _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_WriteTSKey_WriteTSKeyReg(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_WriteTSKey_WriteTSKeyReg(r16)        _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_WriteTSKey_WriteTSKeyReg(r16,v)      _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_WriteTSKey                           {\
            UNSG32 uWriteTSKey_WriteTSKeyReg                   :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32KMDReg_WriteTSKey;
            struct w32KMDReg_WriteTSKey;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_WriteM2MKey_WriteM2MKeyReg(r32)      _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_WriteM2MKey_WriteM2MKeyReg(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_WriteM2MKey_WriteM2MKeyReg(r16)      _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_WriteM2MKey_WriteM2MKeyReg(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_WriteM2MKey                          {\
            UNSG32 uWriteM2MKey_WriteM2MKeyReg                 :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32KMDReg_WriteM2MKey;
            struct w32KMDReg_WriteM2MKey;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_WriteSCPUKey_WriteSCPUKeyReg(r32)    _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_WriteSCPUKey_WriteSCPUKeyReg(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_WriteSCPUKey_WriteSCPUKeyReg(r16)    _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_WriteSCPUKey_WriteSCPUKeyReg(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_WriteSCPUKey                         {\
            UNSG32 uWriteSCPUKey_WriteSCPUKeyReg               :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32KMDReg_WriteSCPUKey;
            struct w32KMDReg_WriteSCPUKey;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_WriteJtagKey_WriteJtagKeyReg(r32)    _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_WriteJtagKey_WriteJtagKeyReg(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_WriteJtagKey_WriteJtagKeyReg(r16)    _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_WriteJtagKey_WriteJtagKeyReg(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_WriteJtagKey                         {\
            UNSG32 uWriteJtagKey_WriteJtagKeyReg               :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32KMDReg_WriteJtagKey;
            struct w32KMDReg_WriteJtagKey;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_AckKTE_AckKTEReg(r32)                _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_AckKTE_AckKTEReg(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_AckKTE_AckKTEReg(r16)                _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_AckKTE_AckKTEReg(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_AckKTE                               {\
            UNSG32 uAckKTE_AckKTEReg                           :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32KMDReg_AckKTE;
            struct w32KMDReg_AckKTE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_InitComplete_InitCompleteReg(r32)    _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_InitComplete_InitCompleteReg(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_InitComplete_InitCompleteReg(r16)    _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_InitComplete_InitCompleteReg(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_InitComplete                         {\
            UNSG32 uInitComplete_InitCompleteReg               :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32KMDReg_InitComplete;
            struct w32KMDReg_InitComplete;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_InterruptClear_InterrruptClear(r32)  _BFGET_(r32, 0, 0)
    #define   SET32KMDReg_InterruptClear_InterrruptClear(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KMDReg_InterruptClear_InterrruptClear(r16)  _BFGET_(r16, 0, 0)
    #define   SET16KMDReg_InterruptClear_InterrruptClear(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KMDReg_InterruptClear                       {\
            UNSG32 uInterruptClear_InterrruptClear             :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32KMDReg_InterruptClear;
            struct w32KMDReg_InterruptClear;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1C                                     [4];
    ///////////////////////////////////////////////////////////
    #define   GET32KMDReg_KTEReserve_KTEReserve(r32)           _BFGET_(r32, 3, 0)
    #define   SET32KMDReg_KTEReserve_KTEReserve(r32,v)         _BFSET_(r32, 3, 0,v)
    #define   GET16KMDReg_KTEReserve_KTEReserve(r16)           _BFGET_(r16, 3, 0)
    #define   SET16KMDReg_KTEReserve_KTEReserve(r16,v)         _BFSET_(r16, 3, 0,v)

    #define     w32KMDReg_KTEReserve                           {\
            UNSG32 uKTEReserve_KTEReserve                      :  4;\
            UNSG32 RSVDx20_b4                                  : 28;\
          }
    union { UNSG32 u32KMDReg_KTEReserve;
            struct w32KMDReg_KTEReserve;
          };
    ///////////////////////////////////////////////////////////
    } SIE_KMDReg;

    typedef union  T32KMDReg_WriteTSKey
          { UNSG32 u32;
            struct w32KMDReg_WriteTSKey;
                 } T32KMDReg_WriteTSKey;
    typedef union  T32KMDReg_WriteM2MKey
          { UNSG32 u32;
            struct w32KMDReg_WriteM2MKey;
                 } T32KMDReg_WriteM2MKey;
    typedef union  T32KMDReg_WriteSCPUKey
          { UNSG32 u32;
            struct w32KMDReg_WriteSCPUKey;
                 } T32KMDReg_WriteSCPUKey;
    typedef union  T32KMDReg_WriteJtagKey
          { UNSG32 u32;
            struct w32KMDReg_WriteJtagKey;
                 } T32KMDReg_WriteJtagKey;
    typedef union  T32KMDReg_AckKTE
          { UNSG32 u32;
            struct w32KMDReg_AckKTE;
                 } T32KMDReg_AckKTE;
    typedef union  T32KMDReg_InitComplete
          { UNSG32 u32;
            struct w32KMDReg_InitComplete;
                 } T32KMDReg_InitComplete;
    typedef union  T32KMDReg_InterruptClear
          { UNSG32 u32;
            struct w32KMDReg_InterruptClear;
                 } T32KMDReg_InterruptClear;
    typedef union  T32KMDReg_KTEReserve
          { UNSG32 u32;
            struct w32KMDReg_KTEReserve;
                 } T32KMDReg_KTEReserve;
    ///////////////////////////////////////////////////////////

    typedef union  TKMDReg_WriteTSKey
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_WriteTSKey;
                   };
                 } TKMDReg_WriteTSKey;
    typedef union  TKMDReg_WriteM2MKey
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_WriteM2MKey;
                   };
                 } TKMDReg_WriteM2MKey;
    typedef union  TKMDReg_WriteSCPUKey
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_WriteSCPUKey;
                   };
                 } TKMDReg_WriteSCPUKey;
    typedef union  TKMDReg_WriteJtagKey
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_WriteJtagKey;
                   };
                 } TKMDReg_WriteJtagKey;
    typedef union  TKMDReg_AckKTE
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_AckKTE;
                   };
                 } TKMDReg_AckKTE;
    typedef union  TKMDReg_InitComplete
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_InitComplete;
                   };
                 } TKMDReg_InitComplete;
    typedef union  TKMDReg_InterruptClear
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_InterruptClear;
                   };
                 } TKMDReg_InterruptClear;
    typedef union  TKMDReg_KTEReserve
          { UNSG32 u32[1];
            struct {
            struct w32KMDReg_KTEReserve;
                   };
                 } TKMDReg_KTEReserve;

    ///////////////////////////////////////////////////////////
     SIGN32 KMDReg_drvrd(SIE_KMDReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 KMDReg_drvwr(SIE_KMDReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void KMDReg_reset(SIE_KMDReg *p);
     SIGN32 KMDReg_cmp  (SIE_KMDReg *p, SIE_KMDReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define KMDReg_check(p,pie,pfx,hLOG) KMDReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define KMDReg_print(p,    pfx,hLOG) KMDReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: KMDReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE WRAPPERReg                               (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 NSK2ClockOff         (P)
///               %unsigned 1  NSK2ClockOff              0x0
///                                    ###
///                                    * 0: NSK clock is running
///                                    * 1: NSK clock is gated. Firmware should make sure that it sets this register to one only when NSK2 is NOT busy.
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       1b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_WRAPPERReg
#define h_WRAPPERReg (){}

    #define     RA_WRAPPERReg_NSK2ClockOff                     0x0000

    #define     BA_WRAPPERReg_NSK2ClockOff_NSK2ClockOff        0x0000
    #define     B16WRAPPERReg_NSK2ClockOff_NSK2ClockOff        0x0000
    #define   LSb32WRAPPERReg_NSK2ClockOff_NSK2ClockOff           0
    #define   LSb16WRAPPERReg_NSK2ClockOff_NSK2ClockOff           0
    #define       bWRAPPERReg_NSK2ClockOff_NSK2ClockOff        1
    #define   MSK32WRAPPERReg_NSK2ClockOff_NSK2ClockOff           0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_WRAPPERReg {
    ///////////////////////////////////////////////////////////
    #define   GET32WRAPPERReg_NSK2ClockOff_NSK2ClockOff(r32)   _BFGET_(r32, 0, 0)
    #define   SET32WRAPPERReg_NSK2ClockOff_NSK2ClockOff(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16WRAPPERReg_NSK2ClockOff_NSK2ClockOff(r16)   _BFGET_(r16, 0, 0)
    #define   SET16WRAPPERReg_NSK2ClockOff_NSK2ClockOff(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32WRAPPERReg_NSK2ClockOff                     {\
            UNSG32 uNSK2ClockOff_NSK2ClockOff                  :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32WRAPPERReg_NSK2ClockOff;
            struct w32WRAPPERReg_NSK2ClockOff;
          };
    ///////////////////////////////////////////////////////////
    } SIE_WRAPPERReg;

    typedef union  T32WRAPPERReg_NSK2ClockOff
          { UNSG32 u32;
            struct w32WRAPPERReg_NSK2ClockOff;
                 } T32WRAPPERReg_NSK2ClockOff;
    ///////////////////////////////////////////////////////////

    typedef union  TWRAPPERReg_NSK2ClockOff
          { UNSG32 u32[1];
            struct {
            struct w32WRAPPERReg_NSK2ClockOff;
                   };
                 } TWRAPPERReg_NSK2ClockOff;

    ///////////////////////////////////////////////////////////
     SIGN32 WRAPPERReg_drvrd(SIE_WRAPPERReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 WRAPPERReg_drvwr(SIE_WRAPPERReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void WRAPPERReg_reset(SIE_WRAPPERReg *p);
     SIGN32 WRAPPERReg_cmp  (SIE_WRAPPERReg *p, SIE_WRAPPERReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define WRAPPERReg_check(p,pie,pfx,hLOG) WRAPPERReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define WRAPPERReg_print(p,    pfx,hLOG) WRAPPERReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: WRAPPERReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE TSSS                    biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 NSK2                 (P)
///               %unsigned 1  NSK2REG                   0x0
///                                    ###
///                                    * Nsk2 registers 64KB
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004                      (W-)
///     #         # Stuffing bytes...
///               %% 524256
///     @ 0x10000 KILOOTP              (P)
///               %unsigned 1  KILOOTPREG                0x0
///                                    ###
///                                    * Nsk2 registers 16KB
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x10004                      (W-)
///     #         # Stuffing bytes...
///               %% 262112
///     @ 0x18000 EMM                  (P)
///               %unsigned 1  EMMREG                    
///                                    ###
///                                    * EMM registers 16KB
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x18004                      (W-)
///     #         # Stuffing bytes...
///               %% 32736
///     @ 0x19000 SHADOWREG            (P)
///     # 0x19000 SHADOWREG            
///               $SHADOWREG           SHADOWREG         REG          
///                                    ###
///                                    * ShadowReg registers 2KB
///                                    ###
///     @ 0x19414                      (W-)
///     #         # Stuffing bytes...
///               %% 24416
///     @ 0x1A000 TSOTP                (P)
///     # 0x1A000 TSOTP                
///               $TSOTP               TSOTP             REG          
///     @ 0x1A014                      (W-)
///     #         # Stuffing bytes...
///               %% 65376
///     @ 0x1C000 TSOTP_1              (P)
///     # 0x1C000 TSOTP_1              
///               $TSOTP               TSOTP_1           REG          
///     @ 0x1C014                      (W-)
///     #         # Stuffing bytes...
///               %% 32608
///     @ 0x1D000 RNG                  (P)
///     # 0x1D000 RNGREG               
///               $RNGReg              RNGREG            REG          
///                                    ###
///                                    * RNG registers
///                                    ###
///     @ 0x1D018                      (W-)
///     #         # Stuffing bytes...
///               %% 32576
///     @ 0x1E000 KMD                  (P)
///     # 0x1E000 KMDREG               
///               $KMDReg              KMDREG            REG          
///                                    ###
///                                    * KMD registers
///                                    ###
///     @ 0x1E024                      (W-)
///     #         # Stuffing bytes...
///               %% 32480
///     @ 0x1F000 WRAPPER              (P)
///     # 0x1F000 WRAPPERREG           
///               $WRAPPERReg          WRAPPERREG        REG          
///                                    ###
///                                    * KMD registers
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:  126980B, bits:    1518b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TSSS
#define h_TSSS (){}

    #define     RA_TSSS_NSK2                                   0x0000

    #define     BA_TSSS_NSK2_NSK2REG                           0x0000
    #define     B16TSSS_NSK2_NSK2REG                           0x0000
    #define   LSb32TSSS_NSK2_NSK2REG                              0
    #define   LSb16TSSS_NSK2_NSK2REG                              0
    #define       bTSSS_NSK2_NSK2REG                           1
    #define   MSK32TSSS_NSK2_NSK2REG                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_KILOOTP                                0x10000

    #define     BA_TSSS_KILOOTP_KILOOTPREG                     0x10000
    #define     B16TSSS_KILOOTP_KILOOTPREG                     0x10000
    #define   LSb32TSSS_KILOOTP_KILOOTPREG                        0
    #define   LSb16TSSS_KILOOTP_KILOOTPREG                        0
    #define       bTSSS_KILOOTP_KILOOTPREG                     1
    #define   MSK32TSSS_KILOOTP_KILOOTPREG                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_EMM                                    0x18000

    #define     BA_TSSS_EMM_EMMREG                             0x18000
    #define     B16TSSS_EMM_EMMREG                             0x18000
    #define   LSb32TSSS_EMM_EMMREG                                0
    #define   LSb16TSSS_EMM_EMMREG                                0
    #define       bTSSS_EMM_EMMREG                             1
    #define   MSK32TSSS_EMM_EMMREG                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_SHADOWREG                              0x19000
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_TSOTP                                  0x1A000
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_TSOTP_1                                0x1C000
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_RNG                                    0x1D000
    #define     RA_TSSS_RNGREG                                 0x1D000
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_KMD                                    0x1E000
    #define     RA_TSSS_KMDREG                                 0x1E000
    ///////////////////////////////////////////////////////////
    #define     RA_TSSS_WRAPPER                                0x1F000
    #define     RA_TSSS_WRAPPERREG                             0x1F000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TSSS {
    ///////////////////////////////////////////////////////////
    #define   GET32TSSS_NSK2_NSK2REG(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32TSSS_NSK2_NSK2REG(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16TSSS_NSK2_NSK2REG(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16TSSS_NSK2_NSK2REG(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32TSSS_NSK2                                   {\
            UNSG32 uNSK2_NSK2REG                               :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32TSSS_NSK2;
            struct w32TSSS_NSK2;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx4                                      [65532];
    ///////////////////////////////////////////////////////////
    #define   GET32TSSS_KILOOTP_KILOOTPREG(r32)                _BFGET_(r32, 0, 0)
    #define   SET32TSSS_KILOOTP_KILOOTPREG(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16TSSS_KILOOTP_KILOOTPREG(r16)                _BFGET_(r16, 0, 0)
    #define   SET16TSSS_KILOOTP_KILOOTPREG(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32TSSS_KILOOTP                                {\
            UNSG32 uKILOOTP_KILOOTPREG                         :  1;\
            UNSG32 RSVDx10000_b1                               : 31;\
          }
    union { UNSG32 u32TSSS_KILOOTP;
            struct w32TSSS_KILOOTP;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx10004                                  [32764];
    ///////////////////////////////////////////////////////////
    #define   GET32TSSS_EMM_EMMREG(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32TSSS_EMM_EMMREG(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16TSSS_EMM_EMMREG(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16TSSS_EMM_EMMREG(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32TSSS_EMM                                    {\
            UNSG32 uEMM_EMMREG                                 :  1;\
            UNSG32 RSVDx18000_b1                               : 31;\
          }
    union { UNSG32 u32TSSS_EMM;
            struct w32TSSS_EMM;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx18004                                  [4092];
    ///////////////////////////////////////////////////////////
              SIE_SHADOWREG                                    ie_SHADOWREG;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx19414                                  [3052];
    ///////////////////////////////////////////////////////////
              SIE_TSOTP                                        ie_TSOTP;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1A014                                  [8172];
    ///////////////////////////////////////////////////////////
              SIE_TSOTP                                        ie_TSOTP_1;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1C014                                  [4076];
    ///////////////////////////////////////////////////////////
              SIE_RNGReg                                       ie_RNGREG;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1D018                                  [4072];
    ///////////////////////////////////////////////////////////
              SIE_KMDReg                                       ie_KMDREG;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1E024                                  [4060];
    ///////////////////////////////////////////////////////////
              SIE_WRAPPERReg                                   ie_WRAPPERREG;
    ///////////////////////////////////////////////////////////
    } SIE_TSSS;

    typedef union  T32TSSS_NSK2
          { UNSG32 u32;
            struct w32TSSS_NSK2;
                 } T32TSSS_NSK2;
    typedef union  T32TSSS_KILOOTP
          { UNSG32 u32;
            struct w32TSSS_KILOOTP;
                 } T32TSSS_KILOOTP;
    typedef union  T32TSSS_EMM
          { UNSG32 u32;
            struct w32TSSS_EMM;
                 } T32TSSS_EMM;
    ///////////////////////////////////////////////////////////

    typedef union  TTSSS_NSK2
          { UNSG32 u32[1];
            struct {
            struct w32TSSS_NSK2;
                   };
                 } TTSSS_NSK2;
    typedef union  TTSSS_KILOOTP
          { UNSG32 u32[1];
            struct {
            struct w32TSSS_KILOOTP;
                   };
                 } TTSSS_KILOOTP;
    typedef union  TTSSS_EMM
          { UNSG32 u32[1];
            struct {
            struct w32TSSS_EMM;
                   };
                 } TTSSS_EMM;

    ///////////////////////////////////////////////////////////
     SIGN32 TSSS_drvrd(SIE_TSSS *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TSSS_drvwr(SIE_TSSS *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TSSS_reset(SIE_TSSS *p);
     SIGN32 TSSS_cmp  (SIE_TSSS *p, SIE_TSSS *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TSSS_check(p,pie,pfx,hLOG) TSSS_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TSSS_print(p,    pfx,hLOG) TSSS_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TSSS
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: tsSS.h
////////////////////////////////////////////////////////////

