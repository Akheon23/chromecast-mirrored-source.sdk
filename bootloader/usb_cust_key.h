/* Customer key used for verifying USB images.
 *
 * Copyright (C) 2013 Google, Inc.
 */
#ifndef USB_CUST_KEY_H__
#define USB_CUST_KEY_H__
#include "board_config.h"

/* Ideally, this key should have been a simple public RSA
 * key. However, Marvell's implementation only supports loading
 * a RSA key in form of customer key. Key below is generated by
 * following these steps.
 *    1. Generate a customer ket using KeyGenCustK
 *    2. Wrap public part of this custk with Google ROM key using
 *       CustKey_SecureStore_Gen utility.
 *    3. Output keystore from step 2 is dumped here using xxd -i
 * This key may be different for each hardware build.
 */
#if CFG_BOARD_NAME == BOARD_EUREKA_B1
static unsigned char usb_custk_store[] = {
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x3a, 0xbd, 0xd9, 0x0f, 0xa7, 0x95, 0x23, 0x6d, 0x90, 0x47, 0xd0,
  0x19, 0x64, 0x1a, 0x54, 0xb2, 0x09, 0xcf, 0xa8, 0x0b, 0xc3, 0xec, 0xa1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x99, 0x50, 0x76, 0xc6, 0xff, 0x9c, 0xcd, 0x4d, 0xcc, 0x81, 0xd9, 0x36,
  0xe8, 0xec, 0x02, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x97, 0x47, 0x7d, 0xd8, 0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4,
  0xe5, 0x5d, 0x06, 0x94, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x8e, 0x27, 0x00, 0x4d, 0x62, 0xba, 0x9c, 0xf4, 0x9d, 0x62, 0x19, 0x69,
  0x9f, 0xbd, 0x20, 0x9f, 0x82, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x3a, 0xbd, 0xd9,
  0x0f, 0xa7, 0x95, 0x23, 0x6d, 0x90, 0x47, 0xd0, 0x19, 0x64, 0x1a, 0x54,
  0xb2, 0x09, 0xcf, 0xa8, 0x0b, 0xc3, 0xec, 0xa1, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0x35, 0x0f, 0x56,
  0x08, 0x6a, 0xd1, 0xd1, 0x78, 0xd8, 0x5c, 0xf8, 0x83, 0xd1, 0xe8, 0x84,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x47, 0x7d, 0xd8,
  0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4, 0xe5, 0x5d, 0x06, 0x94,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x4f, 0x2f, 0xb0, 0xfa,
  0xe9, 0x74, 0x7f, 0xf0, 0xc4, 0xb1, 0xe0, 0x13, 0x1e, 0x2f, 0xda, 0xa8,
  0x97, 0x69, 0x40, 0x4c, 0x3d, 0xbf, 0xd1, 0x47, 0x12, 0xa9, 0xf7, 0xfe,
  0x94, 0xd8, 0x1f, 0x71, 0xa4, 0x9a, 0x31, 0x2e, 0xad, 0x90, 0x5e, 0x6e,
  0x78, 0x57, 0x00, 0xfc, 0x74, 0xf8, 0xae, 0xee, 0xe0, 0xb7, 0x3e, 0x92,
  0x91, 0x16, 0x77, 0x8c, 0xc8, 0x5f, 0xea, 0x69, 0x71, 0x05, 0xce, 0x86,
  0xe1, 0x46, 0x81, 0xe6, 0x75, 0xbf, 0x7f, 0x21, 0x5c, 0x74, 0x8e, 0xbf,
  0x81, 0x94, 0x44, 0x22, 0x43, 0xf8, 0x92, 0x44, 0x79, 0x0d, 0x01, 0xb1,
  0x49, 0xc9, 0xb7, 0x7c, 0x43, 0xff, 0x5a, 0xf4, 0x2c, 0x52, 0x4d, 0xae,
  0x15, 0x7d, 0x40, 0x1f, 0xa5, 0x70, 0x38, 0x2e, 0xfe, 0x1d, 0x76, 0x9c,
  0xf8, 0xf0, 0x24, 0x42, 0xd6, 0xe5, 0x88, 0x7e, 0x20, 0x0a, 0x7e, 0xcf,
  0xba, 0xb4, 0x8a, 0x7f, 0x18, 0x22, 0x29, 0x29, 0x6a, 0xfc, 0xe5, 0x44,
  0x51, 0x0c, 0x9f, 0x8a, 0x8d, 0x77, 0x7a, 0x7d, 0x3f, 0x78, 0x30, 0xdf,
  0x34, 0x3c, 0xff, 0x17, 0xd3, 0x96, 0x53, 0xa8, 0x06, 0x87, 0x71, 0xa6,
  0x1f, 0x10, 0x39, 0xf5, 0xfe, 0x88, 0x76, 0x09, 0x0c, 0x8f, 0xb3, 0x18,
  0x08, 0xbf, 0x27, 0xce, 0xa3, 0x1a, 0xb7, 0xb5, 0xa6, 0xa3, 0xc8, 0x7d,
  0x06, 0x73, 0xc9, 0xdc, 0x50, 0x46, 0xe2, 0xda
};
#elif CFG_BOARD_NAME == BOARD_EUREKA_B2
static unsigned char usb_custk_store[] = {
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xba, 0xbe, 0x3b, 0x2d, 0xef, 0x83, 0x85, 0x02, 0xfe, 0x08, 0xce, 0x8d,
  0x83, 0x0c, 0x02, 0xd6, 0x0c, 0x75, 0xd2, 0xea, 0x2b, 0x39, 0x09, 0xf0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x59, 0x11, 0xca, 0xe1, 0xa8, 0xa0, 0x79, 0x5c, 0x98, 0x23, 0x87,
  0xa2, 0xfe, 0xfc, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x97, 0x47, 0x7d, 0xd8, 0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4,
  0xe5, 0x5d, 0x06, 0x94, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x59, 0x74, 0xa5, 0x70, 0x44, 0x6a, 0x8e, 0xd1, 0x0e, 0x9f, 0x7d, 0x63,
  0xc7, 0x9f, 0xaf, 0xbf, 0x82, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0xbe, 0xfc, 0xef,
  0x66, 0xc6, 0xc4, 0x89, 0x5a, 0x75, 0xdf, 0x51, 0xe1, 0x41, 0xfb, 0x82,
  0x31, 0xe7, 0x8f, 0xb1, 0xf6, 0xde, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x85, 0x3c, 0xd1,
  0x60, 0xc9, 0x6e, 0x1d, 0x84, 0x2f, 0xd0, 0xb0, 0x59, 0x53, 0x92, 0x8e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x47, 0x7d, 0xd8,
  0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4, 0xe5, 0x5d, 0x06, 0x94,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x28, 0xf6, 0x75, 0x2a,
  0x30, 0xa8, 0x81, 0x3a, 0xdd, 0xb0, 0x6a, 0xc4, 0xff, 0x71, 0xc7, 0x0f,
  0xdc, 0x58, 0x02, 0xd3, 0xfc, 0x66, 0x65, 0x24, 0x48, 0xb9, 0x04, 0xfd,
  0xb8, 0x04, 0x2c, 0x65, 0xfd, 0x2d, 0xb7, 0x10, 0xf5, 0xf0, 0xdc, 0xd6,
  0xc4, 0x8f, 0xf6, 0xb9, 0xa3, 0x7c, 0x1c, 0xd4, 0xb9, 0x0f, 0x87, 0xe7,
  0x01, 0xe4, 0x25, 0x5a, 0x6a, 0x20, 0x6d, 0x6b, 0x88, 0x3f, 0xb1, 0x46,
  0x39, 0x19, 0xf3, 0x34, 0x4b, 0xec, 0xd0, 0xcc, 0x11, 0x39, 0xd1, 0x32,
  0x4d, 0x88, 0x51, 0x9e, 0x45, 0x45, 0xd8, 0x4c, 0x26, 0xc8, 0x18, 0x41,
  0x3a, 0x3d, 0x16, 0x4d, 0x10, 0x70, 0x5f, 0x8a, 0x1f, 0x53, 0x1c, 0x35,
  0xf9, 0xdf, 0x58, 0xaf, 0x25, 0xdb, 0x32, 0x13, 0xaf, 0xf0, 0xd9, 0xbd,
  0x46, 0x82, 0xce, 0xb2, 0x0d, 0xb0, 0xf8, 0x62, 0x3f, 0x23, 0x26, 0xb1,
  0x9a, 0x1c, 0x1e, 0x88, 0x9b, 0x6b, 0x2e, 0xc2, 0xe3, 0xa5, 0x39, 0x2e,
  0x0d, 0x80, 0x74, 0xeb, 0x77, 0xcd, 0x9c, 0x95, 0x9a, 0x74, 0x7b, 0x82,
  0x5e, 0x6f, 0x16, 0xb3, 0x11, 0xd9, 0x5b, 0xe9, 0x3f, 0x0d, 0xd8, 0x98,
  0xcd, 0xcd, 0x4a, 0x26, 0xc2, 0x46, 0xc9, 0x49, 0x6f, 0x3f, 0xb4, 0x6f,
  0xff, 0x73, 0xc6, 0x69, 0x33, 0x48, 0x75, 0xd2, 0x74, 0xc6, 0xc9, 0x1a,
  0xff, 0xdc, 0x5a, 0xdd, 0x9d, 0x2f, 0xed, 0x08
};
#elif CFG_BOARD_NAME == BOARD_EUREKA_B3
static unsigned char usb_custk_store[] = {
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xba, 0xbe, 0xaa, 0x60, 0x52, 0x14, 0x5d, 0x62, 0x62, 0x8e, 0xd5, 0x50,
  0xe6, 0x3c, 0x2a, 0x62, 0x03, 0x56, 0x4f, 0x21, 0xa4, 0x64, 0xaf, 0xd8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x71, 0xab, 0x6d, 0xbd, 0x2c, 0x2b, 0x20, 0xc2, 0x48, 0xdb, 0xb9, 0x29,
  0x8f, 0x4f, 0x1e, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x97, 0x47, 0x7d, 0xd8, 0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4,
  0xe5, 0x5d, 0x06, 0x94, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x83, 0x85, 0x9a, 0xb5, 0x08, 0xd9, 0xb1, 0x7c, 0xb6, 0x78, 0x4f, 0x23,
  0x3e, 0x4c, 0x05, 0xf4, 0x82, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0xbe, 0x03, 0x88,
  0x28, 0x63, 0xef, 0x09, 0x60, 0x70, 0x1b, 0x80, 0x8f, 0xe3, 0x53, 0x37,
  0xd5, 0xb1, 0xdf, 0x46, 0xf0, 0xd0, 0x29, 0xbb, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x09, 0x0d, 0x51,
  0x50, 0x58, 0xb3, 0xa7, 0xe2, 0xe5, 0x3f, 0x99, 0x84, 0xf4, 0xa0, 0x5f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x47, 0x7d, 0xd8,
  0xc0, 0x85, 0x46, 0x3f, 0xaf, 0x1d, 0x4c, 0xd4, 0xe5, 0x5d, 0x06, 0x94,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xad, 0x12, 0x0f, 0x87,
  0x4c, 0x5a, 0x3e, 0xd3, 0x36, 0x03, 0x2a, 0xad, 0x25, 0xc5, 0x26, 0xf5,
  0xea, 0x43, 0xcf, 0xf6, 0x08, 0xec, 0x38, 0xbb, 0x06, 0xda, 0xce, 0x2d,
  0x16, 0x3c, 0x0c, 0x29, 0x47, 0x0d, 0xb2, 0xda, 0x1f, 0xd5, 0x1c, 0xd8,
  0x99, 0x61, 0x80, 0xb0, 0xf7, 0x54, 0x3a, 0xcb, 0x7b, 0x35, 0x64, 0xa1,
  0x4e, 0xea, 0x20, 0x57, 0x14, 0x88, 0xa6, 0xc6, 0x3a, 0xb7, 0x38, 0x39,
  0x00, 0xa4, 0x96, 0x30, 0xa7, 0x86, 0x8c, 0x5f, 0x53, 0xe2, 0x53, 0x22,
  0x7b, 0x68, 0xa8, 0x9e, 0x1e, 0xf3, 0xed, 0xc4, 0x50, 0x36, 0x5e, 0x77,
  0xb3, 0x91, 0x16, 0xc5, 0x4c, 0x99, 0x69, 0xfa, 0xd1, 0xfd, 0x99, 0x85,
  0x43, 0x4d, 0x5e, 0xab, 0x8c, 0x2a, 0xdf, 0x80, 0x7c, 0xfa, 0x3d, 0x9b,
  0x93, 0xea, 0x2e, 0xde, 0xda, 0xeb, 0xbe, 0xdb, 0x0c, 0x0e, 0x71, 0x10,
  0xab, 0xef, 0x08, 0x2f, 0x81, 0xb1, 0x08, 0xb3, 0x48, 0x92, 0xad, 0x67,
  0x93, 0x17, 0xaf, 0x4f, 0x84, 0x54, 0x02, 0x54, 0x92, 0x8f, 0x55, 0x95,
  0x3d, 0xac, 0x00, 0xd8, 0x37, 0x57, 0x5b, 0xe1, 0x05, 0x77, 0x2f, 0x16,
  0x41, 0x97, 0x95, 0x01, 0x85, 0xe3, 0x77, 0x09, 0xc6, 0xad, 0x46, 0x8f,
  0x91, 0xe4, 0xbf, 0xf4, 0xac, 0x4e, 0xa1, 0x51, 0x3d, 0x0d, 0xea, 0x3c,
  0x3d, 0xf1, 0x75, 0x3a, 0xd2, 0xd1, 0xf6, 0x8f
};
#else
static unsigned char usb_custk_store[] = {0,};
#endif //BOARD_EUREKA_B1

#endif
